"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","5326","[py] reduce the default script timeout in executing_async_javascript_…","…tests.py  When using w3c driver, the default script timeout is 30 seconds, so tests expecting to timeout and not overriding the script timeout take 30 seconds to run. Setting it to 0 makes the tests a lot faster. Then, it's reset to the default value once tests finish.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","carlosgcampos","2018-01-11T13:30:57Z","2018-01-12T06:25:42Z"
"","5465","It should be possible to use a custom safaridriver executable to run …","…Selenium's test suite.  Add the 'use_existing' argument to the safari.WebDriver class initializer. This argument causes the driver to not launch its own instance of safaridriver. Instead, it connects via port to an externally-launched service. This can speed up testing and is also useful when debugging problems with safaridriver itself.  This patch also improves wording in documentation of the initializer's arguments.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","burg","2018-02-08T19:20:04Z","2018-02-12T15:47:46Z"
"","5466","safaridriver: add new command to change getUserMedia() behavior for m…","…ock devices  As part of this feature, we introduce new endpoints to get and set session permissions. For example, it can control whether a getUserMedia() request for a mock media stream will be allowed or denied.  Since this is the first Safari-specific endpoint, add a custom RemoteConnection subclass so that extra commands can be added in. Hook it up in the subclass of WebDriver.  This adds two commands:  driver.get_permission(permission_name) -> True, False, None driver.set_permission(permission_name, True | False)  For convenience, supported values of permission_name are enumerated by the Permission object.  These commands map, respectively, to the following endpoints and request/response payloads:  GET /session/$sessionId/apple/permissions  Request payload: None  Response payload: {     ""permissions"": {         ""getUserMedia"": true,         ...     } }  Notes: values for all session permissions are returned, whether or not they have previously been set.  --  POST /session/$sessionId/apple/permissions  Request payload: {     ""permissions"": [         ""getUserMedia"": true,         ...     ] }  Response payload: None  Notes: can update multiple session permissions simultaneously. Any omitted permission names are unaffected.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","burg","2018-02-08T19:50:50Z","2018-02-09T06:39:43Z"
"","5561","[py] make tests to check clicking on disabled element work for w3c co…","…mpliant drivers  They are currently mrked as expected failure, but we can actually test both behaviors. Check that selection doesn't change for w3c drivers.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","carlosgcampos","2018-03-02T11:19:54Z","2018-03-02T16:53:46Z"
"","5739","Improve the error message that is raised when safaridriver cannot be …","…found.  Add a link to the Safari download page where Safari and Tech Preview are available.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","burg","2018-04-07T18:27:52Z","2018-04-08T00:02:35Z"
"","5685","Provide way to change interval between evaluating conditions driver.w…","…ait (logs overflowing)  I don't know the reason why it is implemented this way but it doesn't seem reasonable that conditions are checked in driver.wait immediately one after another until it success or timeout. This implementation cause overflowing logs like this: (example where condition is fulfilled after 2 sec, it produces 200 lines of logs - i didn't count but a lot) https://www.youtube.com/watch?v=S-xYB7YIDgE Implementing extra parameter (easiest and backward compatible solution) like I suggest would change  situation to this: (when using 300 ms interval in suggested parameter) https://youtu.be/xURuynUmnHo  If this pull request wan't be accepted (I wan't be surprised) at least explain me please how to live with this:   Cheers Btw doc for this repo is brilliant (I know that it is generated but anyway ;) )  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5685)","closed","C-nodejs,","stopsopa","2018-03-27T00:13:55Z","2021-02-13T01:57:08Z"
"","5416","[py] correctly handle additional data in unexpected alter error for w…","…3c drivers  The WebDriver spec defines an optional ""data"" field for error objects and annotated unexpected alert open error which includes a ""text"" field in the error additional data object.  https://w3c.github.io/webdriver/webdriver-spec.html#dfn-error-data https://w3c.github.io/webdriver/webdriver-spec.html#dfn-user-prompt-handler  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","carlosgcampos","2018-01-31T14:18:09Z","2018-02-02T08:23:56Z"
"","5713","allow edge driver to create a default service in createSession method…","… if `service` is `null`  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5713)","closed","C-nodejs,","pz325","2018-03-31T18:23:43Z","2021-02-13T21:34:36Z"
"","5552","Unable to take screenshot in Selenium 3.9.1 because of FileUtils","Written this code for ScreenShot but facing issue for FileUtils please provide solution or alternate way to take screenshot   public void getscreenshot() throws Exception        {               File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);                          FileUtils.copyFile(scrFile, new File(""D:\\screenshot.png""));       }","closed","R-awaiting answer,","AshishCircl","2018-03-01T10:21:19Z","2019-08-16T06:09:58Z"
"","5638","Chromedriver couldn't find the Android file using valid file path","Working with Samsung S6, during uploading a file using SendKeys(), it always reports 'file not found' issues. But i can confirm the file exits.  Have tried driver.FindElement(By.Id(""0-new"")).SendKeys(""//storage/emulated/0/Download/automation_test.pdf""); driver.FindElement(By.Id(""0-new"")).SendKeys(""//data/local/tmp/automation_test.pdf""); driver.FindElement(By.Id(""0-new"")).SendKeys(""//sdcard/Download/automation_test.pdf"");  All of above doesn't work, although file exists in these folders.  This issue occurs ChromeDriver 2.33-2.36, but 2.20 doesn't have this problem (didn't try with other versiosn). So I guess it should be chromedriver issue.  Anyone can help check, and provide a solution?","closed","","jackingest","2018-03-19T07:25:36Z","2019-08-16T09:09:59Z"
"","5452","Make annoying debug console user aware","With this commit user can now choice wheter the debug command prompt can or not show it up when driver is loaded. This happens when python script are compiled into one-file exe. With this commit merged, the user can easily disable the cmd prompt in this way: ``` args = [""hide_console"", ] driver = webdriver.Chrome(""path-to-your-driver"", service_args=args, ...) ```","closed","C-py,","mascIT-98","2018-02-07T11:19:13Z","2018-07-22T09:46:29Z"
"","4880","Ignore-Behaviour ignored for HtmlUnit in Test","With regards to [this issue in HtmlUnit](https://github.com/SeleniumHQ/htmlunit-driver/issues/57) doesn't throw UnhandledAlertException in case of Ignore. Basically an exception is totally useless at this point  Signed-off-by: Marc Schlegel   - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","lostiniceland","2017-10-16T13:06:38Z","2018-01-08T10:19:47Z"
"","5505","cant load such file from selenium/webdriver/phantomjs","windows 8.1 [2018-02-09 10:23:44 +0000] code - Arachni - #Set:0x0055d99c9ff170 [-] **[LoadError] cannot load such file -- selenium/webdriver/phantomjs** [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/browser.rb:132:in require' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/browser.rb:132:inexecutable' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/browser.rb:126:in has_executable?' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/framework/parts/browser.rb:50:inhost_has_browser? [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/framework/parts/browser.rb:65:in use_browsers?' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/framework/parts/browser.rb:24:inbrowser_cluster' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/framework/parts/audit.rb:167:in audit' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/framework.rb:120:inblock in run' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/utilities.rb:408:in exception_jail' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/framework.rb:120:inrun' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/ui/cli/framework.rb:62:in block in run' **[-] [Errno::EINVAL] Invalid argument @ rb_io_seek - /tmp/arachni20180209-893-1sbkutgafr** [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/report.rb:135:inseek' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/report.rb:135:in block in load' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/report.rb:134:inopen' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/lib/arachni/report.rb:134:in load' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/ui/cli/reporter.rb:40:inrun' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/ui/cli/reporter.rb:25:in initialize' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/bin/arachni_reporter:12:innew' [-] /root/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/gems/arachni-1.3.2/bin/arachni_reporter:12:in ' [-] /root/.rbenv/versions/2.3.0/bin/arachni_reporter:23:inload' [-] /root/.rbenv/versions/2.3.0/bin/arachni_reporter:23:in `","closed","","sampathmende","2018-02-16T09:18:18Z","2019-08-16T13:10:01Z"
"","5403","Selenium 3.8.1 : Unable to find a matching set of capabilities","Windows 8 Eclipse : Version: Oxygen.2 Release (4.7.2) Selenium "" 3.8.1"" Gecko driver : geckodriver-v0.19.1-win32 Firefox : 51.0.1 (32-bit)   Error : Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities   please suggest","closed","","Snigdhaa","2018-01-29T07:37:54Z","2019-08-16T15:10:02Z"
"","4824","getting unhandledAlertException on Selenium 3.5.3","Windows 64-Bit OS Selenium: 3.5.3 Mozilla: 57.0b5 Gecko: geckodriver-v0.19.0-win64  Getting org.openqa.selenium.UnhandledAlertException when upgraded selenium, gecko and FF to latest version given above for my automation. I have right click and a user authentication in my application and want to handle those but the latest version give UnhandledAlertException.  SKIPPED CONFIGURATION: @AfterClass afterClass SKIPPED: testMethod org.openqa.selenium.UnhandledAlertException: :  Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'QATEST003', ip: '10.0.8.249', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_121' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=C:\Users\fraju\AppData\Local\Temp\2\rust_mozprofile.HaqKoI8mS6hI, rotatable=false, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, moz:headless=false, platform=XP, moz:accessibilityChecks=false, acceptInsecureCerts=false, browserVersion=57.0, platformVersion=6.3, moz:processID=17224, browserName=firefox, javascriptEnabled=true, platformName=XP, moz:webdriverClick=false}]","closed","","febyraju","2017-10-06T23:55:31Z","2019-08-17T08:09:50Z"
"","5131","Action.perform -- UnsupportedOperationException","When upgrading selenium-java and selenium-server to 3.7.1, we are getting the following error ;  ```         Actions markerAction = new Actions(browser.getWebDriver());         markerAction.moveToElement(element);         markerAction.perform(); ```   >  > java.lang.UnsupportedOperationException: Underlying driver does not implement advanced user interactions yet. > 	at org.openqa.selenium.support.events.EventFiringWebDriver.perform(EventFiringWebDriver.java:345) > 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:638) > 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:594) > 	at com.sahibinden.selenium.tests.web.search.MapSearchTest.moveToElement(MapSearchTest.java:1067) > 	at com.sahibinden.selenium.tests.web.search.MapSearchTest.testMarkerTooltipContent(MapSearchTest.java:841) > 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) > 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) > 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) > 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) > 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) > 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) > 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) > 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) > 	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74) > 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) > 	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83) > 	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74) >","closed","R-awaiting answer,","muratme","2017-11-28T15:13:25Z","2019-08-14T18:09:36Z"
"","5192","custom chrome binary location not honored","When specifying a custom chrome binary location via ChromeOptions, the chromedriver still opens chrome from the default location.  This issue began after upgrading from 3.4.0 to 3.7.1 (also tried 3.8.1 with the same result).    I am setting the binary location in this manner:  ```java private String browserLocation = “location of browser exe“;  Map chromeOptions = new HashMap(); chromeOptions.put(""binary"", browserLocation);   DesiredCapabilities desiredCapabilities = new DesiredCapabilities();   desiredCapabilities.setCapability(ChromeOptions.CAPABILITY, chromeOptions); ```","closed","C-java,","rab2215","2017-12-08T16:29:19Z","2019-08-16T21:09:41Z"
"","5406","Added no-cache header to HTTP GET command of RemoteWebDriver","When Selenium RemoteWebDriver is connecting to Selenium Server (e.g. SauceLabs) through HTTP proxy, same/repetitive HTTP commands can be cached by the proxy. This leads to unexpected and unwanted behavior that HTTP commands return cached and outdated data from the server (e.g. screenshots).  To fix this I have added Cache-Control: no-cache HTTP header.  Selenium Java implementation has this fix for a while – at least from version 2.26.  Fixes #5404  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","dnknitro","2018-01-30T06:05:09Z","2018-02-16T03:25:35Z"
"","5613","In 3.11, java.lang.NoSuchMethodError: com.google.gson.GsonBuilder.setLenient","When I try to create a RemoteWebDriver in 3.11, I see this error below. This worked fine up through 3.10.  I've reverted to 3.10 for now.  I tried adding in the gson jar from google, but I still see same error. Anyone else see this? I'm running one selenium server as hub, and then running a node against it with webdriver for ff or chrome, same issue.  com.google.gson.GsonBuilder.setLenient()Lcom/google/gson/GsonBuilder;   java.lang.NoSuchMethodError: com.google.gson.GsonBuilder.setLenient()Lcom/google/gson/GsonBuilder; at org.openqa.selenium.json.Json.(Json.java:47) at org.openqa.selenium.logging.profiler.HttpProfilerLogEntry.constructMessage(HttpProfilerLogEntry.java:37) at org.openqa.selenium.logging.profiler.HttpProfilerLogEntry.(HttpProfilerLogEntry.java:29) at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:135) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:132) at oracle.ojet.automation.test.selenium.WebDriverManager._buildRemoteWebDriver(WebDriverManager.java:573)","closed","","bkelley13","2018-03-14T16:39:04Z","2019-08-15T22:09:51Z"
"","5425","My selenium source is not correct!","When I try to change the Clipboard format on my Selenium IDE from HTML to VBA it doesn't work on the source of the Selenium, just keep showing the HTML as you can see on the attach picture.","closed","","yagocorbal","2018-02-01T18:46:12Z","2019-08-16T15:09:43Z"
"","5294","The import org.openqa.selenium.WebDriver cannot be resolved","When I try selenium webdriver 3.80 version in eclipse I'm getting error in class. Please assist me","closed","","vsnsbhanupriya","2018-01-05T22:36:29Z","2019-08-16T18:09:55Z"
"","5589","Running Protractor scripts on IEDriver - Java script error","When I run my protractor scripts using IEDriver they fail stating Javascript errorsame script works fine on Chrome. IEDriverServer_Win32_3.9.0,  selenium-server-standalone-3.10.0.jar,Windows 7, IE11  ``` /html/body/app-root/main/div/div/app-rule/div/tabset  - Failed: JavaScript error           at WebDriverError (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:27:5)           at JavascriptError (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:157:5)           at Object.throwDecodedError (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:514:15)           at parseHttpResponse (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\http.js:519:13)           at doSend.then.response (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\http.js:441:30)           at process._tickCallback (internal/process/next_tick.js:109:7)       From: Task: WebDriver.executeScript()           at thenableWebDriverProxy.schedule (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\webdriver.js:807:17)           at thenableWebDriverProxy.executeScript (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\webdriver.js:878:16)           at run (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\built\browser.js:59:33)           at ProtractorBrowser.to.(anonymous function) [as executeScript] (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\built\browser.js:67:16)           at utilities.highlightElement (c:\Users\ABC1234\git\udr-automation\udruiautomation\src\utils\utilities.js:59:24)           at HomePage.navigateToDashBoard (c:\Users\ABC1234\git\udr-automation\udruiautomation\src\pages\HomePage.js:133:9)           at UserContext. (c:\Users\ABC1234\git\udr-automation\udruiautomation\src\testspec\ListTests.js:106:12)           at new ManagedPromise (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:1077:7)           at ControlFlow.promise (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2505:12)       From: Task: Run it(""Navigate to Conditions Tab,open existing phone list and Delete a record from phone list, Verify record is deleted by reopening the existing list"") in control flow           at ControlFlow.emit (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\events.js:62:21)           at ControlFlow.shutdown_ (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2674:10)           at shutdownTask_.MicroTask (C:\Users\ABC1234\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2599:53) ```","closed","C-nodejs,","munna73","2018-03-09T14:32:42Z","2019-08-16T11:09:37Z"
"","5615","Add json content-type for empty requests (fix net/http warning in strict mode)","When doing empty requests (for example for element click), `Content-Type` header is not set. This causes `Net::HTTP` to issue warning in `$VERBOSE` mode (`-w`):  ``` net/http: warning: Content-Type did not set; using application/x-www-form-urlencoded ```  This warning shows for each action (click, etc), so there are lots of these warnings in output when running tests.  This pull request adds `Content-Type: application/json` to such requests too (they has `{}` body so I guess it's empty json ""object"")  Example script that shows this warning:  ```ruby #!/usr/bin/env ruby -w  require ""bundler/inline""  gemfile do   source ""https://rubygems.org""   gem ""selenium-webdriver"" end  require ""selenium-webdriver""  options = Selenium::WebDriver::Chrome::Options.new options.add_argument(""--headless"") driver = Selenium::WebDriver.for :chrome, options: options driver.navigate.to ""http://google.com""  element = nil Selenium::WebDriver::Wait.new(timeout: 10)                          .until { element = driver.find_element(tag_name: ""a"") } STDERR.puts ""clicking"" element.click STDERR.puts ""clicked"" ```  I didn't add test for warning, only added check for header being added to request. `warn` is not easily stubbable, common way to catch warnings is to redirect stderr to `StringIO` which is too hacky I think.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","kolen","2018-03-14T23:49:01Z","2018-03-23T07:25:34Z"
"","5546","[Grid] Prevent page jump when clicking a node tab","When a user clicks on the Browsers or Configuration tab of a node within the Grid Console (`/grid/console`), it'll act like a link click and jump to the top of the page.  This jump can become quite annoying when you have many nodes connected to the hub, requiring you to scroll back down to the node that you clicked.  This change will prevent the default behavior of the click event, so that the viewport stays where it was when you click one of those tabs.  Tested this across all major browsers.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","dylanlive","2018-02-28T04:43:02Z","2019-05-08T18:05:41Z"
"","5559","Selenium is flooding /tmp with firefox profiles until no space left","What steps will reproduce the problem? instantiated FirefoxProfile  creates /tmp files and doesn't delete after quit example of tmp profile /tmp/tmpaq5z0hj7/webdriver-py-profilecopy/storage/  What is the expected output? What do you see instead? Either it should not create the directory or it should delete it after finishing it's job  What version of the product are you using? On what operating system? Archlinux updated Selenium 3.9.0  Please provide any additional information below. eats up the system disk space until no space left.","closed","D-firefox,","killown","2018-03-01T23:07:16Z","2019-08-14T19:09:54Z"
"","5754","What happened to ChromeDriver in 3.10.0","What happened to org.openqa.selenium.chrome.ChromeDriver in 3.10.0? If it changed then how about some backwards capability, rather than breaking tools.","closed","","AndyGee","2018-04-10T15:30:43Z","2019-08-16T06:09:47Z"
"","5360","[py] Use Color in rendered_webelement_tests","WebDriver spec decided that CSS values returned should be whatever the browser returns, without imposing any format for colors. By using Color class in the tests we can compare colors even if different formats (RGB vs RGBA) are used.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","carlosgcampos","2018-01-18T11:35:28Z","2018-01-18T14:17:37Z"
"","5618","how to create Test data in libreoffice    ...    selenium in linux OS","we are moving into selenium from eggplant tool... automating web applications in linux machines.  How can we create test data with libreoffice... does java supports manipulation of libre office  thanks and regards, Bhanu","closed","","BVallamla","2018-03-15T09:03:48Z","2019-08-16T10:09:40Z"
"","5435","WebDriver .C# solution","We are going to write a .Net application (DLL) and going to use ‘WebDriver’. However our component is required to registry as a COM interface dll and it's required to add a strong name on “WebDriver”. Could you please help us C# .Net solution code with strong name details?  Thank you for your help on this. Have a good day!!!","closed","","mvsreddymca","2018-02-04T13:06:31Z","2019-08-16T10:09:50Z"
"","5605","‘WebDriver’ & chromedriver(DOTNET) - Is runs on WINDOW 2008,2016 servers and Windows 10 machines ?","We are going to write a .Net application (DLL) and going to use ‘WebDriver’ & ""chromedriver"" However our component is required to registry as a COM interface dll.  This application is planning host in CITRIX Server (WINDOW 2008,2016) and Windows 10 machines.    Could you please confirm that new webdriver component is runs  on - WINDOW 2008,2016 CITRIX Servers and Windows 10 machines. ?   Thank you for your help on this. Have a good day!!!","closed","","mvsreddymca","2018-03-14T01:25:50Z","2019-08-16T05:09:39Z"
"","5814","driver.Navigate().GoToUrl(); - It's opened a new chrome window and selected url is not responded in CITRIX Server 2008(""This site can’t be reached"").","We are going to write a .Net application (DLL) and going to use ‘WebDriver’ & ""chromedriver""  This application is planning host in CITRIX Server (WINDOW 2008).  driver.Navigate().GoToUrl(); - This is not respond and page time out             ChromeDriverService ChromeService = ChromeDriverService.CreateDefaultService(@""Path"");             ChromeService.SuppressInitialDiagnosticInformation = true;             ChromeService.HideCommandPromptWindow = true;             ChromeOptions options = new ChromeOptions();             //options.AddArgument(""--window-position=-32000,-32000"");             //options.AddArgument(""--headless"");             options.AddAdditionalCapability(""useAutomationExtension"", false);             var driver = new ChromeDriver(ChromeService, options);             driver.Navigate().GoToUrl(serviceUrl);   driver.Navigate().GoToUrl(); - It's opened a new chrome window and selected url is not responded in CITRIX Server 2008(""This site can’t be reached"").  No issue in my local WIN 7 Machine. Please let us know if any setting is required to setup in Chrome level in server.","closed","","mvsreddymca","2018-04-22T04:31:42Z","2019-08-16T03:09:58Z"
"","4809","add Errno::EAFNOSUPPORT as ignored errors when finding ports","We are adding this value because we received the following error:  ``` Errno::EAFNOSUPPORT:         Address family not supported by protocol - socket(2) for ""::1"" port 9515 ```  Our system has disabled ipv6, but is still resolving ipv6 addresses for localhost. We are able to correct it, but it seemed that selenium shouldn't care about this.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","topherbullock","2017-10-04T15:45:58Z","2018-03-02T06:03:56Z"
"","5791","Existing FF profile is not picked.  FF opens a new one every time.","Version:     geckodriver 20     Platform:     Windows 10     Firefox:     FF 58     Selenium:     Selenium standalone 3.10   Selenium-java code is as follows,  String profileDir = ""C:/Users/jlopez/AppData/Roaming/Mozilla/Firefox/Profiles/ddtkw80l.profile5902""; FirefoxProfile ffprofile = new FirefoxProfile();  FirefoxOptions options = new FirefoxOptions(); options.setBinary(""C:\Program Files\Mozilla Firefox\firefox.exe""); options.addArguments(""-profile"", profileDir);  System.setProperty(""webdriver.gecko.driver"",""C:\selenium\drivers\geckodriver.exe"");  capabilities = DesiredCapabilities.firefox(); capabilities.setCapability(""moz:firefoxOptions"", options);  driver = new RemoteWebDriver(new URL(""http://"" + hubHost + "":4567/wd/hub""), capabilities);  What am I doing wrong?? FF opens up but it does not go to the URL I specify. If I comment out options.addArguments(""-profile"", profileDir); , it works ok, but with a new profile every time that does not have flash installed which is installed on the profile I have previously created.","closed","","javierlopez111","2018-04-17T22:29:49Z","2019-08-16T05:09:47Z"
"","5597","Elements index Element","var post = driver.FindElements(By.XPath(""//div[@class='_5pcr userContentWrapper']"")); for (int i = 0; i < post.Count; i++) {        string str = post.ElementAt(i).FindElement(By.XPath(""//div[@class='_5pbx userContent _3576']"")).Text; }  Hello. I just used this code I got the same result (str). please help me","closed","","GodStar88","2018-03-12T09:18:52Z","2019-08-16T10:09:59Z"
"","5038","Add information to the wiki regarding InternetExplorerDriver","Using Visual Studio 2017 with C# and latest nuget packages, I have experienced problems getting the InternetExplorerDriver working, even though I have made sure to implement the required configuration.  I have found that starting Visual Studio in Administrator Mode will make the driver work as intended, but I feel that this information should be added to the wiki under 'Required Configuration'.  https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#user-content-required-configuration  I am not certain if this is only a problem with Internet Explorer.","closed","C-docs,","pbne04","2017-11-09T07:08:17Z","2019-08-16T18:09:52Z"
"","5281","Support question - Equivalent call for Protractor","Using Protractor, we can do:  ```js element.all(by.repeater('r in roles')).first().element(by.css('.update-role')).click(); ```  what might the equivalent look like with `require('selenium-webdriver');` ?","closed","","ORESoftware","2018-01-02T22:52:18Z","2019-08-16T19:09:34Z"
"","5267","org.openqa.selenium.InvalidSelectorException - cannot be evaluated or does notresult in a WebElement","Using IE 11 and getting below error -  Exception in thread ""main"" org.openqa.selenium.InvalidSelectorException: The xpath expression './/*[@id='zz11_RootAspMenu']/li/ul/li[1]/ul/li[1]/a/span/span' cannot be evaluated or does notresult in a WebElement (WARNING: The server did not provide any stacktrace information)   DOM HTML is -     Case","closed","","kalyanihg","2017-12-27T05:26:32Z","2019-08-16T19:09:45Z"
"","5811","fix ExecuteScript and Actions to handle IWrapsElement appropriately","Using EventFiringWebDriver, element targets and args throw exceptions when calling ExecuteScript or Actions methods. Fix by casting as IWrapsElement and checking for wrapped elements first.  Fixes #5810  - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","cwood-panopto","2018-04-20T00:12:06Z","2018-04-23T17:24:50Z"
"","5364","Syntax highlighting for JavasScript examples","Uses the GitHub syntax highlighting for the readme.md  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","wardy","2018-01-18T17:20:19Z","2018-01-18T23:31:33Z"
"","5014","Add python syntax highlighting","Use `.. code-block:: python` instead of a plain `::`  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","1kastner","2017-11-04T14:46:06Z","2017-11-06T09:49:28Z"
"","5467","safaridriver: add support for an extension command to open the debugger.","Upon executing this command, Safari will open the Web Inspector and pause at a `debugger;` statement.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","burg","2018-02-08T19:52:20Z","2018-03-15T15:05:00Z"
"","4972","IEDriverServer 3.6.0 hanging after file download attempt","Upon clicking a download link in IE, the IE download banner will appear at the bottom of the list and the test will stop and hang from that point on. Use the following test class to recreate the issue:  ``` using System.IO; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.IE;  namespace PageObjectModel.Tests {     [TestFixture]     class NoSetupTest     {         private IWebDriver driver;          [Test]         public void Test()         {             driver = new InternetExplorerDriver();             driver.Manage().Window.Maximize();             driver.Navigate().GoToUrl(""https://the-internet.herokuapp.com/download"");             System.Threading.Thread.Sleep(2000);             driver.FindElement(By.LinkText(""ClasificacionErrores.txt"")).Click();             System.Threading.Thread.Sleep(2000);             driver.Navigate().GoToUrl(""https://www.google.com"");         }     } } ```","closed","D-IE,","JOberloh","2017-10-27T14:33:50Z","2019-08-16T11:09:57Z"
"","5684","Update Http.request in default.rb to include a delay in retries","Update Http.request to include a sleep between retries for cases where Errno::ECONNABORTED, Errno::ECONNRESET, Errno::EADDRINUSE occur.   Without this sleep the retries happen immediately and do not give the remote host and/or connection to it, any time to resolve the connection issue.  This results in seemingly random connection problems and test failures when using Selenium Webdriver in a grid setup with 1000s of connections running simultaneously.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","ghost","2018-03-26T22:14:14Z","2018-03-27T03:27:20Z"
"","4959","Fixes #2888 - Retry on network error","Unlike the Ruby bindings, the JavaScript selenium-webdriver `sendRequest()` call did not retry on EADDRINUSE or ECONNABORTED network errors. This seems to affect Windows users who haven't  increased the number of ephemeral ports more often that others. The JS has been updated to behave the same as the Ruby **except** the timeout was kept as 15 ms instead of 2s. While 15 ms seems a bit too fast, 2s seems like an eternity to introduce into a test.  This doesn't have tests (yet) -- I can't get the tests to even start using `go debug-start`. It should be a quick with the teams favorite `http`/`https` mock.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","seanpoulter","2017-10-25T17:03:54Z","2017-10-31T14:36:01Z"
"","4831","Unable to click on a salesforce tag :: after (.support-servicedesk-navigator .x-btn-mc em.x-btn-split:after) using webdriver","Unable to click on a salesforce tag :: after (.support-servicedesk-navigator .x-btn-mc em.x-btn-split:after) using webdriver  ![image](https://user-images.githubusercontent.com/17021013/31344246-c90f643e-ad2f-11e7-883f-6516621cad0c.png)      Member Search    Need to click on arrow icon  ![image](https://user-images.githubusercontent.com/17021013/31344370-21221ef0-ad30-11e7-8cab-73d49e803995.png)  I have tried action and css both but nothing worked:  WebElement ele = driver.findElement(By.xpath(""//*[@id='ext-gen128']""); Actions build = new Actions(driver); build.moveToElement(ele, Xoffset, Yoffset).click().build().perform();  Please help me.  Thanks, Sumit","closed","","vinitsriwastava","2017-10-09T14:59:28Z","2019-08-17T08:09:44Z"
"","4849","Unable to click on a salesforce tag ::after which is an arrow dropdown","Unable to click on a salesforce tag :: after (.support-servicedesk-navigator .x-btn-mc em.x-btn-split:after) using webdriver  ![](https://user-images.githubusercontent.com/17021013/31344246-c90f643e-ad2f-11e7-883f-6516621cad0c.png)  Need to click on arrow icon  ![](https://user-images.githubusercontent.com/17021013/31344370-21221ef0-ad30-11e7-8cab-73d49e803995.png)  I have tried action and css both but nothing worked:   1. WebElement switchLabel =driver.findElement(By.cssSelector("".x-btn-split::after""));   ((JavascriptExecutor)driver)           .executeScript(""arguments[0].click();"",switchLabel);*/   2. Actions action = new Actions(driver); action.moveToElement(driver.findElement(By.cssSelector("".x-btn-split::after""))), 20,23).click().build().perform();        3.  WebElement ele = driver.findElement(By.xpath(""//*[@id='ext-gen80']""));   Actions build = new Actions(driver);   build.moveToElement(ele, 21, 23).click().build().perform();   CSS part of the UI:   ![](https://user-images.githubusercontent.com/17021013/31344706-0cba9644-ad31-11e7-82b8-1fb30e9711bc.png)   Please help.  Thanks, Sumit","closed","","vinitsriwastava","2017-10-11T12:48:37Z","2019-08-17T08:09:34Z"
"","4857","Twice MoveToElement is not working in Selenium C# API","Twice MoveToElement is not working  OS:   Windows 8.1 Selenium Version:   Selenium Webdriver API 3.6.0 for C# Browser:   Chrome 61 Chromedriver 2.32 and 2.33  Issue Description: If I use MoveToElement second time, it is not working.   Steps to reproduce:  1. Use Actions.MoveToElement(el) first time It will move the mouse to the specified element 2. Add another Actions.MoveToElement(el1), provide another web element. In the selenium debug window you will notice it is moving to the previous element ""el"" that was used in the first MoveToElement.  In my case the first element did not exist anymore and I got StaleElementReferenceException.  The issue is started to happen since Selenium Webdriver API 3.1.0 and up. If I downgrade the nuget package to Webdriver API 3.0.1 I can not reproduce the issue any more.  It is not a chrome driver issue as the same code but written in Java works fine in Webdriver API 3.6.0.  here the code that reproduces the issue: `	driver = new ChromeDriver();         wait = new WebDriverWait(driver, TimeSpan.FromSeconds(15));         driver.Url = ""http://www.google.nl/""; 	Actions actions = new Actions(driver); 	driver.FindElement(By.Name(""q"")).SendKeys(""webdriver""); 	Thread.Sleep(1000); 	actions.MoveToElement(driver.FindElement(By.CssSelector(""input[type = button]""))).Perform(); 	driver.FindElement(By.CssSelector(""input[type = button]"")).Click(); 	var s = driver.FindElement(By.Id(""logocont"")); 	actions.MoveToElement(s).Perform(); 	s.Click();         driver.Quit();         driver = null;  `","closed","","napriienko","2017-10-12T15:14:32Z","2019-08-17T07:09:55Z"
"","5174","Improving capability matcher","to handle case when nodes or clients use non deprecated `CapabilityType.PLATFORM_NAME`  When I create a node using `CapabilityType.PLATFORM_NAME` instead of `CapabilityType.PLATFORM` (now deprecated), the requested capabilities won't match the desired capabilities since the `DefaultCapabilityMatcher` is not considering `CapabilityType.PLATFORM_NAME` to make the match.  This PR, changes this, so `CapabilityType.PLATFORM_NAME` is considered to make the match as a fallback when `CapabilityType.PLATFORM` is not present.  I also duplicated the unit tests to check that both CapabilityTypes are working, and added two more at the end covering the scenario when the provided capabilities have `CapabilityType.PLATFORM` and the requested `CapabilityType.PLATFORM_NAME` and viceversa.   - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","diemol","2017-12-06T09:14:53Z","2017-12-07T23:26:26Z"
"","5521","Validate nested XPath locators","To find an element via XPath below another element, the XPath expression should begin with a dot. Otherwise the nested XPath is treated like a normal XPath searching for the element below the root node.  For example: `driver.findElement(By.xpath(""//input"")).findElement(By.xpath(""//label""));` finds something although there is no label element inside an input element.  `driver.findElement(By.xpath(""//input"")).findElement(By.xpath("".//label""));` finds nothing which is correct.  It is a common unnoticed mistake that could be avoided by validating that the XPath expression inside ByXPath.findElement does not start with ""/"" if the search context is a WebElement.  I could make a PR for that, if desired.","closed","R-awaiting answer,","phoenix384","2018-02-21T13:19:21Z","2020-04-18T22:16:24Z"
"","5291","Add merge(Capabilities) to (Java) OperaOptions","To align with `FirefoxOptions` and `ChromeOptions`.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","ham1","2018-01-05T17:15:52Z","2018-01-08T08:22:29Z"
"","5188","Updating wgxpath, to be able to compile it in the IDE","This will solve [55](https://github.com/SeleniumHQ/selenium-ide/pull/55)   And will allow us code reuse between Selenium and the IDE   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","corevo","2017-12-07T15:02:23Z","2017-12-11T11:42:26Z"
"","5229","Added missing goog require, and define Sizzle","This will fix the IDE's sendKeys and type commands.   And will fix the css locators  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-atoms,","corevo","2017-12-17T15:22:45Z","2018-07-30T13:15:41Z"
"","5409","Update copyright year to 2018","This PR updates the copyright year to 2018.  - [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","cgoldberg","2018-01-30T15:49:08Z","2018-01-31T07:12:02Z"
"","4879","Implement minimal support for ruby/servo","This PR implements minimal ruby driver for  [servo](https://servo.org/) web engine, so it can be used with Capybara in tests.  However it's not yet ready for production usages, because at the moment Servo does not support all list of webdriver commands :(. See https://github.com/servo/servo/issues/8623","closed","","greyblake","2017-10-16T10:50:14Z","2017-10-16T10:50:51Z"
"","5021","finish removing support for Python 2.6 and 3.3","This PR finishes removing support for Python 2.6 and 3.3 (see commit 8a0099a3f3daec640f4f3327486f95c889d64683 to master)  /cc @AutomatedTester ... you forgot a few places :)    - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","cgoldberg","2017-11-07T01:33:47Z","2017-11-08T00:17:47Z"
"","5478","[rb] Add helper method to launch Chrome in headless mode.","This makes it consistent with Firefox::Options#headless! (Refer: https://github.com/SeleniumHQ/selenium/pull/4762)  Though I agree with @jimevans to not add this API for a single command line argument,  but adding this for consistency.  Another thread: https://github.com/SeleniumHQ/selenium/issues/4591 - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","pulkitsharma07","2018-02-10T11:41:51Z","2018-02-15T14:53:23Z"
"","5594","[Selenium-Rb] Upgrade to v3.0.0 causes strange issue with Delayed Job exiting","This is one of the weirdest issues I've seen, but I've definitely narrowed the issue down to the difference between v2.53.4 and v3.0.0 - I've filed this SO post as well: https://stackoverflow.com/questions/49216139/debugging-ruby-exit-code-due-to-gem-upgrade  However, I wanted to post here as well and see if anyone had any ideas or leads to follow as I further investigate and try to develop a test app that shows the issue.   Upon upgrade of this gem and only this gem, when we try to start our delayed job process on our staging server, the process starts, but it exits out with an ""Aborted"" exit status.   ```bash [user@staging 20180311014244]$ RAILS_ENV=production bin/delayed_job start delayed_job: process with pid 24844 started. Aborted [user@staging 20180311014244]$ echo $? 134 ``` Again, the issue only exists on our Red Hat Enterprise Linux staging server, and is not reproducible on OSX. I'm going to try to setup a separate linux vm to see if the OS is a contributing factor.   It is interesting that the issue cropped up with the major version upgrade. Hopefully, this might be a clue.   + ruby 2.2.4p230  + delayed job 4.1.2","closed","","synth","2018-03-11T02:51:31Z","2019-08-16T10:10:03Z"
"","5244","Target exception: org.openqa.selenium.WebDriverException: Permission denied to access property 'M'","This is my code, In firefox 45 it is giving above error. I am able to run this script through jmeter in firefox, but not in Blazemeter.  My code is,  import org.apache.jmeter.services.FileServer; import org.openqa.selenium; import org.openqa.selenium.firefox.FirefoxProfile; import java.time.temporal.ChronoUnit; import java.time.format.DateTimeFormatter;   import java.time.LocalDateTime;    import org.openqa.selenium.WebElement; import org.openqa.selenium.By; import java.io.FileReader; import java.io.BufferedReader; import java.io.FileWriter; import java.util.concurrent.TimeUnit; import java.util.ArrayList; import java.util.List; import org.openqa.selenium.support.ui.WebDriverWait; import org.openqa.selenium.support.ui.ExpectedConditions; WebDriverWait wait= new WebDriverWait(WDS.browser,220); WDS.sampleResult.sampleStart(); WDS.browser.get(""https://app.mammoth.io/#/login"");   wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(""userEmail""))).sendKeys(new String[] {""deepak.merahkee@gmail.com""}); wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(""userPwd""))).sendKeys(new String[] {""*************""}); login=wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(""//button[@class='btn btn-mammoth']""))); start=LocalDateTime.now(); login.click(); wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(""//section[@class='workspace ng-scope']"")));  end=LocalDateTime.now(); Long minutesBetween=ChronoUnit.MILLIS.between(start,end); String Timestamp = Long.toString(minutesBetween);  WDS.log.info(""Login: login = ""+Timestamp); WDS.browser.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);     WDS.sampleResult.sampleEnd();","closed","","VidyaTigani","2017-12-21T11:38:17Z","2019-08-16T19:10:01Z"
"","4948","Python bindings don't always raise an exception if browser driver returns error","This is a spin-off of #4937 where a problem in IEDriver and/or Python bindings caused `Ie.get_window_size()` to return  > {'message': 'Command not found: GET /session/cca537b7-5bc0-49ee-972e-400d9cf1ddb5/window/size', 'value': None, 'error': 'unknown method'}  The underlying bug aside, it's strange that Selenium doesn't raise an exception when a driver returns such an error. Browsing through the code, it seems that an error should be raised by [ErrorHandler.check_response()](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/errorhandler.py#L80) which ought to be called by [WebDriver.execute()](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webdriver.py#L288) that [WebDriver.get_window_size()](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webdriver.py#L959) ought to call.","closed","D-IE,","pekkaklarck","2017-10-25T08:34:38Z","2019-08-16T20:10:02Z"
"","4881","Updated docstrings to specify the type of path needed to install firefox addons.","This change helps the user give the correct full path to the addon they would like to install for firefox. Marionette is expecting a full path.  Fixes #4858  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","jrbenny35","2017-10-16T19:20:48Z","2017-10-18T21:00:54Z"
"","5069","Add Python client support for WebExtensions in Firefox","This attempts to parse a `manifest.json` file before 'index.if it's present before `install.rdf` in the Python `FirefoxProfile` class which adds support for the newer WebExtensions API addon format while maintaining backwards compatibility.  I haven't added a test for this, but I'm having trouble finding any tests for the existing implementation to work from. Are there any tests for `FirefoxProfile.add_extension()` in the Python client?  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5069)","closed","C-py,","sangaline","2017-11-16T21:30:57Z","2018-10-04T16:02:58Z"
"","4876","[py] allow browser options to be passed to Remote WebDriver","This also deprecates the previous browser WebDriver keywords for options in favor of a standardized 'options' I.E. 'firefox_options' becomes 'options'","closed","C-py,","lmtierney","2017-10-14T22:00:32Z","2017-11-08T02:16:07Z"
"","5121","[py] make it possible to override options when running tests with WebKitGTK+","This allows to run the tests with a driver in a different path instead of the installed one. The same way it allows to use a different browser or provide specific browser options. This is controlled by three optional environment variables WD_DRIVER_PATH, WD_BROWSER_PATH and WD_BROWSER_ARGS.  Also ensure overlay scrollbars are always disabled when running tests, because it causes failures in some tests and avoid including an empty list of arguments to browser options.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","carlosgcampos","2017-11-25T09:38:42Z","2017-11-27T15:03:54Z"
"","4966","Set default values for the pointerMove offset.","This allows callers to omit the x and y parameters when moving the pointer to the center of the target, consistent with the old API.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","juangj","2017-10-27T00:46:14Z","2017-10-27T16:51:43Z"
"","5480","There was an unexpected error. Msg: TypeError: window.editor.treeView is undefined Url: chrome://selenium-ide/content/selenium-ide.xul, line: 1, column: 1 oncommand@chrome://selenium-ide/content/selenium-ide.xul:1:1","There was an unexpected error. Msg: TypeError: window.editor.treeView is undefined Url: chrome://selenium-ide/content/selenium-ide.xul, line: 1, column: 1 oncommand@chrome://selenium-ide/content/selenium-ide.xul:1:1","closed","","hgzWeb","2018-02-11T07:25:19Z","2019-08-16T13:09:37Z"
"","4984","selenium issue","There was an unexpected error. Msg: TypeError: window.editor.infoPanel is undefined Url: chrome://selenium-ide/content/selenium-ide.xul, line: 1, column: 1 onclick@chrome://selenium-ide/content/selenium-ide.xul:1:1 ![sq](https://user-images.githubusercontent.com/20639824/32209196-ff8b9d08-be2c-11e7-995a-c02fff5e3f95.png)","closed","","sakshichauhan07","2017-10-31T05:47:02Z","2019-08-17T04:10:02Z"
"","5219","Fix resolution of getHubHost and getHubPort in GridNodeConfiguration.","There are several related issues:  ### issue 1: As documented [here]() the `hub` parameter should take precedence over -hubHost and -hubPort. But actually parameter  -hubHost and -hubPort have higher priority when both params defined.  ### issue 2: When one of the `hubHost`  or `hubPort`  is equal to `null` then result returned by  [getHubPort()](https://github.com/SeleniumHQ/selenium/blob/2e5358a2f7ba4180fafa5bdf7761dec3b9fd0ee7/java/server/src/org/openqa/grid/internal/utils/configuration/GridNodeConfiguration.java#L319)  and [getHubHost()](https://github.com/SeleniumHQ/selenium/blob/2e5358a2f7ba4180fafa5bdf7761dec3b9fd0ee7/java/server/src/org/openqa/grid/internal/utils/configuration/GridNodeConfiguration.java#L309) can depend on invocation  order:  #### Precondition: hub: ""http://hostA:1111"" hubHost: ""hostB"" hubPort: null  step 1: call to getHubHost() returns ""hostB"" (from `hubHost`  parameter) step 2: call to getHubPort() returns 1111 (from `hub` parameter)  step 3: repeat call to getHubHost() - now it returns ""hostA"" (from `hub` parameter)","closed","C-grid,","kool79","2017-12-13T19:44:46Z","2019-08-16T20:09:57Z"
"","5289","Typos in the wiki logging page","There are a lot of typos in the wiki page for logging: https://github.com/SeleniumHQ/selenium/wiki/Logging I would fix them myself, but there is no edit button.  Most of them are simple word problems Example: `more of less` instead of `more or less`  The most glaring though is the links to the JsonWireProtocol link to https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol.md --redirect--> https://raw.githubusercontent.com/wiki/SeleniumHQ/selenium/JsonWireProtocol.md instead of  https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol","closed","","matthewhively","2018-01-04T21:09:23Z","2019-08-16T18:09:56Z"
"","5599","How do i upgrade chromedriver for selenium standalone (nodeJS)","The tittle is pretty self explanatory but my situation is that i need to use Chrome 65 which only works with chromedriver 2.36. I see the nodejs version is still at 3.6.0 for selenium. When will the be updated?","closed","","malliapi","2018-03-12T11:59:34Z","2019-08-16T10:09:57Z"
"","5625","Python API design inconsistency for defining locators","The Selenium language bindings for Python makes it hard to manage a consistent way to find locators.  One particular issue I've been running into is when attempting to mix webdriver.find_element_by_* methods and expected_conditions methods requiring a locator in parameter. The former requires declaring the locator strategy in the method name, while the latter requires declaring it through a By object.  While this works fine for simple scripts, things become complicated when attempting to implement a page object model that separates the business logic from Selenium, and the locator strategy is not consistent between elements. It does not appear possible to have a single locator definition without having to implement some kind of mapping between By objects and their corresponding webdriver methods.  While there is a webdriver.find_element method that would solve this problem as it uses a By object as parameter, the documentation specifies that the method is private and should not be used.","closed","C-py,","SmashManiac","2018-03-15T18:39:26Z","2019-08-16T02:09:42Z"
"","5753","INFO [DefaultRemoteProxy.onEvent] - Marking the node http://0.0.0.0:4750 as down: cannot reach the node for 2 tries","The problem I am using selenium-server-standalone-3.11.0/3.7.1 for connecting nodes to Hub. After connecting node to hub I am getting below error:  INFO [DefaultGridRegistry.add] - Registered a node http://0.0.0.0:4750 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://0.0.0.0:4751 as down: cannot reach the node for 2 tries INFO [DefaultRemoteProxy.onEvent] - Marking the node http://0.0.0.0:4750 as down: cannot reach the node for 2 tries  On hub console it shows that devices are connected as given in attached screenshot.   ![image](https://user-images.githubusercontent.com/26320996/38560880-4b98f3ee-3cf4-11e8-8ae8-722483b1ca8f.png)  https://gist.github.com/stephenws/fe5ec8fce5dc69dba80cf8f4ba47a49c","closed","C-grid,","stephenws","2018-04-10T13:52:18Z","2019-08-16T05:10:02Z"
"","5797","selenium-webdriver npm packages","The packages of selenium-webdriver between the versions 3.6.0 and 4.0.0-alpha.1 arent published to npm. Is there any particular reason why these package aren't available via npm?","closed","","wlucha","2018-04-18T12:07:58Z","2019-08-15T22:09:55Z"
"","5518","Object throwing null pointer exception while running with android Driver using Selenium 3.8.1","The Object map is not getting initialised using the android driver. The object is throwing null pointer exception whenever trying to use any sendkeys or click.  Please find below the code snippet : -  Code used in OR :  ``` @FindAll({ @FindBy(xpath = ""//*[@id='tsbb']"") })     public WebElement Google_homepage__ssearchBTN;  WebDriver driver; public tesitng_android_om(WebDriver driver){     this.driver=driver; } ``` Inside Testcase :          Android driver = new AndroidDriver(sURL, oCap);           tesitng_android_om tesitng_android_om = new tesitng_android_om((WebDriver)driver);          PageFactory.initElements((WebDriver)driver,tesitng_android_om);          tesitng_android_om.Google_homepage__ssearchBTN.click(); The Same code works fine with **Selenium 3.4.0** but is not working in **3.8.1**  Following is the stack trace of the issue :  > Error: java.lang.NullPointerException at > org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279) > at > org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:320) > at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at > sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at > sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at > java.lang.reflect.Method.invoke(Unknown Source) at > org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51) > at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source) at > org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315) > at > org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44) > at > org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301) > at > org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298) > at > org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686) > at > org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682) > at > org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208) > at myPackage.library.Android$Helper.checkReady(Android.java:2397) at > myPackage.library.Android$Web.awType(Android.java:1108) at > myPackage.testScripts.test_android_tcweb.test(test_android_tcweb.java:64) > at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at > sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at > sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at > java.lang.reflect.Method.invoke(Unknown Source) at > org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) > at org.testng.internal.Invoker.invokeMethod(Invoker.java:714) at > org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901) at > org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231) at > org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127) > at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111) > at org.testng.TestRunner.privateRun(TestRunner.java:767) at > org.testng.TestRunner.run(TestRunner.java:617) at > org.testng.SuiteRunner.runTest(SuiteRunner.java:334) at > org.testng.SuiteRunner.access$000(SuiteRunner.java:37) at > org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368) at > org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64) at > java.util.concurrent.FutureTask.run(Unknown Source) at > java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) at > java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) at > java.lang.Thread.run(Unknown Source) > -- false -- [Expected - True, Actual - False]","closed","","samnit","2018-02-21T12:03:19Z","2019-08-16T12:10:04Z"
"","5262","Preparing chrome driver to download in headless mode","The method send commands to the browser to avoid blocking of downloading in headless mode. (The issue is described here: https://github.com/SeleniumHQ/selenium/issues/5159)  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5262)","closed","C-java,","IlyaNaumovich","2017-12-26T15:13:33Z","2021-06-04T09:16:46Z"
"","5143","Latest released  3.8.0 jar is 'corrupt'","The latest released version provided here: http://selenium-release.storage.googleapis.com/3.8/selenium-server-standalone-3.8.0.jar and what is downloaded via webdriver-manager update only contains a manifest file and nothing else in the jar.  This means that our builds are now failing as webdriver cannot start due to the 'corrupt' jar file.  I'm sure others will start having this issue very shortly too.","closed","","erikv-hill-labs","2017-11-29T22:04:53Z","2019-08-17T00:09:50Z"
"","5695","Fix ChromeDriver NetworkConditions setter for .NET","The JSON object generated by the .NET version of ChromeDriver NetworkConditions setter had incorrect format, and was rejected by ChromeDriver. This commit fixes the format.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","JohnChen0","2018-03-27T23:31:28Z","2018-03-28T11:49:10Z"
"","4965","Deprecate/remove/warn about safari options that don't do anything in Safari 10+","The JS bindings expose several methods which do not correspond to any behavior implemented by safaridriver. I'm sure that other bindings do this as well, but I haven't checked them all.  https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/safari_exports_Options.html  - setCleanSession is useless, since all automation sessions in Safari use a clean session. There is no way to opt out of this.  - LoggingPrefs is useless, because safaridriver does not implement any JSONWireProtocol logging endpoints.  - setProxy is useless, because safaridriver does not have its own proxy settings. It inherits the system networking settings.","closed","C-nodejs,","burg","2017-10-26T17:06:49Z","2019-08-17T05:09:35Z"
"","5162","Outdated docs for ""selenium-webdriver"" npm package","The github docs has stuck on v3.3.0: http://seleniumhq.github.io/selenium/docs/api/javascript/page/Changes.html  Latest is 3.6.0 with quite substantial changes.","closed","C-docs,","canonic-epicure","2017-12-04T11:22:29Z","2019-08-16T17:09:56Z"
"","5421","Add service_args to Firefox WebDriver","The Firefox Geckodirver Service accepts the service_args parameter, but there is no way of passing those service arguments from the Firefox WebDriver.  Fixes #5420  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","moiseshiraldo","2018-01-31T22:58:57Z","2018-02-01T01:32:09Z"
"","5460","Fix for Window.setRect() API documentation.","The current API documentation for Window.setRect() refers to wrong parameters to be omitted for setting only size or position. Parameters updated to be inline with the implementation.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","juperala","2018-02-07T22:15:05Z","2018-02-08T20:29:59Z"
"","5148","[Feature request] Add the possibility to create cookies with a SameSite attribute","The constructor of the Cookie class supports cookie attributes like path, domain, secure, etc. Unfortunately there is no way to set the SameSite attribute. As Chrome and Opera already implement this and Firefox intends to do so ([link](https://www.chromestatus.com/feature/4672634709082112)), I think it would be a good idea for Selenium to support this. Besides, the SameSite attribute is backwards compatible so non-supporting browsers will just ignore it.  Therefore I suggest adding the possibility to configure the SameSite attribute in the same manner as the other attributes (through a dedicated parameter in the Cookie constructor). Another potential solution would be through a more generic parameter that can carry multiple attribute-value pairs, such that not every new attribute needs another parameter in the constructor.","closed","","GJFR","2017-11-30T11:26:03Z","2019-08-17T00:09:43Z"
"","5039","Fix WebDriverException when binary is set, but no firefox binary in the PATH variable","The cause of the problem is to call the orElse method with new instance of FirefoxBinary as argument, which requires Firefox binary in envirement variable PATH.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","darek8686","2017-11-09T09:13:59Z","2017-11-15T00:59:13Z"
"","5333","how  can i start selenium webdriver in chrome browser","the below  error occur when i run script org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: "":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\\Program Files\\Mozilla Firefox\\browser\\extensions\\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1515584193809,""updateDate"":1515584193809,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22012,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0.2"",""maxVersion"":""47.0.2""}],""targetPlatforms"":[],""seen"":true} 1515750041681	addons.xpi	DEBUG	getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1515750041682	DeferredSave.extensions.json	DEBUG	Save changes 1515750041683	addons.xpi	DEBUG	Updating database with changes to installed add-ons 1515750041683	addons.xpi-utils	DEBUG	Updating add-on states 1515750041684	addons.xpi-utils	DEBUG	Writing add-ons list 1515750041688	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1515750041689	addons.xpi	DEBUG	Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1515750041689	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1515750041689	addons.xpi	DEBUG	Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1515750041690	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1515750041691	addons.xpi	DEBUG	Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1515750041713	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\websensehelper@mozilla.org.xpi 1515750041713	addons.xpi	DEBUG	Calling bootstrap method startup on websensehelper@mozilla.org version 1.0 1515750041717	addons.manager	DEBUG	Registering shutdown blocker for XPIProvider 1515750041717	addons.manager	DEBUG	Provider finished startup: XPIProvider 1515750041717	addons.manager	DEBUG	Starting provider: LightweightThemeManager 1515750041718	addons.manager	DEBUG	Registering shutdown blocker for LightweightThemeManager 1515750041718	addons.manager	DEBUG	Provider finished startup: LightweightThemeManager 1515750041718	addons.manager	DEBUG	Starting provider: GMPProvider 1515750041725	addons.manager	DEBUG	Registering shutdown blocker for GMPProvider 1515750041726	addons.manager	DEBUG	Provider finished startup: GMPProvider 1515750041726	addons.manager	DEBUG	Starting provider: PluginProvider 1515750041726	addons.manager	DEBUG	Registering shutdown blocker for PluginProvider 1515750041726	addons.manager	DEBUG	Provider finished startup: PluginProvider 1515750041727	addons.manager	DEBUG	Completed startup sequence 1515750043266	addons.manager	DEBUG	Starting provider:  1515750043266	addons.manager	DEBUG	Registering shutdown blocker for  1515750043267	addons.manager	DEBUG	Provider finished startup:  1515750043878	DeferredSave.extensions.json	DEBUG	Write succeeded 1515750043879	addons.xpi-utils	DEBUG	XPI Database saved, setting schema version preference to 17 1515750043879	DeferredSave.extensions.json	DEBUG	Starting timer 1515750043906	DeferredSave.extensions.json	DEBUG	Starting write 1515750043915	addons.repository	DEBUG	No addons.json found. 1515750043916	DeferredSave.addons.json	DEBUG	Save changes 1515750043929	DeferredSave.addons.json	DEBUG	Starting timer 1515750044051	addons.manager	DEBUG	Starting provider: PreviousExperimentProvider 1515750044052	addons.manager	DEBUG	Registering shutdown blocker for PreviousExperimentProvider 1515750044052	addons.manager	DEBUG	Provider finished startup: PreviousExperimentProvider 1515750044061	DeferredSave.addons.json	DEBUG	Starting write 1515750044077	DeferredSave.extensions.json	DEBUG	Write succeeded 1515750044151	DeferredSave.addons.json	DEBUG	Write succeeded  	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) 	at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at test.Test.main(Test.java:10) Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  "":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\\Program Files\\Mozilla Firefox\\browser\\extensions\\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1515584193809,""updateDate"":1515584193809,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22012,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0.2"",""maxVersion"":""47.0.2""}],""targetPlatforms"":[],""seen"":true} 1515750041681	addons.xpi	DEBUG	getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1515750041682	DeferredSave.extensions.json	DEBUG	Save changes 1515750041683	addons.xpi	DEBUG	Updating database with changes to installed add-ons 1515750041683	addons.xpi-utils	DEBUG	Updating add-on states 1515750041684	addons.xpi-utils	DEBUG	Writing add-ons list 1515750041688	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1515750041689	addons.xpi	DEBUG	Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1515750041689	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1515750041689	addons.xpi	DEBUG	Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1515750041690	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1515750041691	addons.xpi	DEBUG	Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1515750041713	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\websensehelper@mozilla.org.xpi 1515750041713	addons.xpi	DEBUG	Calling bootstrap method startup on websensehelper@mozilla.org version 1.0 1515750041717	addons.manager	DEBUG	Registering shutdown blocker for XPIProvider 1515750041717	addons.manager	DEBUG	Provider finished startup: XPIProvider 1515750041717	addons.manager	DEBUG	Starting provider: LightweightThemeManager 1515750041718	addons.manager	DEBUG	Registering shutdown blocker for LightweightThemeManager 1515750041718	addons.manager	DEBUG	Provider finished startup: LightweightThemeManager 1515750041718	addons.manager	DEBUG	Starting provider: GMPProvider 1515750041725	addons.manager	DEBUG	Registering shutdown blocker for GMPProvider 1515750041726	addons.manager	DEBUG	Provider finished startup: GMPProvider 1515750041726	addons.manager	DEBUG	Starting provider: PluginProvider 1515750041726	addons.manager	DEBUG	Registering shutdown blocker for PluginProvider 1515750041726	addons.manager	DEBUG	Provider finished startup: PluginProvider 1515750041727	addons.manager	DEBUG	Completed startup sequence 1515750043266	addons.manager	DEBUG	Starting provider:  1515750043266	addons.manager	DEBUG	Registering shutdown blocker for  1515750043267	addons.manager	DEBUG	Provider finished startup:  1515750043878	DeferredSave.extensions.json	DEBUG	Write succeeded 1515750043879	addons.xpi-utils	DEBUG	XPI Database saved, setting schema version preference to 17 1515750043879	DeferredSave.extensions.json	DEBUG	Starting timer 1515750043906	DeferredSave.extensions.json	DEBUG	Starting write 1515750043915	addons.repository	DEBUG	No addons.json found. 1515750043916	DeferredSave.addons.json	DEBUG	Save changes 1515750043929	DeferredSave.addons.json	DEBUG	Starting timer 1515750044051	addons.manager	DEBUG	Starting provider: PreviousExperimentProvider 1515750044052	addons.manager	DEBUG	Registering shutdown blocker for PreviousExperimentProvider 1515750044052	addons.manager	DEBUG	Provider finished startup: PreviousExperimentProvider 1515750044061	DeferredSave.addons.json	DEBUG	Starting write 1515750044077	DeferredSave.extensions.json	DEBUG	Write succeeded 1515750044151	DeferredSave.addons.json	DEBUG	Write succeeded  Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'hp-PC', ip: '192.168.43.54', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_151' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:124) 	at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at test.Test.main(Test.java:10) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: "":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\\Program Files\\Mozilla Firefox\\browser\\extensions\\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1515584193809,""updateDate"":1515584193809,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22012,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0.2"",""maxVersion"":""47.0.2""}],""targetPlatforms"":[],""seen"":true} 1515750041681	addons.xpi	DEBUG	getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1515750041682	DeferredSave.extensions.json	DEBUG	Save changes 1515750041683	addons.xpi	DEBUG	Updating database with changes to installed add-ons 1515750041683	addons.xpi-utils	DEBUG	Updating add-on states 1515750041684	addons.xpi-utils	DEBUG	Writing add-ons list 1515750041688	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1515750041689	addons.xpi	DEBUG	Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1515750041689	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1515750041689	addons.xpi	DEBUG	Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1515750041690	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1515750041691	addons.xpi	DEBUG	Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1515750041713	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\websensehelper@mozilla.org.xpi 1515750041713	addons.xpi	DEBUG	Calling bootstrap method startup on websensehelper@mozilla.org version 1.0 1515750041717	addons.manager	DEBUG	Registering shutdown blocker for XPIProvider 1515750041717	addons.manager	DEBUG	Provider finished startup: XPIProvider 1515750041717	addons.manager	DEBUG	Starting provider: LightweightThemeManager 1515750041718	addons.manager	DEBUG	Registering shutdown blocker for LightweightThemeManager 1515750041718	addons.manager	DEBUG	Provider finished startup: LightweightThemeManager 1515750041718	addons.manager	DEBUG	Starting provider: GMPProvider","closed","","thajunnisa","2018-01-12T10:11:25Z","2019-08-16T17:09:58Z"
"","5420","Add service_args to Python Firefox WebDriver","The [Firefox Service](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/service.py) accepts the `service_args` parameter to pass command line arguments to the geckodriver, but right now I can't see any way of passing them from the Firefox WebDriver, as you can do with the [Chrome one](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/chrome/webdriver.py).","closed","","moiseshiraldo","2018-01-31T22:57:12Z","2019-08-16T15:09:52Z"
"","5048","Broken link to build.desc in Automation Atoms Wiki","The [Automation Atoms Wiki page](https://github.com/SeleniumHQ/selenium/wiki/Automation-Atoms) contains a broken [link](https://github.com/SeleniumHQ/selenium/blob/master/javascript/webdriver-atoms/build.desc) at the very end of the introductory page.   Full Link HREF -   https://github.com/SeleniumHQ/selenium/blob/master/javascript/webdriver-atoms/build.desc","closed","C-docs,","michaelfward","2017-11-13T01:00:09Z","2019-08-17T02:10:02Z"
"","5807","move_to_element() doesn't work","thanks for this lib! ## Meta - OS: Win 10  Selenium Version: 3.5.0  Browser:  Firefox / Chrome   Browser Version:    Firefox 59.02  and Chrome 64.0 ## Expected Behavior - the `move_to_element()` doesn't work without any expected ## A pice of my code - ```python WebDriverWait(driver, 30).until(EC.presence_of_element_located((By.XPATH, ""//div[@class='geetest_item geetest_big_item']""))) item = driver.find_element_by_xpath(""//div[@class='geetest_item geetest_big_item']"") ActionChains(driver).move_to_element(item).perform() ``` i had try same code both with Firefox and Chrome.","closed","","Dashu-Xu","2018-04-19T14:10:39Z","2019-08-16T05:09:42Z"
"","5277","I am getting the following error with the latest images in selenium -firefox-debug .","Testing started at 2:52 μμ ... Codeception PHP Testing Framework v2.3.7 Powered by PHPUnit 6.4.4 by Sebastian Bergmann and contributors.    [RunProcess] Starting php ./vendor/bin/codecept clean  In WebDriverException.php line 114:                                                                                   Session [(null externalkey)] not available and is not among the last 1000 t     erminated sessions.                                                             Active sessions are[ext. key 82e9187e-c730-47a5-9b50-9df4f856c953]                                                                                             run [-o|--override OVERRIDE] [-e|--ext EXT] [--report] [--html [HTML]] [--xml [XML]] [--tap [TAP]] [--json [JSON]] [--colors] [--no-colors] [--silent] [--steps] [-d|--debug] [--coverage [COVERAGE]] [--coverage-html [COVERAGE-HTML]] [--coverage-xml [COVERAGE-XML]] [--coverage-text [COVERAGE-TEXT]] [--coverage-crap4j [COVERAGE-CRAP4J]] [--no-exit] [-g|--group GROUP] [-s|--skip SKIP] [-x|--skip-group SKIP-GROUP] [--env ENV] [-f|--fail-fast] [--no-rebuild] [--] [] []","closed","","annapetrai","2018-01-02T12:55:34Z","2019-08-16T18:09:51Z"
"","5669","Not able to allocate second instance of browser when one instance is running","System Set up : Windows OS version - 10 Selenium - 3.9.0 Selenium grid extras - 2.0.2 Firefox browser version - 58 (64 bit) Geckodriver - 0.19.1 (64 bit) Chrome - 64 (64 bit) Chromedriver - 2.33 (32 bit)   I am not able to create a second instance of browser, if any one browser is already allocated  Code used to create a remote browser instance is  ``` @driver = Selenium::WebDriver.for(:remote,                 :url => ""http://#{@hub}:#{@port}/wd/hub"",                 :desired_capabilities => browser_capabilities             ) ```   browser_capabities for firefox is:  ``` #""firefox"", :version=>"""", :platform=>:any, :javascript_enabled=>true, :css_selectors_enabled=>true, :takes_screenshot=>true, :native_events=>false, :rotatable=>false, :firefox_profile=>nil, :proxy=>nil, :marionette=>true, :acceptInsecureCerts=>true}> ```  When i run for first time for say edge browser, allocation happens and tests run. If I run test in firefox, i can see browser on node VM but it throws exception as  ``` ""Unable to create session from org.openqa.selenium.remote.NewSessionPayload@2e9d8f12\nBuild info: version: '3.9.0', revision: '698b3178f0', time: '2018-02-05T14:56:13.134Z'\nSystem info: host: 'DESKTOP-NN6EJ10', ip: 'xx.xxx.x.x', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_144'\nDriver info: driver.version: unknown"" [""[remote server] org.openqa.selenium.remote.server.NewSessionPipeline(NewSessionPipeline.java):75:in `lambda$null$4'"", ""[remote server] java.util.Optional():-1:in `orElseThrow'"", ""[remote server] org.openqa.selenium.remote.server.NewSessionPipeline(NewSessionPipeline.java):74:in `lambda$createNewSession$5'"", ""[remote server] java.util.Optional():-1:in `orElseGet'"", ""[remote server] org.openqa.selenium.remote.server.NewSessionPipeline(NewSessionPipeline.java):72:in `createNewSession'"", ""[remote server] org.openqa.selenium.remote.server.commandhandler.BeginSession(BeginSession.java):65:in `execute'"", ""[remote server] org.openqa.selenium.remote.server.WebDriverServlet(WebDriverServlet.java):242:in `lambda$handle$0'"", ""[remote server] java.util.concurrent.Executors$RunnableAdapter():-1:in `call'"", ""[remote server] java.util.concurrent.FutureTask():-1:in `run'"", ""[remote server] java.util.concurrent.ThreadPoolExecutor():-1:in `runWorker'"", ""[remote server] java.util.concurrent.ThreadPoolExecutor$Worker():-1:in `run'"", ""[remote server] java.lang.Thread():-1:in `run'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/response.rb:69:in `assert_ok'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/common.rb:81:in `new'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/common.rb:81:in `create_response'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/default.rb:104:in `request'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/bridge.rb:164:in `execute'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/bridge.rb:97:in `create_session'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/bridge.rb:53:in `handshake'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/driver.rb:37:in `initialize'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/common/driver.rb:56:in `new'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/common/driver.rb:56:in `for'"", ""/usr/share/rvm/gems/ruby-2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver.rb:84:in `for'"", ""/home/jenkins/bamboo-config/provo-agent01/ruby/lib/browser.rb:268:in `allocate'"", ""/home/jenkins/bamboo-config/provo-agent01/ruby/lib/browser.rb:19:in `initialize'"", ""./runtest.rb:85:in `new'"", ""./runtest.rb:85:in `block (3 levels) in '"", ""./runtest.rb:66:in `each'"", ""./runtest.rb:66:in `block (2 levels) in '"", ""./runtest.rb:46:in `each'"", ""./runtest.rb:46:in `block in '"", ""./runtest.rb:45:in `each'"", ""./runtest.rb:45:in `'""] ```  Let me know if firefox and geckodriver combination is correct or not.","closed","R-awaiting answer,","sanam1725","2018-03-23T13:43:38Z","2019-08-16T06:10:02Z"
"","4860","Chrome driver error ....... Needs to be ADDED to PATH ??","SYSTEM INFO :   ![screenshot from 2017-10-12 20-31-09](https://user-images.githubusercontent.com/30674228/31512776-6afe50c6-af8c-11e7-8087-c1a90f4cb95a.png)   ERROR :   ![screenshot from 2017-10-12 19-03-47](https://user-images.githubusercontent.com/30674228/31512799-77544b82-af8c-11e7-9619-14eac54c77c4.png)","closed","","LoneWolfsMoon","2017-10-12T18:32:49Z","2019-08-17T07:09:52Z"
"","5320","Optional support for XPath 2.0 in the Firefox driver","Support for XPath is limited to 1.0 in Firefox, and since Selenium uses the browser's XPath support by default, it means that we are also limited to that version. According to the following ticket, support will not be added in the near future:  https://bugzilla.mozilla.org/show_bug.cgi?id=396966  This means that we can't use more powerful xpath queries, such as regular expression matches (https://www.w3.org/TR/xpath-functions-31/#func-matches).  I suggest adding optional support for XPath 2.0 by loading a javascript implementation at page load. Perhaps we could use this one: https://github.com/ilinsky/jquery-xpath  Google's javascript library https://github.com/google/wicked-good-xpath is already the default XPath library for IE according to: https://github.com/SeleniumHQ/selenium/blob/5577c15ba08ce36ee18177d737aef97ed06dbc77/cpp/iedriverserver/CHANGELOG#L1494  However, if I'm not mistaken, that library doesn't support xpath 2.0, but xpath 1.0 level 3.  I'm willing to implement this myself if you think the feature makes sense.","closed","","withrocks","2018-01-10T10:51:18Z","2019-08-16T18:09:40Z"
"","5315","When passing both 'desiredCapabilities' and 'capabilities' in POST /session, prefer WD3 caps","Summary: =========== If a request, POST /session is made to the selenium server, and both WD3 and legacy capabilities are passed as the JSON POST parameter (looking, say like so): `{ desiredCapabilities:{...},capabilities:{...} }` It would be preferable to attempt to create a new WD3-style session rather than making a legacy selenese connection (current behavior).   The benefit of this change: ================ * Bindings don't have to make an expensive attempt to find out whether WD3 session creation is supported (by failing), and can instead pass harmless extra data which would be ignored both by WD3 and legacy selenium 2.x servers, but allows straightforward connections to be established on the first attempt.  Background: ============ Maintainer of perl bindings to selenium, Selenium-Remote-Driver here.  I'm implementing a compatibility layer so we can seamlessly use WD3 (mostly) the same as legacy selenium/WD.  It occurred to me that since there's no obvious way to tell whether a server supports WD3 methods other than trying to make a new WD3 session, it would be nice to not have to make a request that could possibly fail to find out.  Otherwise, once a session can be established it's simple enough to figure out whether we are WD3, given /session should return a capabilities object along with the status (legacy selenium only provided status); the binding can then chug along using whichever methods the server supports.  Not sure if this belongs here or downstream in the browser drivers; please advise if I should shop this to the browser vendors instead.","closed","R-awaiting answer,","teodesian","2018-01-10T00:14:45Z","2019-08-16T17:09:53Z"
"","5275","Link Click opens two new windows and does not load the new pages","Still facing issues with handling new window (whenever a link click -opens new window it opens up two windows on click event). Ideally it should open one window which is excepted scenario. But two windows are opened up one of them ends up in page not found(on checking URL it is found out that session id , cookies are not passed), the second one keeps on loading ,loading and does ends up in time out as (the session cookies is incorrect)  Code cannot be shared here due to privacy issues. But code is simple and the link to be clicked is in Iframe.  		driver1.findElements(By.tagName(""iframe"")).size(); 		driver1.switchTo().frame(0); 		driver1.findElement(By.xpath("""")).click();  Does anyone have any idea why the link click opens up two windows?  Also when I login with normal system IE.exe it works. But the same URL when hit through IE driver32bit even manually the click opens up two windows?","closed","D-IE,","Sonali2608","2017-12-31T13:42:10Z","2019-08-16T12:09:51Z"
"","5169","Unable to open firefox browser using geckdriver","Steps to Reproduce:- 1. Download all selenium Jars for selenium 3.8.0 2.use System.setProperty(""webdriver.gecko.driver"",""path of gecko exe files"");  3. WebDriver driver=new FirefoxDriver(); //not getting any option to import Firefox and throws a               compilation error.  **Actual Result:**- Firefox browser should be opened.  **Expected Result**:- Compilation error at step 3","closed","","Jayshree23","2017-12-05T11:00:48Z","2019-08-16T22:10:02Z"
"","5170","Unable to open Mozilla Firefox using Gecko driver","Steps to Reproduce:-      1.Download all selenium Jars for selenium 3.8.0     2.use System.setProperty(""webdriver.gecko.driver"",""path of gecko exe files"");     3.WebDriver driver=new FirefoxDriver(); //not getting any option to import Firefox and throws a    compilation error.  **Actual Result:**- Firefox browser should be opened.  **Expected Result**:- Compilation error at step 3","closed","","Jayshree23","2017-12-05T11:07:26Z","2019-08-16T22:10:01Z"
"","5254","Strongname issue in Selenium DotNET.","Steps to reproduce:  1. create an empty windows (or console) app. 2. download the strongnamed version of the selenium libraries (i've used 3.8.0 - net40) 3. reference all files in the project. 4. Try to identify a SelectElement anywhere in your project. You'll see errors like in the attachment bellow: ![selenium-error](https://user-images.githubusercontent.com/5826625/34319981-ae7fe5c8-e7f7-11e7-801e-338e22388302.png)  If you do the same but with the unsigned libraries, this issue is not happening. This also did not happen in 3.7.0 and earlier versions. Started happening since 3.7.1 This is because, as you can see, the SelectElement exists only in the unsigned one, and can't be referenced.  @jimevans - i already tried to speak about the same thing in ticket #5227 but you closed it believing that i was complaining about nupkg files (which is not true)","closed","C-dotnet,","sebionofrei","2017-12-23T13:45:34Z","2019-08-16T14:09:44Z"
"","5646","C# Bindings generating invalid W3C request.","Start request generated from the following code snippet (Using C# binding version 3.11.0) contains keys outside the W3C spec.  ```csharp  IWebDriver driver;  FirefoxOptions firefoxOptions = new FirefoxOptions();  DesiredCapabilities capability = (DesiredCapabilities)firefoxOptions.ToCapabilities();  capability.SetCapability(""browserstack.selenium_version"", ""3.10.1"");  capability.SetCapability(""version"", ""50"");   driver = new RemoteWebDriver(new Uri(""http://localhost:8082/wd/hub""), capability); ```  ## Expected Behavior - ``` {   ""desiredCapabilities"": {     ""browserName"": ""firefox"",     ""moz:firefoxOptions"": {     },     ""browserstack.selenium_version"": ""3.10.1"",     ""version"": ""50""   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""firefox"",         ""moz:firefoxOptions"": {         }       }     ]   } } ``` ## Actual Behavior - ``` {   ""desiredCapabilities"": {     ""browserName"": ""firefox"",     ""moz:firefoxOptions"": {     },     ""browserstack.selenium_version"": ""3.10.1"",     ""version"": ""50""   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""firefox"",         ""moz:firefoxOptions"": {         },         ""browserstack.selenium_version"": ""3.10.1""       }     ]   } } ``` `version` (and `platform`) do not get mapped into the W3C capabilities because they are being blacklisted here https://github.com/SeleniumHQ/selenium/blob/ebd897ad5142d81b020a3dff8e6d4d12d01339eb/dotnet/src/webdriver/Remote/RemoteWebDriver.cs#L1161.  Please correct me if I am missing something obvious. Thanks.","closed","","pulkitsharma07","2018-03-20T11:36:10Z","2019-08-16T09:09:52Z"
"","5088","command line server for the driver","start iedriver error:command line server for the driver  how to closed","closed","","jqs1124","2017-11-21T03:19:27Z","2019-08-17T01:09:52Z"
"","5314","Fix Exception being raised when error_payload does not include a value.","Sometimes the selenium server returns no value in a error_payload what makes an exception to be raised trying to chain another hash reference. This will test for existence of ['value'] key before the next hash reference to be used.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","mcking49","2018-01-09T23:09:48Z","2018-01-15T06:10:37Z"
"","5486","Adds handling of AltGr key to IEDriver","Some keyboards like swedish and german has an AltGr key that is equivalent to ALT + CTRL. The IEDriver did not have any code handling this key and therefore produced the wrong character when a key combination using that key was needed. So for example on Swedish keyboards a ""@"" symbol would be sent to the browser as a ""2"" as that is the value if AltGr is not pressed in combination with the character key.  Fixes #4523  - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","LightBit","2018-02-12T20:00:15Z","2018-02-15T07:15:41Z"
"","5562","Some error codes defined for Java client are not in sync with the actual W3C spec","Some error codes defined in [KNOWN_ERRORS](https://github.com/SeleniumHQ/selenium/blob/176b4a9e3082ac1926f2a436eb346760c37a5998/java/client/src/org/openqa/selenium/remote/ErrorCodes.java#L215) map are not in sync with the actual W3C spec at https://www.w3.org/TR/webdriver/#handling-errors  These codes are:  - `no such alert`: current: 404, expected: 400 - current: `invalid element selector`, expected: `invalid selector` - `no such frame`: current: 404, expected: 400 - `no such window`: current 404, expected: 400 - `stale element reference `: current: 404, expected: 400","closed","C-java,","mykola-mokhnach","2018-03-03T07:02:40Z","2019-08-16T11:09:55Z"
"","5780","OpenQA.Selenium.Internal.FileUtilities.CopyDirectory BUG ?","So this is the source code :  ` 		public static bool CopyDirectory(string sourceDirectory, string destinationDirectory) 		{ 			DirectoryInfo directoryInfo = new DirectoryInfo(sourceDirectory); 			DirectoryInfo directoryInfo2 = new DirectoryInfo(destinationDirectory); 			if (directoryInfo.Exists) 			{ 				if (!directoryInfo2.Exists) 				{ 					directoryInfo2.Create(); 				} 				foreach (FileInfo fileInfo in directoryInfo.GetFiles()) 				{ 					fileInfo.CopyTo(Path.Combine(directoryInfo2.FullName, fileInfo.Name)); 				} 				foreach (DirectoryInfo directoryInfo3 in directoryInfo.GetDirectories()) 				{ 					FileUtilities.CopyDirectory(directoryInfo3.FullName, Path.Combine(directoryInfo2.FullName, directoryInfo3.Name)); 				} 			} 			return true; 		} `  Calling profile.WriteToDisk() (where profile = FirefoxProfile()) should copy from %temp%\anonymous.4f674f34eace416bbe61b9ff8449a7bb.webdriver-profile to my profile dir path, witch is just an empty directory; so tring sourceDirectory should be %temp%\anonymous.4f674f34eace416bbe61b9ff8449a7bb.webdriver-profile and string destinationDirectory should be ""C:\seleniumFF\profiles\newProfileWithExtensions\"" but the values are swapped (source = destibation and destination = source). Every time I call profile.WriteToDisk() , nothing happens. This is my profile code :  `             OpenQA.Selenium.Firefox.FirefoxProfile profile = new OpenQA.Selenium.Firefox.FirefoxProfile(@""C:\seleniumFF\profiles\newProfileWithExtensions\"", false);             profile.AcceptUntrustedCertificates = true;             profile.AlwaysLoadNoFocusLibrary = true;             profile.SetPreference(""dom.ipc.plugins.enabled.libflashplayer.so"", false);             profile.AddExtension(@""....xpi"");             profile.AddExtension(@""....xpi"");             profile.AddExtension(@""....xpi"");             profile.AcceptUntrustedCertificates = true;             profile.WriteToDisk(); `","closed","C-dotnet,","Baker68","2018-04-15T18:12:05Z","2021-09-05T08:31:29Z"
"","5031","selenium.common.exceptions.WebDriverException: Message: chrome not reachable","Since the upgrade from selenium 3.6.0 to 3.7.0 the chrome driver does not work anymore: ```     self.driver = webdriver.Chrome('/usr/lib/chromium/chromedriver', chrome_options=chrome_options)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/chrome/webdriver.py"", line 69, in __init__     desired_capabilities=desired_capabilities)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 151, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 240, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 308, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: chrome not reachable   (Driver info: chromedriver=2.25 (undefined),platform=Linux 4.9.0-ucs103-amd64 x86_64) ```  Chromium + chromedriver 56.0.2924.76-1~deb8u1","closed","","spaceone","2017-11-08T12:08:15Z","2019-08-17T03:09:55Z"
"","5752","Marking .NET PageFactory obsolete - only PageFactory class was marked","Since the decision to remove the PageFactory support from the C# bindings explained [here](http://jimevansmusic.blogspot.co.il/2018/03/deprecating-parts-of-seleniums-net.html) need to mark many classes as obsolete, that the users will know about it and make their preparations/considerations for the removal.   Currently, only PageFactory class was marked as Obsolete, but many users still don't aware of this change.    All the classes inside the OpenQA.Selenium.Support.PageObjects namespace should also have that attribute since they will also be removed.  For example:    - ByAll.cs - ByChained.cs - ByFactory.cs - ByIdOrName.cs - CacheLookupAttribute.cs - DefaultElementLocator.cs - DefaultPageObjectMemberDecorator.cs - FindsByAllAttribute.cs - **FindsByAttribute.cs** - FindsBySequenceAttribute.cs - **How.cs** - IElementLocator.cs - IPageObjectMemberDecorator.cs - **PageFactory.cs** - RetryingElementLocator.cs - WebDriverObjectProxy.cs - WebElementListProxy.cs - WebElementProxy.cs  _Bold are the most commonly used classes_  See: https://github.com/SeleniumHQ/selenium/tree/master/dotnet/src/support/PageObjects","closed","C-dotnet,","LirazShay","2018-04-10T11:39:30Z","2019-01-05T02:07:18Z"
"","5352","How do you write short-hand syntax of By.js?","Shorthand syntax is provided for locator in Node Selenium-webdriver.  like `By.partialLinkText('hogehoge')` to `{partialLinkText: 'hogehoge'}`  How do you write short-hand syntax of `By.js`?  ```js By.js(el => el.closest('.foo'), driver.findElement({id: 'bar'})) ```  to  ```js {js: ????} ```  Please tell me how to do it.","closed","C-docs,","NakajimaTakuya","2018-01-18T02:43:56Z","2021-09-05T10:02:42Z"
"","5225","Not able to click elements which are present down [bottom] the page and not visible until i scroll down.","Setup :  selenium = 3.4.0  (pip installer) gecko driver = 0.19 chrome driver = 2.33 Firefox browser = 57.0 chrome  browser = 63   Issue :    I have a page, and there is a button on this page. when this button is clicked, it opens a window/dialog, which have couple of other elements like text fields, radio box, select box etc. Problem is, im not able to click elements which are not visible right now.  I mean these elements are present in that window but i can see them only when i scroll down.  I have simple code which click this :           form2.pol_sched_combobox.click()         form2.pol_sched_combobox.select('Weekly')  This happens only for Firefox browser. This works fine for Chrome.  Error it displays is :   StaleElementReferenceException: Message: The element reference of  stale: either the element is no longer attached to the DOM or the page has been refreshed  Although page is not refreshed. i can see element is present if i scroll down.  Note : If i manually scroll down before script reaches these elements, then script is able to identify and click elements.  so im very clear that issue is elements are not visible to script because they are present at lower botton of the page.   This is the issue im getting after i did the upgrade to latest driver and selenium. This used to work fine when i have selenium 2.53.1 and firefox 46.  what is the solution for this?","closed","R-awaiting answer,","bhaveshsharma","2017-12-15T06:26:20Z","2019-08-15T05:09:54Z"
"","5007","Can't change Firefox preferences by serenity.properties","serenity-core 1.6.0, selenium-java 3.5.3, geckodriver 0.19.0 FF 56.0.2 (64)  I am trying changed FF preferences with serenity.properties: `firefox.preferences=""browser.download.dir=C:\\temp;browser.helperApps.alwaysAsk.force=false;browser.download.manager.showWhenStarting=false;browser.download.useDownloadDir=true;browser.download.folderList=2;""`  But it doesn't work. In about:config I see deafult values for this preferences.   Also get this entries in output  `main] INFO net.serenitybdd.core.Serenity - TEST NUMBER: 1 Separator = ; arg = browser.download.dir=C:\temp\ arg = browser.helperApps.alwaysAsk.force=false arg = browser.download.manager.showWhenStarting=false arg = browser.download.useDownloadDir=true arg = browser.download.folderList=2 arg = browser.helperApps.neverAsk.saveToDisk=text/html`","closed","","vivregenek","2017-11-03T12:09:15Z","2019-08-17T04:09:42Z"
"","4878","Selenium 3.6.0 / IE 11 / Windows 10 32 and 64bit","Selenium: 3.6.0 OS: Windows 10, using 64bit and 32bit one in different virtual machine Driver: IEWebserver, 32bit and/or 64bit  Started like this: java -Dwebdriver.ie.driver=""C:\selenium\IEDriverServer.exe"" -jar c:\selenium\selenium-server-standalone-3.6.0.jar -role node -hub http://123.456.789.012:4444/grid/register -port 5588 -browser ""browserName=internet explorer,version=11,platform=WINDOWS,maxInstances=10"" (IP is correct in real of course)  Enhanced Security is set on all zones, also the registry-entry is set  Problem: Using the 64bit driver, sendkeys is extremly slow, also the ""@"" is written as an ""q"". Using the 32bit driver, sendkeys works fast, but characters are missmatched, missing or not fully populated.  I also tried with requireWindowFocus or NativeEvents false or true, no changes.  I do not have any idea left to have sendkeys working :(  I also tried with Selenium 3.5.2 (including concurrent driver) - no way :(.","closed","","rgoerner","2017-10-16T09:44:57Z","2019-08-17T07:09:44Z"
"","5261","IEDriverserver close automatically","Selenium with IE (latest version) working when run in .Net. But if run the same exe on other machine driver window close first and the load url in IE and rest of the process stop working.  Path of IEDriverserver is specified in the selenium. I have also tried tools->Security->enable protected mode for Inernet/Local Intranet/Trusted Sites/Restricted sites, still getting same issue. Please help. On the same machine where this issue getting when run the exe from Visual Studio its working fine, but not working when exe run separately without visual studio.","closed","","patelrais","2017-12-26T08:40:08Z","2019-08-16T19:09:43Z"
"","5349","WebDriverServlet use fixed timeout (10min) to proxy commands instead of value defined by browserTimeout","Selenium Versions:   * all versions with passthrough mode handler,  * 3.8.1+  ## Expected Behavior -   **WebDriverServlet** should use timeout defined by `browserTimeout` parameter  to safe guard your from frozen driver/browser (when it proxy command to particular driver). See  [here](https://github.com/SeleniumHQ/selenium/blob/6e95a6684bb3b7c393449ec6959f339530783b8e/java/server/src/org/openqa/selenium/remote/server/DriverServlet.java#L274) for identical implementation but in the class  org.openqa.selenium.remote.server.DriverServlet.java  (currently removed in 65f74252e5)  ## Actual Behavior -   Fixed timeout is used: [10 minutes](https://github.com/SeleniumHQ/selenium/blob/1e1af07c30c9cda7db2490fb50e282ee59b0c092/java/server/src/org/openqa/selenium/remote/server/WebDriverServlet.java#L255).  ## Additional info -   Currently (in the master branch) **the only** usage of `browserTimeout` parameter is to calculate  timeout for GridHttpClient (at hub side), it's value is based on `browserTimeout `, see [here](https://github.com/SeleniumHQ/selenium/blob/1e1af07c30c9cda7db2490fb50e282ee59b0c092/java/server/src/org/openqa/grid/internal/TestSession.java#L212). This calculation assume that execution time on node is limited by browserTimeout which is wrong for current implementation. This lead to  different behavior (and different exception provided to client side)  when browser hangs. See table below for example:   | browserTimeout | actual timeout (session kill): | who kills | |:----------------------:|:-------------------------:|------------| |  60 sec                      |  ~134                            | hub| |  270  sec                   |  ~596 sec                      | hub| |  300 sec                    | 600 sec (10 min)            | node| |  600 sec                    | 600 sec (10 min)           | node| |  1000000                  | 600 sec (10 min)           | node|","closed","C-grid,","kool79","2018-01-17T14:58:51Z","2019-08-15T11:09:59Z"
"","5540","Fire Fox profile -  Preference browser.link.open_newwindow may not be overridden: frozen value=2, requested value=3","Selenium Version:  3.9.1  Browser:  Fire Fox   Browser Version:  52   ## Expected Behavior - Hi,  I am trying to load new firefox profile using selenium. I need it for adding firefox extension which is working fine for me. Now second change I  want is open all links in new tab instead of new window. But when I use this profile its opening in new window. I tried to change this using firefox options and profile as well but both are failing with below error -   Exception in thread ""main"" java.lang.IllegalArgumentException: Preference browser.link.open_newwindow may not be overridden: frozen value=2, requested value=3  here is my code -                   FirefoxProfile profile = new FirefoxProfile(); 		FirefoxOptions options = new FirefoxOptions(); 		DesiredCapabilities capabilitiesDefault = DesiredCapabilities.firefox(); 		// capabilitiesDefault.setCapability(CapabilityType.ACCEPT_SSL_CERTS, 		// true); 		// capabilitiesDefault.setCapability(""marionette"", true); 		capabilitiesDefault.setCapability(FirefoxDriver.PROFILE, profile); 		capabilitiesDefault.setCapability(FirefoxOptions.FIREFOX_OPTIONS, 				options.addPreference(""browser.link.open_newwindow"", 3)); 		// driver = new FirefoxDriver(options);  		driver = new FirefoxDriver(capabilitiesDefault);   interestingly when I comment out the profile code its working fine. That means issue is with creating new profile (or changing the setting for the links). ## Steps to reproduce -","closed","","AreAllNamesTakenAlready","2018-02-26T10:46:57Z","2019-10-02T10:10:19Z"
"","4843","Drivers should throw ""invalid argument"" error on an attempt to click file input","Selenium leaves control after clicking to file explorer Browse button in MS Edge. This works fine in Chrome and Firefox but absolutely blocking to run next step in the code.  I tried code via all possible ways and below code works to click  to Browse button but after this step selenium leaves control because  file explorer window opens. Is this Selenium or MS Edge driver issue?   **Environment:**     Selenium version - Latest 3.6.0     Browser - MS Edge     MS Edge Driver - Latest Release 15063     Application type - Ajax web  **Steps:**     1. Open ajax web application through MS Edge (works)     2. Click to browse button through web driver core or java script method (works)     3. Selenium gone, leaves control till we close file explorer button (doesn't work) - this works fine in GC and FF.     **4 (Blocked).** Send key to type file name or implement AutoIt script (works)     **5 (Blocked).** Click to open button via AutoIt script (works)     **6 (Blocked).** File attached fine (works)  **Working code:**     driver.findElement(By.id(""browseID"")).click(); And     WebElement we = null; ((JavascriptExecutor)ClientSessionFactory.session().webDriver()).executeScript(""document.getElementsByName('browseName')[0].click()"", we);  ![selenium or ms edge leaves control](https://user-images.githubusercontent.com/21263826/31393157-b42900ba-adf8-11e7-98ee-4755d8873865.png)  This is actually blocking attachment functionality and it would be great if selenium will fix this. So far i just see Autoit is the solution as a 3rd party software but it is very tedious to add separate scripts for every browse buttons in the application, any code by selenium blocks due to OS dialog appearance. Anyone faced this issue?","closed","D-chrome,","jiteshsojitra","2017-10-10T14:52:38Z","2021-09-05T08:21:39Z"
"","4868","selenium IDE record and play button isnt responding","selenium IDE record and play button isnt responding  ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","LanreTester","2017-10-14T09:36:07Z","2019-08-17T07:09:50Z"
"","5386","JS Selenium Webdriver Mocha JavaScript: How do I call one function within another one","SELENIUM DOESN'T EVEN RUN IF I CALL A getDisplayedResults FUNCTION WITHIN DoSmtFunct. BUT IF I CALL THEM INDEPENDENTLY -- ALL WORKS FINE  ``` var page = require('./page'); var link = 'https://www.google.com/';  function GoogleResultsPage (webdriver) {   page.call(this, webdriver, link); }  GoogleResultsPage.prototype = Object.create(page.prototype); GoogleResultsPage.prototype.constructor = GoogleResultsPage;  GoogleResultsPage.prototype.getDisplayedResults = function() {   return this.driver.findElements({ css: 'div.g' }); };  GoogleResultsPage.prototype.DoSmtFunct = function() {  GoogleResultsPage.prototype.getDisplayedResults()  this.driver.findElement(By.id('search')).click() }; module.exports = GoogleResultsPage;  ```","closed","","mtttester23","2018-01-23T14:49:23Z","2019-08-16T15:09:54Z"
"","5355","Getting exception in Safari when clicked on html button : OpenQA.Selenium.ElementNotVisibleException: An element command could not be completed because the element is not visible on the page.","Safari Browser version : 11.0.3 Let me know if more details required.","closed","","sachinyadav15","2018-01-18T06:07:39Z","2019-08-15T08:09:46Z"
"","5356","Element Visible property is not getting correctly evaluated in Safari. It always shows false.","Safari browser version : 11.0.3","closed","","sachinyadav15","2018-01-18T07:21:59Z","2019-08-16T17:09:44Z"
"","4912","Ruby Remote Error Handling","Replacement for #4383 as my repo was a bit funky.  Pulled error codes from remote/ErrorCodes.java so that Ruby can handle them appropriately when seen.  Fixes #4380  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","mxygem","2017-10-19T14:40:39Z","2017-10-23T15:43:18Z"
"","5180","Release on element","Releasing a held mouse button on an element  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","xaircore","2017-12-06T15:29:21Z","2017-12-14T00:58:31Z"
"","5123","JAVA-Selenium Microsoft Edge Code Breaks with -1073741512(ExitCode) Error","Problem - Microsoft Edge browser is not launched via Selenium  Command - (JAVA) System.setProperty(""webdriver.edge.driver"",""C:\\\\Marionette\\MicrosoftWebDriver.exe""); 		WebDriver driver5 = new EdgeDriver();  Error Observed in Eclipse IDE- SEVERE: org.apache.commons.exec.ExecuteException: Process exited with an error: -1073741512 (Exit value: -1073741512) Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:26.402Z' System info: host: 'ADMIN-PC', ip: '192.168.1.7', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_151' Driver info: driver.version: EdgeDriver at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:192) at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:178) at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:217) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:140) at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:150) at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:139) at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:96) at packageFF.browserAutomation.main(browserAutomation.java:40) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:14371/status] to be available after 20002 ms at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:187) ... 9 more Caused by: java.util.concurrent.TimeoutException at java.util.concurrent.FutureTask.get(Unknown Source) at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:147) at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) ... 10 more","closed","D-edge,","SudeeptMohan","2017-11-26T12:24:24Z","2019-08-16T21:09:46Z"
"","5307","Fix and actualize  SafariOptions class (java)","Please remove fields/capabilities from SafariOptions class: * `cleanSession`: This property is migrated from old safaridriver by selenium, but it was never used by Apple's safaridriver (Safari always creates clean session). Because current version does not support deprecated driver this capability should be removed.   * `port` : this deprecated field is not exposed to user and cause the issue #5020 which maked SafaryOption unusable (in grid environment)   Add new capabilities which are [supported by safaridriver](https://webkit.org/blog/6900/webdriver-support-in-safari-10/) * `automaticInspection` * `automaticProfiling`","closed","C-java,","kool79","2018-01-09T07:26:56Z","2019-08-15T18:10:03Z"
"","5815","Make DriverService.Builder.usingDriverExecutable accept InputStream","Please implement usingDriverExecutable(InputStream is) in addition to usingDriverExecutable(File file)  When driver executable is as resource inside JAR  then there are problems, because inside jars resources are streams.   Preferred way: `ChromeDriverService.Builder().usingDriverExecutable(getClass().getResourceAsStream(""/chromedriver.exe"")).build()`","closed","I-enhancement,","eldaragalarov","2018-04-22T09:08:14Z","2019-08-15T20:09:51Z"
"","5146","ChromeDriver 2.32.498513 (2c63aa53b2c658de596ed550eb5267ec5967b351) on port 6700 Only local connections are allowed.","Platform:   Linux 4.4.51-40.58.amzn1.x86_64 x86_64  Selenium Version:  3.6.0  Browser:   Chrome  Getting below exception when I run jenkins job : ChromeDriver 2.32.498513 (2c63aa53b2c658de596ed550eb5267ec5967b351) on port 6700 Only local connections are allowed. src/main/resources/driver/chromedriver: /lib64/libdbus-1.so.3: no version information available (required by /lib64/libdbus-glib-1.so.2)  Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited abnormally   (Driver info: chromedriver=2.32.498513 (2c63aa53b2c658de596ed550eb5267ec5967b351),platform=Linux 4.4.51-40.58.amzn1.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 60.06 seconds Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z' System info: host: 'ip-10-0-3-150', ip: '10.0.3.150', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.51-40.58.amzn1.x86_64', java.version: '1.8.0_121' Driver info: driver.version: ChromeDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:217) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:140) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123)","closed","","sapins","2017-11-30T06:01:47Z","2019-08-17T00:09:42Z"
"","5794","IEDriver cannot capture whole browser content in high DPI","OS:Windows 10 Browser:IE11 Driver: 3.11 IEDriver: 3.11 my laptop resolution is 1920x1080. according to the DPI, the recommended scaling is 150%. when I tried to get screenshot, the screenshot size is  1280x720(left-top part of the whole screen). even I set the window size with other values, the limitation is 1280x720(after set the driver in fullscreen and get screenshot). but this problem never appear in chrome. is there any solution for IE in high DPI environment?","closed","D-IE,","shaka0919","2018-04-18T09:23:36Z","2019-08-16T05:09:40Z"
"","5100","Error forwarding the new session cannot find","OS:Mac Browser:Safari Version 11.0.1 (12604.3.5.1.1)  Have following error org.openqa.selenium.WebDriverException: Error forwarding the new session cannot find : Capabilities [{browserName=safari, version=, platform=MAC}]  Stack Trace  at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$22(ProtocolHandshake.java:365) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:368) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:159) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:250) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:236) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:137) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:174) 	at basetest.DriverFactory.getRemoteDriver(DriverFactory.java:136) 	at basetest.DriverFactory.createInstance(DriverFactory.java:60) 	at basetest.BaseTest.setUp(BaseTest.java:62) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 	at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.WebDriverException: Error forwarding the new session cannot find : Capabilities [{browserName=safari, version=, platform=MAC}] Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'Mayurs-MacBook-Pro.local', ip: '10.0.1.86', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_121' Driver info: driver.version: unknown 	at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:112) 	at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83) 	at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:841) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:543) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1584) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1228) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:481) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1553) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1130) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:564) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:320) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:251) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:112) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:672) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:590) 	... 1 more   Test ignored.","closed","R-awaiting answer,","karnikmg","2017-11-22T10:51:23Z","2019-08-17T00:09:51Z"
"","4936","window.open returns null when invoked via Selenium","OS: Windows 7 Enterprise Selenium Version:  2.53.1 Browser:  Internet Explorer 11  The following code inside a function runs on clicking a button. When invoked via Selenium, it fails - the window handle returned is null. This runs fine when invoked with a manual  @click.  ``` 		// open a new window and set it as the target of the form submission 		win = window.open(""/BlankWithIndicator.jsp"", ""dynamicSortWindowName"", ""width=450,height=325,left=575,top=191""); 		win.focus(); 		 ```  win variable has null from window.open(...) call and then fails on the next line win.focus()  I am invoking the function containing these lines via click of a button using  ` myWebDriver.findElement(By.id(""openAdvancedSortButton"")).click(); `  The javascript code above is a 3rd party code and so we cannot change the window.open(...) line to something else, any suggestions on what else can be done.   We even tried using the JavascriptExecutor approach as well to directly call the JavaScript method instead of via click of a button and that failed too.","closed","R-awaiting answer,","lalitrnagpal","2017-10-24T07:39:12Z","2019-08-17T03:09:45Z"
"","5639","Selenium gives error Unable to locate element on closed window: IE 11","OS: Windows 7 Selenium Version: 3.4.0 and IDE : Visual Studio Code Browser: IE 11 Technology: Javascript Browser Version: 11  Selenium Javascript test fails to execute on Internet Explorer giving error: Unable to locate element on closed window  Error: Unable to locate element on closed window.  This works absolutely fine on chrome version, but fails on IE.","closed","D-IE,","nkulkarni8","2018-03-19T07:32:37Z","2019-08-16T07:09:43Z"
"","4933","IEDriver 3.6.0 : throw the exception on the line of driver.Manage().Window.Size","OS: Windows 7 Selenium Version: Selenium.WebDriver 3.6.0 Selenium.WebDriver.IEDriver 3.6.0 IE Version: 11.0.9600.18792  I upgrade the latest Selenium Web driver and IE driver. However, in C#, the following code throws the exception on this line **driver.Manage().Window.Size;**   **Size driverSize = new Size();  driverSize = driver.Manage().Window.Size;  int width = driverSize.Width;**  The error message is :  An exception of type 'OpenQA.Selenium.NoSuchWindowException' occurred in WebDriver.dll but was not handled in user code Additional information: Error retrieving window  Any idea?  Thanks, Ray","closed","D-IE,","toraylin","2017-10-23T21:07:25Z","2019-08-14T05:09:35Z"
"","5328","Copy paste not working using Robot Class: Ctrl+C; content is not saving into clipboard, but it used to work perfectly fine few days back","OS: Windows 10 Selenium Version: 3.5.3; WebDriver Browser: NA; Trying to copy text from outlook/Any file using Robot class and its features; Basically we can open outlook using Sikuli or Winnium; here problem is about Robot class and its features that ""Using Robot class i have copied content during run time BCDE and trying to retrieve it from clipboard to print again in console or any other file. But it's fetching old value from the clip board? but it used to work perfectly fine few days back. Expected Output is: BCDE""  its copying text and not storing text into clipboard using robot class Key Events, but it used to working fine previously  robot.keyPress(KeyEvent.VK_SHIFT); robot.keyPress(KeyEvent.VK_RIGHT); robot.keyPress(KeyEvent.VK_SHIFT); robot.keyPress(KeyEvent.VK_RIGHT); robot.keyPress(KeyEvent.VK_SHIFT); robot.keyPress(KeyEvent.VK_RIGHT); robot.keyPress(KeyEvent.VK_SHIFT); robot.keyPress(KeyEvent.VK_RIGHT);  Thread.sleep(2000); robot.keyRelease(KeyEvent.VK_RIGHT); robot.keyRelease(KeyEvent.VK_SHIFT); Thread.sleep(2000); robot.keyPress(KeyEvent.VK_CONTROL); robot.keyPress(KeyEvent.VK_C); Thread.sleep(2000); robot.keyRelease(KeyEvent.VK_CONTROL); robot.keyRelease(KeyEvent.VK_C); Thread.sleep(2000); robot.keyPress(KeyEvent.VK_RIGHT); robot.keyRelease(KeyEvent.VK_RIGHT);  String str=(String)Toolkit.getDefaultToolkit().getSystemClipboard().getData(DataFlavor.stringFlavor);  **Console**:  Exception in thread ""main"" java.awt.datatransfer.UnsupportedFlavorException: Unicode String at sun.awt.datatransfer.SunClipboard.getData(Unknown Source)","closed","","praveenreddygm","2018-01-11T15:06:59Z","2019-08-16T17:10:04Z"
"","4898","IE Webdriver: Multiple Instances not working / possible","OS: Windows 10 Selenium 3.6.0, 64bit Webdriver for IE 11  Also, maxInstances=10 and MaxSessions=10 are set, only max 2 concurrent IE seems to be in use.  Is this a normal behaviour, restriction, or did I miss something? Thank you :)","closed","","rgoerner","2017-10-18T10:55:46Z","2019-08-17T07:09:40Z"
"","5298","FirefoxOptions AddArgument(s) C# remove throw Exception","OS: Win 10 64  Selenium Version: 3.8.0, WebDriver, C#, GeckoDriver Browser: Firefox  Visual Studio 2017 Pro  npm installed in project: Selenium.Support Selenium.WebDriver Selenium.WebDriver.ChromeDriver Selenium.WebDriver.GeckoDriver.Win64 Selenium.WebDriver.IEDriver Selenium.WebDriverBackedSelenium  Browser Version: Name: Firefox Version.: 57.0.3 Build-ID: 20171226083017 (64-bit) User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0  ## Expected Behavior - AddArgument(s) should add command line arguments for starting firefox  ## Actual Behavior - AddArgument(s) will throw ""All arguments must start with two dashes ('--')""  ## Steps to reproduce - ```AddArguments(""-profile"",""your_path_to_profile"");```  This would be correct usage for creating a firefox instance with arguments after documentation on https://developer.mozilla.org/en-US/docs/Mozilla/Command_Line_Options Selenium will not allow you to do it correctly and throw the stated error. The error is coded in FirefoxOptions.cs . In JAVA version of Webdriver this is not coded or thrown, i guess the error should be removed in cs code. Line 186-192 in https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Firefox/FirefoxOptions.cs  I don't get the sense of throwing this error as it will prevent correct usage.","closed","D-firefox,","HthSolid","2018-01-07T12:29:59Z","2019-08-16T16:09:36Z"
"","5382","Issues with Rendering Pages via localhost vs. Remote Web Sites","OS: Ubuntu 17.10  Selenium Version: 3.8.1  Browser: Chrome  Browser Version: 63.0.3239.132  Expected Behavior - For JavaScript libraries such as a JavaScript PDF viewer to exhibit the same behavior if served from a localhost web server vs. remote web sites using a FQDN.  Actual Behavior - Using a JavaScript library, PDFs on remote websites can be viewed with snapshots taken using the Xvfb virtual framebuffer. However, when running that exact same JavaScript library on localhost:8888 to view and then snapshot locally stored PDFs, no PDF content is rendered using either Xvfb or Headless Chrome.  Steps to reproduce -  This works as expected:  ``` import time from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.common.exceptions import TimeoutException from pyvirtualdisplay import Display  display = Display(visible=0, size=(800, 600)) display.start()  chromeOptions = webdriver.ChromeOptions() #chromeOptions.add_argument(""headless"")  driver = webdriver.Chrome(chrome_options=chromeOptions) driver.get(""https://mozilla.github.io/pdf.js/web/viewer.html"")  timeout = 5  try:     element_present = EC.presence_of_element_located((By.CLASS_NAME, 'dropdownToolbarButton'))     WebDriverWait(driver, timeout).until(element_present) except TimeoutException:     print ""Timed out waiting for page to load""  time.sleep(5) driver.get_screenshot_as_file('screenshot.png') driver.quit() ```  This does not, even though the only difference is a web server running on localhost:  ``` import time from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.common.exceptions import TimeoutException from pyvirtualdisplay import Display  display = Display(visible=0, size=(800, 600)) display.start()  chromeOptions = webdriver.ChromeOptions() #chromeOptions.add_argument(""headless"")  driver = webdriver.Chrome(chrome_options=chromeOptions) driver.get(""http://localhost:8888/web/viewer.html?file=%2Ftest%2Fpdfs%2F1.pdf#search=JavaScript"")  timeout = 5  try:     element_present = EC.presence_of_element_located((By.CLASS_NAME, 'dropdownToolbarButton'))     WebDriverWait(driver, timeout).until(element_present) except TimeoutException:     print ""Timed out waiting for page to load""  time.sleep(5) driver.get_screenshot_as_file('screenshot.png') driver.quit() ``` There is a five second delay loop right above the screenshot to make sure there is enough time for the PDF to be rendered in both contexts, but nothing is rendered via localhost for some reason.  Are there any debugging options I can enable to trace through what's happening?","closed","R-awaiting answer,","thiscantbetaken","2018-01-22T16:32:46Z","2019-08-16T16:09:38Z"
"","4944","Can't run Firefox with Selenium Grid 3.6 implicit_wait did not match a known command","OS: OSX 10.12.5 Selenium Version: 3.3.1 Browser: Firefox 56 selenium-server-standalone: 3.6.0 Python 2.7.13 geckodriver 0.19.0  Hello everyone. I can't run firefox with selenium grid.  Python webdriver setup code:  `` driver = webdriver.Remote(     command_executor=""http://localhost:4444/wd/hub"",     desired_capabilities={         ""browserName"": ""firefox"",         ""marionette"": ""true"",        ""javascriptEnabled"": True, }) `` This is the traceback i get:  ``` Traceback (most recent call last):   File ""main_fb_user.py"", line 504, in      callback(message)   File ""main_fb_user.py"", line 334, in callback     wait_fb_login(browser)   File ""/Users/eugenio/hoopygang/crawler_stage_fb/py_fb_crawler/selenium_utils.py"", line 47, in wait_fb_login     browser.implicitly_wait(3)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 694, in implicitly_wait     'ms': float(time_to_wait) * 1000})   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 238, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 193, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: POST /session/bfe672e0-a5cd-834b-b47b-f01baa195699/timeouts/implicit_wait did not match a known command Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'MBP.station', ip: 'fe80:0:0:0:1068:d7a:cca3:e867%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.5', java.version: '9' ```","closed","C-py,","eugeniominissale","2017-10-24T22:33:49Z","2019-08-17T03:09:47Z"
"","5816","[Mac OS][C#]FireFox Driver Set Capability and ServiceName same time","OS: OS X Selenium Version: 3.11.2 Browser: FireFox 59   Hi there,  Im trying to use both capability and service name but there is no relavant constructor which takes both. Please advise  ` FirefoxDriverService driverService = FirefoxDriverService.CreateDefaultService(""/Volumes/BOOTCAMP"");  DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.SetCapability(CapabilityType.AcceptInsecureCertificates, true);  new FirefoxDriver(driverService, capabilities);		      `","closed","D-firefox,","kenofori","2018-04-22T12:05:16Z","2020-06-24T23:28:16Z"
"","4964","Cannot define class using Reflection","OS: Linux Ubuntu 16.04 Selenium Version:  2.52.0  Browser:  Chrome  Browser Version:  Version 61.0.3163.91  I'm running Selenium tests from jenkins on a linux machine. When running the tests I'm having this: `ERROR: Cannot define class using reflection` with no other details","closed","C-java,","AffolabyPI","2017-10-26T16:07:49Z","2019-08-16T14:09:47Z"
"","4921","how to catch ENETUNREACH error when network disconnect","OS:  Windows10 Selenium Version:  3.6.0 Browser:  PhantomJS Browser Version:  2.1.1  selenium throw an error when  the network disconnect, how to catch this error? ``` Error: ENETUNREACH connect ENETUNREACH 10.211.55.9:60706     at ClientRequest. (c:\spider\node_modules\selenium-webdriver\http\index.js:238:15)     at emitOne (events.js:115:13)     at ClientRequest.emit (events.js:210:7)     at Socket.socketErrorListener (_http_client.js:401:9)     at emitOne (events.js:115:13)     at Socket.emit (events.js:210:7)     at emitErrorNT (internal/streams/destroy.js:64:8)     at _combinedTickCallback (internal/process/next_tick.js:138:11)     at process._tickCallback (internal/process/next_tick.js:180:9) From: Task: WebDriver.navigate().to(https://www.baidu.com)     at thenableWebDriverProxy.schedule (c:\spider\node_modules\selenium-webdriver\lib\webdriver.js:807:17)  ```","closed","","jokyme","2017-10-21T01:19:08Z","2019-08-17T06:09:51Z"
"","5238","WebDriverException: Message: {""errorMessage"":""undefined is not an object (evaluating '(C(a)?xb(C(a)):window) ...","OS:  Windows Server 2008 R2, Windows 7, Windows 10 Selenium Version:  3.8.0 Browser:  Chrome 63.0.3239.108, chromedriver.exe 2.34, phantomjs.exe 2.1.1  I have a script I run every 15 minutes Monday to Friday 8am to 6pm. For the most part it runs fine, except without fail every Monday I get the following as error messages until I login to the machine and restart the script.  There are no chromedriver or phantomjs running in the background when this happens. I always browser.quit() at the end of the scripts execution. I have hundreds of these error messages logged and the one commonality between them all is its always the first interaction with the browser thats failing (aside from loading the page).  The following code uses chromedriver:  > elem = browser.find_element_by_id('username') > elem.send_keys('')  Results in:  > WebDriverException: Message: {""errorMessage"":""undefined is not an object (evaluating '(C(a)?xb(C(a)):window).getComputedStyle(a,null).MozTransform.match')"",""request"":{""headers"":{""Accept"":""application/json"",""Accept-Encoding"":""identity"",""Connection"":""close"",""Content-Length"":""164"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""127.0.0.1:64021"",""User-Agent"":""Python http auth""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""value\"": [\""\""], \""sessionId\"": \""f922dc20-d3a7-11e7-9d9d-c7b35afd707f\"", \""text\"": \""\"", \""id\"": \"":wdc:1511810417933\""}"",""url"":""/value"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""value"",""directory"":""/"",""path"":""/value"",""relative"":""/value"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/value"",""queryKey"":{},""chunks"":[""value""]},""urlOriginal"":""/session/f922dc20-d3a7-11e7-9d9d-c7b35afd707f/element/:wdc:1511810417933/value""}} Screenshot: available via screen  The following code uses phantomjs:  > WebDriverWait(browser, 30).until(expected_conditions.visibility_of_element_located((By.ID, 'username')))  Results in:  > Message: {""errorMessage"":""undefined is not an object (evaluating '(y(a)?y(a).parentWindow||y(a).defaultView:window).getComputedStyle(a,null).MozTransform.match')"",""request"":{""headers"":{""Accept"":""application/json"",""Accept-Encoding"":""identity"",""Connection"":""close"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""127.0.0.1:56004"",""User-Agent"":""Python http auth""},""httpVersion"":""1.1"",""method"":""GET"",""url"":""/displayed"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""displayed"",""directory"":""/"",""path"":""/displayed"",""relative"":""/displayed"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/displayed"",""queryKey"":{},""chunks"":[""displayed""]},""urlOriginal"":""/session/b350f3a0-d8fa-11e7-a47f-2fc5f228f53f/element/:wdc:1512395704093/displayed""}} Screenshot: available via screen","closed","","iarp","2017-12-20T16:04:40Z","2019-08-16T19:09:57Z"
"","5620","browser.switchToframe() fails to switch focus to different iframes in Firefox 45","OS:  Windows 7 Selenium Version:  3.4.0 and IDE : Visual Studio Code Browser:  Firefox Technology: Javascript Browser Version:  45.0  Selenium Javascript test fails to execute on Firefox when you switch to Frame.  Error: WebDriverError: Permission Denied to access property ""__eventWrappers1521111203607""  This works absolutely fine on chrome version, only fails on Firefox.","closed","D-firefox,","nkulkarni8","2018-03-15T12:12:27Z","2019-08-14T14:09:35Z"
"","5012","selenium-java-3.7.0.jar is missing http-core jar which is resulting in error java.lang.NoClassDefFoundError: org/apache/http/config/RegistryBuilder","OS:  Windows 10 Selenium Version:  3.7 Browser:  Chrome, Firefox Browser Version:  chrome  61.0.3163.100 (Official Build) (64-bit), FF 52.4.0 (32-bit)  ## Expected Behavior - Chrome / FF opens and url is loaded.  ## Actual Behavior - Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/http/config/RegistryBuilder 	at org.openqa.selenium.remote.internal.HttpClientFactory.getClientConnectionManager(HttpClientFactory.java:69) 	at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClientFactory.java:57) 	at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClientFactory.java:60) 	at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.getDefaultHttpClientFactory(ApacheHttpClient.java:242) 	at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.(ApacheHttpClient.java:219) 	at org.openqa.selenium.remote.HttpCommandExecutor.getDefaultClientFactory(HttpCommandExecutor.java:93) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:72) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:59) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.(DriverCommandExecutor.java:50) 	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:158) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:98) 	at com.xyz.HelloWorld.main(HelloWorld.java:9) Caused by: java.lang.ClassNotFoundException: org.apache.http.config.RegistryBuilder 	at java.net.URLClassLoader.findClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	... 13 more  ## Steps to reproduce - 1. Download http://selenium-release.storage.googleapis.com/3.7/selenium-java-3.7.0.zip 2. Extract and add to build path  3. Download chrome driver 3.3 / gecko driver 1.7   4. Try Launching chrome or FF using web driver  ## Comments Seems like the latest (v3.7) Selenium-Java zip file contains lesser jars in the lib folder. v3.6 contained 10 lib jars but v3.7 contains only 7 jars. The missing jar which is causing all the issue for the op is 'httpcore-4.4.6.jar'. I am not sure whether the removal of jar is intentional or not.   https://stackoverflow.com/questions/47104058/selenium-webdriver-java-eclipse-java-lang-noclassdeffounderror/47108693#47108693","closed","C-java,","sighil","2017-11-04T08:09:47Z","2019-08-17T03:09:54Z"
"","5191","SSL Pfx Authentication","OS:  Windows 10  Selenium Version:   3.5.3 with Eclipse IDE  Browser:   MS Edge PhantomJS  Browser Version:   Microsoft Edge 40.15063.674.0(64-bit) Phantomjs 3.1  ## Expected Behavior - Authentication with specific pfx certificate without need  choose certificate in pop up  ## Actual Behavior - Need to choose the certificate in pop  ## Steps to reproduce - Use any site that needs to authenticate with pfx certificate","closed","","carliandro","2017-12-08T13:20:28Z","2019-08-16T21:10:00Z"
"","5064","WebDriver v3.7.0 C# Firefox ""missing handle parameter"" for popup windows","OS:  Windows Selenium Version:  3.7.0 Browser:  RemoteWebDriver using Firefox v56.0.2 (or any recent Firefox) I am using GeckoDriver 0.19.1  Seems like this might be a C# binding issue in dotnet/src/webdriver/Remote/RemoteTargetLocator.cs where the SwitchTo().Window command is no longer transmitting the proper information expected by geckodriver?  The code below results in an Exception ""Missing 'handle' parameter"" when switching to the popup.  However, the test passes with Firefox 52.0.2, geckodriver 0.15.0, and WebDriver 3.3.x.  ## Steps to reproduce -  Here's some HTML with a popup link: (test.html) ```   Firefox Popup Test Case     Firefox Popup Test Case         Google Popup Link        ```  Here's some C# code with NuGets of Selenium.WebDriver v3.7.0 and NUnit 3.7.0:  ``` using System; using NUnit.Framework; using OpenQA.Selenium.Remote; using OpenQA.Selenium; using System.Collections.ObjectModel; using System.Linq; using System.Collections.Generic;  namespace WebDriverTestProject {     ///      ///      ///      [TestFixture]     public class UnitTest1     {         ///          ///          ///          [Test]         public void TestMethod()         {             IWebDriver webdriver = null;             try             {                 DesiredCapabilities dc = DesiredCapabilities.Firefox();                 webdriver = new RemoteWebDriver(new Uri(""http://hub:4444/wd/hub""), dc);                  // Popup page                 webdriver.Navigate().GoToUrl(""http://webpage/test.html"");                  ReadOnlyCollection previousHandles = webdriver.WindowHandles;                 Console.WriteLine(""Previous Popup count: "" + previousHandles.Count);                  // Trigger popup                 webdriver.FindElement(By.Id(""link"")).Click();                  // Wait for popup                 do                 {                     Console.WriteLine(""Waiting for popup..."");                     System.Threading.Thread.Sleep(2000);                 } while (previousHandles.Count == webdriver.WindowHandles.Count);                  // Find the popup handle                 ReadOnlyCollection currentHandles = webdriver.WindowHandles;                 IEnumerable popupWindow = currentHandles.Except(previousHandles);                 Console.WriteLine(""Popup is here! "" + popupWindow.First());                  // Switch to window ====>>>> This is the line in error","closed","D-firefox,","AndyUM357","2017-11-16T14:07:53Z","2020-05-20T23:08:34Z"
"","5464","throwOnCapabilityNotPresent flag is ignored","OS:  Win7  Selenium Version:  3.9.0  Browser:  N/A   Browser Version:  N/A   ## Expected Behavior -  `-throwOnCapabilityNotPresent false` should allow tests to queue regardless of registered nodes  ## Actual Behavior -  `-throwOnCapabilityNotPresent false` is ignored  ## Steps to reproduce -  Launching a hub with `java -jar selenium-server-standalone-3.9.0.jar -role hub -throwOnCapabilityNotPresent false` (or similar configuration via json) results in the grid being launched as: ![image](https://user-images.githubusercontent.com/3735885/35989128-006856fc-0cc6-11e8-9677-22a29e7b7994.png)  However, when actually trying to queue a test:  ```bash 11:50:51.460 INFO - Got a request to create a new session: Capabilities {acceptSslCerts: true, browserName: chrome, chromeOptions: {args: [chrome.switches, --disable-extensions], extensions: []}, platform: WINDOWS, version: } 11:50:51.460 INFO - Error forwarding the new session Empty pool of VM for setup Capabilities {acceptSslCerts: true, browserName: chrome, chromeOptions: {args: [chrome.switches, --disable-extensions], extensions: []}, platform: WINDOWS, version: } org.openqa.grid.common.exception.GridException: Empty pool of VM for setup Capabilities {acceptSslCerts: true, browserName: chrome, chromeOptions: {args: [chrome.switches, --disable-extensions], extensions: []}, platform: WINDOWS, version: }         at org.openqa.grid.internal.ProxySet.verifyAbilityToHandleDesiredCapabilities(ProxySet.java:146)         at org.openqa.grid.internal.DefaultGridRegistry.addNewSessionRequest(DefaultGridRegistry.java:228)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:110)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:84)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:68)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:860)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:530)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:347)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:256)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:102)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)         at java.lang.Thread.run(Unknown Source) ```","closed","C-grid,","ClaytonAstrom","2018-02-08T18:01:29Z","2019-08-15T12:10:03Z"
"","5593","Actions().Perform() Nullreference Exception when passing extended IWebDriver object instead of concrete Selenium implementations of IWebDriver","OS:  Win 10 64bit Selenium Version: 3.10   Browser:  Geckodriver 0.19.1 /ChromeDriver 2.36.0 both affected  This is related to issue https://github.com/SeleniumHQ/selenium/issues/4997  Problem: Nullreference Exception thrown when passing an extended IWebDriver object to Actions(driver).Perform() that implements IWebDriver and IHasInputDevices. Works fine if the underlying concrete driver instance (e.g., FirefoxDriver or ChromeDriver) is passed to the Actions() constructor.  Steps to reproduce: 1) Extend/implement the IWebDriver and IHasInputDevices interface:  ```c#   public class WebDriveExtended : IWebDriver, IHasInputDevices         {             private IWebDriver _webDriverImplementation;             public IWebDriver ExposedWebDriverImplementation => _webDriverImplementation;              public WebDriveExtended()             {                 //_webDriverImplementation = new FirefoxDriver(FirefoxDriverService.CreateDefaultService());                 _webDriverImplementation = new ChromeDriver(ChromeDriverService.CreateDefaultService());             }              //Delegated implementation of IHasInputDevices              public IKeyboard Keyboard             {                 get                 {                     if (_webDriverImplementation is FirefoxDriver ffDriver)                     {                         return ffDriver.Keyboard;                     }                     if (_webDriverImplementation is ChromeDriver crDriver)                     {                         return crDriver.Keyboard;                     }                     throw new NotSupportedException();                 }             }             public IMouse Mouse             {                 get                 {                     if (_webDriverImplementation is FirefoxDriver ffDriver)                     {                         return ffDriver.Mouse;                     }                     if (_webDriverImplementation is ChromeDriver crDriver)                     {                         return crDriver.Mouse;                     }                     throw new NotSupportedException();                 }             }               //Delegated implementation of IWebDriver              public IWebElement FindElement(By @by)             {                 return _webDriverImplementation.FindElement(@by);             }              public ReadOnlyCollection FindElements(By @by)             {                 return _webDriverImplementation.FindElements(@by);             }              public void Dispose()             {                 _webDriverImplementation.Dispose();             }              public void Close()             {                 _webDriverImplementation.Close();             }              public void Quit()             {                 _webDriverImplementation.Quit();             }              public IOptions Manage()             {                 return _webDriverImplementation.Manage();             }              public INavigation Navigate()             {                 return _webDriverImplementation.Navigate();             }              public ITargetLocator SwitchTo()             {                 return _webDriverImplementation.SwitchTo();             }              public string Url             {                 get { return _webDriverImplementation.Url; }                 set { _webDriverImplementation.Url = value; }             }              public string Title             {                 get { return _webDriverImplementation.Title; }             }              public string PageSource             {                 get { return _webDriverImplementation.PageSource; }             }              public string CurrentWindowHandle             {                 get { return _webDriverImplementation.CurrentWindowHandle; }             }              public ReadOnlyCollection WindowHandles             {                 get { return _webDriverImplementation.WindowHandles; }             }         }  ```   2) Attempt to use Actions() with extended webdriver:  ```c#      static void Main(string[] args)         {             var webdriverEx = new WebDriveExtended();             var body1  = webdriverEx.FindElement(By.CssSelector(""body""));             var body2 = webdriverEx.ExposedWebDriverImplementation.FindElement(By.CssSelector(""body""));              Debug.Assert(body1.Equals(body2));  // works fine if the underlying concrete implementation is passed and Perform() is called             var action1 = new Actions(webdriverEx.ExposedWebDriverImplementation).MoveToElement(body1);             action1.Perform();  // nullreference exception thrown if the extended class (which implements IWebDriver and IHasInputDevices is passed and Perform() is called              var action2 = new Actions(webdriverEx).MoveToElement(body2);             action2.Perform();          }  ```  Expected outcome: Actions() should accept any object that implements the IWebDriver and IHasInputDevices interfaces. There should not be a nullreference exception thrown.","closed","","vflame","2018-03-10T05:28:24Z","2019-08-16T11:09:34Z"
"","5395","Driver does not support setting HTML5 geolocation information. Use the HasLocationContext property to test for the driver capability.","OS:  Win 10 Selenium Version:  v 3.8.0 Browser:  Internet Explorer (Selenium.WebDriver.IEDriver 3.8.0 c#)  Browser Version:  Internet Explorer 11.2007.14393.0  ## Expected Behavior - I try to get performance value from IEDriver: IJavaScriptExecutor jsExec = (IJavaScriptExecutor)driverInterface;              var res = jsExec.ExecuteScript(@""var timings = window.performance.timing || {};                                                                   return timings;""); And I expect to have results like:  {[connectEnd, 1516952763573]} {[connectStart, 1516952763573]} {[domComplete, 1516952764559]} {[domContentLoadedEventEnd, 1516952764527]} {[domContentLoadedEventStart, 1516952764413]} {[domInteractive, 1516952764413]} {[domLoading, 1516952763654]} {[domainLookupEnd, 1516952763573]} {[domainLookupStart, 1516952763573]} {[fetchStart, 1516952763573]} {[loadEventEnd, 1516952764560]} {[loadEventStart, 1516952764559]} {[navigationStart, 1516952761624]} {[redirectEnd, 0]} {[redirectStart, 0]} {[requestStart, 1516952763575]} {[responseEnd, 1516952763697]} {[responseStart, 1516952763648]} {[secureConnectionStart, 0]} {[unloadEventEnd, 0]} {[unloadEventStart, 0]}   ## Actual Behavior - I have error. The most ""meaningful"" error message that I found was:  Message:	""Driver does not support setting HTML5 geolocation information. Use the HasLocationContext property to test for the driver capability""  Please help me with this!  ## Steps to reproduce - Run script for IE driver:  IJavaScriptExecutor jsExec = (IJavaScriptExecutor)driverInterface;              var res = jsExec.ExecuteScript(@""var timings = window.performance.timing || {};                                                                   return timings;"");","closed","D-IE,","sisillV","2018-01-26T07:58:33Z","2021-09-05T08:35:52Z"
"","5184","Version check in nodes no longer works","OS:  Ubuntuu 16.04 Selenium Version:  3.8.1 (both hubs and nodes) Browser:  Chrome  Browser Version:  62.0.3202.94 (Official Build) (64-bit)  ## Steps to reproduce - 1. Set up a selenium hub 2. Set up 1 node with the following capability:     {       ""browserName"": ""chrome"",       ""maxInstances"": 1,       ""seleniumProtocol"": ""WebDriver"", 	  ""platform"": ""LINUX"", 	  ""version"": ""99""     } 3. Set up a second node with the following capability:     {       ""browserName"": ""chrome"",       ""maxInstances"": 1,       ""seleniumProtocol"": ""WebDriver"", 	  ""platform"": ""LINUX"", 	  ""version"": ""50""     } 4. Fire off 2 selenium scenarios targeting chrome version 99  ## Expected Behavior - One Scenario executes with 1 scenario waiting (on the node with version 99)  ## Actual Behavior - Both nodes run 1 scenario each  ## Additional information * This setup worked on 3.7.0, I was unable to test it on 3.8.0 (due to other selenium grid issues). * Firefox (gecko Driver) actually checks the version number of the browser (so this browser hack to direct to nodes doesn't work).  ## My use case On my development machine, I have one of the nodes directing output to xvfb so that it doesn't disturb my work. The other node is visible so I can see what is wrong with my tests","closed","R-awaiting answer,","marsh0lion","2017-12-06T20:16:53Z","2019-08-16T21:10:04Z"
"","5358","On pop-up/subwindow open, no content is getting rendered in selenium headless testing.","OS:  Ubuntu (Linux) Selenium Version:  2.53.1 Browser:  Firefox 46.0  I am running a selenium test suite in headless mode via Jenkins in containerized environment (Docker image has  ![issue](https://user-images.githubusercontent.com/31206027/35090456-a0d382e2-fc31-11e7-9b8a-e8260c53adb8.png) Ubuntu as its base image running over a Linux box). I am opening a website and performing some validations. At a particular step, a button is clicked on the application and a pop-up/subwindow is supposed to open with the details of the button clicked. At that point it stucks up for indefinite time. To check I added a code to capture screenshot of what's happening. I found that a black pop-up/subwindow opens up but no content is getting rendered over it. Attached is the snapshot which opens up at that point. The same code is working fine on local and on remote hub via Jenkins. Any suggestions/advice. ![Uploading Issue.png…]()","closed","D-firefox,","ShilpaAJ","2018-01-18T09:27:15Z","2019-08-16T12:09:53Z"
"","5658","Browser Console Logs containing structured JSON objects are returned as a String with text 'Object'","OS:  OSX Selenium Version:  3.8.0 Browser:  Chrome 65.0 Language: Ruby 2.4.1  I referred to this section of logging document - https://github.com/SeleniumHQ/selenium/wiki/Logging#log-message  I have a similar situation where I want to read the logs from console where some logs are in JSON format but using the command `@browser.manage.logs.get(:browser)` with browser logging prefs set to ALL, I do get all the logs but the objects within the log are returned as a string with text 'object'. There should be an option to get the logs in JSON format as well. It seems like they are converted to string based on what I see here - https://github.com/browserstack/selenium-webdriver-ruby/blob/0f1ba0689b6250a2f35f8911003310a54463fa32/lib/selenium/webdriver/common/log_entry.rb","closed","","sandeepnagra","2018-03-21T19:35:58Z","2019-09-04T12:09:35Z"
"","5725","Inconsistent log path parameters for webdrivers","OS:  OSX Selenium Version:  3.11.0 Browser: FireFox 58.0.2, Chrome 65, Safari, Opera, Edge Browser Version:  See above  Accepted Webdriver parameters for logging should be consistent. Right now, some webdriver declaration requires `log_path` and some require `service_log_path`. Because of this I need to create  If/Else blocks for each type of logging parameters. See below:  ### Example (Using Splinter and Behave) ``` @fixture def splinter_browser(context):     if context.default_browser == 'firefox':         if context.headless:             context.browser = Browser(context.default_browser, headless=True, log_path=os.devnull)         else:             context.browser = Browser(context.default_browser, headless=False, log_path=os.devnull)     elif context.default_browser == 'chrome':         if context.headless:             context.browser = Browser(context.default_browser, headless=True, service_log_path=os.devnull)         else:             context.browser = Browser(context.default_browser, headless=False, service_log_path=os.devnull)     yield context.browser     context.browser.quit() ```  ### Affected webdriver files webkitgtk/webdriver.py ``` class WebDriver(RemoteWebDriver):     """"""     Controls the WebKitGTKDriver and allows you to drive the browser.     """"""      def __init__(self, executable_path=""WebKitWebDriver"", port=0, options=None,                  desired_capabilities=DesiredCapabilities.WEBKITGTK,                  service_log_path=None): ```  chrome/webdriver.py ``` class WebDriver(RemoteWebDriver):     """"""     Controls the ChromeDriver and allows you to drive the browser.      You will need to download the ChromeDriver executable from     http://chromedriver.storage.googleapis.com/index.html     """"""      def __init__(self, executable_path=""chromedriver"", port=0,                  options=None, service_args=None,                  desired_capabilities=None, service_log_path=None,                  chrome_options=None): ```  opera/webdriver.py ``` class OperaDriver(ChromiumDriver):     """"""Controls the new OperaDriver and allows you     to drive the Opera browser based on Chromium.""""""      def __init__(self, executable_path=None, port=0,                  options=None, service_args=None,                  desired_capabilities=None, service_log_path=None,                  opera_options=None): ```  firefox/webdriver.py ``` class WebDriver(RemoteWebDriver):      # There is no native event support on Mac     NATIVE_EVENTS_ALLOWED = sys.platform != ""darwin""      CONTEXT_CHROME = ""chrome""     CONTEXT_CONTENT = ""content""      _web_element_cls = FirefoxWebElement      def __init__(self, firefox_profile=None, firefox_binary=None,                  timeout=30, capabilities=None, proxy=None,                  executable_path=""geckodriver"", options=None,                  log_path=""geckodriver.log"", firefox_options=None,                  service_args=None): ```  edge/webdriver.py ``` class WebDriver(RemoteWebDriver):      def __init__(self, executable_path='MicrosoftWebDriver.exe',                  capabilities=None, port=0, verbose=False, log_path=None): ```","closed","C-py,","j7an","2018-04-03T00:21:07Z","2019-08-15T17:10:00Z"
"","5392","Session was terminate due PROXY_REGISTRATION","OS:  Mac OS high Sierra 10.13.2  Selenium Version:  3.4.0  Browser:  MAC, APPIUM    ## Expected Behavior - All perfect funtional  ## Actual Behavior - PROXY_REGISTRATION Error  ## Steps to reproduce - -command: java -jar selenium-server-standalone-versionxxxx.jar -role hub -add node with appium config.  ---------  org.openqa.selenium.WebDriverException: Session [""SESSION_ID""] was terminated due to PROXY_REREGISTRATION Command duration or timeout: 474 milliseconds.  How i can take control of that? if i run 2 test all good but for more all fail by PROXY_REREGISTRATION  ----------LOG Selenium Grid-----------------  11:27:46.795 INFO - Selenium build info: version: '3.4.0', revision: 'unknown' 11:27:46.795 INFO - Launching Selenium Grid hub 11:27:47.350 INFO - Will listen on 4444 11:27:47.444 INFO - Nodes should register to http://169.254.117.65:4444/grid/register/ 11:27:47.444 INFO - Selenium Grid hub is up and running 11:28:05.585 DEBUG - getting the following registration request  : {""capabilities"":[{""seleniumProtocol"":""WebDriver"",""automationName"":""XCUITest"",""browserName"":""MAC"",""maxInstances"":6,""udid"":""a99511e1IPHONE_UDID"",""platform"":""MAC""}],""configuration"":{""unregisterIfStillDownAfter"":60000,""role"":""node"",""nodeStatusCheckTimeout"":5000,""nodeTimeout"":120,""hubHost"":""localhost"",""hubPort"":4444,""deviceReadyTimeout"":120,""timeout"":0,""url"":""http://0.0.0.0:54576/wd/hub"",""nodePolling"":500,""proxy"":""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",""cleanUpCycle"":5000,""hub"":""localhost:4444/grid/register"",""port"":54576,""newCommandTimeout"":120,""browserTimeout"":0,""maxSession"":6,""registerCycle"":5000,""register"":true,""host"":""0.0.0.0"",""id"":""http://0.0.0.0:54576""}} 11:28:05.685 DEBUG - Using class org.openqa.grid.selenium.proxy.DefaultRemoteProxy 11:28:05.690 INFO - Registered a node http://0.0.0.0:54576 11:28:05.691 DEBUG - proxy added http://0.0.0.0:54576 11:28:06.197 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:06.207 DEBUG - CookieSpec selected: default 11:28:06.215 DEBUG - Auth cache not set in the context 11:28:06.216 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:06.227 DEBUG - Connection leased: [id: 0][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:06.228 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:06.231 DEBUG - Connecting to /0.0.0.0:54576 11:28:11.450 DEBUG - http-outgoing-0: Shutdown connection 11:28:11.451 DEBUG - Connection discarded 11:28:11.451 DEBUG - Connection released: [id: 0][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:11.452 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:11.955 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:11.957 DEBUG - CookieSpec selected: default 11:28:11.957 DEBUG - Auth cache not set in the context 11:28:11.957 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:11.957 DEBUG - Connection leased: [id: 1][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:11.958 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:11.958 DEBUG - Connecting to /0.0.0.0:54576 11:28:16.964 DEBUG - http-outgoing-1: Shutdown connection 11:28:16.964 DEBUG - Connection discarded 11:28:16.964 DEBUG - Connection released: [id: 1][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:16.965 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:16.965 INFO - Marking the node http://0.0.0.0:54576 as down: cannot reach the node for 2 tries 11:28:17.468 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:17.470 DEBUG - CookieSpec selected: default 11:28:17.470 DEBUG - Auth cache not set in the context 11:28:17.470 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:17.470 DEBUG - Connection leased: [id: 2][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:17.470 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:17.471 DEBUG - Connecting to /0.0.0.0:54576 11:28:22.476 DEBUG - http-outgoing-2: Shutdown connection 11:28:22.477 DEBUG - Connection discarded 11:28:22.477 DEBUG - Connection released: [id: 2][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:22.478 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:22.979 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:22.981 DEBUG - CookieSpec selected: default 11:28:22.981 DEBUG - Auth cache not set in the context 11:28:22.981 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:22.981 DEBUG - Connection leased: [id: 3][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:22.981 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:22.982 DEBUG - Connecting to /0.0.0.0:54576 11:28:27.988 DEBUG - http-outgoing-3: Shutdown connection 11:28:27.989 DEBUG - Connection discarded 11:28:27.989 DEBUG - Connection released: [id: 3][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:27.989 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:28.490 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:28.490 DEBUG - CookieSpec selected: default 11:28:28.491 DEBUG - Auth cache not set in the context 11:28:28.493 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:28.493 DEBUG - Connection leased: [id: 4][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:28.493 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:28.493 DEBUG - Connecting to /0.0.0.0:54576 11:28:33.499 DEBUG - http-outgoing-4: Shutdown connection 11:28:33.499 DEBUG - Connection discarded 11:28:33.500 DEBUG - Connection released: [id: 4][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:33.500 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:34.001 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:34.002 DEBUG - CookieSpec selected: default 11:28:34.003 DEBUG - Auth cache not set in the context 11:28:34.003 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:34.003 DEBUG - Connection leased: [id: 5][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:34.003 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:34.004 DEBUG - Connecting to /0.0.0.0:54576 11:28:39.007 DEBUG - http-outgoing-5: Shutdown connection 11:28:39.007 DEBUG - Connection discarded 11:28:39.008 DEBUG - Connection released: [id: 5][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:39.008 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:39.512 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:39.513 DEBUG - CookieSpec selected: default 11:28:39.514 DEBUG - Auth cache not set in the context 11:28:39.514 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:39.514 DEBUG - Connection leased: [id: 6][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:39.514 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:39.514 DEBUG - Connecting to /0.0.0.0:54576 11:28:44.517 DEBUG - http-outgoing-6: Shutdown connection 11:28:44.518 DEBUG - Connection discarded 11:28:44.518 DEBUG - Connection released: [id: 6][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:44.518 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:45.021 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:45.023 DEBUG - CookieSpec selected: default 11:28:45.023 DEBUG - Auth cache not set in the context 11:28:45.023 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:45.023 DEBUG - Connection leased: [id: 7][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:45.024 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:45.024 DEBUG - Connecting to /0.0.0.0:54576 11:28:50.028 DEBUG - http-outgoing-7: Shutdown connection 11:28:50.028 DEBUG - Connection discarded 11:28:50.029 DEBUG - Connection released: [id: 7][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:50.029 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out 11:28:50.534 DEBUG - Closing connections idle longer than 100 MILLISECONDS 11:28:50.536 DEBUG - CookieSpec selected: default 11:28:50.536 DEBUG - Auth cache not set in the context 11:28:50.536 DEBUG - Connection request: [route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:50.537 DEBUG - Connection leased: [id: 8][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 11:28:50.537 DEBUG - Opening connection {}->http://0.0.0.0:54576 11:28:50.537 DEBUG - Connecting to /0.0.0.0:54576 11:28:55.540 DEBUG - http-outgoing-8: Shutdown connection 11:28:55.540 DEBUG - Connection discarded 11:28:55.541 DEBUG - Connection released: [id: 8][route: {}->http://0.0.0.0:54576][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 11:28:55.541 DEBUG - Failed to check status of node: Connect to 0.0.0.0:54576 [/0.0.0.0] failed: connect timed out   ------ NodeConfig Appium JSON -------  {      ""capabilities"":[         {            ""seleniumProtocol"":""WebDriver"",          ""automationName"":""XCUITest"",          ""browserName"":""MAC"",          ""maxInstances"":6,          ""udid"":""a99511e1IPHONE_UDID"",          ""platform"":""MAC""       }    ],    ""configuration"":{         ""unregisterIfStillDownAfter"":60000,       ""role"":""node"",       ""nodeStatusCheckTimeout"":5000,       ""nodeTimeout"":120,       ""hubHost"":""localhost"",       ""hubPort"":4444,       ""deviceReadyTimeout"":120,       ""timeout"":0,       ""url"":""http://localhost:54576/wd/hub"",       ""nodePolling"":500,       ""proxy"":""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",       ""cleanUpCycle"":5000,       ""hub"":""localhost:4444/grid/register"",       ""port"":""54576"",       ""newCommandTimeout"":120,       ""browserTimeout"":0,       ""maxSession"":6,       ""registerCycle"":5000,       ""register"":true    } }","closed","","jeitae","2018-01-24T21:24:58Z","2019-08-16T15:09:41Z"
"","5733","UnsupportedDriverException when running test case in linux","OS:  LINUX Selenium Version:  2.53.1 Browser:  chrome 65 Chromrdriver: 2.37  While running the test cases in **Windows agent**, I got success but when running the same in **Linux** I get unsupported driver exception. I tried all the chrome driver compatibility with chrome browser but same error    **Caused by: net.thucydides.core.webdriver.UnsupportedDriverException at HomeSteps.java:37             Caused by: net.thucydides.core.webdriver.UnsupportedDriverException at HomeSteps.java:37                 Caused by: org.openqa.selenium.WebDriverException at HomeSteps.java:37**  Dependencies in build.gradle:- 	compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version:'2.53.1'     compile group: 'net.serenity-bdd', name: 'serenity-core', version:'1.1.25-rc.5'     compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:'2.53.1'     //compile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.7'     compile group: 'net.serenity-bdd', name: 'serenity-junit', version: '1.2.3-rc.3'     compile group: 'org.assertj', name: 'assertj-core', version:'1.7.0'     compile group: 'com.googlecode.lambdaj', name: 'lambdaj', version:'2.3.3'     compile group: 'org.scream3r', name: 'jssc', version:'2.8.0'     compile group: 'org.apache.commons', name: 'commons-exec', version:'1.3'     compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.0'     compile group: 'commons-io', name: 'commons-io', version:'2.4'     compile group: 'commons-lang', name: 'commons-lang', version: '2.6'      compile group: 'log4j', name: 'log4j', version:'1.2.17'    	compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.9'    	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'  	    	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.8.5'     compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.8.5'     compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.8.5'     compile group: 'org.springframework', name: 'spring-core', version:'4.3.3.RELEASE'     compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version:'3.0.2'      compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'    	compile group: 'com.google.guava', name: 'guava', version: '22.0' 	    	compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.0.3'    	compile(group: 'nddsjava-natives', name: 'nddsjava-natives', version:'5.3.0.2',classifier:'natives-linux64bit')       compile(group: 'nddsjava-natives', name: 'nddsjava-natives', version: '5.3.0.2',classifier:'natives-macosx64bit')       compile(group: 'nddsjava-natives', name: 'nddsjava-natives', version: '5.3.0.2',classifier:'natives-windows64bit')      compile group: 'org.apache.poi', name: 'poi', version: '3.9'  Why it is so that it worked in windows agent and not in linux?","closed","","chiragghai","2018-04-05T14:06:48Z","2019-08-16T06:09:54Z"
"","5394","Cannot execute JS such that it stays within the driver session","OS:  Any OS Selenium Version:  3.6.0 Browser:  Any browser, but I used Chrome. Browser Version:  Latest  ## Expected Behavior - JS code should stay during the driver session.  ## Actual Behavior - Every time a JS is injected/executed via the driver, it resets itself, and the data pertaining to it is never stored.  ## Steps to reproduce - 1. Via code, invoke a Chrome browser. 2. Execute the following code: `JavascriptExecutor executor = (JavascriptExecutor) driver; execute.executeScript(""var x = 2;""); Object x = execute.executeScript(""return x;"");` 3. Observe the exception that is thrown.  In the third line, an error is thrown. When the expected result should be that 2 is returned.  ## Notes: This is an issue as we cannot setup event listeners to ensure that certain events are triggered based on webdriver actions.","closed","","shiraz","2018-01-26T03:33:46Z","2019-08-16T16:09:43Z"
"","4889","E/launcher - SessionNotCreatedError: Unable to create new service: GeckoDriverService Build info: version: '3.6.0'","OS:   Windows 10 Home  Selenium Version:   selenium-server-standalone-3.6.0 Browser:  FF 56.0 (32 bity Geckodriver :geckodriver-v0.19.0 on chrome everything works ok  config.capabilities = {   browserName: ""firefox"", }  `Running ""protractor:dev-firefox"" (protractor) task [15:07:27] I/launcher - Running 1 instances of WebDriver [15:07:27] I/local - Starting selenium standalone server... [15:07:28] I/local - Selenium standalone server started at http://192.168.1.9:61806/wd/hub [15:07:28] E/launcher - Unable to create new service: GeckoDriverService Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'DL', ip: '192.168.1.9', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_141' Driver info: driver.version: unknown [15:07:28] E/launcher - SessionNotCreatedError: Unable to create new service: GeckoDriverService Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'DL', ip: '192.168.1.9', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_141' Driver info: driver.version: unknown     at WebDriverError (C:\local\node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:27:5)     at SessionNotCreatedError (C:\local\node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:214:5)     at Object.checkLegacyResponse (C:\local\node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:505:15)     at parseHttpResponse (C:\local\node_modules\protractor\node_modules\selenium-webdriver\lib\http.js:509:13)     at doSend.then.response (C:\local\node_modules\protractor\node_modules\selenium-webdriver\lib\http.js:440:13)     at process._tickCallback (internal/process/next_tick.js:103:7) From: Task: WebDriver.createSession()     at Function.createSession (C:\local\node_modules\protractor\node_modules\selenium-webdriver\lib\webdriver.js:777:24)     at Function.createSession (C:\local\node_modules\protractor\node_modules\selenium-webdriver\firefox\index.js:640:55)     at createDriver (C:\local\node_modules\protractor\node_modules\selenium-webdriver\index.js:167:33)     at Builder.build (C:\local\node_modules\protractor\node_modules\selenium-webdriver\index.js:629:16)     at Local.getNewDriver (C:\local\node_modules\protractor\lib\driverProviders\driverProvider.ts:60:29)     at Runner.createBrowser (C:\local\node_modules\protractor\lib\runner.ts:225:39)     at q.then.then (C:\local\node_modules\protractor\lib\runner.ts:391:27)     at _fulfilled (C:\local\node_modules\q\q.js:834:54)     at self.promiseDispatch.done (C:\local\node_modules\q\q.js:863:30)     at Promise.promise.promiseDispatch (C:\local\node_modules\q\q.js:796:13)     at C:\local\node_modules\q\q.js:604:44     at runSingle (C:\local\node_modules\q\q.js:137:13)     at flush (C:\local\node_modules\q\q.js:125:13)     at _combinedTickCallback (internal/process/next_tick.js:67:7)     at process._tickCallback (internal/process/next_tick.js:98:9) [15:07:28] E/launcher - Process exited with error code 199`","closed","","piotro83","2017-10-17T13:22:06Z","2019-08-17T07:09:41Z"
"","5449","Grid hub recommended OS","OS:   Windows Server 2016/Ubuntu 16.04  Selenium Version:   3.8.1  Browser:   Chrome  The grid hub is able to run on every platform which is supported by java.  Is there a recommended OS for running the hub? What is the best practice? I have two option, Windows Server 2016 or Ubuntu 16.04. Does it matter?  Thanks","closed","","YogiBear52","2018-02-06T21:37:38Z","2019-08-16T14:09:54Z"
"","4837","C# Selenium does not perform Click / Sendkey operations  on IE 11 - Windows Server 2012 R2 environment","OS:   Windows Server 2012 R2 Selenium Version:  2.33 Browser:  Internet Explorer 11  ## Expected Behavior - Click / sendkey operations should work  ## Actual Behavior - Click / sendkey operations are not working  Steps :   Develop selenium C# n unit test and run from above OS/Browser/Selenium version.  Regards, Sathish","closed","D-IE,","sathishkumarperumal","2017-10-10T03:41:52Z","2019-08-17T05:09:42Z"
"","5463","action.move_to.perform is not working for firefox, IE and Edge browser","OS:   Windows 8, Windows 10 and Ubuntu 14.0  Selenium Version:   3.4.0  Browser:   IE - 10, 11 Firefox - 53.0 , Geckodriver - 16.0 Edge - 14  Ruby Version : 2.3.0  **I am trying to click on element which will be visible on hovering element.**  Code which i am using is      `driver.action.move_to(element).perform`  This works fine with chrome browser but does not work for mentioned browser  Sample page where the same scenario can be tested is : http://the-internet.herokuapp.com/hovers Here i am trying trying to click on 'View profile' which will be available once we hover on first image  Code: ```     element = driver.find_element(:css, ""img[src='/img/avatar-blank.jpg']"")     driver.action.move_to(element).perform     driver.find_element(:css, ""a[href, '/users/1'"").click ```      Is there any alternate way to perform the same test?","closed","C-rb,","sanam1725","2018-02-08T14:50:55Z","2019-08-15T19:09:53Z"
"","5481","Exception ""unrecognized performance logging option: enableTimeline"" when setting options using latest chromedriver","OS:   Windows 7 Selenium Version:   3.8.0 Browser:   Chrome Browser Version:   63.0.3239.132 ChromeDriver version: 2.35.528161  We are initializing ChromeDriver with options as follows:  ``` var option = new ChromeOptions(); var perfLogPrefs = new ChromePerformanceLoggingPreferences(); perfLogPrefs.AddTracingCategories(""performance"");                              perfLogPrefs.IsCollectingNetworkEvents = true; perfLogPrefs.IsCollectingPageEvents = true; perfLogPrefs.BufferUsageReportingInterval = TimeSpan.FromMilliseconds(1000); option.AddArgument(""--off-screen-rendering-enabled""); option.AddArgument(""--disable-accelerated-compositing""); option.AddArgument(""--disable-extensions""); option.AddArgument(""--test-type""); option.AddArgument(""--disable-plugins-discovery""); option.AddArgument(""--disable-bundled-ppapi-flash""); option.AddArgument(""--disable-popup-blocking""); option.AddArgument(""--no-sandbox""); option.AddArgument(""--enable-logging --v=1""); option.AddArgument(""--vmodule=metrics=2"");                              option.AddUserProfilePreference(""profile.default_content_setting_values.automatic_downloads"", 1); option.PerformanceLoggingPreferences = perfLogPrefs; option.AddAdditionalCapability(CapabilityType.EnableProfiling, true, true); option.SetLoggingPreference(LogType.Profiler, LogLevel.All); option.SetLoggingPreference(LogType.Browser, LogLevel.All); option.SetLoggingPreference(LogType.Client, LogLevel.All); option.SetLoggingPreference(LogType.Driver, LogLevel.All); option.SetLoggingPreference(LogType.Server, LogLevel.All); option.SetLoggingPreference(""performance"", LogLevel.All);  ChromeDriverService driverService = ChromeDriverService.CreateDefaultService(binariesLocation); driverService.HideCommandPromptWindow = true;                              _currentDriver = new ChromeDriver(driverService, option); ```  On every run, the ChromeDriver constructor throws the following exception:  > Result StackTrace:	 > at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse) >    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) >    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) >    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) >    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options) >    at AutomationFramework.Drivers.Selenium.SeleniumDriver.SetDriver(BrowserType browser, String debugPort) in d:\I4\Main\GfnApps\Automation\Drivers\Selenium\SeleniumDriver.cs:line 332 >    at AutomationFramework.Drivers.Selenium.SeleniumDriver..ctor(BrowserType browserType, String portNumber) in d:\I4\Main\GfnApps\Automation\Drivers\Selenium\SeleniumDriver.cs:line 69 >    at AutomationFramework.TestLogic.CI.Tests.IdSbaseTestClass.SetDefaultDriver(BrowserType browserType) in d:\I4\Main\GfnApps\Automation\TestLayer\CI\Tests\IDSbaseTestClass.cs:line 708 >    at AutomationFramework.TestLogic.CI.Tests.IdSbaseTestClass.DriverSetTheDrivers(Boolean forceKill) in d:\I4\Main\GfnApps\Automation\TestLayer\CI\Tests\IDSbaseTestClass.cs:line 719 >    at AutomationFramework.TestLogic.CI.Tests.IdSbaseTestClass.BeforeTestSetup(Boolean switchTo3D, String studyUid, String studyName, ClientRunMode clientRunMode, String studyDescription, Boolean closeMb, Boolean isMoviePlay, Boolean closeAllTabs, String isiteUserName, String isiteUserPass, Boolean forceKillForSaveFindings, Boolean setDualMonitor, Boolean logOutUserAfterTest, Boolean withoutTest, Boolean openIsiteOnly, Boolean closeAllTabsByShortcut) in d:\I4\Main\GfnApps\Automation\TestLayer\CI\Tests\IDSbaseTestClass.cs:line 147 >    at AutomationFramework.TestLogic.CI.Tests.Test2DLayout.Test2DWindowingAndSwivelOnSlab() in d:\I4\Main\GfnApps\Automation\TestLayer\CI\Tests\Test2DLayout.cs:line 147 > Result Message:	 > Test method AutomationFramework.TestLogic.CI.Tests.Test2DLayout.Test2DWindowingAndSwivelOnSlab threw exception:  > System.InvalidOperationException: unknown error: cannot parse capability: goog:chromeOptions > from unknown error: cannot parse perfLoggingPrefs > from unknown error: unrecognized performance logging option: enableTimeline >   Issue is caused by method: OpenQA.Selenium.Chrome.ChromeOptions.GeneratePerformanceLoggingPreferencesDictionary() Which initializes a logging option entry named 'enableTimeline'. This option is not recognized by newer versions of ChromeDriver (2.21 and up AFAIK, could be even earlier), causing the exception to be thrown.","closed","","eliav-raviv","2018-02-11T10:56:58Z","2019-08-16T14:09:41Z"
"","4996","'Could not find or load main class org.openqa.grid.selenium.GridLauncher' while launching grid extras 1.12.17 with selenium server 3.6.0","OS:   Windows 7 Selenium Grid Extras Version:   1.12.17 Selenium Grid Version:  3.6.0  I was using the Selenium grid extras 1.12.6 with Selenium standalone server 2.53.1. Now, i'm trying to upgrade both the Grid extras 1.12.17 and Server 3.6.0 and was facing with the below error, `Error: Could not find or load main class org.openqa.grid.selenium.GridLauncher`  I have tried with different versions,  Extras **1.12.17** with Server 2.53.1 - Working fine Extras 1.12.17 with Server 3.6.0 - Error: Class not found Extras 1.12.17 with Server 3.4.0 - Error: Class not found Extras 1.12.17 with Server 3.5.3 - Error: Class not found Extras **1.12.14** with Server 3.6.0 - Error: Class not found  **node_5555.json** ` {   ""capabilities"": [     {       ""applicationName"": ""win7_64bit_ff"",       ""platform"": ""win7"",       ""seleniumProtocol"": ""WebDriver"",       ""browserName"": ""firefox"",       ""maxInstances"": 3,       ""version"": ""46.0""     },     {       ""applicationName"": ""win7_64bit_chrome"",       ""platform"": ""win7"",       ""seleniumProtocol"": ""WebDriver"",       ""browserName"": ""chrome"",       ""maxInstances"": 4,       ""version"": ""62.0.3202.75""     },     {       ""applicationName"": ""win7_64bit_ie_11"",       ""platform"": ""win7"",       ""seleniumProtocol"": ""WebDriver"",       ""browserName"": ""internet explorer"",       ""maxInstances"": 1,       ""version"": ""11.00.9600.16428""     }   ],   ""configuration"": {     ""proxy"": ""com.groupon.seleniumgridextras.grid.proxies.SetupTeardownProxy"",     ""maxSession"": 7,     ""port"": 5555,     ""register"": true,     ""unregisterIfStillDownAfter"": 10000,     ""hubHost"": ""machine001"",     ""hubPort"": 4444,     ""nodeStatusCheckTimeout"": 10000,     ""downPollingLimit"": 0   } } `  selenium_grid_extras_config.json ` {   ""theConfigMap"": {     ""auto_start_hub"": ""0"",     ""video_recording_options"": {       ""record_test_videos"": ""false"",       ""videos_to_keep"": ""0""     },     ""node_config_files"": [       ""node_5555.json""     ],     ""hub_config_files"": [],     ""iedriver"": {       ""bit"": ""64"",       ""directory"": ""."",       ""version"": ""2.53.1""     },     ""chromedriver"": {       ""bit"": ""32"",       ""directory"": ""."",       ""version"": ""2.33""     },     ""default_role"": ""node"",     ""reboot_after_sessions"": ""20"",     ""auto_update_browser_versions"": ""0"",     ""hub_config"": {},     ""auto_start_node"": ""1"",     ""auto_update_drivers"": ""0"",     ""webdriver"": {       ""directory"": ""."",       ""version"": ""selenium-server-standalone-3.6.0""     },     ""log_maximum_age_ms"": 864000000,     ""grid_jvm_options"": {       ""selenium.LOGGER.level"": ""WARNING"",       ""webdriver.server.session.timeout"": ""900""     },     ""grid_extras_port"": ""3000"",     ""active_modules"": [       ""com.groupon.seleniumgridextras.tasks.DeleteOldLogsTask"",       ""com.groupon.seleniumgridextras.tasks.Setup"",       ""com.groupon.seleniumgridextras.tasks.Teardown"",       ""com.groupon.seleniumgridextras.tasks.MoveMouse"",       ""com.groupon.seleniumgridextras.tasks.RebootNode"",       ""com.groupon.seleniumgridextras.tasks.KillAllIE"",       ""com.groupon.seleniumgridextras.tasks.KillAllFirefox"",       ""com.groupon.seleniumgridextras.tasks.KillAllChrome"",       ""com.groupon.seleniumgridextras.tasks.KillAllSafari"",       ""com.groupon.seleniumgridextras.tasks.SetAutoLogonUser"",       ""com.groupon.seleniumgridextras.tasks.GetProcesses"",       ""com.groupon.seleniumgridextras.tasks.KillPid"",       ""com.groupon.seleniumgridextras.tasks.Netstat"",       ""com.groupon.seleniumgridextras.tasks.Screenshot"",       ""com.groupon.seleniumgridextras.tasks.ExposeDirectory"",       ""com.groupon.seleniumgridextras.tasks.StartGrid"",       ""com.groupon.seleniumgridextras.tasks.GetInfoForPort"",       ""com.groupon.seleniumgridextras.tasks.GridStatus"",       ""com.groupon.seleniumgridextras.tasks.KillAllByName"",       ""com.groupon.seleniumgridextras.tasks.StopGrid"",       ""com.groupon.seleniumgridextras.tasks.GetConfig"",       ""com.groupon.seleniumgridextras.tasks.StopGridExtras"",       ""com.groupon.seleniumgridextras.tasks.IEProtectedMode"",       ""com.groupon.seleniumgridextras.tasks.IEMixedContent"",       ""com.groupon.seleniumgridextras.tasks.SystemInfo"",       ""com.groupon.seleniumgridextras.tasks.GetNodeConfig"",       ""com.groupon.seleniumgridextras.tasks.UpdateNodeConfig"",       ""com.groupon.seleniumgridextras.tasks.AutoUpgradeDrivers"",       ""com.groupon.seleniumgridextras.tasks.DownloadWebdriver"",       ""com.groupon.seleniumgridextras.tasks.DownloadIEDriver"",       ""com.groupon.seleniumgridextras.tasks.DownloadChromeDriver"",       ""com.groupon.seleniumgridextras.tasks.SessionHistory""     ]   } } ` ## Expected Behavior - Extras 1.12.17 with Server 3.6.0 - should start the node. ## Actual Behavior - Extras 1.12.17 with Server 3.6.0 - Error: Class not found  Error log: ``` C:\GridNode\testsenode5555>java -Dselenium.LOGGER.level=WARNING -Dwebdriver.serv er.session.timeout=900 -Dwebdriver.ie.driver=.\iedriver_2.53.1_64bit.exe -Dwebdr iver.edge.driver=""C:\Program Files (x86)\Microsoft Web Driver\MicrosoftWebDriver .exe"" -Dwebdriver.chrome.driver=.\chromedriver_2.33_32bit.exe -Dwebdriver.gecko. driver=\tmp\webdriver\geckodriver\geckodriver_0.10.0.exe -cp C:\GridNode\testsen ode5555\SeleniumGridExtras-1.12.17-SNAPSHOT-jar-with-dependencies.jar;.\selenium -server-standalone-3.6.0.jar org.openqa.grid.selenium.GridLauncher -role node -f riendlyHostName MACHINE001 -nodeConfig node_5555.json -log log\node_5555.log  Picked up _JAVA_OPTIONS: -Djava.net.preferIPv4Stack=true Error: Could not find or load main class org.openqa.grid.selenium.GridLauncher ```  ## Steps to reproduce - Executed the bat file with below command, with the specified node_5555.json and extras config. ``` @echo off  setlocal   cd %~d0%~p0  title Selenium Webdriver port:5555, Extras port:3000  echo Starting node from directory %CD%  set _JAVA_OPTIONS=-Djava.net.preferIPv4Stack=true  java -jar SeleniumGridExtras-1.12.17-SNAPSHOT-jar-with-dependencies.jar  taskkill /fi ""username eq %USERNAME%"" /fi ""windowtitle eq %COMSPEC% - node_5555.bat"" /F /T  exit %ERRORLEVEL%  endlocal ```","closed","","vignesh-paramasivam","2017-11-02T10:14:29Z","2019-08-17T03:09:52Z"
"","5397","ElementNotInteractableException is not thrown when click() is called, despite WebElement.isVisible() returning false","OS:   Windows 10 Selenium Version:   3.7.1 Grid(RemoteWebDriver)    JAVA Browser:   Firefox  Browser Version:   57.0 (64-bit)   A regular radiobutton() is placed on the website, the frame is properly selected and overall interaction with the every html input (including the one that that does not work later) works.   BUT  When the WebElement radioButton's click() method is called...  ## Expected Behavior - if element is visible {Radiobutton in being selected}// that case works else {an exception ElementNotInteractableException or any inheriting one should be thrown}  ## Actual Behavior - if element is visible {Radiobutton in being selected}// that case works else {nothing happens}   IMPORTANT: radioButton.isVisible() works properly, checking this condition before selection and optional scroll to the element solves the issue, however a bypass is required to make it work. I believe an exception should be thrown  ## Steps to reproduce -  Pseudocode: map webelement -> try to interact with it when it's visible; scroll the page, so that the element that is being tested would not be visible; check if the interaction with the element causes an exception(IT SHOULD) and check webElement.isVisible() output;","closed","D-firefox,","xplolel","2018-01-26T18:03:23Z","2019-08-16T12:09:55Z"
"","5103","IEdriver when i am typing some text in text field every single characters enters twice","OS:   Windows 10 Selenium Version:   3.7.0, IDE - visual studio, programming language - c#  Browser:   Internet Explorer 11 Browser Version:   11.726.15063.0 (64-bit)  Expected Behavior - when I type some text (for example: ""some text"") it should be entered exactly as it was in code (""some text"").  Actual Behavior -  when I type some text (for example: ""some text"") every single charachter from it enters twice, (so result is like this ""ssoommee tteexxtt"").   Steps to reproduce - here is the code (c#) which shall reproduce it:  using NUnit.Framework; using Autotests.Selenium.TestModel.PageDeclarations.Inbox; using System.Threading; using Selenium.Core.WebDriver; using System; using Autotests.Selenium.TestModel; using OpenQA.Selenium; using OpenQA.Selenium.IE;         [Test]         public void TestTypingTextByIE()         {             var service = InternetExplorerDriverService.CreateDefaultService();             var IeOptions = new InternetExplorerOptions();             IeOptions.PageLoadStrategy = PageLoadStrategy.None;             IeOptions.IntroduceInstabilityByIgnoringProtectedModeSettings = true;             IeOptions.EnablePersistentHover = true;             IeOptions.EnableNativeEvents = false;             IeOptions.EnsureCleanSession = true;             IeOptions.RequireWindowFocus = true;             IeOptions.IgnoreZoomLevel = true;             IeOptions.FileUploadDialogTimeout = new TimeSpan(0, 0, 30);             var driverIe = new InternetExplorerDriver(service, IeOptions);             driverIe.Manage().Window.Maximize();             driverIe.Navigate().GoToUrl(""https://devform.socialboards.com/demo"");             Thread.Sleep(10000);             driverIe.FindElement(By.XPath(""//textarea[@name='message']"")).SendKeys(""123412341234"");                  } );   But as I could understand, the whole problem is in this option ""EnableNativeEvents = false""","closed","D-IE,","AlexTesterSB","2017-11-22T14:15:54Z","2019-08-16T01:09:55Z"
"","4951","Selenium 3.6.0 with gecko 0.19 and FF version 56 is not working with default capabilities","OS:   Windows 10 Selenium Version:   3.60 Browser:   Firefox version 56  We are trying to run selenium 3.60 using geckodriver version 0.19 on firefox 56 but the browser is not gettingopen and we are getting WebDriverException  Browser Version:   56.0(32 bit)  ## Expected Behavior - Browser should open and driver.get() should redirect to the url entered  ## Actual Behavior - Browser is not getting opened and we are getting WebDriver Exception  ## Steps to reproduce - String path = ""C:\\Users\\Sarthak.Srivastava\\Desktop\\geckodriver.exe"";	 System.setProperty(""webdriver.gecko.driver"", path); WebDriver driver = new FirefoxDriver(); driver.get(""https://navbharattimes.indiatimes.com""); Thread.sleep(5000);    driver.quit();","closed","R-awaiting answer,","sarthak2990","2017-10-25T10:44:33Z","2019-08-15T20:09:54Z"
"","4886","Not possible to set Chrome preferences for media_stream_camera/media_stream_mic. Url is split at each dot.","OS:   Windows 10 Selenium Version:   3.5.3 Chrome driver: 2.32.498550  Chrome version: 61  Not possible to set Chrome preferences for media_stream_camera/media_stream_mic. The given url is split at each dot. Tried with single and double quote, escape symbol, [], nothing works.  Code:  ChromeOptions options = new ChromeOptions();  Map prefs = new HashMap();        prefs.put(                ""profile.content_settings.exceptions.media_stream_camera.'https://app.test.store.com:443,'.setting"",                 2);  options.setExperimentalOption(""prefs"", prefs);  ## Expected Behavior in the Preferences file :  ""media_stream_mic"": { 	""https://app.test.store.com:443,*"": {						 		""setting"": 2 	} },  ## Actual Behavior :  ""media_stream_camera "":{ 		"" 'https://app"":{""test"":{""store"":{""com:443,*' "":{"" setting "":2}}}} }","closed","","sdanailova","2017-10-17T08:22:24Z","2019-08-15T04:09:46Z"
"","5104","Not able to maximize the Browser Chrome Browser Window on latest chrome Version 62.0.3202.94 (Official Build) (64-bit)","OS:   Windows 10 Selenium Version:   2.53 Browser:   Google Chrome Version 62.0.3202.94 (Official Build) (64-bit) Driver: ChromeDriver 2.33   Since I updated my Chrome Browser (Version 62.0.3202.94 (Official Build) (64-bit)), I am getting error - Selenium WebDriver instance is not available unknown error: failed to change window state to maximized, current state is normal (Session info: chrome=62.0.3202.94) (Driver info: chromedriver=2.33.506120  We are facing this issue while maximizing the window. This issue never encountered with earlier chrome browsers","closed","","anshulc55","2017-11-22T15:43:54Z","2019-08-17T01:09:41Z"
"","4941","NoClassDefFoundError: org/openqa/selenium/MutableCapabilities","OS:   Windows Selenium Version:  3.5.3 Browser:  All (latest)  Im trying to update my selenium from 3.4.0 to the newest version 3.5.3 but when i'm trying to run my cucumber tests in maven I get the following error:  ```  java.lang.NoClassDefFoundError: org/openqa/selenium/MutableCapabilities 	at java.lang.ClassLoader.defineClass1(Native Method) 	at java.lang.ClassLoader.defineClass(ClassLoader.java:763) 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467) 	at java.net.URLClassLoader.access$100(URLClassLoader.java:73) 	at java.net.URLClassLoader$1.run(URLClassLoader.java:368) 	at java.net.URLClassLoader$1.run(URLClassLoader.java:362) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.net.URLClassLoader.findClass(URLClassLoader.java:361) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:109) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:200) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:154) 	at nl.esize.cucumber.helper.WindowsDriverHelper.getDriver(WindowsDriverHelper.java:54) 	at nl.esize.cucumber.helper.DriverHelper.setUp(DriverHelper.java:26) 	at nl.esize.cucumber.EsizeCucumberTest.setupTest(EsizeCucumberTest.java:36) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at cucumber.runtime.Utils$1.call(Utils.java:40) 	at cucumber.runtime.Timeout.timeout(Timeout.java:16) 	at cucumber.runtime.Utils.invoke(Utils.java:34) 	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60) 	at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224) 	at cucumber.runtime.Runtime.runHooks(Runtime.java:212) 	at cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:202) 	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40) 	at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:95) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:38) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.api.junit.Cucumber.run(Cucumber.java:100) 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161) 	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.MutableCapabilities 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 56 more ```  My driver class looks like the following:  ``` 	public static WebDriver getDriver(BrowserType browser) { 		WebDriver driver = null; 		switch (browser) { 		case CHROME: 			System.setProperty(PROPERTY_DRIVER_CHROME, PATH_DRIVER_CHROME); 			System.setProperty(""webdriver.chrome.logfile"", ""C:/Programs/eclipse Neon/workspace/cucumber/logs/chromedriver.log""); 			System.setProperty(""webdriver.chrome.verboseLogging"", ""true""); 			driver = new ChromeDriver(); 			break; 		case IE: 			System.setProperty(PROPERTY_DRIVER_INTERNET_EXPLORER, PATH_DRIVER_INTERNET_EXPLORER); 			System.setProperty(""webdriver.ie.driver.loglevel"", ""WARN"");  			 			driver = new InternetExplorerDriver(); 			break; 		case FF: 		default: 			FirefoxOptions options = new FirefoxOptions(); 			options.setLogLevel(Level.WARNING);   			System.setProperty(PROPERTY_DRIVER_FIREFOX, PATH_DRIVER_FIREFOX); 			driver = new FirefoxDriver(options); 			break; 		} 		return driver; 	} ```  And my pom.xml dependencies:  ``` 	 		 		 			javax.mail 			mail 			1.5.0-b01 		   		 			org.seleniumhq.selenium 			htmlunit-driver 			2.27 		  		 			junit 			junit 			4.12 		  		 			info.cukes 			cucumber-java 			1.2.5 			test 		  		 			info.cukes 			cucumber-picocontainer 			1.2.5 			test 		  		 			info.cukes 			cucumber-junit 			1.2.5 			test 		  		 			org.seleniumhq.selenium 			selenium-java 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-firefox-driver 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-chrome-driver 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-ie-driver 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-edge-driver 			3.5.3 		  		 			org.apache.maven.plugins 			maven-resources-plugin 			3.0.2 		  		 			org.seleniumhq.selenium 			selenium-support 			3.5.3 		 	 ```  I had no issues before going to 3.5.3 so i'm thinking i did something wrong. Hopefully you can help me, if you need some logs i will add these aswell","closed","","PascalGit1","2017-10-24T14:52:51Z","2019-08-17T06:09:37Z"
"","5209","Temporary profiles are not deleted via Grid","OS:   Ubuntu 16.04 Selenium Version:   3.8.1 Browser:   Firefox  Steps to reproduce: Start Selenium Grid Hub and at least one node. Execute the following:  import java.net.MalformedURLException; import java.net.URL; import org.junit.Test; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.remote.RemoteWebDriver;  public class TestGrid {     @Test     public void test() throws MalformedURLException {         FirefoxProfile profile = new FirefoxProfile();         FirefoxOptions options = new FirefoxOptions();         options.setLegacy(true);         options.setProfile(profile);         RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://url/to/grid/hub""), options);         driver.quit();     } }  Executing that code creates 6 (!) folders with the name webdriverXXXduplicated in the tmp directory of the Grid hub. They are NOT deleted, when the test finishes, which means running more than 2000 tests per branch creates quite a mess. The folders are also NOT deleted when the whole test run ends. I guess they are created by the Grid hub process, so they are only deleted when the hub process ends. But since the hub runs as a service, it doesn't take much time and the disk is full.","closed","C-grid,","phoenix384","2017-12-12T11:37:33Z","2019-08-16T20:10:04Z"
"","5611","WebDriverError - Connection reset by peer","OS:   MacOS 10.12.6 Sierra Selenium Version:   3.11 Browser:   Chrome Browser Version:   65.0.3325.162  ## Actual Behavior - I'm getting a randomly WebDriverError with the next stack trace ``` WebDriverError: java.net.SocketException: Connection reset by peer (connect failed)            at Object.checkLegacyResponse (/Users/.../node_modules/selenium-webdriver/lib/error.js:546:15)            at parseHttpResponse (/Users/.../node_modules/selenium-webdriver/lib/http.js:509:13)            at doSend.then.response (/Users/.../node_modules/selenium-webdriver/lib/http.js:441:30)            at             at process._tickCallback (internal/process/next_tick.js:188:7)Error            at ElementArrayFinder.applyAction_ (/Users/.../node_modules/protractor/built/element.js:459:27)            at ElementArrayFinder.(anonymous function).args [as getAttribute] (/Users/.../node_modules/protractor/built/element.js:91:29)            at ElementFinder.(anonymous function).args [as getAttribute] (/Users/.../webroot/node_modules/protractor/built/element.js:831:22)            at HomePage.getFontNameFromCardCarousel (/Users/.../tests/qeguitests/e2e/pages/HomePage.js:91:148)            at World.When (/Users/.../tests/qeguitests/e2e/features/steps_definitions/homepage_steps.js:99:33)    - And I move to the ""right"" the carousel # tests/qeguitests/e2e/features/steps_definitions/homepage_steps.js:54 ``` I'm getting this error randomy in different actions. It never happend in the same point twice","closed","D-chrome,","mjaeggi","2018-03-14T12:57:14Z","2021-09-05T08:34:56Z"
"","5233","Python --Unable to start headless ChromeDriver with extension","OS:   macOS Selenium Version:   3.8.0 Browser:   Chrome  I am facing an issue while using ChromeDriver headless with proxy auth extension. I am getting the following message:  from unknown error: page could not be found: chrome-extension://ioajcajbkdgdnpbejmmmppmdjeaebing/_generated_background_page.html   (Driver info: chromedriver=2.34.522932 (4140ab217e1ca1bec0c4b4d1b148f3361eb3a03e),platform=Mac OS X 10.12.6 x86_64)","closed","","masajid390","2017-12-19T13:14:33Z","2019-08-16T20:09:42Z"
"","5130","Unable to execute Selenium Tests using Safari 11 - Authentication form","OS:   MAC Sierra OS 10.12 Selenium Version:   3.6.0 Browser:   Safari 11.0.1  Browser Version:   11.0.1  ## Expected Behavior - Should be able to override the NTLM Authentication by passing username and password parameters in the URL  ## Actual Behavior - login webform is still displayed  ## Steps to reproduce - using System; using System.Collections.Generic; using System.Linq; using System.Text; using OpenQA.Selenium; using OpenQA.Selenium.Support.UI; using OpenQA.Selenium.Safari;  namespace TestSafari {     class Program     {         static void Main(string[] args)         {             IWebDriver safari = new SafariDriver();             safari.Navigate().GoToUrl(""http://username:pw@applic.com/ui/"");         } }","closed","","mmorenoivy","2017-11-28T14:51:11Z","2019-08-16T22:10:05Z"
"","4961","WebDriverException: unknown error: Chrome failed to start: exited abnormally","OS:   Linux Selenium Version:  3.5.3 Browser:  Chrome driver V2.33 , chrome version 62.03  I'm running Selenium tests from jenkins on a linux machine. For this i'm using the latest chromedriver, when I run my tests about 90% will succeed but maybe 1 in 10 of the tests it will randomly fail with the following error:  **Error:** ``` Starting ChromeDriver 2.33.506092 (733a02544d189eeb751fe0d7ddca79a0ee28cce4) on port 24178 Only local connections are allowed. Failure in before hook:EsizeCucumberTest.setupTest() Message: org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited abnormally   (Driver info: chromedriver=2.33.506092 (733a02544d189eeb751fe0d7ddca79a0ee28cce4),platform=Linux 3.10.0-693.2.2.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 60.05 seconds Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z' System info: host: 'ehgd-bld-l04.esizedc.com', ip: '10.3.162.21', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.2.2.el7.x86_64', java.version: '1.8.0_144' Driver info: driver.version: ChromeDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:255) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:237) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:138) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:178) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:167) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:124) 	at nl.esize.cucumber.helper.LinuxDriverHelper.getDriver(LinuxDriverHelper.java:39) 	at nl.esize.cucumber.helper.DriverHelper.setUp(DriverHelper.java:29) 	at nl.esize.cucumber.EsizeCucumberTest.setupTest(EsizeCucumberTest.java:36) 	at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at cucumber.runtime.Utils$1.call(Utils.java:40) 	at cucumber.runtime.Timeout.timeout(Timeout.java:16) 	at cucumber.runtime.Utils.invoke(Utils.java:34) 	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60) 	at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224) 	at cucumber.runtime.Runtime.runHooks(Runtime.java:212) 	at cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:202) 	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40) 	at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:95) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:38) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.api.junit.Cucumber.run(Cucumber.java:100) 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161) 	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)        org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited abnormally         (Driver info: chromedriver=2.33.506092 (733a02544d189eeb751fe0d7ddca79a0ee28cce4),platform=Linux 3.10.0-693.2.2.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information)       Command duration or timeout: 60.05 seconds       Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'       System info: host: 'ehgd-bld-l04.esizedc.com', ip: '10.3.162.21', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.2.2.el7.x86_64', java.version: '1.8.0_144'       Driver info: driver.version: ChromeDriver       	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)       	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)       	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)       	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)       	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)       	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)       	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)       	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)       	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359)       	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)       	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)       	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)       	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)       	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)       	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)       	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)       	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)       	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)       	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362)       	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)       	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)       	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)       	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)       	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:255)       	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:237)       	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:138)       	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:178)       	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:167)       	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:124)       	at nl.esize.cucumber.helper.LinuxDriverHelper.getDriver(LinuxDriverHelper.java:39)       	at nl.esize.cucumber.helper.DriverHelper.setUp(DriverHelper.java:29)       	at nl.esize.cucumber.EsizeCucumberTest.setupTest(EsizeCucumberTest.java:36)       	at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)       	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)       	at java.lang.reflect.Method.invoke(Method.java:498)       	at cucumber.runtime.Utils$1.call(Utils.java:40)       	at cucumber.runtime.Timeout.timeout(Timeout.java:16)       	at cucumber.runtime.Utils.invoke(Utils.java:34)       	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)       	at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)       	at cucumber.runtime.Runtime.runHooks(Runtime.java:212)       	at cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:202)       	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40)       	at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)       	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)       	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)       	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)       	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)       	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)       	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)       	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)       	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)       	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)       	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)       	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)       	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)       	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)       	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)       	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)       	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)       	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)       	at cucumber.api.junit.Cucumber.run(Cucumber.java:100)       	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)       	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)       	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)       	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)       	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)       	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)       	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) ```  When rerunning the same test it will usually succeed the 2nd try so im not sure how i can reproduce this consitantly. I have a maven project and it is setup like the follow:  **Driver class:**  ``` 	public static WebDriver getDriver(BrowserType browser) { 		WebDriver driver = null; 		switch (browser) { 		case CHROME: 			System.setProperty(PROPERTY_DRIVER_CHROME, PATH_DRIVER_CHROME); 			System.setProperty(""webdriver.chrome.logfile"", ""C:/Programs/eclipse Neon/workspace/cucumber/logs/chromedriver.log""); 			System.setProperty(""webdriver.chrome.verboseLogging"", ""true""); 			driver = new ChromeDriver(); 			break; 		case FF: 		default: 			FirefoxOptions options = new FirefoxOptions(); 			options.setLogLevel(Level.WARNING);   			System.setProperty(PROPERTY_DRIVER_FIREFOX, PATH_DRIVER_FIREFOX); 			driver = new FirefoxDriver(options); 			break; 		} 		return driver; 	} ```  **Pom.xml dependencies:**  ``` 	 		 		 			javax.mail 			mail 			1.5.0-b01 		   		 			org.seleniumhq.selenium 			selenium-htmlunit-driver 			2.52.0 		  		 			junit 			junit 			4.12 		  		 			info.cukes 			cucumber-java 			1.2.5 			test 		  		 			info.cukes 			cucumber-picocontainer 			1.2.5 			test 		  		 			info.cukes 			cucumber-junit 			1.2.5 			test 		  		 			org.seleniumhq.selenium 			selenium-java 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-firefox-driver 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-chrome-driver 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-ie-driver 			3.5.3 		  		 			org.seleniumhq.selenium 			selenium-edge-driver 			3.5.3 		  		 			org.apache.maven.plugins 			maven-resources-plugin 			3.0.2 		  		 			org.seleniumhq.selenium 			selenium-support 			3.5.3 		 	 ``` Hopefully you can help me, if you need some chrome logs i will add these aswell but they are a bit long so I didnt add them yet.","closed","","PascalGit1","2017-10-26T08:22:54Z","2019-08-14T10:09:51Z"
"","5389","If URI containing the address of the WebDriver remote server contains basic authorization, Remote web driver doesn't create.","OS:    Windows 10 Selenium Version:   3.8.0 Browser:   Any  If URI containing the address of the WebDriver remote server contains basic authorization, RemoteWebDriver doesn't create. The server generates a 401 response.  It reproduced for .net client library. I solved it  explicitly adding basic authorization to HttpWebRequest, because if URI contains basic authorization, HttpWebReqest class doesn't add this header by default.  ## Expected Behavior - Remote web driver successfully creating. ## Actual Behavior - The server generates a 401 response. ## Steps to reproduce - var driver = new RemoteWebDriver(new Uri(""https://username:password@example.com""), capabilities);","closed","I-enhancement,","OlegYanush","2018-01-24T09:59:23Z","2021-09-05T10:20:27Z"
"","5544","INFO level logs visible in console after selenium 3.5.2 version","OS:    Windows 10 Selenium Version:   3.5.2 + Browser:   FF, Chrome  Since version 3.5.2 Selenium sends all debugging info to console, so I am able to see all requests at INFO level. In 3.5.1 version it didn't happen.  I am using watir gem(6.10) with selenium-webdriver gem. Search in google gave some advices but none of them helped. Can you advice how to silence all the debug info, or how to increase logging level?","closed","","ezywebs","2018-02-27T00:57:38Z","2019-08-16T12:09:44Z"
"","5134","Selenium 3.7.1 fails to launch FirefoxDriver when a valid binary path is proviced.","OS:    Windows 10 Selenium Version:    3.7.1, using java bindings. Browser:    Firefox 57.0  Browser Version:   e.g.: 57.0 (64-bit)  I read that most Firefox issues will be closed as duplicate to 2559 but this is not really on Firefox's or geckodriver's side. This seems to be an issue caused in the Selenium's FirefoxOptions class.  ## Expected Behavior - When providing a valid binary path or binary executable file to a FirefoxOptions object and this is used to construct a FirefoxDriver the driver should be successfully constructed and use the indicated binary. This should be the case even if Firefox is not installed in the system, that is the point of passing the binary path. ## Actual Behavior - If Firefox is not installed in the system an exception will be thrown pointing this out. This shouldn't be the case since a user defined path is been passed to the constructors. ## Steps to reproduce - On a environment with no Firefox installed, download a copy of Firefox and provide the path to the binary firefox.exe file to a FirefoxOptions like this: ```java FirefoxOptions firefoxOptions = new FirefoxOptions(); firefoxOptions.setBinary(firefoxBinary); ```  Then create a driver: ```java driver = new FirefoxDriver(firefoxOptions); ``` And it should fail as above.  This seems to originate from the FirefoxOptions class line 218: ```java public FirefoxBinary getBinary() {     return getBinaryOrNull().orElse(new FirefoxBinary()); } ``` Because even when the binary is successfully created(I checked while debugging) the orElse needs to initialize the default FirefoxBinary and this fails by throwing:    ```java throw new WebDriverException(""Cannot find firefox binary in PATH. "" +                                  ""Make sure firefox is installed. OS appears to be: "" + Platform.getCurrent()); ```   Best workaround I came up with is setting the system property: ```java if(binaryPath != null) {     System.setProperty(""webdriver.firefox.bin"", binaryPath); } ``` And this works nicely, but i thought it was worth documenting this issue since it came suddenly. Dozens of tests that ran normally started breaking when updated from Selenium 3.5.3 to 3.7.1  Stack trace of error: Caused by: org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10 Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:01:39.354Z' System info: host: 'WXVDEPDPRGUD057', ip: '10.51.179.173', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_121' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:116) 	at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:218) 	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:155) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)","closed","C-java,","R4il","2017-11-28T19:40:21Z","2019-08-17T00:09:35Z"
"","4853","Gettinng error while trying to use driver.quit()","OS:    Selenium Version:    Browser:     Browser Version:    Gecko Driver version:   ## Expected Behavior - Should not throw any error after executing the test  ## Actual Behavior - Throwing below error :   1507806007416	geckodriver	INFO	geckodriver 0.18.0 1507806007459	geckodriver	INFO	Listening on 127.0.0.1:5154 1507806007965	geckodriver::marionette	INFO	Starting browser C:\Program Files (x86)\Mozilla Firefox\firefox.exe with args [""-marionette""] 1507806013967	Marionette	INFO	Listening on port 51172 Oct 12, 2017 4:30:18 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Oct 12, 2017 4:30:44 PM org.openqa.selenium.remote.ErrorCodes toStatus INFO: HTTP Status: '404' -> incorrect JSON status mapping for 'unknown error' (500 expected) Exception in thread ""main"" org.openqa.selenium.WebDriverException: quit Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'LH7U0CNU324C0PF', ip: '10.196.11.25', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=C:\Users\rb5\AppData\Local\Temp\rust_mozprofile.4RcPizHY8da0, rotatable=false, timeouts={implicit=0.0, page load=300000.0, script=30000.0}, pageLoadStrategy=normal, platform=ANY, specificationLevel=0.0, moz:accessibilityChecks=false, acceptInsecureCerts=false, browserVersion=52.2.1, platformVersion=6.1, moz:processID=10288.0, browserName=firefox, javascriptEnabled=true, platformName=windows_nt}] Session ID: 6f4734c9-ff4b-4f57-9e1c-62afeb3d116c 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:150) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:115) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:45) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:694) 	at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:533) 	at com.pluralsight.WebDriverDemo.main(WebDriverDemo.java:11)   ## Steps to reproduce -","closed","","raghu-kunda","2017-10-12T11:10:20Z","2019-08-17T07:09:57Z"
"","4985","Problem with  Selenium web driver - unable to open page with Firefox","OS:    Selenium Version:    -- Browser:     I started with Selenium WebDriver with Java. Script I want run:  ``` package com.romantester.webdriver;  import org.junit.Test; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class MyFirstTest {      public static void main(String[] args) {          // Create a new instance of the Firefox driver         WebDriver driver = new FirefoxDriver();          //Launch the Online Store Website         driver.get(""http://www.google.com/"");          // Print a Log In message to the screen         System.out.println(""Successfully opened the website https://www.seznam.cz/"");          // Close the driver         driver.quit();     }  }  There is a problem due to run:  < startup()@resource://gre/modules/addons/XPIProvider.jsm:2188 < callProvider()@resource://gre/modules/AddonManager.jsm:269 < _startProvider()@resource://gre/modules/AddonManager.jsm:739 < startup()@resource://gre/modules/AddonManager.jsm:906 < startup()@resource://gre/modules/AddonManager.jsm:3090 < observe()@jar:file:///C:/Program%20Files/Mozilla%20Firefox/omni.ja!/components/addonManager.js:65 1509451689639	Marionette	INFO	Enabled via --marionette [ODEBUG] [Explorer Probe] [disableSPDY]#In disableSPDY()[ODEBUG] [Explorer Probe] [disableSPDY]#Trying to get profile path from command line if exists[ODEBUG] [Explorer Probe] [disableSPDY]#Didn't get any profile from command line, get all FireFox profiles from AppData[ODEBUG] [Explorer Probe] [disableSPDY]#In disableSPDY()[ODEBUG] [Explorer Probe] [disableSPDY]#Trying to get profile path from command line if exists[ODEBUG] [Explorer Probe] [disableSPDY]#Didn't get any profile from command line, get all FireFox profiles from AppData[ODEBUG] [Explorer Probe] [disableSPDY]#In disableSPDY()[ODEBUG] [Explorer Probe] [disableSPDY]#Trying to get profile path from command line if exists[ODEBUG] [Explorer Probe] [disableSPDY]#Didn't get any profile from command line, get all FireFox profiles from AppDataUnable to read VR Path Registry from C:\Users\ro066244\AppData\Local\openvr\openvrpaths.vrpath [Parent 43424] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 Unable to read VR Path Registry from C:\Users\test\AppData\Local\openvr\openvrpaths.vrpath [Child 44752] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 [Child 44752] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 [ODEBUG] [Explorer Probe] [disableSPDY]#In disableSPDY()[ODEBUG] [Explorer Probe] [disableSPDY]#Trying to get profile path from command line if exists[ODEBUG] [Explorer Probe] [disableSPDY]#Didn't get any profile from command line, get all FireFox profiles from AppData1509451692847	Marionette	INFO	Listening on port 50416 1509451692919	Marionette	WARN	TLS certificate errors will be ignored for this session 1509451692997	Marionette	DEBUG	Register listener.js for window 4294967297 říj 31, 2017 1:08:13 ODP. org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C 1509451693366	Marionette	DEBUG	Received DOM event ""beforeunload"" for ""about:blank"" 1509451694400	Marionette	DEBUG	Received DOM event ""beforeunload"" for ""about:blank"" 1509451694402	Marionette	DEBUG	Received DOM event ""pagehide"" for ""about:blank"" 1509451694402	Marionette	DEBUG	Received DOM event ""unload"" for ""about:blank"" 1509451694430	Marionette	DEBUG	Received DOM event ""DOMContentLoaded"" for ""about:neterror?e=connectionFailure&u=http%3A//www.google.com/&c=UTF-8&f=regular&d=Firefox%20nem%C5%AF%C5%BEe%20nav%C3%A1zat%20spojen%C3%AD%20se%20serverem%20www.google.com."" Exception in thread ""main"" org.openqa.selenium.WebDriverException: Reached error page: about:neterror?e=connectionFailure&u=http%3A//www.google.com/&c=UTF-8&f=regular&d=Firefox%20nem%C5%AF%C5%BEe%20nav%C3%A1zat%20spojen%C3%AD%20se%20serverem%20www.google.com. Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z' System info: host: 'X5CG5457S2R', ip: '172.20.192.122', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '9.0.1' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=C:\Users\test\AppData\Local\Temp\rust_mozprofile.f36lqhJJAwaO, rotatable=false, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, moz:headless=false, platform=XP, specificationLevel=0, moz:accessibilityChecks=false, acceptInsecureCerts=true, browserVersion=56.0.2, platformVersion=6.1, moz:processID=43424, browserName=firefox, javascriptEnabled=true, platformName=XP}] Session ID: 75c5b271-9498-4d5d-8c44-bfcaa1b30b92 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:310) 	at com.romantester.webdriver.MyFirstTest.main(MyFirstTest.java:18) ``` Could you pleas help? Thank you very much","closed","","Namorkenilej","2017-10-31T12:19:32Z","2019-08-17T04:09:59Z"
"","4962","Selenium 3.6.0 with gecko 0.19 and FF version 56 is not working with Desired  capabilities","OS: Windows 8.1 Selenium Version: 3.6 Browser: Firefox version 56.0.1  We are trying to run  Selenium Grid via selenium 3.6 jar file using geckodriver version 0.19 on firefox 56 but the browser is getting open but desired URL is not opening   Steps to reproduce - public class Grid  {  	public static void main(String[] args) throws MalformedURLException  { 		 		System.setProperty(""webdriver.gecko.driver"", ""path of geckodriver.exe""); 		WebDriver driver = new FirefoxDriver(); 		 		DesiredCapabilities cap = DesiredCapabilities.firefox(); 		cap.setBrowserName(""firefox""); 		cap.setPlatform(Platform.WIN8_1); 		 String nodeUrl = ""http://localhost: 4444/wd/hub""; 			driver = new RemoteWebDriver(new URL(nodeUrl),cap); 			 driver.get(""http://www.google.com""); 		   	  } 	 	}  Browser Version: 56.0(32 bit) Expected Behavior -  driver.get() should redirect to the URL(google)entered  Actual Behavior - Browser is getting opened with blank URL and we are getting Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Unable to create new service: ChromeDriverService ![desiredcapabilites](https://user-images.githubusercontent.com/33118230/32044681-d692c522-ba5b-11e7-9aff-dc14b30fb6f0.jpg) Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z'  Note: I have run hub by using below command java -jar selenium-server-standalone-3.6.0.jar -role hub  2. I have run grid by using below command  java -jar selenium-server-standalone-3.6.0.jar -role node  -hub http://localhost:4444/grid/register -port 5566","closed","R-awaiting answer,","Smith191","2017-10-26T09:13:09Z","2019-08-17T02:09:57Z"
"","5697","Unable to connect Google Calendar Account","OS: Windows 10, MacOS  Selenium-standalone version: 6.13.0  Chrome driver: 2.37-x64-chromedriver  Browser: Chrome  Browser Version: Version 65.0.3325.181 (Official Build) (64-bit)  **## Expected Behavior** User is expected to register connect Google Calendar Account as an external service. The user is faced with the standard Google login process - three screens, one each for user id, password, and authorization acceptance. The user provides the appropriate information on the first two screens, clicking next after populating the input, and then clicks Allow on the final input, at which point he is redirected back to the Application having authorized his usage of Google.  **## Actual Behavior** The google username screen and password screen is displayed as expected, however the third step where the google interface renders the Authorize permissions screen instead renders a white page (see screenshot).  ![e633767422a7d9e8d316e07571bff830](https://user-images.githubusercontent.com/15190546/38016258-2952909c-3277-11e8-89d0-eba827255414.png)","closed","","AntaninaKaltsova","2018-03-28T08:16:53Z","2019-08-16T07:09:57Z"
"","4820","Firefox browser change size  in between running test","OS: Windows -7 64 bit Selenium Version: 3.5.1, 3.5.2, 3.5.3, 3.6.0 Gecko Driver 0.18.0 Browser: Firefox  Browser Version: 55.0.3, 56  Expected Behavior -  Browser should run full Test in maximize.  Actual Behavior -  Firefox minimize in between running test.  [Firefox Minimize.zip](https://github.com/SeleniumHQ/selenium/files/1362539/Firefox.Minimize.zip)  For example:-(Run this code, test case run but firefox minimize)  package testCases;  import org.testng.annotations.Test;  import org.testng.annotations.BeforeTest;  import java.util.List; import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.Dimension; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.remote.CapabilityType; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait; import org.testng.Assert; import org.testng.annotations.AfterTest;  public class FireFx {  public WebDriver driver; @test public void doSearch() throws InterruptedException {    WebElement element = driver.findElement(By.name(""q""));     element.sendKeys(""Cheese!\n"");      element.submit();      // wait until the google page shows the result     WebElement myDynamicElement = (new WebDriverWait(driver, 10))               .until(ExpectedConditions.presenceOfElementLocated(By.id(""resultStats"")));      List findElements = driver.findElements(By.xpath(""//*[@id='rso']//h3/a""));      // this are all the links you like to visit     for (WebElement webElement : findElements)     {         System.out.println(webElement.getAttribute(""href""));     }     Thread.sleep(2000);     WebElement element1 = driver.findElement(By.linkText(""Cheese - Wikipedia""));     element1.click();     Thread.sleep(2000);     Assert.assertEquals(""Cheese - Wikipedia"", driver.getTitle());   System.out.println(""Successfully!!!""); }  @beforetest public void beforeTest() {    System.setProperty(""webdriver.gecko.driver"", ""Path\\geckodriver.exe"");    	driver = new FirefoxDriver();   driver.get(""http://www.google.com"");    driver.manage().window().maximize();   driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); }  @aftertest public void afterTest() {  driver.close(); }  }","closed","R-awaiting answer,","Vinaypawar77","2017-10-06T11:35:35Z","2019-08-17T06:09:53Z"
"","5234","Python --Trigger search results twice, ChromeDriver with User Agent","OS: macOS Selenium Version: 3.8.0 Browser: Chrome  I am facing an issue while using ChromeDriver with user agent, it triggered the serach result twice, 1 search result with provieded cookie and then it automatically refresh the results with my current location, code snippet is:  options = Options() options.add_argument(""--user-agent=Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1"") driver = webdriver.WebDriver(driver_path, options=options) driver.get(""http://www.google.com"") driver.add_cookie({     'domain': '.google.com',  # note the dot at the beginning     'name': 'UULE',     'value': 'a+cm9sZToxCnByb2R1Y2VyOjEyCnByb3ZlbmFuY2U6Ngp0aW1lc3RhbXA6MTQ2OTA5Mzk0ODg4NDAwMApsYXRsbmd7CmxhdGl0dWRlX2U3OjQwNzU5Mzk0MQpsb25naXR1ZGVfZTc6LTczOTY5Nzc5NQp9CnJhZGl1czozNTM0MA==',     'path': '/',     'expires': time.time() + (60 * 60 * 24),     'secure': True, }) search = driver.find_element_by_name('q') search.send_keys(""Coffee"") search.send_keys(Keys.RETURN)","closed","","masajid390","2017-12-19T13:21:15Z","2019-08-16T20:09:43Z"
"","5318","org.openqa.selenium.SessionNotCreatedException: session not created exception","org.openqa.selenium.SessionNotCreatedException: session not created exception from disconnected: unable to connect to renderer   (Session info: chrome=63.0.3239.84)   (Driver info: chromedriver=2.34.522932 (4140ab217e1ca1bec0c4b4d1b148f3361eb3a03e),platform=Mac OS X 10.13.2 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 1.40 seconds Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z' System info: host: 'zhMacBook-Air.local', ip: 'fe80:0:0:0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.2', java.version: '1.8.0_77' Driver info: driver.version: ChromeDriver  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at com.zlb.uiautomation.BaiduTest.test(BaiduTest.java:25) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:571) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116) 	at org.testng.TestNG.runSuites(TestNG.java:1028) 	at org.testng.TestNG.run(TestNG.java:996) 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72) 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)","closed","","zhenglibao168","2018-01-10T08:02:13Z","2019-08-15T19:09:55Z"
"","4829","OperaDriver error output","OperaDriver opens opera browser when initialized, but then opens internet explorer when any url is hit with driver.get();","closed","","ghost","2017-10-09T14:04:51Z","2019-08-17T08:09:46Z"
"","5208","Copying file from Linux to NAS Share with Java (Apache FileUtils FileCopy)","One of the developers here has written some Java code which uses the Apache FileUtils FileCopy command to copy a csv from a host server (linux) to a file share ([EMC](https://mindmajix.com/emc-san-storage-training) NAS).  The share's setup such that 'Everyone' has 'Full Control' (i.e. to ensure there are no permissions issues - we'll later restrict permissions once things are proven to work).  The code runs under TomCat/Apache.  It works copying the file from one directory on the host server to another; just not when attempting to copy to the remote share (no errors appear to be thrown / nothing happens - the code just continues as if the copy had worked, but nothing shows up in the destination). The same issue occurs when attempting to write a new file to the share.  http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html  Has anyone seen this behaviour before / any ideas what may cause it?   Thanks in advance. Gnanasekar","closed","","gnanasekar6914","2017-12-12T09:27:27Z","2019-08-16T21:09:39Z"
"","4822","Rselenium in parallel: error when try to open page in a node","On following site: Run RSelenium in parallel, I have found out how to open multiply browsers (sessions) in parallel using parallel package:  ```  library(RSelenium) library(rvest) library(magrittr) library(foreach) library(doParallel)  # number of cores (cl %  makeCluster) %>% registerDoParallel  # open a remoteDriver for each node on the cluster # docker run -d -p 4445:4444 selenium/standalone-chrome:3.4.0 clusterEvalQ(cl, {   library(RSelenium)   remDr","closed","R-awaiting answer,","mislav0207","2017-10-06T19:14:25Z","2019-08-17T05:09:39Z"
"","4932","node/selenium-webdriver: allow maximum number of portprober attempts to be configured","On busy automation boxes, the default value of 10 is not sufficient to reliably discover an available port number. This manifests as our Selenium test suite failing somewhat randomly during our working day.  Set `process.env.SELENIUM_MAX_PORT_PROBES` to configure this as needed.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","shinypb","2017-10-23T20:33:00Z","2017-11-06T21:15:47Z"
"","4973","IEDriver 3.6 - save_screenshot doesn't save what browser is rendering on particular pages","On Windows 10 64 bit full stack updated With Selenium 3.6 IEDriver 3.6  this  browser.save_screenshot('screenshot.png')  will not save what the browser is rendering.  i tried to a lot of public website to reproduce the issue, but i'm not able to reproduce it.  this happens in my customer web application, page is protected and i cannot share it.  other webdriver works as aspected and there is not a loading time issue because i'll wait a 15 seconds before taking screenshot (2 second can be sufficient).  This is what IE is rendering  ![image](https://user-images.githubusercontent.com/2149815/32112242-fde0e1b8-bb3c-11e7-9964-d5df3d113c5c.png)  This is what the keyword save in the screenshot  ![image](https://user-images.githubusercontent.com/2149815/32112251-0368c196-bb3d-11e7-8071-04470282c9d2.png)  where are the left and right colum gone?","closed","D-IE,","andreabisello","2017-10-27T15:34:25Z","2020-06-24T23:54:49Z"
"","4937","Win 10 Ie11 : Unable to set/get window size upgrading from IEDriver 3.4 to IEDriver 3.6","On Windows 10 64 bit full stack updated With Selenium 3.6 IEDriver 3.6  this  ``` from selenium import webdriver browser = webdriver.Ie() browser.set_window_size(1300, 1000) ``` will not change window size and this  `print(browser.get_window_size())`  returns  > {'message': 'Command not found: GET /session/cca537b7-5bc0-49ee-972e-400d9cf1ddb5/window/size', 'value': None, 'error': 'unknown method'}  On Chrome set_window_size works and get_window_size returns the right dimension.  This is a regression , because with IEDriver 3.4, it works without error also on IE11.","closed","D-IE,","andreabisello","2017-10-24T07:44:19Z","2019-08-16T20:10:03Z"
"","5203","Take element screenshot","Now that Chrome supports element screenshots: https://developers.google.com/web/updates/2017/08/devtools-release-notes#node-screenshots  I wonder if it is possible to support element screenshot in Selenium as well?","closed","","tinganho","2017-12-11T13:20:42Z","2019-08-16T21:09:47Z"
"","5759","turn on http keep alive while using ChromeDriver","need chrome driver 2.35 or above fix #5758  - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5759)","closed","C-nodejs,","awarecan","2018-04-11T01:59:04Z","2019-09-03T22:33:40Z"
"","5202","Is it possible to ByPass IE-Protected mode setting from selenium??","My IT has disabled protected mode setting for ""Local Intranet and Trusted Sites"" I am getting below error    _Exception in thread ""main"" org.openqa.selenium.NoSuchSessionException: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones. (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 65 milliseconds_   When I am using the capability **""capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS,true);**"" getting this error :: capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS,true);   Can anyone help me in this out as it has become a blocker for me?","closed","","TARIFABBAS","2017-12-11T11:39:22Z","2019-08-16T21:09:48Z"
"","4851","Searches for incorrect chromedriver on Win32","My Chromedriver came as a binary with the name `chromedriver` but `selenium-webdriver` looks for `chromedriver.exe` if on Windows:  `selenium-webdriver/chrome.js contains` the line (numbered 151-152):  ``` const CHROMEDRIVER_EXE =     process.platform === 'win32' ? 'chromedriver.exe' : 'chromedriver'; ```  No patch, as no idea why you are looking for the .exe extension, if everyone has that extension, how you'd work around this, etc.  Lee  ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","leegee","2017-10-11T17:19:35Z","2019-08-17T07:10:03Z"
"","5210","Unable to trigger OnChange event in dropdown using Selenium Webdriver for pega based application","My application is built using Pega 7.1.8. I am facing issue in selecting value from one of the dropdown in popup(Modal window) using selenium WebDriver. I have 2 dropdowns in popup(Modal window). Based on selection of value in 1st dropdown  the value in 2nd dropdown gets populated. And based on value selected in 2nd dropdown some additional fields in the popup will be displayed. There is an OnChange event in HTML that exists for both the dropdown. I am able to select value in 1st dropdown but I am unable to select value from 2nd dropdown. I used Select option in selenium WebDriver to select value from 1st dropdown.  If I use the same code in 2nd dropdown I am getting Activity Status error from Pega. The value is getting selected in UI but getting error from Pega.   When I discussed with developers they told that they have written some backend verification logic on selection of value in 2nd dropdown which works when OnChange event in dropdown is triggered. Automation code is unable to trigger OnChnage event in 2nd dropdown. I also tried with Click and select using Xpath, SendKeys, Tab, JavaScript but nothing is solving the issue.  I am using Selenium Ver 3.4 and ChromeDriver Version 2.33 and IE Driver version 3.4 and ChromeBrowser Version -60 and IE Browser version – 11. The issue exists only in browsers opened using automation. Attached is the detailed problem statement document.  Below is the HTML of 2 dropdowns.  1st dropdown:  SelectDMSFile TransferMiscellaneousSMS  2nd dropdown:  Select [Pega_Selenium_dropdown.docx](https://github.com/SeleniumHQ/selenium/files/1551453/Pega_Selenium_dropdown.docx)","closed","","rsbkumar","2017-12-12T11:55:32Z","2019-08-16T21:09:38Z"
"","5715","selenium can no longer send keys to Firefox after upgrading selenium and geckodriver","minimal testcase repro here (just run ""npm test""): https://github.com/mo/e2e-bug-repro  When I upgraded ""wdio-selenium-standalone-service"" from 0.0.9 to 0.0.10 I stopped being able to send keys to Firefox via geckodriver.  wdio-selenium-standalone-service 0.0.9 uses ""selenium-standalone"" 6.5.0 which in turn uses selenium 3.4.0 and geckodriver 0.16.1  wdio-selenium-standalone-service 0.0.10 uses ""selenium-standalone"" 6.13.0 which in turn uses selenium 3.8.1 and geckodriver 0.19.1  If you want to downgrade the ""wdio-selenium-standalone-service"" npm package run ""npm install --save wdio-selenium-standalone-service@0.0.9""  If you want to look at the selenium / geckodriver logs, open the ""e2e-bug-repro"" directory in another terminal and then run ""./node_modules/.bin/selenium-standalone start -- -debug"" and then run ""npm run test-firefox-only"" to trigger the bug.  I have also tried to upgrade to geckodriver 0.20.0 with selenium 3.8.1, but the testcase still does not pass in Firefox. I also built selenium from git and tried that, and it still doesn't pass in Firefox.  The selenium log (including geckodriver at TRACE level) outputs this: ``` 19:15:31.766 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@dee028a 19:15:31.766 INFO - Handler thread for session d58c9d0f-8eb5-49fa-88d5-1149cd2ece79 (firefox): Executing POST on /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79/keys (handler: ServicedSession) 19:15:31.770 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@dee028a 19:15:31.770 INFO - Handler thread for session d58c9d0f-8eb5-49fa-88d5-1149cd2ece79 (firefox): Executing POST on /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79/actions (handler: ServicedSession) 19:15:31.881 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@dee028a 19:15:31.882 INFO - Handler thread for session d58c9d0f-8eb5-49fa-88d5-1149cd2ece79 (firefox): Executing DELETE on /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79 (handler: ServicedSession) 19:15:31.882 DEBUG - CookieSpec selected: default 19:15:31.882 DEBUG - Auth cache not set in the context 19:15:31.882 DEBUG - Connection request: [route: {}->http://localhost:2790][total kept alive: 5; route allocated: 0 of 2000; total allocated: 5 of 2000] 19:15:31.882 DEBUG - Connection leased: [id: 39][route: {}->http://localhost:2790][total kept alive: 5; route allocated: 1 of 2000; total allocated: 6 of 2000] 19:15:31.882 DEBUG - Opening connection {}->http://localhost:2790 19:15:31.883 DEBUG - Connecting to localhost/127.0.0.1:2790 19:15:31.883 DEBUG - Connection established 127.0.0.1:60258127.0.0.1:2790 19:15:31.883 DEBUG - http-outgoing-39: set socket timeout to 10800000 19:15:31.883 DEBUG - Executing request DELETE /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79 HTTP/1.1 19:15:31.883 DEBUG - Target auth state: UNCHALLENGED 19:15:31.883 DEBUG - Proxy auth state: UNCHALLENGED 19:15:31.883 DEBUG - http-outgoing-39 >> DELETE /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79 HTTP/1.1 19:15:31.883 DEBUG - http-outgoing-39 >> Host: localhost:2790 19:15:31.883 DEBUG - http-outgoing-39 >> Connection: Keep-Alive 19:15:31.883 DEBUG - http-outgoing-39 >> User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_161) 19:15:31.883 DEBUG - http-outgoing-39 >> Accept-Encoding: gzip,deflate 19:15:31.883 DEBUG - http-outgoing-39 >> ""DELETE /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79 HTTP/1.1[\r][\n]"" 19:15:31.883 DEBUG - http-outgoing-39 >> ""Host: localhost:2790[\r][\n]"" 19:15:31.884 DEBUG - http-outgoing-39 >> ""Connection: Keep-Alive[\r][\n]"" 19:15:31.884 DEBUG - http-outgoing-39 >> ""User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_161)[\r][\n]"" 19:15:31.884 DEBUG - http-outgoing-39 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 19:15:31.884 DEBUG - http-outgoing-39 >> ""[\r][\n]"" 1522602931884	webdriver::server	DEBUG	-> DELETE /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79  1522602931884	geckodriver::marionette	TRACE	-> 37:[0,3,""quit"",{""flags"":[""eForceQuit""]}] 1522602931884	Marionette	TRACE	0 -> [0,3,""quit"",{""flags"":[""eForceQuit""]}] 1522602931886	Marionette	DEBUG	New connections will no longer be accepted 1522602931924	Marionette	TRACE	0 > ""Host: localhost:2790[\r][\n]"" 19:15:31.968 DEBUG - http-outgoing-40 >> ""Connection: Keep-Alive[\r][\n]"" 19:15:31.968 DEBUG - http-outgoing-40 >> ""User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_161)[\r][\n]"" 19:15:31.968 DEBUG - http-outgoing-40 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 19:15:31.968 DEBUG - http-outgoing-40 >> ""[\r][\n]"" 1522602931968	webdriver::server	DEBUG	-> DELETE /session/d58c9d0f-8eb5-49fa-88d5-1149cd2ece79  1522602931969	webdriver::server	DEBUG","closed","R-awaiting answer,","mo","2018-04-01T19:17:48Z","2019-08-16T07:09:48Z"
"","5058","setValue is omitting digit 3 while login using selenium and mochajs","Meta: selenium-standalone: 3.4.0 chromedriver: 2.38 mocha: 3.2.0, webdriverio: 4.5.2 npm: 5.5.1 node: v8.4.0 OS: mac 10.13.1  `loginSU(data) { this.withPass.click() //const dtls = Object.assign({}, loginDtls) b.pause(2000) this.phone.setValue(""9833445678"") b.pause(2000) this.password.setValue(""123456"") this.loginBtn.click() } ` This is my login function which I am calling in my index.js file  `it('should select' +' '+ service + ' '+' service and ask for login if owner is not logged in',()=>{ if(Homepage.loginModal.isVisible() == true){ Homepage.loginSU() b.debug() assert.equal(Homepage.prop_pic.isVisible(), true) } else{ console.log('user is already logged in') } }) `  Issue: When I run the test, it enters the number and password omitting digit 3 due to which the test case is filling.  Kindly help with the issue as I do not find any related issue on stack.","closed","R-awaiting answer,","suwarna-wade","2017-11-15T11:12:12Z","2019-08-16T23:10:04Z"
"","5786","selenium.common.exceptions.WebDriverException: Message: unknown error: chrome failed to start","Meta - OS: Win10  Selenium Version: 3.11.0    Browser: Chrome   Browser Version:  Chrome 65   ## Expected Behavior Run selenium and webdriver  ## Actual Behavior selenium.common.exceptions.WebDriverException: Message: unknown error: chrome failed to start  ## Steps to reproduce I have two identical Dell computers both runs win 10 64 bit, python 3.6.5, selenium 3.11.0, chromedriver 2.3.7. First computer runs perfectly but the second one has error: _selenium.common.exceptions.WebDriverException: Message: unknown error: chrome failed to start_  Full error: ``` Traceback (most recent call last):   File ""C:\Users\kristof\AppData\Local\Programs\Python\Python36\.pyProjects\vcasdgas\exdasfgsal.py"", line 11, in      browser = webdriver.Chrome()   File ""C:\Users\kristof\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 75, in __init__     desired_capabilities=desired_capabilities)   File ""C:\Users\kristof\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""C:\Users\kristof\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Users\kristof\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""C:\Users\kristof\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: chrome failed to start   (Driver info: chromedriver=2.37.544315 (730aa6a5fdba159ac9f4c1e8cbc59bf1b5ce12b7),platform=Windows NT 10.0.16299 x86_64) ```","closed","","r8w9a5k","2018-04-17T10:46:12Z","2019-08-16T05:09:56Z"
"","5727","Delay each execution step for debugging purposes","Loads of Selenium stackoverflow questions regarding slowing test execution down to a pace visible by the human eye.  Implicit waits seem to be the play, but it's not _exactly_ what people want and the benefit from just _delaying all executions_ so that they are visible would be fantastic for debugging.  Has this already been done?","closed","","Freyert","2018-04-03T17:43:56Z","2019-08-16T07:09:45Z"
"","5556","Testing Payment Request Api","Link: https://paymentrequest.show/demo/  Is it possible to test user interaction with this api?","closed","","petvas","2018-03-01T20:03:56Z","2019-08-15T22:09:36Z"
"","5268","Selenium Java-facing issue while running IE script","Java Selenium- We use either Virtual Machine or cloud to run Scripts.  Virtual Machine- When we actually working on Virtual machine it means when it is active then scripts are passing but when virtual Machine disconnect(disconnection might be because of any reason like we manually disconnected or machine shut down or suppose if I just locked machine and went then after some time it will disconnect automatically.) that time scripts are failing. When analyzed then got to know that its just opening IE browser then entering url but after that its not entering username password not even clicking button nothing is happening and scripts are failing.  Cloud: on aloud also we facing similar issue as I mentioned above for VM but additional to that for VM when you lock(windows+L) machine then it is working fine till VM get disconnect but for cloud even if you lock or even minimize that cloud then also scripts are failing.  Note: Chrome scripts are working fine in any condition.","closed","","madhur-dumane","2017-12-27T05:42:58Z","2019-08-16T19:09:39Z"
"","5761","`getVisibleText` vs `getElementText`, regression?","It seems we may have at some point broken the ability to get the text of an element.  I did a PR last year (#4230) to introduce shadow tree traversal when retrieving element text.  The general idea of this PR was to modify [getElementText](https://github.com/SeleniumHQ/selenium/blob/47706e36d0bbad98a4584b10f582837d1ad5711d/javascript/selenium-atoms/text.js#L174) such that it will follow distributed children through `slot` and `content` elements, along with taking `shadowRoot` into account on each element.  However, having (painfully) stepped through the latest selenium source, it seems we now call [getVisibleText](https://github.com/SeleniumHQ/selenium/blob/74e584d12ba31bb2e1b61b17a4751402c70c6da6/javascript/atoms/dom.js#L998) instead.  This function _appears_ to have knowledge of shadow dom, but presumably has a bug somewhere which im hitting (and trying to reproduce for you).  So:  * can someone explain `selenium-atoms` vs `atoms`? * why do we have two apparently unrelated functions to retrieve element text? * we used to use `getElementText` in some way because older versions of selenium don't have the problem im seeing  **The issue is that _some_ shadow DOM children return empty text but do have text**  Selenium is incredibly difficult to debug and often involves jumping through many hoops. So without spending another several hours trying to get my head around it, i cant really figure out where these ""atoms"" go and how they are used. if someone could give an overview somewhere, that would be _very_ useful.  I had to pretty much attach to the chrome instance (devtools), break, then try to access the text of the element in my tests so my devtools catches the injected code. the injected code is obviously minified by this point and near unreadable. is there a better debug process/method for debugging the injected JS?  **FYI, executing `getElementText` manually (through a very hacky execute call via webdriver) on the element results in the correct text.**  ---  edit: i opened #5762 for this","closed","D-atoms,","43081j","2018-04-11T12:03:05Z","2019-08-16T04:09:43Z"
"","5241","Chrome's force-device-scale-factor flag is not respected","It seems like Chrome's `force-device-scale-factor` is not respected. ```ts chromeOptions.addArguments('--force-device-scale-factor=2'); ``` yields:   whereas when I just run  ``` google-chrome --force-device-scale-factor=2 ```  `","closed","D-chrome,","tinganho","2017-12-21T01:19:48Z","2019-08-16T20:09:36Z"
"","5140","Do not call endpoint by ip by default","It makes not much sense to resolve hostname by default, especially in new environments where it's quite typical to expose services by name (nginx /apache virtualhosts, openshift routes).  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5140)","closed","C-py,","guandalf","2017-11-29T13:36:40Z","2019-03-07T10:46:20Z"
"","5177","Setting LogLevel and Log type via CLI when starting standalone.jar","It is more like a feature request. I am using the standalone-3.8.1.jar from console. In the [wiki ](https://github.com/SeleniumHQ/selenium/wiki/Logging)i find logging options which are not accessible via CLI like Log type and Loglevel  Using the command line i can only log to file ``` C:\xampp\htdocs\portal\app\webroot\selenium-tests\vendor\bin>java -jar selenium-server-standalone-3.8.1.jar -enablePassThrough false -h Usage:  [options]   Options:     --version, -version        Displays the version and exits.        Default: false     -browserTimeout         in seconds : number of seconds a browser session is allowed to        hang while a WebDriver command is running (example: driver.get(url)). If the        timeout is reached while a WebDriver command is still processing, the session        will quit. Minimum value is 60. An unspecified, zero, or negative value means        wait indefinitely.        Default: 0     -debug         : enables LogLevel.FINE.        Default: false     -enablePassThrough        : Whether or not to use the experimental passthrough mode.        Defaults to true.        Default: false     -jettyThreads, -jettyMaxThreads         : max number of threads for Jetty. An unspecified, zero, or        negative value means the Jetty default value (200) will be used.     -log         filename : the filename to use for logging. If omitted, will log        to STDOUT     -port         : the port number the server will use.        Default: 4444     -role         options are [hub], [node], or [standalone].        Default: standalone     -timeout, -sessionTimeout         in seconds : Specifies the timeout before the server        automatically kills a session that hasn't had any activity in the last X seconds. The        test slot will then be released for another test to use. This is typically        used to take care of client crashes. For grid hub/node roles, cleanUpCycle        must also be set.        Default: 1800 ```  Is this on the road map?","closed","I-enhancement,","q-jack","2017-12-06T10:01:02Z","2019-08-15T03:09:48Z"
"","5287","Start selenium grid hub with https://","Is there a way to start selenium grid hub with https:// instead of http://  Does any one did it? or is it possible to achieve it?  Thanks!!","closed","","ketanb007","2018-01-04T14:10:00Z","2019-08-16T18:09:59Z"
"","5489","Connect to opened IEBrowser via IEDriverServer","Is it real to make possible to connect to opened IE browser via IEDriverServer.exe? I was not found anything approaches to do this. It should be very usefull for debagging tests. A many web-applications contains tens of web-pages during a business processes journey. It's too hard to go on the needed web-page every times anew.","closed","","evgen-san","2018-02-13T14:44:39Z","2019-08-16T14:09:37Z"
"","5173","Selenium Issue with Firefox Version 54.0 getting Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting 45 seconds for Firefox to start. Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:26.402Z'","ip: '127.0.1.1', os.name: '', os.arch: '', os.version: '4.10.0-40-generic',  ## Meta - OS: Linux amd64    Selenium Version:  3.6.0, Eclipse IDE  Browser:   Firefox  java.version: '1.8.0_131' Web Drivers : geckodriver-v0.17.0-linux64.tar.gz Can we know the supported versions of Selenium and Firefox gecdrivers with Eclipse IDE and Java version?    Firefox version 54, Mozilla . As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver. Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:112) 	at org.openqa.selenium.firefox.XpiDriverService.start(XpiDriverService.java:97) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:217) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:140) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:98) 	at TestSele36.main(TestSele36.java:13) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:14720/hub/status] to be available after 45007 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) 	at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:110) 	... 8 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(FutureTask.java:205) 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:147) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) 	... 9 more","closed","R-awaiting answer,","nravi07","2017-12-06T08:41:05Z","2019-08-16T13:09:52Z"
"","5767","Create selenium information scraper","Information Scraper  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","sillyback4","2018-04-12T08:00:01Z","2018-04-12T10:53:48Z"
"","4978","provide a ""LATEST"" txt file in the binary folder","in order to automate upgrading of drivers, i want to create a script that download the latest version of the driver and store it in a json file. if a new version is avaiable, it will download again.  with chrome driver, i can use the LATEST_RELEASE in https://chromedriver.storage.googleapis.com/index.html to mach the latest url.  Can you provide the same file in this http://selenium-release.storage.googleapis.com/index.html folder ?","closed","I-enhancement,","andreabisello","2017-10-30T10:45:43Z","2021-09-20T00:05:54Z"
"","5476","until.elementIsNotLocated","In my automation I have to wait until.elementIsNotLocated. In my case I should wait while the loader spinner is presented. I would like to have this additional method. The implementation is really easy, quite similar to ```until.elementIsLocated``` (and it works just fine):  In selenium-webdriver/lib/until.js  ``` /**  * Creates a condition that will loop until an element is  * {@link ./webdriver.WebDriver#findElement found} with the given locator.  *  * @param {!(By|Function)} locator The locator to use.  */ exports.elementIsNotLocated = function elementIsNotLocated(locator) {   locator = by.checkedLocator(locator);   let locatorStr =       typeof locator === 'function' ? 'by function()' : locator + '';   return new Condition('for element not to be located ' + locatorStr,       function(driver) {         return driver.findElements(locator).then(function(elements) {           return elements.length == 0;         });       }); }; ```","closed","C-nodejs,","AlexLibs","2018-02-09T20:31:02Z","2019-08-14T20:09:44Z"
"","5218","Units for 'timeout' and 'browserTimeout' parameters in json config are changed since v3.x from ms to sec","In grid v2.x all timeouts in json configuration files were in ms. But during migration to grid v3.8 I found that `timeout` and `browserTimeout` now must be defined in seconds (in json). Below is table with time units used for timeouts when defined from command-line interface (CLI) and in json for v2.x and for v3.x  parameter | v2.x, CLI | v3.x, CLI | | v2.x, json | v3.x, json ------------ | -------- | ----------|-|----------|-------------- timeout      |  sec       |  sec        | | **ms**        | **sec**  :warning:  browserTimeout |sec | sec        | | **ms**        | **sec** :warning:  all others         |   ms      | ms          | |ms          | ms  The units used among properties in json for v3.x are not consistent and very confusing: some timeouts in ms (nodeStatusCheckTimeout, unregisterIfStillDownAfter, newSessionWaitTimeout etc) while others (timeout, browserTimeout) use seconds. During migration I don't expect those changes because **all parameter's names remain the same while units changed**. Also there are no any notes about this in [wiki](https://github.com/SeleniumHQ/selenium/wiki/Grid2#configuring-the-nodes-by-json)    Sure, there is command-line help where we can read about time units.  But there are many configurations, guides etc which use the 'old' units:  *  [official appium documentation](http://appium.io/slate/en/master/?ruby#selenium-grid) (at moment)   * #2973  * #3371  Againg, most of users are not aware about those changes and continue to use old ones after migration to v3.x. This should be either documented or fixed.  I propose to introduce new parameter names and raise exception if someone continue to use old ones. For consistency all params (json, cli) should be defined in ms.","closed","C-grid,","kool79","2017-12-13T19:08:54Z","2020-05-20T23:01:40Z"
"","5400","[Node JS API] What's the point of the weakmap in exec.js...?","In exec.js, I can see:      const COMMAND_RESULT = /** !WeakMap> */new WeakMap;     const KILL_HOOK = /** !WeakMap */new WeakMap;      class Command {         constructor(result, onKill) {           COMMAND_RESULT.set(this, result);           KILL_HOOK.set(this, onKill);         }         // ...     }  Why the Weakmap? I mean, why not just:      class Command {         constructor(result, onKill) {           this.result = result           this.onKill = onkill         }         // ...     }  ...?","closed","","mercmobily","2018-01-27T00:40:31Z","2019-08-16T15:10:00Z"
"","4812","Remove desiredCapabilities from newSession call to driver","In a recent commit ( https://github.com/SeleniumHQ/selenium/commit/788936fa0597d0755185fa89566381d9555bf5a4 ) , the ""requiredCapabilities"" key was removed from the parameters sent in a ""newSession"" call. Could the ""desiredCapabilities"" be removed too ?  It is also an invalid field: https://github.com/mozilla/geckodriver/issues/991#issuecomment-333892309  I can send a PR if you approve this change.  I think it's just a matter of removing the `streamJsonWireProtocolParameters` method: https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/ProtocolHandshake.java#L143","closed","C-java,","Lucas-C","2017-10-05T15:18:43Z","2019-08-17T08:09:59Z"
"","5205","NPM bump latest releases to npm","In [npm selenium page](https://www.npmjs.com/package/selenium-webdriver) the latest version showing there is the: **3.6.0** but the latest version is [selenium-3.8.1](https://github.com/SeleniumHQ/selenium/releases).  Thanks","closed","C-nodejs,","Fetz","2017-12-11T16:58:42Z","2019-08-16T17:09:57Z"
"","5454","Improvement for ....interactions.Actions #5346","Improvement for org.openqa.selenium.interactions.Actions #5346 https://github.com/SeleniumHQ/selenium/issues/5346  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","IlyaNaumovich","2018-02-07T13:31:24Z","2019-06-23T17:17:15Z"
"","5796","Not able to select origin and destination city using selenium webdriver","import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; public class testMakemyTripSlider {  	public static void main(String[] args) throws InterruptedException {  System.setProperty(""webdriver.chrome.driver"",""C:\\PIYUSH\\Selenium\\Way2Automation\\Software\\Chrome Driver_win32\\chromedriver.exe""); WebDriver driver=new ChromeDriver();  		 		driver.get(""https://www.makemytrip.com/""); 		Thread.sleep(3000); 		 		driver.findElement(By.xpath("".//*[@id='hp-widget__sTo']"")).click(); 		 		driver.findElement(By.xpath("".//li[@class='ui-autocomplete-category'][@aria-label='Top Cities : Goa, India ']"")).click();      Issue is on destination or origin as soon as I write By.xpath("".//*[@id='hp-widget__sTo']"")).click();  drop down opens but now I cannot select any city from dropdown list  using code By.xpath("".//li[@class='ui-autocomplete-category'][@aria-label='Top Cities : Goa, India ']"")).click();    q1) New to selenium so kindly provide the detail code if possible that helps to explain how to select city in drop down list q2) Need to select any date similarly and click on select to proceed to next screen   --->                        not require large code present in youtube . scenario is just to select one date from drop down for date field and proceed next    Regards Piyush","closed","","PIYUSHJAIN1984","2018-04-18T11:34:38Z","2019-08-16T05:09:49Z"
"","4995","INFO: Attempting bi-dialect session, assuming Postel's Law holds true on the remote end","import java.net.MalformedURLException; import java.net.URL;   import org.openqa.selenium.Platform; import org.openqa.selenium.WebDriver; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.remote.RemoteWebDriver; import org.testng.annotations.Test;   public class gridwindows  {   @Test public void runChrome() throws MalformedURLException {   // We have to mention browser which we want to use for test execution DesiredCapabilities cap=DesiredCapabilities.chrome();   // Set the platform where we want to run our test- we can use MAC and Linux and other platforms as well cap.setPlatform(Platform.WINDOWS);   // Here you can use hub address, hub will take the responsibility to execute the test on respective node URL url=new URL(""http://localhost:4444/wd/hub"");   // Create driver with hub address and capability WebDriver driver=new RemoteWebDriver(url, cap);   // start application driver.get(""http://learn-automation.com/""); driver.manage().window().maximize();   // get the title and print the same System.out.println(""Blog title is ""+driver.getTitle());   //driver.close();   }   I have this code that runs 1st time but whenever I try to run again it shows an error message like:  Nov 02, 2017 2:27:08 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Attempting bi-dialect session, assuming Postel's Law holds true on the remote end   Please let me know how to resolve the issue!!!","closed","","aarbie","2017-11-02T06:32:31Z","2019-08-17T03:09:50Z"
"","5491","Online Selenium API docs have JS errors","If you open [the main URL](https://seleniumhq.github.io/selenium/docs/api/javascript/index.html) and click on ""WebElement"" in the sidebar, navigation fails and this error appears in the console:  ``` Uncaught TypeError: Cannot assign to read only property '0' of string 'W'     at af (dossier.js:95)     at dossier.js:95     at Array.forEach ()     at t (dossier.js:9)     at $e (dossier.js:95)     at dossier.js:7     at Array.forEach ()     at t (dossier.js:9)     at I (dossier.js:94)     at new Tf (dossier.js:106) ```  I'm seeing this error a lot when clicking around the API docs.","closed","C-nodejs,","kaiyoma","2018-02-13T21:26:46Z","2019-08-16T11:10:02Z"
"","5745","Its possible record  TV shows with selenium","If you know a TV streaming site (without captcha)  can i use selenium for record it (just  click at play button, record it during a planned time *240 minutes* no more)","closed","","HotelBellaMuerte","2018-04-09T14:07:02Z","2019-08-16T06:09:51Z"
"","4974","Send W3C capabilities in the new session request.","If the Selenium standalone server only finds legacy capabilities in the request, then it will assume that the client doesn't speak W3C, and will return a legacy response. Sending a request that includes the W3C keys induces it to send a W3C response.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","juangj","2017-10-27T20:13:02Z","2017-11-03T19:21:15Z"
"","4910","The requested URL could not be retrieved","Ie sets the proxy and reports the following exceptions： The following error was encountered while trying to retrieve the URL: http://127.0.0.1:56739/session","closed","D-IE,","jqs1124","2017-10-19T13:06:41Z","2021-09-05T08:35:56Z"
"","5167","[py3] selenium.common.exceptions.WebDriverException","I've got this Python 3 code:      login_username = ""username""     login_password = ""password""      driver = webdriver.Firefox()     driver.get(""url"")      def login():         username = driver.find_element_by_name(""tbUserName"")         password = driver.find_element_by_name(""tbPassword"")         username.send_keys(login_username)         password.send_keys(login_password)         time.sleep(1)         driver.find_element_by_name(""btnSubmit"").click()         time.sleep(1)         driver.refresh()         time.sleep(3)         get_content()      def get_content():         driver.get(different_url) # this url is seperate from the url above         events_ = driver.find_elements_by_css_selector(""div.textblock"")          I'm able to call `login()` (which calls `get_content()`) once. The next time I get the following error:      File ""main.py"", line 24, in handle     login()     File ""main.py"", line 27, in login     driver.get(url)     File ""C:\Users\reyna\AppData\Local\Programs\Python\Python35\lib\site-     packages\selenium\webdriver\remote\webdriver.py"", line 323, in get         self.execute(Command.GET, {'url': url})       File ""C:\Users\reyna\AppData\Local\Programs\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 311, in  execute         self.error_handler.check_response(response)       File ""C:\Users\reyna\AppData\Local\Programs\Python\Python35\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 237, in     check_response         raise exception_class(message, screen, stacktrace)     selenium.common.exceptions.WebDriverException: Message: Failed to write     response to stream  Note that when I say the next time I run it, I get the error, I mean the next time the functions are ran, not the entire script. Also, `driver.get(different_url)` is a new URL (the login cookies from the previous function are needed for this url). URL's have been changed for privacy reasons.  Help would be appreciated :grinning:","closed","","sometimescool22","2017-12-05T03:18:57Z","2019-08-16T22:10:04Z"
"","5311","[node.js] ""Execute"" event","I'm writing some integration tests, and my test runner has a feature where it can force tests to fail after some delay. Some tests describe longer interactions than others, and I can support this by setting the duration for each test individually.  However, this is not ideal because if the first command of some long-running test times out, the test runner will not recognize this until the extended duration has passed.  What I would like to do is increase the duration with every WebDriver command execution. This would obviate the need to maintain timeout values in proportion to the complexity of the test--the value would automatically expand as tests progressed. It would also make detecting timeouts more efficient generally (since the expected value would only be increased immediately prior to each operation).  Since the `Executor#execute` method is part of the public API, I could attempt to do this today by overwriting that method. However, although the method is public, the contract I'd be relying on (i.e. ""this method is invoked by the WebDriver internals for each command executed"") is not. So I'm requesting an explicit API to support my use case.  In the interest of being more constructive, I would suggest the Event Emitter pattern exposed either on the WebDriver instance of the Executor instance. In that case, usage would look something like the following:  ```js webdriver.getExecutor().on('execute', () => {   this.timeout(this.timeout() + 1000); }); ```  But I'm not too concerned with the API itself--if the maintainers agree that the use case is warranted, I'd be happy with any implementation.  I recognize that the WebDriver module supports timeout functionality itself, but I cannot rely on that completely--my tests perform other asynchronous operations that may time out. This functionality would allow me to maintain an appropriate value within the test runner.  Thanks for the great work!","closed","C-nodejs,","jugglinmike","2018-01-09T19:32:05Z","2021-09-05T08:35:53Z"
"","5596","Scroll to element stopped working","I'm using this method, for scroll down till the element is visible:  ``` var element = driver.FindElement(By.id(""element-id"")); Actions actions = new Actions(driver); actions.MoveToElement(element); actions.Perform(); ```  It stopped working, with last version of Chrome 65.0.3325.146, Chrome driver 2.36 and Selenium 3.10 I can not scroll to an element at the bottom of the page. No error, no exeption. Do you have any information, what happened with this method? Do you have any suggestions, how to scroll till element is visible?","closed","","mariankral","2018-03-12T07:35:02Z","2019-08-16T09:09:35Z"
"","4844","Selenium Firefox Profile Path different from FirefoxProfile.ProfileDirectory","I'm using Selenium 3.5.3, geckodriver V0.19, FF 56.0 Language: C#  My Goal: Get the real profile path of the currently used profile. Temp Location.  Issue: When I use: FirefoxProfile.ProfileDirectory it gives me a profile path like this: C:\Users\dan\AppData\Local\Temp\anonymous.1d23xxxxxx.webdriver-profile  But that path doesn't exist.  When I check the Troubleshooting Information within FF, I get the following profile path: C:\Users\dan\AppData\Local\Temp\rust_mozprofile.ydmZeTAJyfZe  And that's the real path.  I know I can specify a profile that is loaded by Selenium for FF. That is working fine. I need to find the TMP location. Because I need to save the profile after I'm done with my automation stuff.  Selenium copies the specified profile to a TMP location, and does not store it back to the location where it was loaded from.  So if someone has an idea how to extract the firefox TMP profile location from within C#, that would be great.  PS: Searching the folders in the profile directory directly, and checking for the name and creation time, wouldn't be optimal because I'm multi threading.","closed","D-firefox,","danwan","2017-10-10T20:46:25Z","2019-08-15T13:09:59Z"
"","5070","Webdriver: ExpectedConditions.invisibilityOf is not working as expected. Always throws an exception","I'm using ExpectedConditions.invisibilityOf to check the invisibility of one of the element, but every time it throws the timeout exception for wait.until(ExpectedConditions.invisibilityOf(elementTobeInvisible));  ## Meta - OS:  Windows 7 Selenium Version:  3.6.0 or 3.7.1 Browser:  Chrome Browser Version:  62.0.3202.94 (Official Build) (64-bit)   ## Scenario - As a user, I want to make sure element is invisible (neither it is visible nor it has become stale) before proceeding to the next action in my automation script.  I have below custom wrapper method which accepts the element and waits for given time period for that element to become invisible. If element is still visible, it should throw an exception  `protected void waitUntilElementGetsInvisible(WebElement elementTobeInvisible) {       WebDriverWait wait = new WebDriverWait(driver, 20);        wait.until(ExpectedConditions.invisibilityOf(elementTobeInvisible));     }`  ## Code -  `Start of the code  public class TestForElementInvisibility {  public static WebDriver driver;      @FindBy(id = ""some id"")     public static WebElement element;      public static void main(String[] args)     {         try {             System.setProperty(""webdriver.chrome.driver"", ""drivers/chromeDriver.exe"");             ChromeOptions option = new ChromeOptions();             driver = new ChromeDriver(option);             PageFactory.initElements(driver, TestForElementInvisibility.class);             driver.navigate().to(""https://www.google.com"");             waitUntilElementGetsInvisible(element);             driver.findElement(By.name(""q"")).sendKeys(""Some text"");         }         finally {             driver.quit();         }     }      protected static void waitUntilElementGetsInvisible(WebElement element) {         WebDriverWait wait = new WebDriverWait(driver, 10);         wait.until(ExpectedConditions.invisibilityOf(element));     }  }  End of the code`  ## Expected Behavior - While using the `wait.until(ExpectedConditions.invisibilityOf(elementTobeInvisible));` **user should be getting true if the element is not visible on the page**  ## Actual Behavior - While using the `wait.until(ExpectedConditions.invisibilityOf(elementTobeInvisible));` **user gets TimeoutException even though the element is not visible**  ## Stacktrace -  _""C:\Program Files\Java\jdk1.8.0_111\bin\java"" -Didea.launcher.port=7533 ""-Didea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.3.4\bin"" -Dfile.encoding=UTF-8 -classpath ""C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;Z:\functional-test\target\test-classes;Z:\functional-test\target\classes;C:\Users\userName\.m2\repository\com\google\guava\guava\23.0\guava-23.0.jar;C:\Users\userName\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\userName\.m2\repository\com\google\errorprone\error_prone_annotations\2.0.18\error_prone_annotations-2.0.18.jar;C:\Users\userName\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\userName\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\userName\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\userName\.m2\repository\com\thoughtworks\gauge\gauge-java\0.6.2\gauge-java-0.6.2.jar;C:\Users\userName\.m2\repository\org\reflections\reflections\0.9.10\reflections-0.9.10.jar;C:\Users\userName\.m2\repository\org\javassist\javassist\3.19.0-GA\javassist-3.19.0-GA.jar;C:\Users\userName\.m2\repository\com\google\code\findbugs\annotations\2.0.1\annotations-2.0.1.jar;C:\Users\userName\.m2\repository\com\github\javaparser\javaparser-core\2.3.0\javaparser-core-2.3.0.jar;C:\Users\userName\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\userName\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\userName\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\userName\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-java\3.7.1\selenium-java-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-api\3.7.1\selenium-api-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.7.1\selenium-chrome-driver-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.7.1\selenium-edge-driver-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.7.1\selenium-firefox-driver-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.7.1\selenium-ie-driver-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.7.1\selenium-opera-driver-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.7.1\selenium-remote-driver-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.7.1\selenium-safari-driver-3.7.1.jar;C:\Users\userName\.m2\repository\org\seleniumhq\selenium\selenium-support\3.7.1\selenium-support-3.7.1.jar;C:\Users\userName\.m2\repository\net\bytebuddy\byte-buddy\1.7.5\byte-buddy-1.7.5.jar;C:\Users\userName\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\userName\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\userName\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\userName\.m2\repository\com\google\code\gson\gson\2.8.2\gson-2.8.2.jar;C:\Users\userName\.m2\repository\org\apache\httpcomponents\httpclient\4.5.3\httpclient-4.5.3.jar;C:\Users\userName\.m2\repository\org\apache\httpcomponents\httpcore\4.4.6\httpcore-4.4.6.jar;C:\Users\userName\.m2\repository\com\jayway\restassured\rest-assured\2.9.0\rest-assured-2.9.0.jar;C:\Users\userName\.m2\repository\org\codehaus\groovy\groovy\2.4.4\groovy-2.4.4.jar;C:\Users\userName\.m2\repository\org\codehaus\groovy\groovy-xml\2.4.4\groovy-xml-2.4.4.jar;C:\Users\userName\.m2\repository\org\apache\httpcomponents\httpmime\4.5.1\httpmime-4.5.1.jar;C:\Users\userName\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\userName\.m2\repository\com\jayway\restassured\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\userName\.m2\repository\org\codehaus\groovy\groovy-json\2.4.4\groovy-json-2.4.4.jar;C:\Users\userName\.m2\repository\com\jayway\restassured\rest-assured-common\2.9.0\rest-assured-common-2.9.0.jar;C:\Users\userName\.m2\repository\com\jayway\restassured\xml-path\2.9.0\xml-path-2.9.0.jar;C:\Users\userName\.m2\repository\com\google\protobuf\protobuf-java\3.3.0\protobuf-java-3.3.0.jar;C:\Users\userName\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.0\jackson-core-2.9.0.jar;C:\Users\userName\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\userName\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.0\jackson-databind-2.9.0.jar;C:\Users\userName\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\userName\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\userName\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\userName\.m2\repository\org\jsoup\jsoup\1.10.2\jsoup-1.10.2.jar;C:\Users\userName\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\userName\.m2\repository\com\auth0\java-jwt\2.1.0\java-jwt-2.1.0.jar;C:\Users\userName\.m2\repository\org\json\json\20160810\json-20160810.jar;C:\Users\userName\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.3.4\lib\idea_rt.jar"" com.intellij.rt.execution.application.AppMain steps.storyboardweb.TestForElementInvisibility Starting ChromeDriver 2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f) on port 38985 Only local connections are allowed. Nov 20, 2017 11:05:09 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Exception in thread ""main"" org.openqa.selenium.TimeoutException: Expected condition failed: waiting for invisibility of Proxy element for: DefaultElementLocator 'By.id: some id' (tried for 10 second(s) with 500 MILLISECONDS interval) 	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:82) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231) 	at steps.storyboardweb.TestForElementInvisibility.waitUntilElementGetsInvisible(TestForElementInvisibility.java:36) 	at steps.storyboardweb.TestForElementInvisibility.main(TestForElementInvisibility.java:26) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147) Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""id"",""selector"":""some id""}   (Session info: chrome=62.0.3202.94)   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:01:39.354Z' System info: host: 'userName', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptSslCerts: true, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.33.506120 (e3e53437346286..., userDataDir: C:\Users\userName\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 62.0.3202.94, webStorageEnabled: true} Session ID: 80f68c126d75deca24730ebee5c989f4 *** Element info: {Using=id, value=some id} 	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:370) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:416) 	at org.openqa.selenium.By$ById.findElement(By.java:218) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362) 	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38) 	at com.sun.proxy.$Proxy4.isDisplayed(Unknown Source) 	at org.openqa.selenium.support.ui.ExpectedConditions.isInvisible(ExpectedConditions.java:1380) 	at org.openqa.selenium.support.ui.ExpectedConditions.access$400(ExpectedConditions.java:43) 	at org.openqa.selenium.support.ui.ExpectedConditions$46.apply(ExpectedConditions.java:1368) 	at org.openqa.selenium.support.ui.ExpectedConditions$46.apply(ExpectedConditions.java:1364) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208) 	... 7 more  Process finished with exit code 1 _   ## Steps to reproduce - Use following custom method to wait until element gets invisible :  protected void waitUntilElementGetsInvisible(WebElement elementTobeInvisible) { WebDriverWait wait = new WebDriverWait(driver, 20); wait.until(ExpectedConditions.invisibilityOf(elementTobeInvisible)); }  ## Other Notes:   **Recently I've upgraded from 2.53 version. It was working fine previously. I've checked visibility of same element using element.isDisplayed() it returns 'false' correctly. Also please check my further comments in this post, I think the problem is because of incorrect implementation of the method**","closed","R-awaiting answer,","Ankit-Laddha","2017-11-17T09:07:25Z","2019-08-15T01:09:40Z"
"","5190","xpath doesn't work","I'm using ChromeDriver. Code: `        Select s = new Select(findElement(By.xpath(""'//select[@class=\""PI__select PI__input js-select js-select-SIZE js-select-SIZE-static\""]"")));`  On site i have `SIZESIZE394041424344454647`  Why it's doesn't work?","closed","","ElDzi","2017-12-08T08:05:17Z","2019-08-16T21:10:01Z"
"","5166","Unable to hide info level log message","I'm trying to get rid of this message: `When using the W3C Action commands, offsets are from the center of element` which appears every time `Actions.moveToElement` is called. ```         String[] disable = {                 ""org.openqa.selenium.interactions.Actions"",                 ""org.openqa.selenium.remote.ProtocolHandshake""         };         for (String s : disable) {             java.util.logging.Logger.getLogger(s).setLevel(Level.SEVERE);         } ```  This code does not work either, and it uses the exact format used to fetch the logger in the first place.  ```        Class[] d = {                 Actions.class,                 ProtocolHandshake.class         };         for (Class c : d) {             java.util.logging.Logger.getLogger(c.getName()).setLevel(Level.OFF);         } ```  This fails to disable either set of log messages. I'm fairly certain the problem is user error, but I don't know where. What am I doing wrong here?","closed","C-java,","rococode","2017-12-05T00:50:33Z","2019-08-16T12:09:46Z"
"","4991","Webdriver.Remote not working on AWS EC2 Ubuntu 16.04","I'm trying to do some website testing which requires to keep the old webdriver open then use webdriver.remote to re-attach back using the executor url and session id of the old driver. Same code runs fine on my MacBook, but running into error on AWS EC2 Ubuntu 16.04.  ## Meta - OS:  Ubuntu 16.04 Selenium Version:  3.4.0 Browser:  Google-Chrome  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  -->  Browser Version:   chromedrive = 2.33.506092  ## Expected Behavior - Using Remote Webdriver to re-attach to the old ChromeDriver.  ## Actual Behavior - Webdriver.Remote failed to start. ![screen shot 2017-11-02 at 10 16 50 am](https://user-images.githubusercontent.com/7270414/32330617-095a1374-bfb7-11e7-954c-d149cc054a89.png)    ## Steps to reproduce - Screen shot of the code is attach below. Run code by typing ""sudo python3 Test.py""  ![screen shot 2017-11-02 at 10 16 37 am](https://user-images.githubusercontent.com/7270414/32330633-10f52e0c-bfb7-11e7-86a3-63b992cb2084.png)   import os, subprocess import time import webbrowser from selenium import webdriver from selenium.common.exceptions import TimeoutException  options = webdriver.ChromeOptions() options.binary_location = '/usr/bin/google-chrome' options.add_argument('headless') options.add_argument('--no-sandbox') options.add_argument('window-size=1920x1080') url = ""https://www.facebook.com"" driver = webdriver.Chrome(chrome_options=options) executor_url = driver.command_executor._url session_id = driver.session_id print(session_id) print(executor_url) driver.get(url)  driver2 = webdriver.Remote(command_executor=executor_url, desired_capabilities={}) # driver2.close() driver2.session_id = session_id print(driver2.current_url) driver2.get(""https://www.google.com"") print(driver2.current_url)","closed","","swagluke","2017-11-01T17:39:09Z","2019-08-17T04:09:52Z"
"","5789","org.openqa.selenium.SessionNotCreatedException: session not created exception from disconnected: unable to connect to renderer","I'm running into this issue when running with 10 concurrent threads. 2 threads encounter this issue while other 8 threads don't encounter the issue.  [2018-04-17 16:00:05,707 UTC] [ScenarioRunner-1] [pool-1-thread-96] [ERROR] - (vUser 5) org.openqa.selenium.SessionNotCreatedException: session not created exception  from disconnected: unable to connect to renderer  (Session info: chrome=65.0.3325.181)  (Driver info: chromedriver=2.37.544315 (730aa6a5fdba159ac9f4c1e8cbc59bf1b5ce12b7),platform=Linux 4.1.12-112.14.13.el7uek.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information)  Command duration or timeout: 1.75 seconds  Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z'  System info: host: 'burbe27.us.oracle.com', ip: '10.149.32.22', os.name: 'Linux', os.arch: 'amd64', os.version: '4.1.12-112.14.13.el7uek.x86_64', java.version: '1.8.0_102'  Driver info: driver.version: ChromeDriver  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)  at java.lang.reflect.Constructor.newInstance(Constructor.java:423)  at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)  at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)  at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)  at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)  at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)  at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)  at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)  at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)  at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)  at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)  at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)  at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)  at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)  at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)  at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)  at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)  at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)  at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)  at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)  at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209)  at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:132)  at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181)  at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168)  at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157)  at com.oracle.enterprisetest.tools.lg.core.ScenarioRunner.createScenarioConext(ScenarioRunner.java:343)  at com.oracle.enterprisetest.tools.lg.core.ScenarioRunner.doRun(ScenarioRunner.java:150)  at com.oracle.enterprisetest.tools.lg.core.ScenarioRunner.run(ScenarioRunner.java:99)  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)  at java.lang.Thread.run(Thread.java:745)","closed","","ankedia","2018-04-17T16:15:20Z","2019-08-16T05:09:48Z"
"","5681","Drag and drop is not working with chrome","I'm runnig a selinium test with the action of drag and drop, the test passed without errors but the action was not passed, when i debugged the code i had this error ""ChromeDriver: chrome on XP (f1bd42211fa54183eff27cbccf728845)""","closed","","SafaGrayet","2018-03-26T16:17:38Z","2019-08-16T08:09:54Z"
"","5532","URL blocking / blacklisting","I'm pretty sure somebody must have created such ticket already or this features is already integrated but I can't find anything. So _if_ it's a duplicated just close it please and point me to the right ticket. Thank you in advance!  However, I'm usually using selenium together with [capybara](https://github.com/teamcapybara/capybara) and drivers (like for example [`phantomjs`](https://github.com/ariya/phantomjs/blob/ddaaa09785d453e41554fd6133a2054c659a317f/test/module/webpage/abort-network-request.js) / [`poltergeist`](https://github.com/teampoltergeist/poltergeist#customization) with `url_blacklist` or [`capyara-webkit`](https://github.com/thoughtbot/capybara-webkit#configuration) with `block_url`) support URL blocking.  This makes sense for speeding up tests, blocking unwanted calls, testing how websites react when extensions (or something else) are blocking requests etc.  Also backends like chromedriver seem to support url blocking via `Network.setBlockedURLs` (or [with request interception](https://github.com/GoogleChrome/lighthouse/issues/3516) like phantomjs did).  So I guess it would be nice to integrate this (in case it isn't implemented already anyway).  Thank you for your awesome work!  And again: I'm really sorry if this was opened before!","closed","","alexanderadam","2018-02-23T11:03:52Z","2019-08-16T12:09:42Z"
"","5194","Documentation for preferred way to get HTTP status code","I'm a bit surprised that there is no way to get HTTP status code information from WebDriver. I found several tickets asking for this and a lengthy discussion, but no actual documentation on the issue. I believe this is a very common use case and if not implemented, at least there should be documentation on how to do this.  Is there currently a preferred way of extracting status code from WebDriver or any best practises how to do it for different languages? Can I help in writing this somehow?","closed","","Uninen","2017-12-08T20:26:18Z","2017-12-08T23:41:18Z"
"","5344","Impossible to override default socketTimeout for RemoteWebDriver instance with user credentials in the URL","I would like to be able to override default connection (2 minutes) and socket (3 hours) timeouts used in ```RemoteWebDriver```'s ```HttpClient```. For this, it is normally possible to use the following code:  ``` ApacheHttpClient.Factory clientFactory = new ApacheHttpClient.Factory(new HttpClientFactory(myConnTimeout, mySoTimeout)); HttpCommandExecutor executor = new HttpCommandExecutor(new HashMap(), url, clientFactory); return new RemoteWebDriver(executor, capabilities); ``` However, if remote hub URL contains user credentials (e.g. ""http://test:test@myhub:4444/wd/hub""), the if branch at https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/internal/ApacheHttpClient.java#L226 is chosen which uses default timeout values (see https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/internal/HttpClientFactory.java#L87). Is it possible to use the same logic to construct ```HttpClient``` for both plain URLs and URLs with auth?  ## Meta - OS:  any Selenium Version:  3.8.1 Browser:  any","closed","C-grid,","nebehr","2018-01-16T14:50:49Z","2020-05-20T23:00:20Z"
"","5321","org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS FAILED: first","I was executing ios mobile app script . It installing the app and launching it....but immediately after this , script is failing:  package appium;  import java.net.MalformedURLException; import java.net.URL;  import org.openqa.selenium.By; import org.openqa.selenium.remote.DesiredCapabilities; import org.testng.annotations.Test;  import io.appium.java_client.ios.IOSDriver;  public class NewTest { 	@SuppressWarnings({ ""rawtypes"" }) 	private IOSDriver driver;    @SuppressWarnings(""rawtypes"") @Test   public void first() throws MalformedURLException, InterruptedException { 	  DesiredCapabilities caps = new DesiredCapabilities(); 	  caps.setCapability(""platformName"", ""iOS""); 	  caps.setCapability(""platformVersion"", ""11.0"");  	  caps.setCapability(""deviceName"", ""iPhone 7"");  	  caps.setCapability(""automationName"", ""XCUITest""); 	  caps.setCapability(""app"", ""/Users/preeti/Library/Developer/Xcode/DerivedData/Kiosk-cqqwwmdzdfarneanaqslqyqicatp/Build/Products/Debug-iphonesimulator/Kiosk.app"");  	  driver = new IOSDriver(new URL(""http://127.0.0.1:4723/wd/hub""), caps); 	  driver.findElement(By.xpath(""//XCUIElementTypeButton[@name=\""SKIP\""]"")).click(); 	   	   } }    Getting the following error: [RemoteTestNG] detected TestNG version 6.13.1 Jan 10, 2018 6:45:30 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS FAILED: first java.lang.NoClassDefFoundError: org/apache/commons/lang3/StringUtils 	at io.appium.java_client.HasSessionDetails.lambda$0(HasSessionDetails.java:48) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:174) 	at com.google.common.collect.CollectSpliterators$1.lambda$forEachRemaining$1(CollectSpliterators.java:115) 	at com.google.common.collect.CollectSpliterators$1.lambda$forEachRemaining$1(CollectSpliterators.java:115) 	at java.util.HashMap$EntrySpliterator.forEachRemaining(HashMap.java:1696) 	at com.google.common.collect.CollectSpliterators$1.forEachRemaining(CollectSpliterators.java:115) 	at com.google.common.collect.CollectSpliterators$1.forEachRemaining(CollectSpliterators.java:115) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) 	at io.appium.java_client.HasSessionDetails.getSessionDetails(HasSessionDetails.java:51) 	at io.appium.java_client.HasSessionDetails.getSessionDetail(HasSessionDetails.java:55) 	at io.appium.java_client.HasSessionDetails.getPlatformName(HasSessionDetails.java:62) 	at io.appium.java_client.internal.JsonToMobileElementConverter.(JsonToMobileElementConverter.java:52) 	at io.appium.java_client.AppiumDriver.(AppiumDriver.java:88) 	at io.appium.java_client.AppiumDriver.(AppiumDriver.java:93) 	at io.appium.java_client.ios.IOSDriver.(IOSDriver.java:78) 	at appium.NewTest.first(NewTest.java:25) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:571) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116) 	at org.testng.TestNG.runSuites(TestNG.java:1028) 	at org.testng.TestNG.run(TestNG.java:996) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77) Caused by: java.lang.ClassNotFoundException: org.apache.commons.lang3.StringUtils 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 45 more   ===============================================     Default test     Tests run: 1, Failures: 1, Skips: 0 ===============================================   =============================================== Default suite Total tests run: 1, Failures: 1, Skips: 0 ===============================================","closed","","sjdptn","2018-01-10T13:20:48Z","2019-08-16T18:09:37Z"
"","5049","Not able to execute TestNG tests in order wise.","I want to execute my TestNG Class tests in order wise how they have written from to to bottom. To achive this right now i am using **priority** for each test in one testNG class.  Sample TestNg Class: FirsttestNG.class assume this class is having 3 tests as shown below @Test(priority=1) public void test1() { } @Test(priority=2) public void test2() { } @Test(priority=3) public void test3() { }  SecondTestNG.class assume this class also having 3 tests @Test(priority=1) public void secondtest1() { } @Test(priority=2) public void secondtest2() { } @Test(priority=3) public void secondtest3() { }   When i execute above mentioned classes alone from testNg xml file the out put will be as shown below. for FirstTestNgClass out put : first test1 method will execute then test2 follwed by test3. for SecondtestNg class also execution sequence will be same.  Now the problem is when i execute both FirstTestNG and SecondTestNG Classes at a time form testNg xml then execution sequence will be  **Out Put** test1 secondtest1 test2 secondtest2  test3 secondtest3  but i want as shown below: **out Put:**  test1 test2 test3 secondtest1 secondtest2 secondtest3  **can we achive this ?**","closed","","Aditya1209","2017-11-13T06:29:25Z","2019-08-17T02:10:03Z"
"","5197","selenium web driver-firefox first test case","i use below code to launch the website but i am getting the errors in console..  package automationFramework;  import org.openqa.selenium.firefox.FirefoxDriver; public class FirstTestCase {   	public static void main(String[] args) { 		 		// Create a new instance of the Firefox driver 		//System.setProperty(""webdriver.gecko.driver"",""C:/selenium/geckodriver_1.exe"" );  		System.setProperty(""webdriver.firefox.marionette"", ""./geckodriver.exe""); 		FirefoxDriver driver = new FirefoxDriver();         //Launch the Online Store Website 		driver.get(""https://www.google.com"");      } }   Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting 45 seconds for Firefox to start. Build info: version: '3.8.0', revision: '924c4067df', time: '2017-11-30T11:36:59.109Z' System info: host: 'L-AH787883', ip: '192.168.1.10', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_102' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:131) 	at org.openqa.selenium.firefox.XpiDriverService.start(XpiDriverService.java:116) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:98) 	at automationFramework.FirstTestCase.main(FirstTestCase.java:11) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:34917/hub/status] to be available after 45002 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) 	at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:129) 	... 8 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(FutureTask.java:205) 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:147) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) 	... 9 more","closed","","pradeepst","2017-12-10T20:34:40Z","2019-08-16T21:09:50Z"
"","5788","How to simulate ctrl + s saving the page as txt in Firefox?","I use `doc = driver.find_element_by_tag_name('html').text`  but doc content and ctrl + s saving the page as txt are different. i try send_keys(Keys.CONTROL,'s') , It doesn't work.","closed","","gyje","2018-04-17T12:55:29Z","2019-08-16T05:09:54Z"
"","4819","Selenium doesnt work","I tried to luanch the plugin for firefox 56 and it doesnt work at all. I´ve got the following error:  There was an unexpected error. Msg: TypeError: obj is undefined Url: chrome://implicit-wait/content/implicit-wait-ide.js?1507287259542, line: 185, column: 9 wrap@chrome://implicit-wait/content/implicit-wait-ide.js?1507287259542:185:9 ImplicitWait/ Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","cdobarcomaxam","2017-10-06T10:56:08Z","2019-08-17T08:10:03Z"
"","4813","Tell chromedriver which public IP to bind to","I think chromedriver supports this, but there is no way to pass this from Selenium  If a machine has multiple public IPs, selenium would be able to tell chromedriver which IP to bind to. I think the relevant file to modify would be ChromeDriverService.java","closed","D-chrome,","arya6000","2017-10-05T16:31:26Z","2019-09-13T12:09:35Z"
"","5055","chrome_options not working in python since 3.7.0","I noticed my chrome_options weren't working in 3.7.0, but 3.6.0 worked.  ``` from selenium import webdriver from selenium.webdriver.chrome.options import Options  chrome_options = Options() chrome_options.binary_location = 'mycefapp.exe'  driver = webdriver.Chrome(chrome_options=chrome_options) ``` The binary_location was getting ignored.  I was looking at this commit: https://github.com/SeleniumHQ/selenium/commit/3578c0faee107dc0faef164a4acf02b916caa2be#diff-10f65ccee5b377aa8f2b3fde4bf566f8  Does it have something to do with this? https://github.com/SeleniumHQ/selenium/blob/7b8ce0abd138f47af0650079ed7e51ae8ac02c88/java/server/src/org/openqa/selenium/remote/server/ActiveSessionFactory.java#L82","closed","D-chrome,","jolting","2017-11-15T01:16:49Z","2019-08-15T09:09:43Z"
"","5515","Recommended way to use expected conditions on a chained locator","I like using a combination of WebDriverWaits and Expected Conditions to find elements on a page because of varying loading times.   I have a problem using expected conditions when I need to use a series of By's and Locating strings to find an element.  `driver.find_element_by_link_text(""link"").find_element_by_tag_name(""a"")` is an example of the chaining.   As i understand an Expected Condition take a tuple of (By, Locator), and does not handle a list or tuples in tuples.   What is the recommended solution to use Expected Conditions with the above example?  Should i create my own function for this?","closed","","Drew-Ack","2018-02-20T20:56:59Z","2019-08-16T13:09:47Z"
"","5642","Open Chrome with Toggle Device Toolbar Activated","I know how to open chrome with ""--auto-open-devtools-for-tabs"", but i need to open it with Toggle Device Toolbar activated. This mode, emulate the touch interactions events, replacing the click with a touch. How can i do that?   Here's my code: (...) 			Map mobileEmulation = new HashMap(); 			mobileEmulation.put(""deviceName"", ""Nexus 5X""); 			DesiredCapabilities capabilities = DesiredCapabilities.chrome(); 			ChromeOptions chromeOptions = new ChromeOptions(); 			chromeOptions.setExperimentalOption(""mobileEmulation"", mobileEmulation); 			chromeOptions.addArguments(""--auto-open-devtools-for-tabs""); 			chromeOptions.addArguments(""--allow-running-insecure-content""); 			capabilities.setCapability(ChromeOptions.CAPABILITY, chromeOptions); 			driver = new ChromeDriver(capabilities); (...)  What new argument i must to add?","closed","","ddreyse","2018-03-19T15:17:48Z","2019-08-16T09:09:56Z"
"","5156","Localization - Executing scripts in different languages","I just want to know how to execute my web driver scripts in other languages? I have my scripts developed in English language same scripts i want to execute in Spanish,Germany and other languages. do we have any capabilities to work with it? please give me guidance on this.","closed","","Aditya1209","2017-12-01T13:47:00Z","2019-08-17T00:09:37Z"
"","4919","FileUtils.copyFile throws a FileUtils cannot be resolved error with Selenium WebDriver Java 3.6.0","I just installed Selenium WebDriver Java version 3.6.0.  When I did that, FileUtils.copyFile throws a FileUtils cannot be resolved error.  (Check the attachment for illustration). I'm going to revert back to Selenium WebDriver Java version 3.5.3 because it doesn't have the error   ![futil](https://user-images.githubusercontent.com/4235950/31823731-0d7fb2f6-b57b-11e7-8d1d-66d5b64e2d45.jpg)","closed","","fdeamicis","2017-10-20T13:47:19Z","2019-08-14T06:09:50Z"
"","5528","Selenium 3.8.0 webdriverbackedselenium issue","i have upgraded to selenium v3.80 instaded using 2.5.4 also i have developed by C# language in my selenium tool.while run webdriverselennium line getting error like ""findelement.js file missing"" how to resolve this also selenium.type not working how to intialize variable for this","closed","C-dotnet,","nkarthikeyan90","2018-02-22T12:22:45Z","2019-08-16T10:10:01Z"
"","5144","Selenium jar file and chrome driver","I have tried a lot of combinations of selenium jar files and chrome versions. I am unable to run my automated behat tests. I want to know which versions of selenium jar file and chrome driver are most stable?","closed","","harshtrivedi134","2017-11-29T22:24:33Z","2019-08-17T00:09:44Z"
"","5008","selenium.common.exceptions.WebDriverException: Message: Unable to find a matching set of capabilities","I have the similar issue that was closed recently, can you please help to figure out what the problem is?   OS: Windows 10 & 8.1 Selenium Version: 3.6.0 - 3.7.0 Browser: Firefox  Browser Version: 56.0.2 (32-bit) Geckodriver version: 0.19 Behave version: 1.2.5  **Python script that I am running** ``` import unittest import time import datetime from datetime import date from behave import * from selenium.webdriver.common.keys import Keys from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  class browsepython(unittest.TestCase):           @given('we have behave installed using {browser} with version {version} on {platform}')     def step_impl(context, platform, browser, version):         context.browser = browser         context.platform = platform         context.version = version         context.driver = webdriver.Remote(command_executor='http://172.16.31.133:4444/wd/hub',          desired_capabilities={'platform': platform, 'browserName': browser, 'javascriptEnabled': True}          )         pass          @when('we browse to a site at url {url}')     def step_impl(context, url):         context.url=url         try:            context.driver.get(url)         except:            assert ""can not reach the url: ""+context.url     @then('the page is captured')     def step_impl(context):         today = datetime.datetime.now().strftime(""%Y%b%d_%H%M_"")         try:                      context.driver.save_screenshot('C:\\testBehave\\features\\browsepython\\reportstestBehave\\features\\browsepython\\reports\\screenscapture\\'+str(today)+'.png')         except:            assert ""can not capture the page""         finally:            context.driver.quit()   ```  **Feature file**  > `Feature: Browse Python with behave >  >   Scenario Outline: Run a simple search on Python site using  with version  on  >       Given we have behave installed using  with version  on  >       when we browse to a site at url  >       then the page is captured >    >   Examples: >   | platform | browser           | version |    url                |  >   | WIN8_1   | firefox           |   ANY   | http://www.python.org | >   | WINDOWS  | chrome            |   ANY   | http://www.python.org | >   | WINDOWS  | internet explorer |   9     | http://www.python.org | >   | WINDOWS  | firefox           |   47.0    | http://www.python.org | >   | WINDOWS  | internet explorer |   11    | http://www.python.org | >   | MAC      | safari            |  7.1.5  | http://www.python.org | >   | WIN10    | internet explorer |   Edge  | http://www.python.org | >   | WIN10    | firefox           |   56.0  | http://www.python.org | >   | WIN10    | chrome            |   56.0  | http://www.python.org | > `  **Errorlog**  `Feature: Browse Python with behave # browsepython.feature:1    Scenario Outline: Run a simple search on Python site using firefox with version ANY on WIN8_1 -- @1.1   # browsepython.feature:10     Given we have behave installed using firefox with version ANY on WIN8_1                               # steps\browsepython.py:13       Traceback (most recent call last):         File ""c:\python36-32\lib\site-packages\behave\model.py"", line 1456, in run           match.run(runner.context)         File ""c:\python36-32\lib\site-packages\behave\model.py"", line 1903, in run           self.func(context, *args, **kwargs)         File ""steps\browsepython.py"", line 19, in step_impl           desired_capabilities={'platform': platform, 'browserName': browser, 'javascriptEnabled': True}         File ""c:\python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 151, in __init__           self.start_session(desired_capabilities, browser_profile)         File ""c:\python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 240, in start_session           response = self.execute(Command.NEW_SESSION, parameters)         File ""c:\python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 308, in execute           self.error_handler.check_response(response)         File ""c:\python36-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 194, in check_response           raise exception_class(message, screen, stacktrace)       selenium.common.exceptions.WebDriverException: Message: Unable to find a matching set of capabilities       Build info: version: '3.7.0', revision: '2321c73', time: '2017-11-02T22:12:12.411Z'       System info: host: 'QA5', ip: '172.16.31.136', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_121'       Driver info: driver.version: unknown       remote stacktrace: stack backtrace:          0:           0x47e934 -           1:           0x47f0a3 -           2:           0x442511 -           3:           0x4436da -           4:           0x42a890 -           5:           0x406f5e -           6:           0x40cfc9 -           7:           0x6bef19 -           8:           0x420756 -           9:           0x6b96e0 -          10:     0x7fffa42e15dd - BaseThreadInitThunk       Stacktrace:           at sun.reflect.NativeConstructorAccessorImpl.newInstance0 (None:-2)           at sun.reflect.NativeConstructorAccessorImpl.newInstance (None:-1)           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (None:-1)           at java.lang.reflect.Constructor.newInstance (None:-1)           at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0 (W3CHandshakeResponse.java:57)           at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2 (W3CHandshakeResponse.java:104)           at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0 (ProtocolHandshake.java:123)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.Spliterators$ArraySpliterator.tryAdvance (None:-1)           at java.util.stream.ReferencePipeline.forEachWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyIntoWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyInto (None:-1)           at java.util.stream.AbstractPipeline.wrapAndCopyInto (None:-1)           at java.util.stream.FindOps$FindOp.evaluateSequential (None:-1)           at java.util.stream.AbstractPipeline.evaluate (None:-1)           at java.util.stream.ReferencePipeline.findFirst (None:-1)           at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:126)           at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:73)           at org.openqa.selenium.remote.server.ServicedSession$Factory.apply (ServicedSession.java:218)           at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$11 (ActiveSessionFactory.java:167)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.stream.ReferencePipeline$11$1.accept (None:-1)           at java.util.stream.ReferencePipeline$2$1.accept (None:-1)           at java.util.Spliterators$ArraySpliterator.tryAdvance (None:-1)           at java.util.stream.ReferencePipeline.forEachWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyIntoWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyInto (None:-1)           at java.util.stream.AbstractPipeline.wrapAndCopyInto (None:-1)           at java.util.stream.FindOps$FindOp.evaluateSequential (None:-1)           at java.util.stream.AbstractPipeline.evaluate (None:-1)           at java.util.stream.ReferencePipeline.findFirst (None:-1)           at org.openqa.selenium.remote.server.ActiveSessionFactory.apply (ActiveSessionFactory.java:170)           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$1 (NewSessionPipeline.java:44)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.Collections$2.tryAdvance (None:-1)           at java.util.stream.ReferencePipeline.forEachWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyIntoWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyInto (None:-1)           at java.util.stream.AbstractPipeline.wrapAndCopyInto (None:-1)           at java.util.stream.FindOps$FindOp.evaluateSequential (None:-1)           at java.util.stream.AbstractPipeline.evaluate (None:-1)           at java.util.stream.ReferencePipeline.findFirst (None:-1)           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$2 (NewSessionPipeline.java:47)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.stream.DistinctOps$1$2.accept (None:-1)           at java.util.stream.ReferencePipeline$2$1.accept (None:-1)           at java.util.stream.ReferencePipeline$3$1.accept (None:-1)           at java.util.stream.ReferencePipeline$2$1.accept (None:-1)           at java.util.stream.Streams$StreamBuilderImpl.tryAdvance (None:-1)           at java.util.stream.Streams$ConcatSpliterator.tryAdvance (None:-1)           at java.util.stream.ReferencePipeline.forEachWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyIntoWithCancel (None:-1)           at java.util.stream.AbstractPipeline.copyInto (None:-1)           at java.util.stream.AbstractPipeline.wrapAndCopyInto (None:-1)           at java.util.stream.FindOps$FindOp.evaluateSequential (None:-1)           at java.util.stream.AbstractPipeline.evaluate (None:-1)           at java.util.stream.ReferencePipeline.findFirst (None:-1)           at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession (NewSessionPipeline.java:50)           at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute (BeginSession.java:77)           at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:240)           at java.util.concurrent.Executors$RunnableAdapter.call (None:-1)           at java.util.concurrent.FutureTask.run (None:-1)           at java.util.concurrent.ThreadPoolExecutor.runWorker (None:-1)           at java.util.concurrent.ThreadPoolExecutor$Worker.run (None:-1)           at java.lang.Thread.run (None:-1)      When we browse to a site at url http://www.python.org                                                 # None     Then the page is captured                                                                             # None   Failing scenarios:   browsepython.feature:10  Run a simple search on Python site using firefox with version ANY on WIN8_1 -- @1.1  0 features passed, 1 failed, 0 skipped 0 scenarios passed, 1 failed, 0 skipped 0 steps passed, 1 failed, 2 skipped, 0 undefined Took 0m0.655s`   **Config for Selenium Node**  > { >   ""capabilities"": >   [ >     { >       ""browserName"": ""firefox"", >       ""seleniumProtocol"": ""WebDriver"", >       ""platform"": ""WIN8_1"", >       ""version"": ""56.0"", >       ""maxInstances"": 5 >     }, >     { >       ""browserName"": ""chrome"", >       ""maxInstances"": 5, >       ""platform"": ""WIN8_1"", >       ""version"": ""62.0.W8.QA5"", >       ""seleniumProtocol"": ""WebDriver"" >     } >   ], >   ""maxSession"": 5, >   ""port"": 6666, >   ""register"": true, >   ""registerCycle"": 5000, >   ""hub"": ""http://172.16.31.133:4444"", >   ""nodeStatusCheckTimeout"": 5000, >   ""nodePolling"": 5000, >   ""role"": ""node"", >   ""unregisterIfStillDownAfter"": 60000, >   ""downPollingLimit"": 2, >   ""debug"": false, >   ""servlets"" : [], >   ""withoutServlets"": [], >   ""custom"": {} > } >   I tried this on Firefox versions 44, 55 and 56 Used Geckodriver 0.16 - 0.19. Chromedriver works perfect","closed","R-awaiting answer,","sergiybuch","2017-11-03T16:29:48Z","2019-08-15T10:09:45Z"
"","5073","Selenium role node does not support HTTPS","I have set up a secure selenium grid on a remote server and attached it behind HTTPS (so man in the middle can not see my tests) so I tried to run:  java -jar selenium-server-standalone-3.7.1.jar -role node -hub https://example.com:80/grid/register  however after launch, selenium replaced https:// with http:// and the connection failed, thus I had to fallback to http:// .  can you please add https:// support? i think it is fair to say that certain tests require more security and could use the encryption of https which is already implemented in java. and should pretty much work out of the box.  thank you.","closed","I-enhancement,","vasilevich","2017-11-17T19:08:33Z","2020-05-20T19:28:43Z"
"","4882","pronlem with html runner","i have pronlem like this System Configuration - Windows 64 bit AWS cloud based – Windows 10 (t2.xlarge)    Java Client                                           Java8 131             C:\Program Files (x86)\Java\jre1.8.0_131 Geckodriver.exe                               0.16.1                    C:\Selenium\geckodriver-v0.16.1-win64 Java Selenium Files                          3.4.0                      C:\Selenium\selenium-java-3.4.0 Firefox 64 bit                                      53.03                     C:\Program Files (x86)\Mozilla Firefox Selenium html runner                    3.4.0                      C:\Selenium\selenium-html-runner-3.4.0 Selenium server standalone        3.4.0                      C:\Selenium\selenium-server-standalone-3.4.0 Selenium IDE Test Suite                                                 C:\Selenium\Selenium IDE Test Cases Seleniumtext.bat                                                             C:\Selenium\Seleniumtext.bat System Properties PATH                                                               C:\Selenium\selenium-java-3.4.0\                                                                                                 C:\Program Files (x86)\Mozilla Firefox                                                                                                 C:\Selenium\geckodriver-v0.16.1-win64 Issue I have a Test Suite created in Selenium IDE. The Test Suite always executes successfully and passes each of the 8 Test Cases when run from Selenium IDE. The Slider control has to be on slow.   However, when I attempt to run the selenium html runner all 8 test cases fail. I believe its related to the speed in which the test is executed. I have also noticed that set.Speed() or pause commands written in the test cases appear to be ignored. How can the speed of this test be set with the selenium html runner?     The objective here is to use the Test Suite with Jenkins Continuous Integration.   The ‘seleniumtext.bat’ is used to execute the test from the Windows cmd prompt. This contains the following: java -jar selenium-html-runner-3.4.0.jar -htmlSuite ""*firefox"" ""https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html"" ""C:\Selenium\Selenium IDE Test Cases\DCP_Test_Suite.html"" ""C:\Selenium\Test Results\seleniumtestresult.html""   Please note – I get exactly the same results when I tried on my local Windows machine.   Here is an example of where a Test Case failed picked up from the bottom of the C:\Selenium\Test Results\seleniumtestresult.html   |click | //div[@id='body']/div/form/div[4]/div/div/button |  | |pause | 2000 |  | |waitForElementPresent | name=volumeIdentifier |  | com.thoughtworks.selenium.Wait$WaitTimedOutException: Can't wait for ElementPresent   The full command line results are shown here:   C:\Selenium>seleniumtext.bat   C:\Selenium>java -jar selenium-html-runner-3.4.0.jar -htmlSuite ""*firefox"" ""https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html"" ""C:\Selenium\Selenium IDE Test Cases\DCP_Test_Suite.html"" ""C:\Selenium\Test Results\seleniumtestresult.html"" Multi-window mode is longer used as an option and will be ignored. 1495695210491   geckodriver     INFO    Listening on 127.0.0.1:34106 1495695211166   geckodriver::marionette INFO    Starting browser \\?\C:\Program Files (x86)\Mozilla Firefox\firefox.exe with args [""-marionette""] 1495695211349   addons.manager  ERROR   startup failed: [Exception... ""Component returned failure code: 0x80070057 (NS_ERROR_ILLEGAL_VALUE) [nsIFile.create]""  nsresult: ""0x80070057 (NS_ERROR_IJavaScrLLEGALi_pVtA LeUrEr)o""r :  lroecsaotuirocne:: /""/JgSr ef/rmaomdules/Adedo n:M:a nraegseoru.rjcsem:,/ /lgirnee/ m1o6d5u7l:e sN/SF_iElReRUOtRi_lNsO.Tj_sImN I:T:I AFLiIlZeEUDt:i lAsd_dgoentMDainager is not initialized r :: line 70""  data: no] Stack trace: FileUtils_getDir()@resource://gre/modules/FileUtils.jsm:70 < FileUtils_getFile()@resource://gre/modules/FileUtils.jsm:42 < validateBlocklist()@resource://gre/modules/AddonManager.jsm:671 < startup()@resource://gre/modules/AddonManager.jsm:834 < startup()@resource://gre/modules/AddonManager.jsm:3129 < observe()@resource://gre/components/addonManager.js:65 1495695212672   Marionette      INFO    Listening on port 2093 JavaScript error: resource://gre/modules/AddonManager.jsm, line 2570: NS_ERROR_NOT_INITIALIZED: AddonManager is not initialized May 25, 2017 6:53:32 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C 2017-05-25 06:53:32.844:INFO::main: Logging initialized @2923ms to org.seleniumhq.jetty9.util.log.StdErrLog 2017-05-25 06:53:32.889:INFO:osjs.Server:main: jetty-9.4.z-SNAPSHOT 2017-05-25 06:53:32.910:INFO:osjsh.ContextHandler:main: Started o.s.j.s.h.ContextHandler@f79e{/tests,null,AVAILABLE} 2017-05-25 06:53:32.925:INFO:osjs.AbstractConnector:main: Started ServerConnector@638011{HTTP/1.1,[http/1.1]}{0.0.0.0:45810} 2017-05-25 06:53:32.925:INFO:osjs.Server:main: Started @3004ms May 25, 2017 6:53:33 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:53:34 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |waitForNotVisible | xpath=(/html/body/div/div[2]/div/div[5]/div/div/div[2]) |  | May 25, 2017 6:54:04 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:54:05 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |waitForElementPresent | xpath=(/html/body/div/div[1]/div[3]/nav/div/div/ul/li[1]/a) |  | May 25, 2017 6:54:05 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | link=New |  | May 25, 2017 6:54:05 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |waitForElementPresent | xpath=(/html/body/div/div[2]/div/form/div[3]/div/div/div[1]/div[1]/div/input) |  | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=agencyFileReference | 1234 | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |waitForElementPresent | xpath=(/html/body/div/div[2]/div/form/div[3]/div/div/div[1]/div[2]/div/div/div[1]/span/span[2]) |  | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(/html/body/div/div[2]/div/form/div[3]/div/div/div[1]/div[2]/div/div/div[1]/span/span[2]) |  | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |waitForElementPresent | xpath=(/html/body/div/div[2]/div/form/div[3]/div/div/div[1]/div[3]/div/input) |  | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |selectWindow | null |  | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=dateInput | 01/05/2017 | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | document.addTransferForm.dateInput[1] | 01/05/2017 | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=salePrice | 900000 | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=interestTransferredAsAPercentage | 32.4 | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | //div[@id='body']/div/form/div[4]/div/div/button |  | May 25, 2017 6:54:06 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |pause | 2000 |  | May 25, 2017 6:54:08 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |waitForElementPresent | name=volumeIdentifier |  | May 25, 2017 6:54:39 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:54:39 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | link=New |  | May 25, 2017 6:54:39 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=agencyFileReference | ABC Settlements | May 25, 2017 6:54:40 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:54:40 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | link=New |  | May 25, 2017 6:54:40 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=agencyFileReference | 1234 | May 25, 2017 6:54:41 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:54:41 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | link=New |  | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=agencyFileReference | 1 | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | css=button.btn.btn-default |  | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[4] |  | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[2] |  | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[5] |  | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=salePrice | 1 | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | //div[@id='body']/div/form/div[4]/div/div/button |  | May 25, 2017 6:54:42 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:54:43 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |pause | 1000 |  | May 25, 2017 6:54:44 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | link=New |  | May 25, 2017 6:54:44 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |pause | 1000 |  | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=agencyFileReference | 1 | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | css=button.btn.btn-default |  | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[4] |  | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[2] |  | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[5] |  | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=salePrice | 167123 | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | //div[@id='body']/div/form/div[4]/div/div/button |  | May 25, 2017 6:54:45 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:54:46 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |pause | 1000 |  | May 25, 2017 6:54:47 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | link=New |  | May 25, 2017 6:54:47 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |pause | 1000 |  | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=agencyFileReference | AG123 | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | css=button.btn.btn-default |  | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[4] |  | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[2] |  | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[5] |  | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=salePrice | 88199238 | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | //div[@id='body']/div/form/div[4]/div/div/button |  | May 25, 2017 6:54:48 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |open | https://lg-dcp-deployment-tst-jenkinsb.s3.amazonaws.com/build/6.0.769_default/ApplicationComponents/DataCapturePortal/index.html |  | May 25, 2017 6:54:49 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | link=New |  | May 25, 2017 6:54:49 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |pause | 1000 |  | May 25, 2017 6:54:50 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=agencyFileReference | 1 | May 25, 2017 6:54:50 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | css=button.btn.btn-default |  | May 25, 2017 6:54:50 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[4] |  | May 25, 2017 6:54:50 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[2] |  | May 25, 2017 6:54:50 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | xpath=(//button[@type='button'])[5] |  | May 25, 2017 6:54:50 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |type | name=salePrice | 8850000 | May 25, 2017 6:54:50 AM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFO: |click | //div[@id='body']/div/form/div[4]/div/div/button |  | Review Screen - Amend All & Cancel.html Review Screen - Amend All & Cancel  Represent Proprietor on Title & Cancel.html Represent Proprietor on Title & Cancel  Add Incoming Proprietor as Company and Cancel.html Add Incoming Proprietor as Company & Cancel  Add Contract Representative - Cancel.html Add a Representative - Cancel  Search by Vol & Folio - Successful.html Search by Vol & Folio - Successful & Cancel  Add Contract Details - Cancel.html Add Contract Details - Cancel   Search by Vol & Folio - Unsuccessful.html Search by Vol & Folio - Unsuccessful & Cancel  Add Incoming Proprietor.html Add Incoming Proprietor & Cancel  2017-05-25 06:54:50.764:INFO:osjs.AbstractConnector:main: Stopped ServerConnector@638011{HTTP/1.1,[http/1.1]}{0.0.0.0:45810} 2017-05-25 06:54:50.765:INFO:osjsh.ContextHandler:main: Stopped o.s.j.s.h.ContextHandler@f79e{/tests,null,UNAVAILABLE} 1495695290769   Marionette      INFO    New connections will no longer be accepted   i don't know how to fix this","closed","C-htmlrunner,","PhamNgocPhi","2017-10-17T03:19:15Z","2019-08-17T03:09:36Z"
"","4998","Browser interaction not works on print page view","I have one step which click on one button who just bring print view of page. After opening this page, next step is not being executed. Thread waiting somewhere and then it gets time out.   **To reproduce issue:** 1. write a step which execute this javaScript --> `window.print();` (or just open chrome driver and on console enter window.print(); then a Print view page should open) 2. write any another step after fist one. Now executor, will execute first step will take too much time (timeout) to another step.  **Expected** On print view page, all the dom element should be intractable.  **Environment** OS: Linux version.org.seleniumhq.selenium.selenium-firefox-driver = 3.0.1 version.org.seleniumhq.selenium.selenium-java = 3.0.1 version.org.seleniumhq.selenium.selenium-support = 3.0.1 version.junit.junit = 4.+  **I also tested with** Image(s): selenium/node-chrome-debug 3.5.3, selenium/hub 3.5.3 Docker Version: 17.07.0-ce OS: Linux seleniumVersion = 2.53.1 htmlUnitDriverVersion = 2.52.0 jUnitVersion = 4.12 serenityVersion = 1.4.1-rc.7 serenityJiraVersion = 1.1.3-rc.5","closed","","mrSingh007","2017-11-02T11:13:03Z","2019-08-17T03:09:57Z"
"","5200","selenium 3.7/3.8, same browser on different OS, platform not recognized","I have one hub which some nodes are connecting to. For example, a windows-host with chrome and Appium (Android Device, with chrome) configs are below.  If I send a request, using chrome OR remote webdriver, and I set platform to ""windows,"" Windows"" or ""WIN10"", all the browsertests are executed on the windows-node *AND* the android - node, which is wrong.  I use cucumber and serenity, and run the test like this:  /opt/apache/maven/current/bin/mvn integration-test -Dwebdriver.remote.url=http://172.31.40.121:4444/wd/hub -Dwebdriver.driver=""chrome"" -Dmaven.test.failure.ignore=true -Dcontext=""chrome"" -Dplatform=""WIN10""  Anyway, chrome should *only* start on Windows, but command is spread to Windows *and* Android.  Any ideas? I think, this is a bug, because platform is not recognized well.  Best, Ronny  start cmd.exe /k ""cd c:\selenium && java -Dwebdriver.gecko.driver=""C:\selenium\geckodriver.exe"" -Dwebdriver.chrome.driver=""C:\selenium\chromedriver.exe"" -Dwebdriver.ie.driver=""C:\selenium\IEDriverServer.exe"" -Dwebdriver.edge.driver=""C:\selenium\MicrosoftWebDriver.exe"" -jar c:\selenium\selenium-server-standalone-3.8.1.jar -role webdriver -maxSession 25 -hub http://172.31.40.121:4444/grid/register -port 5566 -browser ""browserName=firefox, maxInstances=10, Platform=WINDOWS, seleniumProtocol=WebDriver"" -browser ""browserName=chrome, maxInstances=10, seleniumProtocol=WebDriver, Platform=Windows"" -browser ""browserName=internet explorer,maxInstances=1"" -browser ""browserName=MicrosoftEdge,maxInstances=1""""  and for appium: call cmd.exe /k ""cd c:\selenium && c:\users\testing\AppData\Roaming\npm\appium --nodeconfig=c:\users\testing\Desktop\appium.json""  where the appium.json looks like:  {   ""capabilities"":       [         {           ""browserName"": ""chrome"",           ""maxInstances"": 1,           ""platform"":""Android"", 		  ""deviceName"":""192.168.243.101:5555"", 		  ""platformName"":""Android""         }       ],   ""configuration"":   {     ""id"": ""Genymotion: Samsung Galaxy S7 Android 7.1.0 SDK 25"",     ""cleanUpCycle"":2000,     ""timeout"":300,     ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",     ""url"":""http://127.0.0.1:4723/wd/hub"",     ""host"": ""172.31.40.121"",     ""port"": 4723,     ""maxSession"": 1,     ""register"": true,     ""registerCycle"": 5000,     ""hubPort"": 4444,     ""hubHost"": ""172.31.40.121""   } }","closed","C-grid,","rgoerner","2017-12-11T09:21:39Z","2020-05-20T23:05:16Z"
"","5482","Opening a chrome page with a chrome profile in python selenium","I have got python to open up my chrome profile however when doing this it does not get the page i want it to get. However when i remove the added argument of my profile it gets the specific page Here is my code: `from selenium import webdriver  options = webdriver.ChromeOptions()  options.add_argument(r""user-data-dir=C:\Users\Karim\AppData\Local\Google\Chrome\User Data"") #Path to your chrome profile chrome_path= r""C:\\Users\\chromedriver.exe"" driver = webdriver.Chrome(chrome_path, chrome_options=options) driver.get(""https://github.com/"")`","closed","R-awaiting answer,","sskk10101","2018-02-11T12:01:48Z","2019-08-14T08:09:53Z"
"","5492","Webdriver is not capturing the http response body","I have enabled the PERFORMANCE logging in my Chrome WebDriver. Its capturing request and response traffic. But the body of the response is missing, capturing only headers, timing info. Response type is `Fetch`  - selenium-java version : 3.6 - Driver version : selenium/standalone-chrome:3.8.1  ``` DesiredCapabilities capabilities = DesiredCapabilities.chrome();  LoggingPreferences logPref = new LoggingPreferences(); logPref.enable(LogType.PERFORMANCE, Level.ALL); capabilities.setCapability(CapabilityType.LOGGING_PREFS, logPref);  Map perfLogPrefs = new HashMap(); perfLogPrefs.put(""enableNetwork"", true); ChromeOptions options = new ChromeOptions(); options.setExperimentalOption(""perfLoggingPrefs"", perfLogPrefs); capabilities.setCapability(ChromeOptions.CAPABILITY, options);  WebDriver driver = new RemoteWebDriver(url, getCapabilities()) ```","closed","","nikhilkr123","2018-02-14T05:27:27Z","2019-09-11T12:09:35Z"
"","5043","Unable to handle alert in internet explorer 11 using selenium C#","I have created a javascript alert using IJavaScriptExecutor js = (IJavaScriptExecutor)driver; js.ExecuteScript(""alert('start');""); and trying to close the alert by using driver.SwitchTo().Alert().Accept(); which is not working in IE11 and same has been working fine in chrome browser. Can anyone pls help me to solve this issue asap.","closed","","manoece90","2017-11-10T18:31:39Z","2019-08-17T03:09:40Z"
"","5106","Selenium version mismatch error","I have already referred bug 2739 for this but could not find a working solution especially since my version match with the versions specified in the solutions. https://github.com/SeleniumHQ/selenium/issues/2739   Hi I am facing the same issue- ""selenium.common.exceptions.WebDriverException: Message: Can't load the profile. Profile Dir: /tmp/tmpqz86Ue If you specified a log_file in the FirefoxBinary constructor, check it for details. ""  I did not change anything with script, I read through the comments, seems like my configuration should work swiftly.. I just now changed it to:  Ubuntu 16.04.3 LTS Mozilla Firefox 56.0 geckodriver 0.18.0 selenium-3.7.0  Please respond, I dont see any recent comments assuming the issue is fixed for good, Kindly share the knowledge ASAP! Thanks in advance","closed","R-awaiting answer,","rishabh27892","2017-11-22T22:29:52Z","2019-08-17T00:09:58Z"
"","5413","Sendkeys not working with Firefox 58.0.1","I have a problem uploading an input file embebed in a label button. My code to attach is: String idDocumento=driver.findElement(By.id(""btadjuntar"")).getAttribute(""for"");         System.out.println(""Id documento: ""+idDocumento);         JavascriptExecutor executor=(JavascriptExecutor)driver;         executor.executeScript(""document.getElementById('""+idDocumento+""').style.display='yes';"");         System.out.println(""Subiendo el archivo de la ruta: ""+path);         WebElement elem = driver.findElement(By.id(idDocumento));         elem.sendKeys(path);         retardo(5); The test gives an error like this Exception in thread ""main"" org.openqa.selenium.ElementNotInteractableException: Element  is not reachable by keyboard The error is pointing to elem.sendKeys(path) The method sendkeys is not working  FF Version: 58.0.1 Geckodriver 0.18.0 Selenium jar version 3.5.3","closed","","rleaplaza","2018-01-30T22:11:41Z","2019-08-16T11:09:47Z"
"","5084","""Unable to find a matching set of capabilities"" error on an attempt to pass platform capability to geckodriver","I have a problem to run my tests on firefox using RemoteWebDriver  Please help.   Start remote web driver with:  `RemoteWebDriver driver = new RemoteWebDriver(new URL(remoteUrl), capabilities); `  where url is: ""http://172.16.2.79:4444/wd/hub""  and capabilities are:  ``` DesiredCapabilities capabilities = DesiredCapabilities.firefox(); capabilities.setCapability(""marionette"", true); capabilities.setBrowserName(""firefox""); capabilities.setPlatform(Platform.WIN10); System.setProperty(""webdriver.gecko.driver"", ""C:\\tmp\\webdriver\\geckodriver\\geckodriver_0.19.1.exe""); ```   my grid looks like:  ![screen shot 2017-11-20 at 3 00 05 pm](https://user-images.githubusercontent.com/8803779/33021855-89814d92-ce03-11e7-9aad-d99e12aeebe7.png)  and I'm getting error:  ``` org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities Build info: version: '3.7.0', revision: '2321c73', time: '2017-11-02T22:12:12.411Z' System info: host: 'DESKTOP-EN0VGUA', ip: '172.16.150.196', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_121' Driver info: driver.version: unknown remote stacktrace: stack backtrace:    0:   0x46c297 -     1:   0x4388b6 -     2:   0x4225f2 -     3:   0x406389 -     4:   0x40cc97 -     5:   0x657a89 -     6:   0x4185b6 -     7:   0x6535a1 -     8: 0x75a58744 - BaseThreadInitThunk    9: 0x77cd582d - RtlGetAppContainerNamedObjectPath Command duration or timeout: 2.52 seconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) ```","closed","D-marionette,","mstankovic86","2017-11-20T14:05:58Z","2021-09-05T08:35:54Z"
"","5183","ChromeOptions.addEncodedExtensions no longer works (Java)","I had previously written a small extension for automatic authentication through Selenium. This was a small extension that was assembled in-memory in Java code (zipping into a byte array), with the resulting bytes being Base-64 encoded and passed into ChromeOptions.addEncodedExtensions():      options.addEncodedExtensions(ChromeAutoAuthExtension.getEncodedExtensionString());  This no longer works using:     Chrome 62 (running in Docker, on docker-selenium)     ChromeDriver 2.33.506092     Selenium-Server 3.7.1  (also tried 3.8.1)  Opening chrome://extensions inside Chrome does not show the extension.  Only the Selenium extension itself is listed.  The same code previously worked in older versions, with the extension being correctly loaded and appearing in the extension list. I know it worked three months ago (24th August 2017) with Selenium-Server 3.5.1 and whichever version of Chrome was current at that time (should have been ChromeDriver 2.30 and Chrome 60.)   I tested both with and without the .crx header in the base64-encoded string (it used to work without the header.)   The same extension will load as expected if I instead write that same byte array out to a .crx file on disk and then load it through ChromeOptions.addExtensions() instead      options.addExtensions(ChromeAutoAuthExtension.getExtensionTemporaryFile());  Using this method, the extension is loaded and appears in the list as expected.","closed","D-chrome,","NamelessVoice","2017-12-06T18:51:30Z","2019-08-16T21:09:51Z"
"","5679","Remote WebDriver UnreachableBrowserException: Could not start a new session","I got this exception for all browsers. For example, I create a remote webdriver on chrome like this:      caps = DesiredCapabilities.chrome();     ChromeOptions options = new ChromeOptions();     options.addArguments(""disable-infobars"");     caps.setCapability(ChromeOptions.CAPABILITY, options);     webDriver = new RemoteWebDriver(new URL(""http://myIP:5555/wd/hub""), caps); And I got UnreachableBrowserException as follow (firefox and IE get the same exception):      ``` org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72) 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123) Caused by: java.net.SocketTimeoutException: connect timed out 	at java.net.PlainSocketImpl.socketConnect(Native Method) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:125) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158) 	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256) 	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134) 	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:104) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:54) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) ``` But I check my selenium hub at `http://myIP:4444/grid/console`, everything is fine, the node is stil registered. I then check my node at `http://myIP:5555/wd/hub/static/resource/hub.html`, I still can click ""Create Session"" to create a session for all browsers.  I just got this exception today, it still worked few days ago. I am using Selenium 3.11.0, IntelliJ 2017.3, all drivers and browsers are latest versions.   EDIT: These are the scripts I create my grid (on the same machine) Hub: `java -jar C:\Selenium\selenium-server-standalone-3.11.0.jar -role hub` Node: `java  -jar C:\Selenium\selenium-server-standalone-3.11.0.jar -role node -hub http://myIP:4444/grid/register -port 5555`  I googled here, but I can't find a solution for this while my gird is still running. Any help much appreciated.","closed","","louis57","2018-03-26T13:47:29Z","2019-08-14T16:10:02Z"
"","5718","Error on using WebDriverWait instance","I get error on this line while compiling:  Setup.wait.until(ExpectedConditions.presenceOfElementLocated(By.id(HomeScreen.tabHome_ID)));  I'm using IntelliJ IDE  **Error**  Error:(51, 19) java: method until in class org.openqa.selenium.support.ui.FluentWait cannot be applied to given types;   required: java.util.function.Function","closed","C-java,","Mohsin-Awan7500","2018-04-02T06:40:54Z","2019-08-16T07:09:53Z"
"","5487","Register w/ hub uses both intranet and extranet ip addresses","I don't understand why the intranet address `192.168.1.8` is used and then  also `169.254.233.83` ## Meta OS:   Hub: `Mac OS 10.13.3` and `Selenium build info: version: '3.7.1', revision: '8a0099a'` Node: `Mac OS 10.13.3` and `Selenium build info: version: '3.7.1', revision: '8a0099a'`  ## Steps followed: Hub: `./vendor/bin/selenium-server-standalone -role hub ` Node: `./vendor/bin/selenium-server-standalone -role webdriver -hub    http://192.168.1.3:4444/grid/register -port 5566`   ## Actual Behavior  Note the `DefaultRemoteProxy` is `http://192.168.1.8:4723` on the left Note on the right `169.254.233.83:5566`      ## Steps to reproduce - ### Log Hub ``` ~/projects/wisnet/automate (master)$ ./vendor/bin/selenium-server-standalone -role hub  18:17:23.047 INFO - Selenium build info: version: '3.7.1', revision: '8a0099a' 18:17:23.047 INFO - Launching Selenium Grid hub 2018-02-12 18:17:23.530:INFO::main: Logging initialized @696ms to org.seleniumhq.jetty9.util.log.StdErrLog 18:17:23.543 INFO - Will listen on 4444 2018-02-12 18:17:23.589:INFO:osjs.Server:main: jetty-9.4.5.v20170502 2018-02-12 18:17:23.614:INFO:osjs.session:main: DefaultSessionIdManager workerName=node0 2018-02-12 18:17:23.615:INFO:osjs.session:main: No SessionScavenger set, using defaults 2018-02-12 18:17:23.616:INFO:osjs.session:main: Scavenging every 600000ms 2018-02-12 18:17:23.622:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@306279ee{/,null,AVAILABLE} 2018-02-12 18:17:23.649:INFO:osjs.AbstractConnector:main: Started ServerConnector@587c290d{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 2018-02-12 18:17:23.649:INFO:osjs.Server:main: Started @815ms 18:17:23.650 INFO - Nodes should register to http://192.168.1.3:4444/grid/register/ 18:17:23.650 INFO - Selenium Grid hub is up and running 18:17:39.190 INFO - Registered a node http://192.168.1.8:4723 18:18:40.068 INFO - Registered a node http://169.254.233.83:5566 ``` ### Log Node ``` $ composer selenium-node > vendor/bin/selenium-server-standalone -role webdriver -hub http://192.168.1.3:4444/grid/register -port 5566 18:18:39.047 INFO - Selenium build info: version: '3.7.1', revision: '8a0099a' 18:18:39.048 INFO - Launching a Selenium Grid node 2018-02-12 18:18:39.687:INFO::main: Logging initialized @1028ms to org.seleniumhq.jetty9.util.log.StdErrLog 18:18:39.761 INFO - Driver class not found: com.opera.core.systems.OperaDriver 18:18:39.795 INFO - Driver provider class org.openqa.selenium.ie.InternetExplorerDriver registration is skipped:  registration capabilities Capabilities {browserName: internet explorer, ensureCleanSession: true, platform: WINDOWS, version: } does not match the current platform MAC 18:18:39.796 INFO - Driver provider class org.openqa.selenium.edge.EdgeDriver registration is skipped:  registration capabilities Capabilities {browserName: MicrosoftEdge, platform: WINDOWS, version: } does not match the current platform MAC 18:18:39.871 INFO - Using the passthrough mode handler 2018-02-12 18:18:39.901:INFO:osjs.Server:main: jetty-9.4.5.v20170502 2018-02-12 18:18:39.937:WARN:osjs.SecurityHandler:main: ServletContext@o.s.j.s.ServletContextHandler@5bf0d49{/,null,STARTING} has uncovered http methods for path: / 2018-02-12 18:18:39.941:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@5bf0d49{/,null,AVAILABLE} 2018-02-12 18:18:39.976:INFO:osjs.AbstractConnector:main: Started ServerConnector@185a6e9{HTTP/1.1,[http/1.1]}{0.0.0.0:5566}  2018-02-12 18:18:39.976:INFO:osjs.Server:main: Started @1318ms 18:18:39.976 INFO - Selenium Grid node is up and ready to register to the hub 18:18:40.005 INFO - Starting auto registration thread. Will try to register every 5000 ms. 18:18:40.005 INFO - Registering the node to the hub: http://192.168.1.3:4444/grid/register 18:18:40.055 INFO - The node is registered to the hub and ready to use ```","closed","","bartonhammond","2018-02-13T00:45:14Z","2019-08-16T11:09:54Z"
"","5656","ByChained/element.FindElements() is not working as expected","I created a test into the existent ByChainedBrowserTests where I Used an exitent html page and i reproduce the case:           [Test]         public void FindElement_TwoBys_ShouldReturnTwoElements()         {             driver.Url = nestedPage;             driver.Navigate();             var parentSelector = By.XPath(""//div[@name='div1'][1]"");             var a = By.XPath(""//div[@name='div1'][1]"").FindElements(driver);             var b = By.XPath(""//a"").FindElements(driver);             var c = By.XPath(""//div[@name='div1'][1]//a[contains(@href,'.html')]"").FindElements(driver);              var by = new ByChained(By.XPath(""//div[@name='div1'][1]""), By.XPath(""//a""));             var elements = by.FindElements(driver);              Assert.AreEqual(2, elements.Count);         }","closed","","abmptit","2018-03-21T16:56:26Z","2019-08-16T09:09:48Z"
"","5550","Testing with Scala Selenium and javascript","I can't test elements with JavaScript on it. I have this code for testing:  ```  go to ""whateverAdress""  val element = xpath(""//*[@class='btn']"").webElement  element.click()  val inputBox = xpath(""//input[@id='578551eac5741search']"").webElement  inputBox.sendKeys(""text"") ```  And I get the error below:  > [info] org.openqa.selenium.ElementNotInteractableException: You may only interact with visible elements  The second object appears after the first one is clicked. It happens to every web page I try it. How I make the second element visible?  Thanks   ## Meta - OS:    :    Browser:","closed","","MarcPlanas","2018-02-28T11:23:19Z","2019-08-16T12:09:36Z"
"","5160","File upload browse button","I am working on clicking a browse button which brings the file upload window.  Selenium doesn't click on Browse button. This works fine if i run it from Visual studio 2015, but not in 2017.  Environment: Selenium version - Latest 3.6.0 Browser - Internet Explorer 9  Steps: 1. Open web application 2. Click to browse button 3. Selenium doesn't click on Browse button. This works fine if i run it from Visual studio 2015, but not in 2017.  Working code: this.Driver.GetElement(browseButton).SendClick();   ![image](https://user-images.githubusercontent.com/34226126/33536090-0f7e024c-d880-11e7-8907-878d9300311b.png)","closed","","Venky2005","2017-12-04T03:59:21Z","2019-08-16T23:09:41Z"
"","5633","WebDriver action classes do not execute while inside an iframe within the Microsoft Edge Driver","I am using Windows 10 Build 10586.  I have installed Microsoft Edge browser Release 10586  The following action classes do not get executed  while inside an iframe within the Microsoft Edge Driver: action.dragAndDrop action.doubleClick action.contextClick action.clickAndHold action.moveToElement action.release   Here are the sample programs where I've tried to execute these actions:   Program 1:  package trainingSeleniumAutomation;  import java.awt.AWTException; import java.awt.Robot; import java.awt.event.InputEvent; import java.awt.event.KeyEvent; import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.edge.EdgeDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.interactions.Actions;  public class ActionsClassEdge {  	public static void main(String[] args) throws InterruptedException, AWTException { 		// TODO Auto-generated method stub  		//Initiate Browser 		System.setProperty(""webdriver.edge.driver"", ""C:\\MicrosoftEdge\\MicrosoftWebDriver.exe""); 		 		WebDriver driver = new EdgeDriver(); 		driver.manage().window().maximize(); 		 		Actions action = new Actions(driver); 	     		driver.get(""https://jqueryui.com/droppable/""); 		 		Thread.sleep(1000); 		 		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS); 		 				 		driver.switchTo().frame(0); 		 		 		Thread.sleep(1000); 		 		 		WebElement drag=driver.findElement(By.xpath(""//*[@id='draggable']"")); 	       		                 WebElement drop=driver.findElement(By.xpath(""//*[@id='droppable']"")); 		 		 		Thread.sleep(1000); 		 			 		action.dragAndDrop(drag, drop).build().perform(); 				 	}  }      Program 2:  package trainingSeleniumAutomation;  import java.awt.AWTException; import java.awt.Robot; import java.awt.event.InputEvent; import java.awt.event.KeyEvent; import java.util.Collections; import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.edge.EdgeDriver; import org.openqa.selenium.interactions.Actions;  public class ActionsClassEdge1a {  	public static void main(String[] args) throws InterruptedException, AWTException { 		// TODO Auto-generated method stub  		//Initiate Browser                System.setProperty(""webdriver.edge.driver"", ""C:\\MicrosoftEdge\\MicrosoftWebDriver.exe""); 		 		WebDriver driver = new EdgeDriver(); 		driver.manage().window().maximize(); 		 		Actions action = new Actions(driver); 	     		driver.get(""https://jqueryui.com/droppable/""); 		 		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS); 		 		driver.switchTo().frame(0); 		 		WebElement drag = driver.findElement(By.id(""draggable"")); 	 		WebElement drop = driver.findElement(By.id(""droppable"")); 		 				 		action.doubleClick(drag); 		 		Thread.sleep(1000); 		 				 		action.contextClick(drop); 		 		 		Thread.sleep(1000); 		 		 				 		action.dragAndDrop(drag, drop).perform(); 		 		 		 	}  }     Program 3:  package trainingSeleniumAutomation;  import java.util.Collections; import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.edge.EdgeDriver; import org.openqa.selenium.interactions.Actions;  public class ActionsClassEdge2a {  	public static void main(String[] args) throws InterruptedException { 		// TODO Auto-generated method stub  		//Initiate Browser                 System.setProperty(""webdriver.edge.driver"", ""C:\\MicrosoftEdge\\MicrosoftWebDriver.exe""); 		 		WebDriver driver = new EdgeDriver(); 		driver.manage().window().maximize(); 		 		Actions action = new Actions(driver); 	    	     		driver.get(""https://jqueryui.com/droppable/""); 		 		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS); 		 		driver.switchTo().frame(0); 		 		WebElement drag = driver.findElement(By.id(""draggable"")); 	 		WebElement drop = driver.findElement(By.id(""droppable"")); 		 		action.clickAndHold(drag).moveToElement(drop).release(drop).build().perform(); 		 		//driver.quit(); 		 		 	}  } ![edge1](https://user-images.githubusercontent.com/4235950/37548336-7afb7914-294d-11e8-9164-38c432e57555.jpg) ![edge2](https://user-images.githubusercontent.com/4235950/37548337-80fdf148-294d-11e8-901e-bb67e9e310af.jpg)","closed","","fdeamicis","2018-03-16T23:09:18Z","2019-08-16T09:10:02Z"
"","4945","Issue while Login with different user on SSO enabled machine","I am using selenium remote webdriver and hitting the application on Single sign-on enabled remote machine.My application get login with the same user which I have used during login into remote machine. I want to run the application with different users while running tests but I am not able to do due to single sign-on.It is not giving working but I am not able to switch the user.it is always logged-in with the user which I used for login in the remote machine. The code looks like below:  WebDriver driver = null;         ChromeOptions options = new ChromeOptions();         options.addArguments(TEST_TYPE);         options.addArguments(DISABLE_POPUP_BLOCKING);         if(nodeName.equals(""Level2""))             options.addArguments(""user-data-dir=C:/Users/Level2/AppData/Local/Google/Chrome/User Data/Default"");         else if(nodeName.equals(""Level1""))             options.addArguments(""user-data-dir=C:/Users/Level1/AppData/Local/Google/Chrome/User Data/Default"");         DesiredCapabilities cap = DesiredCapabilities.chrome();         cap.setCapability(ChromeOptions.CAPABILITY, options);         cap.setBrowserName(""chrome"");         cap.setCapability(""applicationName"", nodeName);         String Node;         if (System.getProperty(""hubUrl"") == null){             Node = ""http://"" + hubIpaddress + "":"" + hubPort + ""/wd/hub"";         }else{             Node = System.getProperty(""hubUrl"", ""http://localhost:4444/wd/hub"");         }              System.out.println(""---Node----""+Node);         try {             driver = new RemoteWebDriver(new URL(Node), cap);","closed","","NehaBhatia28","2017-10-25T03:58:50Z","2019-08-17T06:09:36Z"
"","5417","Autodetect proxy error with Selenium 3.8.1 + firefox 58 + gecko .19","I am using Selenium 3.8.1 + firefox 58 + gecko .19.  My code snippets looks as below.              FirefoxProfile profile = new FirefoxProfile();             profile.setAcceptUntrustedCertificates(true);             profile.setAssumeUntrustedCertificateIssuer(false);             profile.setPreference(""browser.download.useDownloadDir"", true);             profile.setPreference(""browser.download.folderList"", 0);             profile.setPreference(""browser.helperApps.neverAsk.saveToDisk"", ""application/xml"");             profile.setPreference(""browser.helperApps.neverAsk.saveToDisk"", ""application/zip"");             profile                 .setPreference(                     ""browser.helperApps.neverAsk.saveToDisk"",                     ""application/x-xpinstall;application/x-zip;application/x-zip-compressed;application/octet-stream;application/zip;application/pdf;application/msword;text/plain;application/octet"");             profile.setPreference(""browser.helperApps.alwaysAsk.force"", false);             profile.setPreference(""browser.download.manager.showWhenStarting"", false);                           DesiredCapabilities capabilities = new DesiredCapabilities();             capabilities = DesiredCapabilities.firefox();             capabilities.setCapability(FirefoxDriver.PROFILE, profile);             capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);              // set to not use a proxy             Proxy seleniumProxyConfig = new Proxy();             seleniumProxyConfig.setProxyType(ProxyType.DIRECT);             capabilities.setCapability(CapabilityType.PROXY, seleniumProxyConfig);             capabilities.setCapability(CapabilityType.ForSeleniumServer.AVOIDING_PROXY, true);              logger.info(""URL Being opened is:"" + url);             driver = new CustomRemoteWebDriver(new URL(url), capabilities);              // driver.manage().window().maximize();              // THIS SCREWS UP TEST EXECUTION for some reason             driver.manage().timeouts().implicitlyWait(1, TimeUnit.SECONDS);              ResourceManager.addResource(WEBDRIVER_RESOURCE_NAME, driver);  When i run the the test, i get the below error.  “autodetect is not a valid proxy configuration capability” Using he proper gecko driver and command accordingly “start java -Djava.io.tmpdir=c:\selenium\temp -Dwebdriver.gecko.driver=geckodriver.exe -jar c:\selenium\selenium-server-standalone-3.8.1.jar”   If i remove the proxy code then my firefox is dead.  Can someone help me on this please","closed","D-firefox,","ianantha","2018-01-31T14:47:05Z","2019-08-16T12:09:56Z"
"","4848","Selenium 3.3.6 is showing error while adding option from dropdown","I am using FF 64.0 and selenium 3.6 .  I got below error at the time of running below code  Code  import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.support.ui.Select;  public class Login {  public static void main(String []args) {  	System.setProperty(""webdriver.gecko.driver"", ""C:/Java/geckodriver-v0.16.0-win64/geckodriver.exe""); 	WebDriver driverobj=new FirefoxDriver(); 	driverobj.get(""https://illnqw1409.corp.amdocs.com:28501/idp-simulator/public/index.html "");  	 	driverobj.manage().timeouts().implicitlyWait(120, TimeUnit.SECONDS); 	 	//new Select(driverobj.findElement(By.xpath(""//select[@id='userName']""))).selectByIndex(2); 	 	Select dropdown = new Select(driverobj.findElement(By.id(""userName""))); 	dropdown.selectByVisibleText(""Asmsa1""); } }  Error  1507628784139	addons.productaddons	WARN	Failed downloading XML, status: 0, reason: error 1507628784152	addons.productaddons	WARN	Failed downloading via XHR, status: 0, reason: error 1507628784163	addons.productaddons	WARN	Failed downloading via XHR, status: 0, reason: error Oct 10, 2017 3:16:24 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C 1507628784224	Marionette	DEBUG	Received DOM event ""beforeunload"" for ""about:blank"" 1507628787018	Marionette	DEBUG	Received DOM event ""pagehide"" for ""about:blank"" 1507628787019	Marionette	DEBUG	Received DOM event ""unload"" for ""about:blank"" 1507628790236	Marionette	DEBUG	Received DOM event ""DOMContentLoaded"" for ""https://illnqw1409.corp.amdocs.com:28501/idp-simulator/public/index.html"" 1507628790289	Marionette	DEBUG	Received DOM event ""pageshow"" for ""https://illnqw1409.corp.amdocs.com:28501/idp-simulator/public/index.html"" Oct 10, 2017 3:16:30 PM org.openqa.selenium.remote.ErrorCodes toStatus INFO: HTTP Status: '404' -> incorrect JSON status mapping for 'unknown error' (500 expected) Exception in thread ""main"" org.openqa.selenium.WebDriverException: timeouts   Can you plz let us know solutipon. I got solution from one conversation as' WebDriver spec needs to include the /shutdown endpoint' what should I do for this. Because. I am new selenium user.   Note- I reported this issue , as per that this is bug in selenium","closed","R-awaiting answer,","Aparn12","2017-10-11T12:09:03Z","2019-08-17T07:09:49Z"
"","5775","Selenium not fully load recaptcha v2 demo site","I am using current version and on Python with Firefox. ``` import selenium.webdriver as webdriver import selenium.webdriver.support.ui as ui from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.common.exceptions import TimeoutException from selenium.webdriver.common.by import By from time import sleep     import os, errno from selenium.webdriver.firefox.options import Options import sys  #user_agent = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.50 Safari/537.36' #options = Options() #options.set_headless(headless=True) #options.add_argument(f'user-agent={user_agent}') #browser = webdriver.Firefox(firefox_options=options)  ##options = Options() ##options.add_argument('--headless')  #os.system('PAUSE') #browser = webdriver.Firefox(options=options) browser = webdriver.Firefox() browser.get('https://www.google.com/recaptcha/api2/demo')  delay = 10 # seconds try:     #myElem = WebDriverWait(browser, delay).until(EC.presence_of_element_located((By.XPATH, '//div[@class=""recaptcha-anchor""')))     browser.find_element_by_xpath(""//*[contains(text(),'var errorDivs = document.getElementsByClassName')]"")     print(""Page is ready!"") except TimeoutException:     print(""Loading took too much time!"")     print(browser.find_element_by_tag_name('html').get_attribute('innerHTML'))     #browser.find_element_by_id(""recaptcha-anchor"").click()  print('worked')  ``` if it says page is ready then it found the code located inside of recaptcha but cant find the whole version of it which built on UI style. Dunno how but selenium is getting blocked by google recaptcha. It wont load the recaptcha so you cant pass it.","closed","","kem008","2018-04-12T22:41:20Z","2019-08-16T06:09:34Z"
"","5516","cant load such file selenium/webdriver/phantomjs","I am using arachni1.4 gem  web scanner to scan web application. As part of its dependency it is downloading selenium-webdriver 3.8.0 from rebygems.org website. and when i ran the scanner it is throwing the below error. on windows machine 8.1 64 bit  cant load such file selenium/webdriver/phantomjs  I checked the gem contents that phantomjs folder is missing but when i checked the source code github theat folder is there. pls tell me reason why it is missing from selenium-webdriver 3.8.0  gem downloaded from rubygems.org. pls suggest any alternate i cant change gem file because i am not a owner of it. Is there any way to set the path of phantomjs??","closed","","sampathmende","2018-02-21T04:47:08Z","2019-08-16T13:09:46Z"
"","5535","firefox path error","I am using a bot and this error is occuring.when i run the bot it has to start the firefox automatically but this error shows up.  OpenQA.Selenium.WebDriverException: Cannot find Firefox binary in PATH or default install locations. Make sure Firefox is installed. OS appears to be: Vista at OpenQA.Selenium.Firefoxinternal.Executable..ctor(String userSpecifiedBinaryPath) at OpenQA.Selenium.Firefox.FirefoxBinary..ctor(String pathToFirefoxBinary) at WindowsFormsApplicationl.Forml.BotMainQ","closed","","TitanwaCS","2018-02-24T13:10:03Z","2019-08-16T12:10:03Z"
"","5404",".net HttpCommandExecutor lacks ""Cache-Control: no-cache"" header for HTTP GET commands","I am using .net Selenium WebDriver implementation to execute tests on cloud-based virtual machine. Test code is executed on my local PC within corporate network with proxy server. Test code uses OpenQA.Selenium.Remote.RemoteWebDriver class to send commands to remote virtual machine.  It looks like proxy server caches Selenium's HTTP GET requests and returns ""cached"" data which is outdated. E.g. method ITakesScreenshot.GetScreenshot() returns outdated screenshots.  In Java version of Selenium WebDriver this is not happening because of this code: `    if (HttpMethod.GET == spec.method) {       request.setHeader(CACHE_CONTROL, ""no-cache"");     } ` Similar code exists for Ruby WebDriver implementation.  However .net implementation doesn't have it.","closed","C-dotnet,","dnknitro","2018-01-29T20:59:19Z","2019-08-16T13:10:04Z"
"","4854","An url is launched correctly through selenium IDE , but not through script","i am trying to launch a url which once loaded will prompt for username and password .  Problem is that when i am recording and running the test cases through selenium IDE , it works . However when i am trying to launch the url through code , it turns grey and does not show any prompt for username and password  **Observation :**   when i opened the URL manually       url =http://10.131.14.245:30016/index.html  it automatically redirects itself in few seconds to      http://10.131.14.245:30016/index.html#/Login  and the prompt for username and password looks visible .  However during script execution , URL is not redirecting itself and it remains      url =http://10.131.14.245:30016/index.html  even if we add the value '#Login' through code , it does not work  I am using  Python 2.7 Selenium 3.6 Firefox 56 geckodriver v.018  below is the error in geckodriver.log file      1507793622480	geckodriver	INFO	geckodriver 0.18.0     1507793622495	geckodriver	INFO	Listening on 127.0.0.1:56485     1507793624523	geckodriver::marionette	INFO	Starting browser C:\Program Files\Mozilla Firefox\firefox.exe with args [""-marionette""]     1507793626284	Marionette	INFO	Listening on port 56493     1507793626626	Marionette	WARN	TLS certificate errors will be ignored for this session     JavaScript warning: http://10.131.14.245:30016/vendor/jquery/jquery.min.js, line 1: Using //@ to indicate sourceMappingURL pragmas is deprecated. Use //# instead     JavaScript error: http://10.131.14.245:30016/vendor/requirejs/require.js, line 165: Error: Load timeout for modules: angular,ocLazyLoad,angular-ui-router,angular-translate,angular-sanitize,angular-translate-loader-static-files,angular-translate-loader-partial,angular-css-injector     http://requirejs.org/docs/errors.html#timeout     #timeout     1507793619059	addons.productaddons	WARN	Failed downloading via XHR, status: 0, reason: error     1507793619078	addons.productaddons	WARN	Failed downloading via XHR, status: 0, reason: error     [Child 12096] WARNING: pipe error: 109: file c:/builds/moz2_slave/m-esr52-w64-000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 345       below is the error in python       D:\userdata\khchoudh\Desktop\POC\Selenium Robotframework\Firefox>python worked2.py     EE     ======================================================================     ERROR: test_worked2 (__main__.Worked2)     ----------------------------------------------------------------------     Traceback (most recent call last):       File ""worked2.py"", line 21, in test_worked2         driver.find_element_by_name(""username"").clear()       File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 437, in find_element_by_name         return self.find_element(by=By.NAME, value=name)       File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 843, in find_element         'value': value})['value']       File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 308, in execute         self.error_handler.check_response(response)       File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 194, in check_response         raise exception_class(message, screen, stacktrace)     NoSuchElementException: Message: Unable to locate element: [name=""username""]                Python code  # -*- coding: utf-8 -*-         from selenium import webdriver     from selenium.webdriver.common.by import By     from selenium.webdriver.common.keys import Keys     from selenium.webdriver.support.ui import Select     from selenium.common.exceptions import NoSuchElementException     from selenium.common.exceptions import NoAlertPresentException     import unittest, time, re          class Worked2(unittest.TestCase):         def setUp(self):             self.driver = webdriver.Firefox()             self.driver.implicitly_wait(30)             self.base_url = ""http://10.131.14.245:30016/index.html#/login""             self.verificationErrors = []             self.accept_next_alert = True                  def test_worked2(self):             driver = self.driver             driver.get(self.base_url + ""/index.html#/login"")             driver.find_element_by_name(""username"").clear()             driver.find_element_by_name(""username"").send_keys(""xxxx"")             driver.find_element_by_name(""password"").clear()             driver.find_element_by_name(""password"").send_keys(""xxxx"")             driver.find_element_by_xpath(""//button"").click()                  def is_element_present(self, how, what):             try: self.driver.find_element(by=how, value=what)             except NoSuchElementException as e: return False             return True                  def is_alert_present(self):             try: self.driver.switch_to_alert()             except NoAlertPresentException as e: return False             return True                  def close_alert_and_get_its_text(self):             try:                 alert = self.driver.switch_to_alert()                 alert_text = alert.text                 if self.accept_next_alert:                     alert.accept()                 else:                     alert.dismiss()                 return alert_text             finally: self.accept_next_alert = True                  def tearDown(self):             self.driver.quit()             self.assertEqual([], self.verificationErrors)          if __name__ == ""__main__"":         unittest.main()       HTML of the site                                     OpenDayLight DLUX                                     var module = ['angular','ocLazyLoad','angular-ui-router','angular-translate', 'angular-sanitize', 'angular-translate-loader-static-files', 'angular-translate-loader-partial', 'angular-css-injector'];     var deps = ['common/config/env.module','app/testsetup/testsetup.module','app/core/core.module','app/designboard/designboard.module','app/testautomation/testautomation.module','common/login/login.module','common/authentification/auth.module','common/navigation/navigation.module','common/topbar/topbar.module','common/general/common.general.module','app/topology/topology.module','app/yangui/main','common/yangutils/yangutils.module','common/sigmatopology/sigmatopology.module','app/yangvisualizer/yangvisualizer.module','common/layout/layout.module'];     var e = ['oc.lazyLoad', 'ui.router', 'pascalprecht.translate', 'ngSanitize', 'angular.css.injector', 'app','app.testsetup','app.core','app.designboard','app.testautomation','app.common.login','app.common.auth','app.common.nav','app.common.topbar','app.common.general','app.topology','app.yangui','app.common.yangUtils','app.common.sigmatopology','app.yangvisualizer','app.common.layout'];             // global variables","closed","","pankajigec26","2017-10-12T12:06:53Z","2019-08-17T06:09:34Z"
"","4924","Issue with chrome driver","I am totally new to selenium and java. I tried a code to open a webpage using selenium and its showing the following error  java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html 	at com.google.common.base.Preconditions.checkState(Preconditions.java:754) 	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:124) 	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32) 	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137) 	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:329) 	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123) 	at selenium.webdriver.test.SeleniumTest.invokeBrowser(SeleniumTest.java:14) 	at selenium.webdriver.test.SeleniumTest.main(SeleniumTest.java:40) **-----------------------------------------------------------------------------------------------------------------**   **my code snippet is**  package selenium.webdriver.test;  import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.remote.RemoteWebDriver;  public class SeleniumTest { 	WebDriver driver; 	public void invokeBrowser() { 		try { 			 			 			WebDriver driver=new ChromeDriver(); 			System.setProperty("" webdriver.chrome.driver"", ""E:\\chromedriver.exe""); 			 			driver.manage().window().maximize(); 			driver.manage().deleteAllCookies(); 			driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS); 			driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS); 			getUrl(); 		} catch (Exception e) { 			 			e.printStackTrace(); 		} 	} 		 		public void getUrl() { 			try { 				driver.get(""https://www.amazon.in""); 				driver.findElement(By.linkText(""nav-your-amazon"")).click(); 			} catch (Exception e) { 				// TODO Auto-generated catch block 				e.printStackTrace(); 			} 		} 	 	public static void main(String args[]) { 		SeleniumTest obj = new SeleniumTest(); 		obj.invokeBrowser(); 	}  }  please help.. Thank you","closed","","Gokulsathyan12","2017-10-22T08:35:04Z","2019-08-17T06:09:49Z"
"","4810","Driver neither navigating to page nor throwing an error","I am running Mac OSX, Python 3, and am using the latest version of the Chrome Driver and selenium.   Here is my meager code so far: ``` import selenium from selenium import webdriver  driver = webdriver.Chrome(executable_path=""/usr/local/bin/chromedriver"")   driver.get('htttp://economist.com')  ``` I get no error, but a Chrome window opens to a blank page.","closed","","ghost","2017-10-04T19:10:05Z","2021-09-05T10:35:56Z"
"","5165","Unable to use extensions in 3.8+ node-chrome-debug","I am running into issues attempting to run chrome extensions with the 3.8+ node-chrome-debug.  Rolled back to 3.7.1 and it worked (getting disable developer extensions popup however).  My app is using nightwatch with the following chrome options. args: [   '--no-sandbox',   '--disable-popup-blocking',   '--disable-infobars', ]  I fiddled with a bunch of the other chrome options without any success. I don't think it is specific to the extension but in my case the extension was PIA - I use this for DFP testing with google and I need the vpn location set. I made sure I had the latest extension downloaded. Attempting to access the extension directly with chrome-extension seemed to work fine from my own laptop. chrome-extension://jplnlifepflhkbkgonidnobkakhmpnmh/html/foreground.html  Screenshot of issue when running in container: ![extension _blocked](https://user-images.githubusercontent.com/10325856/33581810-9251d650-d90f-11e7-944f-56ac8754a145.png)","closed","D-chrome,","Zechtitus","2017-12-04T23:29:39Z","2019-08-16T19:09:58Z"
"","5551","Chrome Driver - not using download.default_directory","I am overriding the chrome driver download dir using below code.  ```             HashMap chromePrefs = new HashMap();             chromePrefs.put(""profile.default_content_settings.popups"", 0);             chromePrefs.put(""download.default_directory"", ""/home/seluser/downloads"");             chromePrefs.put(""download.prompt_for_download"", ""false"");             ChromeOptions options = new ChromeOptions();             options.setExperimentalOption(""prefs"", chromePrefs);             options.addArguments(""--test-type"");             dc.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);             dc.setCapability(ChromeOptions.CAPABILITY, options);             driver = new RemoteWebDriver(new URL(""http://remotehost:4444/wd/hub""), dc); ```  However the file always gets download into **/home/seluser/Downloads** even if the **/home/seluser/downloads** exists with enough permission.  Selenium version 3.9.1 Chrome driver version 2.35","closed","D-chrome,","vinsguru","2018-03-01T05:53:39Z","2019-08-14T21:09:53Z"
"","5274","[rb] Update SSL example in Ruby Bindings Wiki","I am opening this request so someone can update the SSL Section of the wiki for ruby-bindings.   I spent over 2-3 hours debugging (looking at source code and such) and then I realized the documentation missed the two ""::"" between Remote & Capabilities :(  The text in question:  >  > capabilities = Selenium::WebDriver::Firefox::RemoteCapabilities.firefox(accept_insecure_certs: true) > driver = Selenium::WebDriver.for :firefox, desired_capabilities: :capabilities  This should actually be:  caps = Selenium::WebDriver::**Remote::Capabilities**.firefox(accept_insecure_certs: true) browser = Selenium::WebDriver.for :remote, desired_capabilities: caps  Thanks in Advance!   Keep up the great work :)","closed","","codered","2017-12-30T04:10:56Z","2019-08-16T18:09:58Z"
"","5785","using iewebdriver in Selenium for Python:ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host","I am learning Selenium and am at the point where I want to test a simple script with the Selenium Iewebdriver.   This same script executed successfulIy with the chromedriver. I am running IE11 on a Windows 64 bit Windows 10 PC.   I have looked up the error(s) below on various sites and have found numerous suggestions concerning changing Proxy settings, browser settings, etc.   None of the suggestion were very clear.   I did follow all the recommendations in https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver but am still having these issues.   Any suggestions are greatly appreciated!  ================================================================ from selenium import webdriver  iepath=""C:\\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\selenium\webdriver\IEDriverServer_x64_3.11.1\IEDriverServer.exe"" driver1=webdriver.Ie(iepath) driver1.get(""http://google.com"") print (driver1.title) ================================================================ Traceback (most recent call last):    File ""C:\Users\Marc.Marc-PC\eclipse-workspace\Basic\com\IEbrowser.py"", line 15, in      driver1=webdriver.Ie(iepath)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\ie\webdriver.py"", line 87, in __init__     desired_capabilities=capabilities)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 310, in execute     response = self.command_executor.execute(driver_command, params)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 466, in execute     return self._request(command_info[0], url, body=data)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 528, in _request     resp = opener.open(request, timeout=self._timeout)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\urllib\request.py"", line 526, in open     response = self._open(req, data)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\urllib\request.py"", line 544, in _open     '_open', req)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\urllib\request.py"", line 504, in _call_chain     result = func(*args)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\urllib\request.py"", line 1346, in http_open     return self.do_open(http.client.HTTPConnection, req)   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\urllib\request.py"", line 1321, in do_open     r = h.getresponse()   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\http\client.py"", line 1331, in getresponse     response.begin()   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\http\client.py"", line 297, in begin     version, status, reason = self._read_status()   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\http\client.py"", line 258, in _read_status     line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"")   File ""C:\Users\Marc.Marc-PC\AppData\Local\Programs\Python\Python36\lib\socket.py"", line 586, in readinto     return self._sock.recv_into(b) ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host","closed","","mmoskovits","2018-04-16T21:48:57Z","2019-09-08T01:09:35Z"
"","4918","Unable to use Html Unit Driver to click on anchor on web-page.","I am developing a Groovy application, using selenium-webdriver-driver-2.52. I also have the following libraries at use: httpclient 4.5.1 and htmlunit 2.18.     There is an element on the webpage: `Login`  ` WebClient webClient = new WebClient()         webClient.setJavaScriptEnabled(true)         webClient.setThrowExceptionOnFailingStatusCode(false)         webClient.setThrowExceptionOnScriptError(false)          HtmlPage currentPage              currentPage = (HtmlPage) webClient.getPage();             List anchors = currentPage.getAnchors()             HtmlAnchor anchor = anchors[0]             HtmlPage newPage = anchor.click()  `  The web client is able to locate the anchor, using getAnchors on the current page. However, when I invoke the click button on the anchor, the returned Page is the same as the one I am currently on. The expected behavior however, is that clicking on the button would take me to the next page.  Also, one observation is that the HREF is a hashtag, but when I hover over this in a browser, I can see the actual URL I am after.   Also, the web frontend I am navigating to using selenium makes use of AngularJS - not sure if this could be affecting anything.","closed","","OllieReynolds","2017-10-20T11:20:57Z","2019-08-17T06:09:54Z"
"","5074","Guard messages","I added specs that specify behavior but have to be run manually because it requires verifying tests are failing, which kind of defeats the purpose of having them in the test suite.  The idea is to try to encourage each guard to be for the same reason, and add a message to explain why (ideally URL to bug  report) This implementation would require guards to be placed in same order as `GUARD_TYPES` (alphabetically), and each guard to have a matching message (or a `nil`).  I was going to add more info in the message about which guard applied, but thought this was a better place to start at least.  This also allows to continue skipping non-applicable specs when running via RSpec or RubyMine directly. (`./go` only executes certain folders, where running `rspec` directly will attempt to run and pending out the Firefox tests using Chrome, etc)  I'm not sure when the `#uniq` is necessary when constructing the guard array. I didn't test the `example_group` thoroughly, does that result in multiple of the same guard in places? That might break this implementation. Let me know your feedback.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5074)","closed","C-rb,","titusfortner","2017-11-18T00:14:28Z","2019-04-15T03:56:40Z"
"","5018","dict comprehension not available in Python 2.6","https://github.com/SeleniumHQ/selenium/blob/6e66b0513f022f1d555d8cab9d19d883274a46c4/py/selenium/webdriver/remote/webdriver.py#L991 https://github.com/SeleniumHQ/selenium/blob/6e66b0513f022f1d555d8cab9d19d883274a46c4/py/selenium/webdriver/remote/webdriver.py#L1031  see the PEP: https://www.python.org/dev/peps/pep-0274/","closed","","pabra","2017-11-06T09:49:53Z","2019-08-17T04:09:39Z"
"","5216","Screenshot.SaveAsFile() does not overwrite file as stated in its summary comment","https://github.com/SeleniumHQ/selenium/blob/2e5358a2f7ba4180fafa5bdf7761dec3b9fd0ee7/dotnet/src/webdriver/Screenshot.cs#L106  https://github.com/SeleniumHQ/selenium/blob/2e5358a2f7ba4180fafa5bdf7761dec3b9fd0ee7/dotnet/src/webdriver/Screenshot.cs#L129  Method comment for Screenshot.SaveAsFile() says it will overwrite existing file. The uderlying Image.Save() method used does not do this.","closed","C-dotnet,","lotsahelp","2017-12-13T17:03:35Z","2019-08-16T09:09:39Z"
"","5091","Issue in Multiple file upload in Selenium Grid","https://bugs.chromium.org/p/chromedriver/issues/detail?id=2024&can=2&start=0&num=100&q=&colspec=ID%20Status%20Pri%20Owner%20Summary&groupby=&sort= #5079  Code: private static IWebDriver _webdriver; IAllowsFileDetection allowsDetection = _webdriver as IAllowsFileDetection; allowsDetection.FileDetector = new LocalFileDetector();  var localDoc=""C:\selenium\Documents\Test.txt C:\selenium\Documents\Test 2.txt""; element = findElement(By.xpath(""location""); element.sendKeys(localDoc);  Issue: WebDriver.dll but was not handled in user code  Additional information: invalid argument: File not found : C:\selenium\Documents\Test.txt  (Session info: chrome=62.0.3202.94)  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (ExpectedError)  Grid version =3.7","closed","D-chrome,","heyitsmesuraj","2017-11-21T07:36:55Z","2019-08-17T01:09:50Z"
"","5079","Issue in Multiple file upload","https://bugs.chromium.org/p/chromedriver/issues/detail?id=2024&can=2&start=0&num=100&q=&colspec=ID%20Status%20Pri%20Owner%20Summary&groupby=&sort=","closed","","heyitsmesuraj","2017-11-20T07:23:43Z","2019-08-17T01:09:56Z"
"","5353","How to  remove file with python+selenium  after logining in  dropbox ?","How to  remove file with python+selenium  after logining in  dropbox ?","closed","","gitsnippet","2018-01-18T04:29:25Z","2019-08-16T17:09:47Z"
"","5530","How does one can check the difference in selenium & WebDriver's connection while connected with LAN and WIFI","How does one can check the difference in selenium & WebDriver's connection while connected with LAN and WIFI.  My Script is working while connected with WIFI but not in LAN.  Please help with the steps to debug the connection differences in terms of proxies, ports or hosts. Firewall is disabled already","closed","","siddtiwari","2018-02-23T06:49:07Z","2019-08-16T12:10:06Z"
"","5438","python+selenium+PhantomJS: driver.execute_script() can't work","Hi~ I was trying to simulate page scroll by js, but it doesn't work. My attempt: ``` driver = webdriver.PhantomJS() driver.get(url) driver.maximize_window() driver.execute_script(""window.scrollTo(0, document.body.scrollHeight)"") html = driver.page_source.encode('utf-8') ``` then i fonud a solution: screenshot before script ``` driver.get_screenshot_as_file('123.png') driver.execute_script(""window.scrollTo(0, document.body.scrollHeight)"") ```  A bit magical :D But i don't know why","closed","","0x2E","2018-02-05T12:58:50Z","2019-08-16T14:10:01Z"
"","5427","selenium.common.exceptions.WebDriverException: Message: unable to set cookie","Hi,all. I'm using the selenium occur some problem as blow. python version is Python 3.5.3 the always exception error.  **save cookies**  ``` pickle.dump( browser.get_cookies() , open(""cookies.ini"",""wb"")) ``` **restore cookies** ```  cookies = pickle.load(open(""cookies.ini"", ""rb""))     for cookie in cookies:         print(""cookies type "",type(cookie))         print(""dict "",cookie)         browser.add_cookie(cookie) ```  ** Exception **  ```  File ""mooc-scrapy.py"", line 211, in      browser.add_cookie(cookie)   File ""/home/lcy/.pyenv/versions/py3dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 775, in add_cookie     self.execute(Command.ADD_COOKIE, {'cookie': cookie_dict})   File ""/home/lcy/.pyenv/versions/py3dev/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""/home/lcy/.pyenv/versions/py3dev/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unable to set cookie   (Session info: chrome=61.0.3163.100)   (Driver info: chromedriver=2.34.522913 (36222509aa6e819815938cbf2709b4849735537c),platform=Linux 4.9.0-5-amd64 x86_64) ```","closed","","yjdwbj","2018-02-02T03:27:10Z","2019-08-14T10:09:55Z"
"","4916","Keys.chord does not work with Chromedriver","Hi, I am not sure if this belongs here, or if it would fit better on Chromedrivers own Site. If it does not belong here, please let me know. I am new to reporting Issues on Github, so If anything is wrong or there is something missing, please let me know that too.   ## Meta  OS:  OSX Selenium Version:  3.6.0, IntelliJ 2017.2.5 Browser:  Chrome Browser Version: 62.0.3202.62 (64bit) Chromedriver Version: 2.33  ## Expected Behavior  Key.chord should mark, copy and paste Text in an input-field with Keys.chord(Keys.COMMAND, ""a"") etc.  I tried it with webelement.sendKeys(Keys.chord(Keys.COMMAND, ""a"")), and with  Actions actions = new Actions(driver); actions.sendKeys(selectedElement, Keys.chord(Keys.COMMAND, ""a"")); ## Actual Behavior  it does nothing, no error in log ## Steps to reproduce  System.setProperty(""webdriver.chrome.driver"", ""./src/main/resources/chromedriver_2_33""); Webdriver driver = new ChromeDriver(); driver.get(""https://www.google.de""); WebElement searchbar = driver.findElement(By.className(""gsfi"")); searchbar.click(); searchbar.sendKeys(""abcdef""); searchbar.sendKeys(Keys.chord(Keys.COMMAND, ""a""));","closed","D-chrome,","JFischer84","2017-10-20T07:13:58Z","2019-08-14T16:09:37Z"
"","5040","GeckoDriver randomly returns connection refused error","Hi, I am using the robotframework for my gui tests. The robotframework is a wrapper for a lot of testing libraries e.g. selenium for web tests. Unfortunately I have the following issue and no idea what might cause it: In my test environment my tests randomly fail because connection refused exceptions (see stacktrace below). I’ve already asked the maintainer of the corresponding robotframework library but he has no idea neither and guessed that it might be a selenium problem. I’m using a CentOS 7 system with the newest available Firefox Version (Firefox 52) and the belonging GeckoDriver Version (geckoDriver v0.17).  My initial thought was that I might use an outdated setup, but Firefox 52 is the newest version available for Centos 7 and is the official supported one. The GeckoDriver Version can’t be updated as well because the newer versions don’t support Firefox 52.  Updating the Browser and the GeckoDriver isn’t a possible option therefore.. Do you have any ideas what might cause my problem? As I said it only happens randomly so that I can’t point to a concrete cause.. Any ideas? I don’t even have an idea how to isolate the cause of my problem any further.. Thanks in advance for your help ``` org.openqa.selenium.WebDriverException: connection refused Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z' System info: host: 'jenkins-slave', ip: xxx', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-514.26.2.el7.x86_64', java.version: '1.8.0_131' Driver info: driver.version: FirefoxDriver remote stacktrace: stack backtrace:    0:           0x57af6d - backtrace::backtrace::trace::h59229d13f6a8837d    1:           0x57b0c2 - backtrace::capture::Backtrace::new::h23089c033eded8f0    2:           0x4472fc - webdriver::error::WebDriverError::new::h0b226f62ff19e120    3:           0x4514c1 - geckodriver::marionette::MarionetteHandler::create_connection::hd468f55550be3626    4:           0x426854 - ::run::h62323eaff3e71b8c    5:           0x40935c - std::panicking::try::do_call::hb7e6ff6d130a72cf    6:           0x5de23a - panic_unwind::__rust_maybe_catch_panic                         at /checkout/src/libpanic_unwind/lib.rs:98    7:           0x41c003 - ::call_box::hd6ceeda495c4fa0e    8:           0x5d68d4 - alloc::boxed::{{impl}}::call_once                         at /checkout/src/liballoc/boxed.rs:650                          - std::sys_common::thread::start_thread                         at /checkout/src/libstd/sys_common/thread.rs:21                          - std::sys::imp::thread::{{impl}}::new::thread_start                         at /checkout/src/libstd/sys/unix/thread.rs:84  ```","closed","","ehhc","2017-11-09T16:51:34Z","2019-08-17T02:09:54Z"
"","4940","Referenced assembly 'WebDriver' does not have a strong name","Hi,  We are trying to build a .Net(4.0) application and try to deploy as a COM Class Interface.  I assume that it's mandatory to add a strong name all the COM interfaces. For this we don't have strong name of this 'WebDriver' . Could you please review and help on this.","closed","","mvsreddymca","2017-10-24T12:54:58Z","2019-08-14T19:09:50Z"
"","4841","Invalid W3C caps generated from Ruby bindings.","Hi,  Using selenium-webdriver gem 3.6.0  When creating caps the following way ```ruby  caps = Selenium::WebDriver::Remote::Capabilities.firefox  caps[""browser_version""] = ""54"" ```  Creates the following W3C capabilities: ```json {  ""capabilities"" : {""firstMatch"" : [{""browserName"" : ""firefox"", ""browser_version"" : ""54""}]}} ``` (https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/remote/w3c/capabilities.rb#L162) Here, `browser_version` key is not according to the W3C specification.  Any particular reason for this? According to me, it should be converted to camel case.","closed","C-rb,","pulkitsharma07","2017-10-10T09:26:35Z","2019-08-17T08:09:43Z"
"","5612","Unable to Turn off the pop up blocker By setting the Capabilities for IE 11","Hi,  My requirement is to turn off the popup blocker in IE11 to open my application.  I have tried below options.But none of this working.  DesiredCapabilities ieCapabilities =new DesiredCapabilities();                             ieCapabilities.setCapability(""disable-popup-blocking"", true); or                ieCapabilities.setCapability(""unexpectedAlertBehaviour"",""accept""); or                 ieCapabilities.setCapability(""browserstack.ie.enablePopups"",""accept""); Any help on this.  Thanks in Advance.","closed","","MuppuBala","2018-03-14T15:36:18Z","2019-08-16T10:09:42Z"
"","5808","Getting error : Uncaught WebDriverError: connection refused in docker only","Hi,  I am trying to run node based selenium test case on my docker machine (on firefox gecko driver) but I am getting the below error. Can someone let me know what would be the issue?  **Version info:** selenium-webdriver: 3.0.1 firefox : 55.0.3 geckodriver : 0.18.0  **Note:** The same test case runs fine on my local laptop and the issue is only when running on docker.   ``` var profile = new firefox.Profile(); 	    profile.setPreference(""network.proxy.type"", 1); // Manual proxy config 	    profile.setPreference(""network.proxy.http"", ""test.proxy.com""); 	    profile.setPreference(""network.proxy.http_port"", 8080); 	    profile.setPreference(""network.proxy.ssl"", ""test.proxy.com""); 	    profile.setPreference(""network.proxy.ssl_port"", 8080);                   var binary = new firefox.Binary(firefox.Channel);          binary.addArguments(""-headless"");          driver = new webdriver.Builder()             .forBrowser(DriverName)             .setFirefoxOptions(new firefox.Options().setBinary(binary).setProfile(profile))             .build();   driver.get(input).then(function () {   }); ```  **Error:** ```   1) search api testing:      Uncaught WebDriverError: connection refused       at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:514:15)       at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:519:13)       at doSend.then.response (node_modules/selenium-webdriver/lib/http.js:441:30)       at        at process._tickCallback (internal/process/next_tick.js:160:7)   From: Task: WebDriver.createSession()       at Function.createSession (node_modules/selenium-webdriver/lib/webdriver.js:769:24)       at Function.createSession (node_modules/selenium-webdriver/firefox/index.js:521:41)       at createDriver (node_modules/selenium-webdriver/index.js:170:33)       at Builder.build (node_modules/selenium-webdriver/index.js:645:16)       at getWebDriver (SearchAPI.js:71:14)       at Object. (SearchAPI.js:77:14)       at require (internal/module.js:11:18)       at Array.forEach ()       at startup (bootstrap_node.js:193:16)       at bootstrap_node.js:617:3   From: Task: WebDriver.navigate().to(http://abc.vci.com:3000/search?app-id=test&q=iphone)       at thenableWebDriverProxy.schedule (node_modules/selenium-webdriver/lib/webdriver.js:807:17)       at Navigation.to (node_modules/selenium-webdriver/lib/webdriver.js:1133:25)       at thenableWebDriverProxy.get (node_modules/selenium-webdriver/lib/webdriver.js:988:28)       at Context. (SearchAPI.js:85:20)       at runTest (node_modules/selenium-webdriver/testing/index.js:159:14)       at node_modules/selenium-webdriver/testing/index.js:184:16       at new ManagedPromise (node_modules/selenium-webdriver/lib/promise.js:1077:7)       at controlFlowExecute (node_modules/selenium-webdriver/testing/index.js:183:14)       at TaskQueue.execute_ (node_modules/selenium-webdriver/lib/promise.js:3084:14)       at TaskQueue.executeNext_ (node_modules/selenium-webdriver/lib/promise.js:3067:27)       at asyncRun (node_modules/selenium-webdriver/lib/promise.js:2974:25)       at node_modules/selenium-webdriver/lib/promise.js:668:7 ```","closed","D-firefox,","bbest123","2018-04-19T19:19:28Z","2020-06-24T23:21:42Z"
"","5331","Element available for interacting even if it's hidden by {overflow: hidden}","Hi!  I'm not sure is current behavior expected or not, so I decided to file a ticket for selenium dev team. For some reason locating and interacting with an invisible element on the page is working for me. The element is presented in DOM but it's hidden by parent's `{overflow: hidden}` css.   ## Meta - OS:  Ubuntu  Selenium Version:   3.8.1 Browser:   Chrome Browser Version:   63.0.3239.84  ## Expected Behavior -  id_displayed returns False and element is not clickable ## Actual Behavior - id_displayed returns True and element is not clickable ## Steps to reproduce - html/styles: https://jsfiddle.net/ck6utghr/ ```python browser = webdriver.Remote(url, capabilities) browser.get('test.html') wait = WebDriverWait(browser, timeout=20) wait.until(     EC.visibility_of_element_located((By.CSS_SELECTOR, '.target-link')), ) link = browser.find_element_by_css_selector('.target-link') link.click() ```","closed","I-stale,","GeyseR","2018-01-11T22:48:16Z","2021-12-09T00:06:52Z"
"","5189","Chrome Driver, ERROR:process_metrics.cc(105)] NOT IMPLEMENTED","Hi there,  I'm having the following message from selenium console, any ideas about? using Chrome Driver.  DevTools listening on ws://127.0.0.1:12516/devtools/browser/47c42540-7575-41b5-9880-4d76e56b08cf [12252:14584:1207/222523.553:ERROR:shader_disk_cache.cc(238)] Failed to create shader cache entry: -2 [12252:14584:1207/222718.183:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/222718.183:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/222718.184:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/222718.184:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/222918.185:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/222918.185:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/222918.185:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/222918.185:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223118.187:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223118.187:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223118.187:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223118.187:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223318.188:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223318.188:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223318.189:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223318.189:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223518.190:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223518.190:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223518.190:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED [12252:14584:1207/223518.190:ERROR:process_metrics.cc(105)] NOT IMPLEMENTED","closed","","robertobaez","2017-12-08T02:41:18Z","2019-08-14T11:09:36Z"
"","5432","An alternative node API","Hi there,  I used every spare minute I could find (and more) and came up with an alternative, much simplified [Node API for webdrivers](https://mercmobily.github.io/best-webdriver/). It's also very [documented](https://mercmobily.github.io/best-webdriver/index.html).  I haven't yet tested it on Safari and Edge (I don't have Windows or Mac). However, Chrome and Firefox seem to work fine.  I think this module's main advantage is that it was written from scratch, by somebody (me) who only ever saw the official W3C specs; I was also determined to always find the easiest possible solution to problems.  So...  * If there is anything from my code you might possibly want to use (I am thinking mayne the waitfor()` bit), feel free to help yourself. I will be happy to transfer copyright to you  * If you think this is good enough to have a chance to be a good API to cover JUST the W3C protocol, then please let me know. I would be happy to transfer it to you, and keep maintaining it  * Or, if you think you will stick with your existing module, but like this one too, maybe add a link to your site... which would be awesome.  @jleyba It would mean a lot to me if you had a look at the code and let me know what you think. If you don't have time, I will totally understand though!  Thank you,  Merc.","closed","C-nodejs,","mercmobily","2018-02-03T09:22:51Z","2019-08-16T14:09:57Z"
"","5506","Chrome Driver not working for chrome options for selenium 3.9.0","Hi barancev,  I have exactly similar issue which is reported here. selenium 3.9.0 JDK - jdk_1.8_011 (32 bit JRE) Eclipse - Mars gauva - 23.2-jre.jar and its dependencies.  ChromeOptions chromeOptions = new ChromeOptions(); driver = new ChromeDriver(chromeOptions); driver.manage().window().maximize(); threadDriver.set(driver);  getting exception for initiating the driver. java.lang.AbstractMethodError: org.openqa.selenium.chrome.ChromeOptions.is(Ljava/lang/String;)Z at org.openqa.selenium.remote.RemoteWebDriver.init(RemoteWebDriver.java:170) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:123) at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157)  I checked mvn tree dependency. no other selenium version. java is jdk 1.8 (32 bit)","closed","C-java,","ssurwase","2018-02-17T19:11:19Z","2019-08-16T10:09:53Z"
"","4839","ChromeOptions NoSuchMethodError addArguments  / #4804","Hi All.  I don't see any option to reopen an closed issue, so I start this issue (for me) again. Sorry for what.  My reason for the issue:  I have the same problem.  Selenium Versin 3.6.0 on Win 2008 Srv  Chrome 2.33,  JAVA 1.6.x Develop and JAVA 1.8 Runtime  `[java] Exception in thread ""main"" java.lang.NoSuchMethodError: org.openqa.selenium.chrome.ChromeOptions.addArguments([Ljava/lang/String;)V`  and all is new recompiled....  ``` ChromeOptions chromeOptions = new ChromeOptions();  String webdriverChromeDriver = new MonitoringHelper().getProperty(""CHROMEDRIVER""); System.setProperty(""webdriver.chrome.driver"", webdriverChromeDriver);  chromeOptions.addArguments(""no-sandbox""); chromeOptions.addArguments(""start-maximized""); chromeOptions.addArguments(""ignore-certificate-errors""); chromeOptions.addArguments(""disable-infobars"");  capability = DesiredCapabilities.chrome(); capability.setCapability(ChromeOptions.CAPABILITY, chromeOptions);  remWebDriver = new org.openqa.selenium.remote.RemoteWebDriver(new URL(hubURL), capability);  ``` The Eclipse Helper shows me, the method exist and I have only the 3.6.0 Libs in my Classpath.  Without any chromeOptions.addArguments(StringValue); loading ChromDriver works...  ``` 2017-10-09 16:01:32.180:INFO:osjshC.ROOT:qtp700072760-17: org.openqa.selenium.remote.server.WebDriverServlet-3d51f06e: Initialising WebDriverServlet Starting ChromeDriver 2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f) on port 22699 Only local connections are allowed. ```  Any idea?","closed","","Volker-59","2017-10-10T08:10:27Z","2019-08-14T09:09:47Z"
"","5252","ModuleNotFoundError: No module named 'buck_logging'","Hi all, I'm new to selenium,I want to build selenium webdriver for testing ie but when I start ""go build"" some error happened.  python C:/workspace/selenium/buck-out/crazy-fun/be2bf932342e5d67f58c9b26f5065c745d285d0d/buck.pex kill Traceback (most recent call last):   File ""C:\workspace\selenium\buck-out\crazy-fun\be2bf932342e5d67f58c9b26f5065c745d285d0d\buck.pex\.bootstrap\_pex\pex.py"", line 323, in execute   File ""C:\workspace\selenium\buck-out\crazy-fun\be2bf932342e5d67f58c9b26f5065c745d285d0d\buck.pex\.bootstrap\_pex\pex.py"", line 256, in _wrap_coverage   File ""C:\workspace\selenium\buck-out\crazy-fun\be2bf932342e5d67f58c9b26f5065c745d285d0d\buck.pex\.bootstrap\_pex\pex.py"", line 288, in _wrap_profiling   File ""C:\workspace\selenium\buck-out\crazy-fun\be2bf932342e5d67f58c9b26f5065c745d285d0d\buck.pex\.bootstrap\_pex\pex.py"", line 366, in _execute   File ""C:\workspace\selenium\buck-out\crazy-fun\be2bf932342e5d67f58c9b26f5065c745d285d0d\buck.pex\.bootstrap\_pex\pex.py"", line 424, in execute_entry   File ""C:\workspace\selenium\buck-out\crazy-fun\be2bf932342e5d67f58c9b26f5065c745d285d0d\buck.pex\.bootstrap\_pex\pex.py"", line 429, in execute_module   File ""C:\Users\jason\AppData\Local\Programs\Python\Python36-32\lib\runpy.py"", line 208, in run_module     return _run_code(code, {}, init_globals, run_name, mod_spec)   File ""C:\Users\jason\AppData\Local\Programs\Python\Python36-32\lib\runpy.py"", line 85, in _run_code     exec(code, run_globals)   File ""C:\workspace\selenium\buck-out\crazy-fun\be2bf932342e5d67f58c9b26f5065c745d285d0d\buck.pex\programs\buck.py"", line 9, in  ModuleNotFoundError: No module named 'buck_logging' Exception `RuntimeError' at uri:classloader:/gems/rake-10.5.0/lib/rake/file_utils.rb:66 - Command failed with status (1): [python C:/workspace/selenium/buck-out/craz...] Exception `#' at uri:classloader:/gems/rake-10.5.0/lib/rake/file_utils.rb:66 - Command failed with status (1): [python C:/workspace/selenium/buck-out/craz...] Exception `#' at uri:classloader:/gems/rake-10.5.0/lib/rake/file_utils.rb:66 - Command failed with status (1): [python C:/workspace/selenium/buck-out/craz...] go aborted! Command failed with status (1): [python C:/workspace/selenium/buck-out/craz...] uri:classloader:/gems/rake-10.5.0/lib/rake/file_utils.rb:66:in `block in create_shell_runner' uri:classloader:/gems/rake-10.5.0/lib/rake/file_utils.rb:57:in `sh' uri:classloader:/gems/rake-10.5.0/lib/rake/file_utils_ext.rb:35:in `sh' C:/workspace/selenium/rake-tasks/buck.rb:22:in `download' C:/workspace/selenium/rake-tasks/buck.rb:57:in `buck_cmd' C:/workspace/selenium/rake-tasks/buck.rb:257:in `block in (root)' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:75:in `run' uri:classloader:/gems/rake-10.5.0/bin/rake:33:in `' org/jruby/RubyKernel.java:973:in `load' uri:classloader:/META-INF/jruby.home/bin/rake:1:in `' Tasks: TOP => ie => //java/client/src/org/openqa/selenium/ie    but when i unzip the buck.pex, the buck_logging exists, any ideas? I'm not familiar with ruby.  OS:  Windows 10 Selenium Version:  3.8.1 Browser:  none Browser Version:  none ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","jasonsword","2017-12-23T07:26:12Z","2019-08-16T19:09:55Z"
"","5437","Disable developer mode in browser","Hi all, How can i disable developer mode in all browser using selenium with C# code","closed","","nkarthikeyan90","2018-02-05T07:30:27Z","2019-08-16T14:10:02Z"
"","5037","selenium.common.exceptions.ElementNotInteractableException: Message:","hi , i have some problems when i try to visit 12306.cn and try to book a ticket, the errors show that  Traceback (most recent call last):   File ""D:/Dev/WorkStation/PyProjectWorkstation/HelloWorld/12306.py"", line 33, in      driver.find_element_by_css_selector(""[title=杭州]"").click()   File ""C:\fastDev\Python3_5_2\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 77, in click     self._execute(Command.CLICK_ELEMENT)   File ""C:\fastDev\Python3_5_2\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 493, in _execute     return self._parent.execute(command, params)   File ""C:\fastDev\Python3_5_2\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 256, in execute     self.error_handler.check_response(response)   File ""C:\fastDev\Python3_5_2\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.ElementNotInteractableException: Message:  i added sleep in the codes but this problem still exist, could you please have a look? many thanks!  #!/usr/bin/env python3 # --*-- coding utf-8 --*-- #Python3.5.2 # coding:utf-8 __author__='PengRong'  from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.ui import WebDriverWait  # available since 2.4.0 import selenium.webdriver.common.by as bb from selenium import webdriver import time   driver=webdriver.Firefox() driver.set_window_size(1080,900) driver.implicitly_wait(15) driver.get(""https://kyfw.12306.cn"")  driver.find_element_by_id(""login_user"").click() #driver.find_element_by_id(""username"").send_keys(""xxxx@qq.com"") #driver.find_element_by_id(""password"").send_keys(""xxxxxxxx"")  # this is for click the 'book titkcet' button driver.find_element_by_link_text(""车票预订"").click()  time.sleep(3) #select depart city # for this step, there is a small problem, the city list can not be found in the source codes at first, then i use **setTimeout(function(debugger;),5000) in Chrome**, in that way i found **[title=杭州]** driver.find_element_by_id(""fromStationText"").click() driver.find_element_by_css_selector(""[title=杭州]"").click()  time.sleep(3) #select destination city driver.find_element_by_id(""toStationText"").click() driver.find_element_by_css_selector(""[title=南京]"").click()  time.sleep(3) #depart date driver.find_element_by_id(""train_date"").click() driver.find_element_by_css_selector(""body>div.cal-wrap>div:nth-child(1)>div.cal-cm>div:nth-child(22)>div"").click()  time.sleep(3) #select the seat type driver.find_element_by_css_selector(""#_ul_station_train_code>li:first-child"").click() #  #_ul_station_train_code > li:nth-child(1)  from firefox  #click ""query"" button driver.find_element_by_id(""query_ticket"")   #select the second-class seat seat=driver.find_element_by_id(""ZE_56000G431400"") seat.click() print(seat.text)  #refresh the website to see if there are tickets available, if there are, print that we have tickets, if no, keep refreshing while True: 	try: 		driver.find_element_by_id(""query_ticket"").click() 		seat = driver.find_element_by_id( ""ZE_56000G431400"" ) 		seat.click( ) 		if seat.text in['无','--']: 			print('暂时无票，继续查询') 			time.sleep(2) 		else: 			print('有票') 			break 	except: 		pass","closed","D-firefox,","JKAK47","2017-11-09T06:56:21Z","2019-08-14T13:09:51Z"
"","5306","Executing the ios  mobile script in eclipse in Mac and getting the error","Hi , I was running the ios simualtor script as java application in eclipse for appium mobile automation:  package automationFramewor; import java.net.MalformedURLException; import java.net.URL; import org.openqa.selenium.By; import org.openqa.selenium.remote.DesiredCapabilities; import io.appium.java_client.ios.IOSDriver; public class FirstClass { @SuppressWarnings(""rawtypes"") 	public static void main(String[] args) throws MalformedURLException { 		IOSDriver driver; 		DesiredCapabilities caps = new DesiredCapabilities(); 			 caps.setCapability(""platformName"", ""iOS""); 			 caps.setCapability(""platformVersion"", ""11.0"");  			 caps.setCapability(""deviceName"", ""iPhone Simulator"");  			 caps.setCapability(""app"", ""/Users/preeti/Library/Developer/Xcode/DerivedData/Kiosk-cqqwwmdzdfarneanaqslqyqicatp/Build/Products/Debug-iphonesimulator/Kiosk.app"");  			 driver = new IOSDriver(new URL(""http://127.0.0.1:4725/wd/hub""), caps); 			 driver.findElement(By.xpath(""//XCUIElementTypeStaticText[@name=\""Please Enter Your Cell Phone\""]"")).isDisplayed(); 	} }  Following is the error I'm getting.:   Exception in thread ""main"" org.openqa.selenium.WebDriverException: Connection refused (Connection refused) Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:07:31.527Z' System info: host: 'preetis-air', ip: 'fe80:0:0:0:a8:e8b3:5b98:6cb5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_151' Driver info: driver.version: IOSDriver 	at io.appium.java_client.remote.AppiumCommandExecutor.lambda$2(AppiumCommandExecutor.java:101) 	at java.util.Optional.orElseGet(Optional.java:267) 	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:100) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42) 	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1) 	at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at io.appium.java_client.DefaultGenericMobileDriver.(DefaultGenericMobileDriver.java:38) 	at io.appium.java_client.AppiumDriver.(AppiumDriver.java:83) 	at io.appium.java_client.AppiumDriver.(AppiumDriver.java:93) 	at io.appium.java_client.ios.IOSDriver.(IOSDriver.java:78) 	at automationFramewor.FirstClass.main(FirstClass.java:20) Caused by: java.net.ConnectException: Connection refused (Connection refused) 	at java.net.PlainSocketImpl.socketConnect(Native Method) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75) 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142) 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:359) 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:381) 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237) 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185) 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89) 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:111) 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:138) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:86) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:89) 	... 11 more","closed","","sjdptn","2018-01-09T06:53:03Z","2019-08-16T18:09:44Z"
"","5683","action.MoveToElement() is not working in FF 59.01","Hi  I update the latest drivers. geckodriver v.20 Firefox version 59.01 Selenium WebDriver v3.11  Today I notice that action.MoveToElement() is not working in FF 59.01 and it throws the error  Result Message:	System.InvalidOperationException : (562.533317565918, 820.0249938964844) is out of bounds of viewport width (1638) and height (810) (MoveTargetOutOfBounds).  Our tests were running fine in FF 56-58 . Any idea?   Thanks,  Ray","closed","","toraylin","2018-03-26T17:56:03Z","2019-08-16T08:09:56Z"
"","4852","Add method to deal with common issues related to clicking","Hi  There is a lot of common issues related to clicking with selenium. I have described some of them (as well as solutions) in my blog post https://cezarypiatek.github.io/post/why-click-with-selenium-so-hard/   I think it would be helpful and save a lot of troubles if this problem could be solved inside selenium (without need to write additional wrappers for selenium library).  How about adding a method that could perform click action dealing with common problems (it they occur). Something like **ClickWhenItPossible()**  If this is an acceptable approach I am ready to help, but I'm not sure where this method should be implemented (on which level of selenium abstraction). At first glance maybe this should be add to Browser Automation Atoms.  What do you think about this idea?","closed","","cezarypiatek","2017-10-11T19:39:56Z","2019-08-17T07:10:01Z"
"","5034","Ability to get the By from an already found IWebElement","Here is the scenario in which this would be useful.  I have been passed a By as a parameter to a function. I can use this to find a child element under the element found using the passed By. I cannot, without some workaround, get the By for the child element which I would need to use some functions.  Note, this is purely for ease of coding. I could build out the child By where a generate the parent By but because the parent By is used across many functions, and is dynamic, it makes it easier and cleaner (way fewer variables) to do it this way.  here is some C# code that demos the issue:      public void SelectValueFromDropdown(string value, By parent)     {        IWebElement childElement= this.WebDriver.FindElement(parent).FindElement(By.CssSelector(""td:nth-child(3) > select""));         this.WebDriver.SelectDropDownOption([By for Child element goes here], value)     }  Please let me know if I am missing some already built functionality to handle this.  Thanks","closed","I-enhancement,","JohnGagliardi","2017-11-08T23:20:44Z","2019-08-17T02:09:48Z"
"","4834","How to change screen resolution in a phantomjs from selenium?","Hello.  This is clear phantomjs code for js (This code changes the resolution.): ``` var WebPage = require('webpage'); page = WebPage.create()  page.onInitialized = function () {     page.evaluate(function () {         window.screen = {width: 1600, height: 900, availWidth: 1600, availHeight: 900};     }); };  page.open('http://browserspy.dk/screen.php'); page.onLoadFinished = function () {     page.render('ScreenShot' + '.png');     phantom.exit(); } ```  How to change on selenium? (Please don't suggest to change the viewportSize. This is not the screen resolution.) Thank you very much.","closed","","Firues","2017-10-09T19:29:40Z","2019-08-17T08:09:52Z"
"","5756","Browser is displayed as null in the Grid console","Hello- After I set up the hub(macos) and node(win 10 vm), I ran below in the command prompt of the node java -Dwebdriver.geckodriver.driver=geckodriver.exe -jar selenium-server-standalone-3.11.0.jar -role webdriver -hub http://10.247.240.20:4444/grid/register -browser browsername=firefox -port 5566  I do see some warnings as below:  ![image](https://user-images.githubusercontent.com/34170648/38573751-df6c73aa-3cab-11e8-8e1f-57aa7755ac32.png)  After refreshing the grid console, browser is null ![image](https://user-images.githubusercontent.com/34170648/38573804-fea25c3a-3cab-11e8-9b47-4216016fa229.png)  If anyone has any suggestions for me on how to fix this, please let me know. Thanks in advance!   ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","C-grid,","bsriram99","2018-04-10T17:44:01Z","2019-08-16T06:09:45Z"
"","4917","Does Selenium Hub and Node supported https?","Hello, Team,  One quick question: does Selenium Hub and Node supported https? thanks in advance   Thanks&Best regards, Henry Zhu","closed","","chancein007","2017-10-20T10:03:55Z","2019-08-17T06:09:55Z"
"","5265","internet explorer mouse over sub-menus not working python","Hello, i have an issue using selenium with python and internet explorer.   I am performing automated testing and I need to download prices from a website by hovering over the ""settlements"" tab, and upon hovering over this tab, a ""settlement info"" tab shows up.  Upon hovering over this, a ""view"" tab shows which i need to click.    I can successfully hoer over the ""settlements"" tab which shows the hovering and closes it a milli second.  But i am not able to hover over the corresponding tabs.  Ironically, my code doesnm't throw off any error, but in the website, i am still at the current ""site"" and haven't really gone to the location where the prices are stored.  Any help would be appreciated.  This is my code:     from selenium import webdriver import os import time from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.common.by import By from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  caps = DesiredCapabilities.INTERNETEXPLORER caps['enablePersistentHover'] = False caps['nativeEvents'] = False #set directory where files will be downloaded iedriver = 'H://work/IEDriverServer.exe' driver = webdriver.Ie(iedriver,capabilities=caps) #establish internet explorer as website  #website where we download files from url = 'https://markets.midwestiso.org/MISO/' driver.get(url) driver.switch_to.alert.accept() time.sleep(2)  driver.switch_to.frame('nav')  settlements_menu = driver.find_element_by_id(""tab2_p"")  driver.switch_to_default_content() driver.switch_to_frame(""ContentFrame"") settlement_info_menu = driver.find_element_by_id(""tab2_tab2flyover0"") view_menu =  driver.find_element_by_id(""tab2_tab2flyover0text0"")  action = ActionChains(driver) action.move_to_element(settlements_menu).move_to_element(settlement_info_menu)   action.click(view_menu).perform()  Heres the html of the website.  Unfortunately, you won't be able to enter the website without permissions (which i do have).                                    ..                      SettlementsSettlement Info                                                                          <","closed","","mrajancsr","2017-12-27T02:18:46Z","2019-08-16T19:09:41Z"
"","5269","[Feature Request] pause/resume webdriver (render page, execte js) .","Hello,   I don't see such feature so ask here. I think it is very useful to pause/freeze the webdriver.  Imagine:  1. A web page has some function automatically change element on the page or execute some js change content.  2. I need check some element content in the page( Because I need click the button, so I can't just save the html right after page render completely ) and do some other works.  3. I need click a button before that button changed/disappear.    4.  Click this button change the page elements, so I can do `2` .    So it would be very nice if there is some way to tell driver stop render html anymore, stop executing any javascript , flash or something else .  Resume  in future .    Like:  ```python driver.pause()   day_btns = driver.find_elements_by_css_selector('.CalendarCon a')  # if not pause, links and btns may change links = driver.find_elements_by_css_selector('#artContainer a')  save_to_db([l.get_attribute('href') for l in links])  something_else()   for btn in day_btns:     driver.resume()      btn.click()      wait = WebDriverWait(driver, 5)     wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, '#artContainer ul')))      driver.pause()       links = driver.find_elements_by_css_selector('#artContainer a')     save_to_db([l.get_attribute('href') for l in links])     something_else()      ```","closed","","eromoe","2017-12-27T06:51:33Z","2019-08-16T17:09:42Z"
"","4850","CEF3 Windows app not starting! Please help","Hello,  I have tried for the last 2 days to get this to work with our CEF app. It is not working. I am following this: https://bitbucket.org/chromiumembedded/cef/wiki/UsingChromeDriver.md  I get this error: org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: crashed  We set the debug port on our app. when I open http://localhost:xxxx (our debug port) it works.   I can't for the life of me figure out why I can't get this to connect!!!","closed","","ifritz7","2017-10-11T13:18:51Z","2019-08-17T08:09:35Z"
"","5773","WebDriverError: Error forwarding the new session Error forwarding the request Read timed out","Hello!   Please help me below issue  WebDriverError: Error forwarding the new session Error forwarding the request Read timed out     at Object.checkLegacyResponse.  details config: chromedriver :2.35 Node.js 8.9 version selenium grid 3.9.1 with 2 node for automation.  Please help me","closed","","siva3946","2018-04-12T15:55:02Z","2019-08-16T05:10:00Z"
"","4990","Selenium standalone 3.6.0 + chrome+ debian not working","Hello there. I can't run test only with chrome on my server.  I have no problems in same situations  on ""PC (win7).+firefox/chrome""  and ""Debian+firefox""  ## Meta - OS: Linux debian-8-64bit 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt25-2 (2016-04-08) x86_64 GNU/Linux selenium-server-standalone: 3.6.0 chromedriver 2.33 Google Chrome 62.0.3202.75   ## Expected Behavior - Run php example with standalone selenium and chrome ## Actual Behavior - errors ## Steps to reproduce -  I do: a) selenium start command:  `DISPLAY=:99 xvfb-run -a -n 1 -l -s ""-screen 0, 1024x768x8"" java -Dwebdriver.chrome.driver=""/var/path/to/chromedriver"" -jar /var/path/to/selenium-server-standalone-3.6.0.jar -debug`    output:  ``` 14:31:00.779 INFO - Selenium build info: version: '3.6.0', revision: '6fbf3ec767' 14:31:00.780 INFO - Launching a standalone Selenium Server 2017-11-01 14:31:00.822:INFO::main: Logging initialized @453ms to org.seleniumhq.jetty9.util.log.StdErrLog 14:31:00.927 INFO - Driver class not found: com.opera.core.systems.OperaDriver 14:31:00.995 INFO - Driver provider class org.openqa.selenium.ie.InternetExplorerDriver registration is skipped:  registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform LINUX 14:31:00.995 INFO - Driver provider class org.openqa.selenium.edge.EdgeDriver registration is skipped:  registration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform LINUX 14:31:00.996 INFO - Driver provider class org.openqa.selenium.safari.SafariDriver registration is skipped:  registration capabilities Capabilities [{browserName=safari, version=, platform=MAC}] does not match the current platform LINUX 14:31:01.048 INFO - Using the passthrough mode handler 2017-11-01 14:31:01.114:INFO:osjs.Server:main: jetty-9.4.5.v20170502 2017-11-01 14:31:01.187:WARN:osjs.SecurityHandler:main: ServletContext@o.s.j.s.ServletContextHandler@eec5a4a{/,null,STARTING} has uncovered http methods for path: / 2017-11-01 14:31:01.198:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@eec5a4a{/,null,AVAILABLE} 2017-11-01 14:31:01.221:INFO:osjs.AbstractConnector:main: Started ServerConnector@4d20d191{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 2017-11-01 14:31:01.222:INFO:osjs.Server:main: Started @854ms 14:31:01.222 INFO - Selenium Server is up and running   ```   b) run php script   ```","closed","","ttns","2017-11-01T17:35:22Z","2019-08-17T04:09:55Z"
"","5604","Unable to start InternetExplorerDriverService","Hello selenium.grid-extras team,   i get an SessionNotCreatedException if the targeted browser is 'internet explorer'. I debugged a bit and i think i found the problem: in `'com/groupon/seleniumgridextras/downloader/webdriverreleasemanager/WebDriverReleaseManager.java':101 ` the `findLatestRelease` method is going through all releases so far to determin the latest version. But one of the versions is tagged with the wrong mayor/minor versions (i guess it is a typo). for me, at this time (march 7 2018) it is entry 29 in the `List list`. it has: mayor version: 9 minor version: 0 patch version: 0 relativePath: ""9.0/IEDriverServer_Win32_3.9.0.zip""  That looks like a typo from my side. My guess is, as long as this version mismatch is online, the `findLatestRelease` method will always return 'C:\\tmp\\webdriver\\iedriver\\iedriver_9.0.0_x64bit.exe' as the latest iedriver version, which not exist.  i would like to ask you, to remove/change the mismatched version online. maybe my debugging was incomplete but i could not find another Occasion of the ""9.0.0"" string in the code base. So, no Code changes would be necessary, only removing the invalid version from [HERE](http://selenium-release.storage.googleapis.com/index.html)    **Stacktrace:** `{     ""value"": {         ""stacktrace"": ""org.openqa.selenium.SessionNotCreatedException: Unable to create new service: InternetExplorerDriverService\nBuild info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z'\nSystem info: host: 'SELENIUM02282', ip: '10.2.113.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_121'\nDriver info: driver.version: unknown\r\n\tat org.openqa.selenium.remote.server.ServicedSession$Factory.lambda$get$0(ServicedSession.java:128)\r\n\tat org.openqa.selenium.remote.server.ServicedSession$Factory.apply(ServicedSession.java:145)\r\n\tat org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12(ActiveSessionFactory.java:176)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$11$1.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)\r\n\tat java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyInto(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)\r\n\tat java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.evaluate(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.findFirst(Unknown Source)\r\n\tat org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:179)\r\n\tat org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2(NewSessionPipeline.java:65)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)\r\n\tat java.util.Collections$2.tryAdvance(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyInto(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)\r\n\tat java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.evaluate(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.findFirst(Unknown Source)\r\n\tat org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3(NewSessionPipeline.java:68)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.stream.DistinctOps$1$2.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)\r\n\tat java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Unknown Source)\r\n\tat java.util.stream.Streams$ConcatSpliterator.tryAdvance(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyInto(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)\r\n\tat java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.evaluate(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.findFirst(Unknown Source)\r\n\tat org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:71)\r\n\tat org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65)\r\n\tat org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:242)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.openqa.selenium.remote.server.ServicedSession$Factory.lambda$get$0(ServicedSession.java:124)\r\n\t... 50 more\r\nCaused by: java.lang.IllegalStateException: The driver executable does not exist: C:\\tmp\\webdriver\\iedriver\\iedriver_9.0.0_x64bit.exe\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:534)\r\n\tat org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136)\r\n\tat org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)\r\n\tat org.openqa.selenium.ie.InternetExplorerDriverService.access$000(InternetExplorerDriverService.java:32)\r\n\tat org.openqa.selenium.ie.InternetExplorerDriverService$Builder.findDefaultExecutable(InternetExplorerDriverService.java:167)\r\n\tat org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:339)\r\n\tat org.openqa.selenium.ie.InternetExplorerDriverService.createDefaultService(InternetExplorerDriverService.java:93)\r\n\t... 55 more\r\n"",         ""stackTrace"": [             {                 ""fileName"": ""ServicedSession.java"",                 ""methodName"": ""lambda$get$0"",                 ""className"": ""org.openqa.selenium.remote.server.ServicedSession$Factory"",                 ""lineNumber"": 128             },             {                 ""fileName"": ""ServicedSession.java"",                 ""methodName"": ""apply"",                 ""className"": ""org.openqa.selenium.remote.server.ServicedSession$Factory"",                 ""lineNumber"": 145             },             {                 ""fileName"": ""ActiveSessionFactory.java"",                 ""methodName"": ""lambda$apply$12"",                 ""className"": ""org.openqa.selenium.remote.server.ActiveSessionFactory"",                 ""lineNumber"": 176             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$3$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$11$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$2$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""tryAdvance"",                 ""className"": ""java.util.Spliterators$ArraySpliterator"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""forEachWithCancel"",                 ""className"": ""java.util.stream.ReferencePipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""copyIntoWithCancel"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""copyInto"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""wrapAndCopyInto"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""evaluateSequential"",                 ""className"": ""java.util.stream.FindOps$FindOp"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""evaluate"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""findFirst"",                 ""className"": ""java.util.stream.ReferencePipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": ""ActiveSessionFactory.java"",                 ""methodName"": ""apply"",                 ""className"": ""org.openqa.selenium.remote.server.ActiveSessionFactory"",                 ""lineNumber"": 179             },             {                 ""fileName"": ""NewSessionPipeline.java"",                 ""methodName"": ""lambda$null$2"",                 ""className"": ""org.openqa.selenium.remote.server.NewSessionPipeline"",                 ""lineNumber"": 65             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$3$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$2$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""tryAdvance"",                 ""className"": ""java.util.Collections$2"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""forEachWithCancel"",                 ""className"": ""java.util.stream.ReferencePipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""copyIntoWithCancel"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""copyInto"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""wrapAndCopyInto"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""evaluateSequential"",                 ""className"": ""java.util.stream.FindOps$FindOp"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""evaluate"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""findFirst"",                 ""className"": ""java.util.stream.ReferencePipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": ""NewSessionPipeline.java"",                 ""methodName"": ""lambda$createNewSession$3"",                 ""className"": ""org.openqa.selenium.remote.server.NewSessionPipeline"",                 ""lineNumber"": 68             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$3$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$3$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$3$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.DistinctOps$1$2"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$2$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$3$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""accept"",                 ""className"": ""java.util.stream.ReferencePipeline$2$1"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""tryAdvance"",                 ""className"": ""java.util.stream.Streams$StreamBuilderImpl"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""tryAdvance"",                 ""className"": ""java.util.stream.Streams$ConcatSpliterator"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""forEachWithCancel"",                 ""className"": ""java.util.stream.ReferencePipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""copyIntoWithCancel"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""copyInto"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""wrapAndCopyInto"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""evaluateSequential"",                 ""className"": ""java.util.stream.FindOps$FindOp"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""evaluate"",                 ""className"": ""java.util.stream.AbstractPipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""findFirst"",                 ""className"": ""java.util.stream.ReferencePipeline"",                 ""lineNumber"": -1             },             {                 ""fileName"": ""NewSessionPipeline.java"",                 ""methodName"": ""createNewSession"",                 ""className"": ""org.openqa.selenium.remote.server.NewSessionPipeline"",                 ""lineNumber"": 71             },             {                 ""fileName"": ""BeginSession.java"",                 ""methodName"": ""execute"",                 ""className"": ""org.openqa.selenium.remote.server.commandhandler.BeginSession"",                 ""lineNumber"": 65             },             {                 ""fileName"": ""WebDriverServlet.java"",                 ""methodName"": ""lambda$handle$0"",                 ""className"": ""org.openqa.selenium.remote.server.WebDriverServlet"",                 ""lineNumber"": 242             },             {                 ""fileName"": null,                 ""methodName"": ""call"",                 ""className"": ""java.util.concurrent.Executors$RunnableAdapter"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""run"",                 ""className"": ""java.util.concurrent.FutureTask"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""runWorker"",                 ""className"": ""java.util.concurrent.ThreadPoolExecutor"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""run"",                 ""className"": ""java.util.concurrent.ThreadPoolExecutor$Worker"",                 ""lineNumber"": -1             },             {                 ""fileName"": null,                 ""methodName"": ""run"",                 ""className"": ""java.lang.Thread"",                 ""lineNumber"": -1             }         ],         ""message"": ""Unable to create new service: InternetExplorerDriverService\nBuild info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z'\nSystem info: host: 'SELENIUM02282', ip: '10.2.113.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_121'\nDriver info: driver.version: unknown"",         ""error"": ""session not created""     },     ""status"": 33 }`","closed","","patrickdargel","2018-03-13T15:41:15Z","2019-08-16T09:10:01Z"
"","5379","PhantomJSDriverService Vs ChromeDriverService","Hello Selenium friends.  I have a situation where I need to switch from   org.openqa.selenium.phantomjs.PhantomJSDriverService  to   org.openqa.selenium.chrome.ChromeDriverService  The issue I am facing is this:  PhantomJSDriverService has this ""PhantomJSDriverService.PHANTOMJS_CLI_ARGS"" capability and  you can do this (see pointer","closed","","voleynik","2018-01-22T10:19:26Z","2019-08-16T16:09:49Z"
"","5595","java selenium getting all links of a content changing div","Hello guys..  I have a problem with getting all links of a website.  There is a div, that contains divs, each of them are containing three links. (so one div is one row that is being loaded.)  The more you scroll the page the div content is changing (padding top and bottom).  So if you scroll a bit, a part of the links in the div container are getting changed. The max amount of links I can get out of the div is 54.  I couldn't find a way to show all links. I would like to get more than 54 links in my List. I'm struggling hard with this..  My question is: Is there a way to just jump to the next element that is being found with xpath? Or do I have to 'find' all elements and add to a List I will be doing actions with?  The simple xpath I'm using on this:    By.xpath("".//a[starts-with(@href, '/p/')]"");    The inline css rule of the div:  element {    padding-bottom: 3251px;    padding-top: 2889px; }","closed","","furk4no","2018-03-11T16:39:00Z","2019-08-16T10:10:02Z"
"","5227","Strongnamed issues with Selenium libraries","Hello guys,  Since version 7, the strongmaned version of the library has issues in means that, when used, it complains that we have to actually include in the project the not-strongnamed version of the webdriver, thus creating an issue as you can't have both the unsigned and signed versions of the same library in the app.  Previous to version 3.7 (when the zip archive was containing the lib files, not the nuget packages) this thing was ok.  Can you guys fix the build?  Many thanks, in name of all the community :)","closed","","sebionofrei","2017-12-15T15:20:26Z","2019-08-16T20:09:56Z"
"","5434","Having a problem with ChromeDriver","Hello erveryone, If I connect to a new tab and reconnect to the previous tab I can not get the text of the alert My version of Chrome : 64","closed","D-chrome,","nguyenvl179","2018-02-04T12:02:55Z","2019-08-16T12:10:01Z"
"","5286","ActionChains gives an exception with IE 11 and selenium 3.4","Hello community, i had two problem usin selenium server 3.4 and IE 11.  First with the action chains it raises an exception while sending keys:        webdriver.ActionChains(driver).send_keys(Keys.ESCAPE).perform()  I will share the stack error  ``` File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) WebDriverException: Message: sendKeysToActiveElement Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'TUNCWD0074', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_144' Driver info: driver.version: RemoteWebDriver Stacktrace:     at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode (AbstractHttpCommandCodec.java:220)     at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode (AbstractHttpCommandCodec.java:118)     at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:158)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute (DriverCommandExecutor.java:82)     at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:637)     at org.openqa.selenium.remote.RemoteExecuteMethod.execute (RemoteExecuteMethod.java:35)     at org.openqa.selenium.remote.RemoteKeyboard.sendKeys (RemoteKeyboard.java:35)     at org.openqa.selenium.support.events.internal.EventFiringKeyboard.sendKeys (EventFiringKeyboard.java:42)     at org.openqa.selenium.remote.server.handler.interactions.SendKeyToActiveElement.call (SendKeyToActiveElement.java:56)     at org.openqa.selenium.remote.server.handler.interactions.SendKeyToActiveElement.call (SendKeyToActiveElement.java:31)     at java.util.concurrent.FutureTask.run (None:-1)     at org.openqa.selenium.remote.server.DefaultSession$1.run (DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker (None:-1)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (None:-1)     at java.lang.Thread.run (None:-1) ```     My second issue is: typing in forms inputs is baaaadly slooow (ps: i've tried several versions of selenium servers)  Thank you","closed","D-IE,","karimbeji","2018-01-04T11:31:49Z","2019-08-16T10:09:48Z"
"","5426","Getting image from memory cache","Hello   My task is to get some images which is dynamically loaded,  decrypted on client side using javascript and placed in memory cache. Unfortunately I didn't find any documentation that will help me to get those pictures either from memory cache or browser.   ![dev-tools](https://user-images.githubusercontent.com/4450907/35702218-f90effd2-07b1-11e8-8fbc-88483154aa64.png)   I am using chromedriver and c# but can use other webdriver.   Thanks for help","closed","","Longbowman","2018-02-01T20:43:34Z","2019-08-16T15:09:44Z"
"","5284","How to get html of tabs/windows in background?","Hello I need to retrieve html from several opened tabs at the same time. I know how to open new tabs/windows, also used to try SwitchTo function, and it works, but as known, html gets only from active tab, whereas I need to have active tab in my view,, without going to nearby to only get html from there(nearby tabs or windows). Is there a way to modify that function, or maybe another way, to make that possible?  Thanks in advance","closed","","eldep","2018-01-04T00:47:20Z","2019-08-16T18:10:04Z"
"","5572","disable-infobars","Hello Chrome just updated Version 65.0.3325.146  On new version, disable-infobars doesn't work now. I want to fix soon. Thank you","closed","","GodStar88","2018-03-07T03:01:11Z","2019-08-16T09:09:57Z"
"","5059","have an error where running example in Getting-Started","have an error where running example in Getting-Started as below link: https://github.com/SeleniumHQ/selenium/wiki/Getting-Started  error as below: ""C:\Program Files\Java\jdk-9.0.1\bin\java"" ""-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.5\lib\idea_rt.jar=53148:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.5\bin"" -Dfile.encoding=UTF-8 -classpath C:\selenium-server-standalone-3.7.1.jar;F:\selenium\out\production\selenium main.java.Example 错误: 找不到或无法加载主类 main.java.Example 原因: java.lang.ClassNotFoundException: main.java.Example  Process finished with exit code 1  Do you have an suggest about that ?","closed","","gezhihui","2017-11-15T11:49:29Z","2019-08-17T02:09:55Z"
"","5283","maven selenium-java 3.*.jar files all 1KB in size (empty)","Had problems compiling today and noticed that in the maven repository where selenium is stored...  http://repo1.maven.org/maven2/org/seleniumhq/selenium/selenium-java/  It looks like every selenium-java jar artifact that is 3.0 and greater is only 1kb and only contains MANIFEST file.  Not sure if this issue is something for this site or if it's a Maven site related issue.   UPDATE:  I noticed in issue 5142 the following comment:  _barancev  commented on Nov 29 2017 •  Sorry. Our upload script by mistake attempted to upload files in text mode instead of binary. This has been just fixed and correct files have been uploaded._   So maybe the upload scripts did the same thing to the Maven repo and that's why they are all 1kb?  Thanks.","closed","","MrCodingMachine","2018-01-03T23:27:27Z","2019-08-16T18:09:49Z"
"","5004","'noProxy' capability requires to be a list by webdriver spec but is only handled as string","Given by the webdriver spec the `noProxy` capability has to be a list: https://w3c.github.io/webdriver/webdriver-spec.html#proxy  Currently at least the Java binding is forcing the entry to a string type, which causes problems with drivers (like geckodriver) which implement the behavior as given by the spec.  As it looks like some kind of wrapper is necessary to keep both old drivers and wdspec compliant drivers to work.  Here the code in question: https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/Proxy.java#L76  @shs96c can you please have a look?","closed","C-java,","whimboo","2017-11-03T10:00:37Z","2019-08-15T13:09:47Z"
"","5066","Unable to access IE using Robot framework with pycharm.","Getting below issue when try to access IE  using Robot framework with pycharm.   ""Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones.""  I dont have access to enable options, as I am using company laptop. Is there any workaround to overcome this issue?","closed","","sarathchitturi","2017-11-16T17:12:31Z","2019-08-17T02:09:44Z"
"","5022","Starting ChromeDriver 2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f) on port 8875 Only local connections are allowed.","Getting below Issue - Browser - google chrome (Version 62.0.3202.75 (Official Build) (64-bit)) Selenium - version 3.7.1 google chrome driver - version 2.33     Code - package pack;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class Firstclass {  	/** 	 * @param args 	 */ 	public static void main(String[] args) { 		// TODO Auto-generated method stub  		WebDriver driver = new ChromeDriver(); 		System.setProperty(""webdriver.chrome.driver"", ""C:\\eclipse\\Chrome\\chromedriver.exe"");  		 		driver.get(""http://www.google.com"");  } }  Error Discription - Starting ChromeDriver 2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f) on port 8875 Only local connections are allowed. Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: failed to write automation extension zip   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.10240 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 47 milliseconds Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:07:31.527Z' System info: host: 'WS-077', ip: '172.24.1.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: driver.version: ChromeDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123) 	at pack.Firstclass.main(Firstclass.java:14)","closed","","Ganeshj09","2017-11-07T10:42:51Z","2019-08-15T17:09:48Z"
"","4885","Drop-down not working with Safari Driver on Safari 11","Getting below exception while accessing drop-down. [Site link : https://efqa1.qa-bkstr.com/shop/textbooks-and-course-materials]  **org.openqa.selenium.WebDriverException:** An unknown server-side error occurred while processing the command. (WARNING: The server did not provide any stacktrace information) Command duration or timeout:    Selenium version: 3.0.1 OS: Mac OS sierra Browser: Safari Browser version: 11 SafariDriver  **Drop down element is AJAX based and not a native HTML select/option element set.**  **//DOM** ``` Select Your Program    ```  **//accessing drop down**  WebElement dropdown =  getDriver().findElement(By.xpath(""//select[@id='programIdSelect']"")); Select sel = new Select(dropdown);  **//safari driver & All Capabilities**  DesiredCapabilities safaricapabiCapabilities=new DesiredCapabilities().safari(); try { driver=new SafariDriver(safaricapabiCapabilities); }catch(Exception e1) { testStepContinue(false,""createInstance() = ""+""Unable to Start on Local""); System.out.println(e1); } driver.manage().timeouts().pageLoadTimeout(40, TimeUnit.SECONDS); driver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS); driver.manage().window().maximize();   localThread.set(driver);  }   Please help! i am stuck!!","closed","","sharma1234","2017-10-17T06:22:39Z","2019-08-17T07:09:43Z"
"","5285","Unable to find a matching set of capabilities - Selenium 3.4.0 when Running in Selenium Grid","Getting Below Exception when Invoking Firefox Browser when running in Grid.  In Local it is working fine  net.thucydides.core.webdriver.UnsupportedDriverException: Could not instantiate new WebDriver instance of type class org.openqa.selenium.firefox.FirefoxDriver (Unable to find a matching set of capabilities)","closed","R-awaiting answer,","swnathan","2018-01-04T11:03:58Z","2019-08-16T16:10:04Z"
"","5338","Add C# Bindings for Chrome Network Emulation","Functionality was added to ChromeDriver in March of 2015 https://chromium.googlesource.com/chromium/src.git/+/12a55ff7369b35adb29cd28f5e3dd4ef923e3e6c  This has been added for Python and Javascript https://github.com/SeleniumHQ/selenium/pull/4011 https://github.com/SeleniumHQ/selenium/pull/3624  Open PR and issue for Java https://github.com/SeleniumHQ/selenium/issues/3450 https://github.com/SeleniumHQ/selenium/pull/3479  Commit for Ruby https://github.com/SeleniumHQ/selenium/commit/1103cb7e9e35e8bd22a5aea9b5455445baa6fb85  I'm new here, so I apologize in advance if I did something incorrect on creating this issue! I wouldn't mind trying my hand at this myself, but I'm brand new to the Selenium project and relatively new to code in general.","closed","D-chrome,","jakedurand","2018-01-13T08:01:47Z","2019-08-16T16:09:35Z"
"","5693","Wrong parameter name for chrome network conditions in .Net implementation","From https://bugs.chromium.org/p/chromedriver/issues/detail?id=2356  Looks like wrong command parameter here: https://github.com/SeleniumHQ/selenium/blob/selenium-3.11.0/dotnet/src/webdriver/Chrome/ChromeDriver.cs#L150   Should be spelled as 'network_conditions' instead of 'network_connection'","closed","","KokaChernov","2018-03-27T19:12:39Z","2019-08-16T08:09:51Z"
"","5583","[rb] Adding method to send DevTools commands to Chrome and a helper method to enable downloads on headless Chrome.","For: https://github.com/SeleniumHQ/selenium/issues/5159  Files can now be downloaded in headless mode after setting the download directory's path using the `#download_path=` helper.  Working fine with Chrome 65 (chromedriver 2.36). For earlier versions of Chrome/chromedriver I was facing crashes when downloading files in headless mode.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5583)","closed","C-rb,","pulkitsharma07","2018-03-08T18:31:53Z","2020-04-24T14:30:01Z"
"","5019","do not use dict comprehensions in Python 2.6","fixes #5018  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","pabra","2017-11-06T10:11:02Z","2017-11-06T13:23:02Z"
"","5351","Fixes a typo","Fixed a typo in the code.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","danvc","2018-01-17T17:36:54Z","2022-06-03T05:23:40Z"
"","5746","Non-w3c capabilities never applied?","First time user, apologies if I've missed something or this is by design but it appears that non-w3c capabilities have no effect.  If webdriver [always modifies the parameters ](https://github.com/SeleniumHQ/selenium/blob/259f539c03ac4c03c19172f67f6a94dc99d7a10d/py/selenium/webdriver/remote/webdriver.py#L243)to the below structure, with non-w3c capabilities only appearing in ""desiredCapabilities"": ```         parameters = {""capabilities"": w3c_caps,                       ""desiredCapabilities"": capabilities} ``` Then subsequently NewSessionCommandHandler [determines capability processing based on the existence of the ""capabilities"" object](https://github.com/SeleniumHQ/selenium/blob/74e584d12ba31bb2e1b61b17a4751402c70c6da6/cpp/iedriver/CommandHandlers/NewSessionCommandHandler.cpp#L44-L70), which is always present:   ```   ParametersMap::const_iterator it = command_parameters.find(""capabilities"");   if (it != command_parameters.end()) {     LOG(DEBUG) ValidateArguments(it->second, &error_message);     ...   } else {     // W3C capabilities not found. Try legacy capabilities.     // Note that we ignore requiredCapabilities. This is by design.     it = command_parameters.find(""desiredCapabilities"");     if (it != command_parameters.end()) {       returned_capabilities = this->ProcessLegacyCapabilities(executor, it->second, &error_message);    ...   } ``` It looks like desiredCapabilities are never used. If I perform a quick hack to webdriver to remove the w3c filtered ""capabilities"" then all of a sudden my non-w3c capabilities start taking effect. ```         parameters = {""desiredCapabilities"": capabilities} ```  ## Meta - OS:   Windows 7  Selenium Version:   IEDriverServer 3.9, Python bindings 3.11 Browser:   IE11  ## Expected Behavior - Set non-w3c capability, observe its effect ## Actual Behavior - Set non-w3c capability, observe no effect ## Steps to reproduce - ``` capabilities = {} capabilities['ignoreProtectedModeSettings'] = True driver = webdriver.Ie(capabilities=capabilities) ```  > selenium.common.exceptions.SessionNotCreatedException: Message: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones.","closed","","timdrew","2018-04-09T23:52:40Z","2019-08-16T06:09:49Z"
"","4893","IEDriverServer Issue when working with Multiple Windows (corrected)","First of all, this is my second posting for the same issue. I made a mistake and  I cannot seem to delete/close nor update my original posting.  Apologies for any confusion this might have caused.   ## Meta - OS:  Windows 7  Selenium Version: 3.6.0    Browser:  Internet Explorer 11   Browser Version:  11.0.9600.18792 (64-bit)    ## Expected Behavior - Able to check the title of the 2nd window  ## Actual Behavior - Two observations: 1. putting a Thread.sleep(5000) after clicking the link for the 2nd window shows only 1 window handle 2. with no Thread.sleep, it is able to store two window handles, but when switching to it, Exception of ""No Window Found"" is encountered  ## Steps to reproduce -  Here is my code (made it simple to simulate the issue):  		String IEDriverLocation = ""C://Selenium//IEDriverServer.exe""; 		File file = new File(IEDriverLocation); 		System.setProperty(""webdriver.ie.driver"", file.getAbsolutePath()); 		DesiredCapabilities ieCapabilities = DesiredCapabilities.internetExplorer(); 		ieCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); 		 		ieCapabilities.setCapability(""requireWindowFocus"", true); 		 		InternetExplorerOptions s = new InternetExplorerOptions(ieCapabilities); 		WebDriver ieDriver = new InternetExplorerDriver(s); 		ieDriver.manage().window().maximize(); 		ieDriver.get(""http://thehubdev"");                 Thread.sleep(30000);                 String parentWindow = ieDriver.getWindowHandle(); 		test = ieDriver.findElement(By.xpath(""//a[@href='/_layouts/15/user.aspx']"")); 		test.click();  		//Thread.sleep(5000);   //enabling this will only show 1 handle as the output below.  without  this shows 2 handles. 		System.out.println(""HANDLE SIZE -> "" + ieDriver.getWindowHandles().size()); 		ieDriver.getWindowHandles(); 		ArrayList handles = new ArrayList(ieDriver.getWindowHandles()); 		System.out.println(""LIST SIZE -> "" + handles.size()); 		 		for(String child: handles) { 			System.out.println(""switching -> "" + child); 			ieDriver.switchTo().window(child);  //with no Thread.sleep(5000), handles count 2, but fires an exception for the 2nd handle with exception ""No Window found"".  			System.out.println(ieDriver.getTitle());  		}","closed","","blueray333","2017-10-17T21:09:03Z","2019-08-17T07:09:46Z"
"","5303","firefox browser hangs for downloading gmp addon, while running tests.","Firefox Version: 57.0.2  webdriver preferences:  FirefoxProfile profile = new FirefoxProfile(); 			profile.setPreference(""browser.download.lastDir"", downloadFile); 			profile.setPreference(""app.update.auto"", false); 			profile.setPreference(""extensions.update.enabled"", false); 			profile.setPreference(""app.update.service.enabled"", false); 			profile.setPreference(""app.update.auto"", false); 			profile.setPreference(""app.update.staging"", false); 			profile.setPreference(""app.update.silent"", false); 			profile.setPreference(""extensions.blocklist.enabled"", false); 			profile.setPreference(""media.gmp-manager.cert.requireBuiltIn"",false); 			profile.setPreference(""media.gmp-manager.cert.checkAttributes"",false); 			profile.setPreference(""media.gmp-provider.enabled"",false); 			profile.setPreference(""media.gmp-widevinecdm.enabled"",false); 			profile.setPreference(""media.gmp-widevinecdm.visible"",false); 			profile.setPreference(""media.gmp.trial-create.enabled"",false); 			profile.setPreference(""browser.download.dir"", downloadFile); 			profile.setPreference(""browser.safebrowsing.downloads.remote.enabled"", false); 			profile.setPreference(""browser.safebrowsing.provider.mozilla.gethashURL"", """"); 			profile.setPreference(""browser.safebrowsing.provider.mozilla.updateURL"", """"); 			profile.setPreference(""app.update.url"", """"); 			profile.setPreference(""extensions.systemAddon.update.url"", """"); 			profile.setPreference(""media.gmp-manager.url"", """");                         DesiredCapabilities capabs = DesiredCapabilities.firefox(); 			capabs.setCapability(""marionette"", true);                         capabs.setCapability(FirefoxDriver.PROFILE, profile); 			 			FirefoxOptions firefoxOptions=new FirefoxOptions().setProfile(profile); 			firefoxOptions.setCapability(""marionette"", true);                         WebDriver driver= new FirefoxDriver(firefoxOptions));   firefox Log:  1515404964652	addons.productaddons	INFO	fetching config from: chrome://global/content/gmp-sources/openh264.json 1515404964655	addons.productaddons	INFO	fetching config from: chrome://global/content/gmp-sources/widevinecdm.json 1515404964656	addons.productaddons	INFO	found plugin: gmp-gmpopenh264 1515404964656	addons.productaddons	INFO	found plugin: gmp-widevinecdm 1515404965993	addons.productaddons	INFO	downloadXHR File download. status=200 1515404965999	addons.productaddons	INFO	Downloaded file will be saved to C:\Users\bdacha\AppData\Local\Temp\tmpaddon-1aec13 1515405089651	addons.manager	INFO	Skipping background update check 1515405114130	Marionette	DEBUG	Register listener.js for window 4294967322 1515405114664	Marionette	DEBUG	Register listener.js for window 8589934593 Unable to read VR Path Registry from C:\Users\bdacha\AppData\Local\openvr\openvrpaths.vrpath [Child 12032, Chrome_ChildThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 [Child 12032, Chrome_ChildThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 1515405282766	Marionette	DEBUG	Register listener.js for window 10737418241 Unable to read VR Path Registry from C:\Users\bdacha\AppData\Local\openvr\openvrpaths.vrpath [Parent 20692, Gecko_IOThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 Unable to read VR Path Registry from C:\Users\bdacha\AppData\Local\openvr\openvrpaths.vrpath [Child 19824, Chrome_ChildThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 [Child 19824, Chrome_ChildThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 1515405329671	DeferredSave.extensions.json	DEBUG	Save changes 1515405329671	DeferredSave.extensions.json	DEBUG	Starting timer 1515405329695	DeferredSave.extensions.json	DEBUG	Starting write 1515405329704	DeferredSave.extensions.json	DEBUG	Write succeeded 1515406743762	Marionette	DEBUG	Register listener.js for window 4294967325","closed","D-firefox,","balrajHostAnalytics","2018-01-08T10:23:46Z","2019-08-16T02:09:48Z"
"","5122","c# dotnet Add Firefox addon install using manifest.json","Firefox addons/extensions built with WebExtensions API have a manifest.json instead of install.rdf. When Selenium extracts the addon/extenion id, it only looks for install.rdf. This fix adds extracting the addon/extension id from the manifest.json in addition to install.rdf.  Fixes #4093  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","vflame","2017-11-26T01:39:28Z","2018-03-22T00:12:59Z"
"","5637","Facing org.openqa.selenium.WebDriverException while running safariDriver in Mac","Facing server side error while running the automation suite with safari webDriver.  Error:org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'Admins-Mac-mini.local', ip: '192.168.11.72', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.1', java.version: '1.8.0_144' Driver info: org.openqa.selenium.safari.SafariDriver  **The timeout duration is shown to be ## 0 milliseconds.**  ## Meta - OS: macOS HighSierra v10.13.1 Browser:   Safari v11.0.1  ![screen shot 2018-03-19 at 12 29 59 pm](https://user-images.githubusercontent.com/37373409/37582121-5401c27a-2b71-11e8-9b20-0ae2717a4dce.png)","closed","","shariqMohammed92","2018-03-19T07:01:40Z","2019-08-14T22:09:44Z"
"","5309","Parameter 'registryClass' in DefaultHub.json does not mapped to field 'registry'","Expected:   User should be able to use DefaultHub.json as reference implementation.  Actual:   parameter 'registryClass' is not mapped to 'registry' field in `GridHubConfiguration`  This issue was introduced from the beginning in 6a19886. So no need to preserve both parameter names. Just need to fix parameter name in json file. **GridHubConfiguration.java:** ```java @Expose @Parameter(       names = ""-registry"",       description = "" class name : a class implementing the GridRegistry interface. Specifies the registry the hub will use.""   )   public String registry = DEFAULT_HUB_REGISTRY_CLASS; ``` **DefaultHub.json:** ```json {   ""registryClass"": ""org.openqa.grid.internal.DefaultGridRegistry"", } ```","closed","C-grid,","kool79","2018-01-09T17:36:50Z","2019-08-16T18:09:35Z"
"","5255","No system compiler found. Did you install the JRE instead of the JDK?","execute cmd: go build -t  it always failed here:   python C:/workspace/selenium/buck-out/crazy-fun/be2bf932342e5d67f58c9b26f5065c745d285d0d/buck.pex build --deep //java/client/src/org/openqa/selenium:selenium PARSING BUCK FILES: FINISHED IN 0.2s (100%) CREATING ACTION GRAPH: FINISHED IN 0.2s BUILT 7/37 JOBS 0.3s //java/client/src/org/openqa/selenium:build-stamp BUILD FAILED: //java/client/src/org/openqa/selenium:primitives failed: javac -source 8 -target 8 -sourcepath  -g -proc:none -d C:\workspace\selenium\buck-out\bin\java\client\src\org\openqa\selenium\lib__primitives__classes -classpath '' @buck-out\gen\java\client\src\org\openqa\selenium\__primitives__srcs; jar cf buck-out\gen\java\client\src\org\openqa\selenium\lib__primitives__output\primitives.jar  buck-out\bin\java\client\src\org\openqa\selenium\lib__primitives__classes No system compiler found. Did you install the JRE instead of the JDK? DOWNLOADED 0.00 BYTES/SEC AVG, 0 ARTIFACTS, 0.00 BYTES BUILDING: FINISHED IN 4.0s (100%) 7/37 JOBS, 3 UPDATED, 5.4% CACHE MISS BUILD FAILED     my env: >java -version java version ""1.8.0_152"" Java(TM) SE Runtime Environment (build 1.8.0_152-b16) Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)  >javac -version javac 1.8.0_152  >python --version Python 2.7.14  and I Have set JAVA_HOME\bin && watchman && buck/bin in the system PATH","closed","","jasonsword","2017-12-25T02:19:09Z","2019-08-16T19:09:49Z"
"","5001","unknown error : cannot find Chrome binary","Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error : cannot find Chrome binary   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d902 3f),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide an y stacktrace information) Command duration or timeout: 58 milliseconds Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'SDCPIAPP168', ip: '172.21.26.119', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_144' Driver info: driver.version: ChromeDriver         at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","closed","","raghavendravejendla","2017-11-02T19:45:03Z","2019-08-17T04:09:51Z"
"","5459","Connection exception error message is not helpful at all","Every once in a while I get exceptions like this when running Selenium tests on Grid  ``` org.openqa.selenium.WebDriverException: org.openqa.selenium.WebDriverException: java.net.ConnectException: Connection timed out: connect Command duration or timeout: 0 milliseconds org.openqa.selenium.WebDriverException: java.net.ConnectException: Connection timed out: connect Command duration or timeout: 0 milliseconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:449) 	at org.openqa.selenium.By$ByName.findElement(By.java:303) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363) 	... 	at java.lang.Thread.run(Thread.java:748) Caused by: org.openqa.selenium.WebDriverException: java.net.ConnectException: Connection timed out: connect Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z' System info: host: 'host where tests ran', ip: 'ip of the host where tests ran', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-696.18.7.el6.x86_64', java.version: '1.8.0_162' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:245) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	... 3 more ```  Unfortunately the only conclusion that I can make from this error is some connection somewhere timed out and the hostname/ip where the test itself was running.  It would be very useful to know where exactly the connection timeout occurred. As I understand it can be 4 cases: - between the Selenium client and the Grid hub - between the Grid hub and a Grid node (also need to know which one) - between the Grid node and a WebDriver - between the WebDriver and the browser  OS: CentOS 6.9 Selenium Version: 3.8.1 Browser: Chrome Browser Version: any  ## Expected Behavior - Ability to see the IPs/hostnames/ports and maybe type (client/hub/node/webdriver/browser) of instances between which the connection issue occurred.  ## Actual Behavior - No information where to look for issue.  ## Steps to reproduce - ~~Run tests in a not 100% reliable environment to get a connection timeout or a similar issue.~~ See https://github.com/SeleniumHQ/selenium/issues/5631","closed","I-enhancement,","JohnA2","2018-02-07T21:59:19Z","2020-05-20T22:51:04Z"
"","5368","[rb] Optimised some of the calls to some ruby integration tests","Essentially a small refactor to use the Memo on Line52 which appears to be unused, and speed up a portion of the `target_locator` tests and all of the `window` tests.  I've also made the Full Screen test more in-line with the Maximise test (Including adding in a short wait), just because sometimes this was a touch flaky locally (And the extra time is dwarfed by the reduction from less unrequired windows).  As mentioned in the commit msg, I've opted against changing all of these because there was a few comments surrounding tests involving more than 2 windows.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","luke-hill","2018-01-19T16:47:43Z","2018-02-02T10:04:01Z"
"","5774","### Selenium 3.11.0 not working in Mac Sierra Safari Browser( 11.0.3 ) ###","Environment:  Selenium Build info: version: '3.11.0' os.name: 'Mac OS X' - macOS Sierra os.version: '10.12.6' os.arch: 'x86_64' Java.version: '1.8.0_161' Safari Version:  11.0.3  IDE:  Eclipse: Java EE IDE for Web Developers - Version: Oxygen.3 Release( 4.7.3 )  Allow Remote Automation:  marked Safari Extension 2.48.0: installed   ChromeDriver and FirefoxDriver both work !  **## Issues below:**  ERROR: safaridriver could not launch because it is not configured correctly or you need to authenticate. Re-run safaridriver(1) and pass the '--enable' flag to configure and/or authenticate. For more information, consult the safaridriver(1) man page. Exception in thread ""main"" org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:2764  Driver info: driver.version: SafariDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:132) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:78) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:60) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:38) 	at test111.Browsers.main(Browsers.java:23) Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:2764 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158) 	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256) 	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134) 	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 7 more Caused by: java.net.ConnectException: Connection refused (Connection refused) 	at java.net.PlainSocketImpl.socketConnect(Native Method) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:125) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238) 	... 29 more","closed","","ghost","2018-04-12T22:07:50Z","2019-08-16T06:09:35Z"
"","5076","Support injection of custom renderer from proxies","Enabled support for adding custom html renderers from custom proxy implementations, so that users  can customize how they would want to view the  proxy information on the grid console.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","R-awaiting review,","krmahadevan","2017-11-19T05:33:28Z","2018-04-26T07:44:29Z"
"","5659","Eliminate spurious warnings from net-http","Eliminates the infamous `'net/http: warning: Content-Type did not set; using application/x-www-form-urlencoded'` warning message emitted from `supply_default_content_type` within net-http if running with `$VERBOSE` true.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JasonLunn","2018-03-22T04:08:07Z","2018-11-09T19:44:18Z"
"","5414","Not able to find Element","Eclipse: Oxygen forJAVA EE Developers Selenium: 3.7.1 Appium: 1.7.1 testing device: ios Simulator  Code  package appium;  import java.net.MalformedURLException; import java.net.URL; import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.remote.DesiredCapabilities; import org.testng.annotations.Test;  import io.appium.java_client.ios.IOSDriver;  public class NewTest { 	@SuppressWarnings({ ""rawtypes"" }) 	private IOSDriver driver;    @SuppressWarnings(""rawtypes"") @Test   public void first() throws MalformedURLException, InterruptedException { 	  DesiredCapabilities caps = new DesiredCapabilities(); 	  caps.setCapability(""platformName"", ""iOS""); 	  caps.setCapability(""platformVersion"", ""11.0"");  	  caps.setCapability(""deviceName"", ""iPhone 7"");  	  caps.setCapability(""automationName"", ""XCUITest""); 	  caps.setCapability(""app"", ""/Users/preeti/Library/Developer/Xcode/DerivedData/Kiosk-cqqwwmdzdfarneanaqslqyqicatp/Build/Products/Debug-iphonesimulator/Kiosk.app"");  	  driver = new IOSDriver(new URL(""http://127.0.0.1:4723/wd/hub""), caps); 	  driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS); 	  driver.findElementByAccessibilityId(""SKIP"").click(); 	  driver.findElement(By.xpath(""//XCUIElementTypeButton[1]"")).click(); 	  driver.findElementByAccessibilityId(""Cheeses"").click(); 	  driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS); 	  driver.findElementByAccessibilityId(""BOAR'S HEAD LACEY SWISS CHEESE $11.99/lb. now $5.49/lb."").click(); 	   	 	   	   	   	    }  }  Failure: It is failing at the last step even when the element is present and also trying to locate the element using the accessibility id found through appium inspector","closed","","sjdptn","2018-01-31T06:32:30Z","2019-08-16T15:09:50Z"
"","5270","Input field accepting more than its maximum length-iOS Devices","Device : Mobile Phones and Tablets OS :  iOS Appium Version : 1.6.4 Browser : Safari  Hi,  I'm experiencing an issue with the sendKeys method on a textfield where the input field is accepting more than its maximum length, I have set the maxlength as 10 but during executions the input field is accepting more than 10. This issue is seen on iOS Devices(Mobile phones and tablets) whereas it is working fine in Desktop Safari. I'm using selenium webdriver in Java.  This is the piece of code: 			driver.get(""http://scorebuzz.000webhostapp.com/""); 			driver.findElement(By.id(""firstname"")).sendKeys(""abcdefghijklmnop""); 			String ele = driver.findElement(By.id(""firstname"")).getAttribute(""maxlength""); 			System.out.println(ele);  This is the link to the site http://scorebuzz.000webhostapp.com/  Is there a way to handle the max length such that only 10 characters are entered and restricts the further characters in automation.  Thanks and Regards,","closed","","ppanuganti","2017-12-27T11:25:55Z","2019-08-16T19:09:42Z"
"","4906","CVE-2016-1000031 Remote Code Execution Via Serialization in Apache Commons FileUpload v1.2.2","CVE-2016-1000031 Remote Code Execution Via Serialization in Apache Commons FileUpload v1.2.2 https://github.com/SeleniumHQ/selenium/search?utf8=%E2%9C%93&q=commons-fileupload&type=","closed","","necross2","2017-10-18T23:33:52Z","2019-08-17T06:10:01Z"
"","4907","CVE-2013-4002 Denial Of Service Xerces2-j in V2.11.0","CVE-2013-4002 Denial Of Service (DoS) Xerces2-j in V2.11.0 https://github.com/SeleniumHQ/selenium/search?utf8=%E2%9C%93&q=xerces&type=","closed","","necross2","2017-10-18T23:37:01Z","2019-08-17T06:10:02Z"
"","4858","Doc string for python 'install_addon' should give more detail about the path of the addon.","Currently the doc string here: https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/webdriver.py#L235-L241 does not contain any information about what the path to the addon wanting to be installed should be.  The path should be an absolute path as seen here: https://dxr.mozilla.org/mozilla-central/source/testing/marionette/addon.js#80","closed","C-docs,","jrbenny35","2017-10-12T17:05:04Z","2019-08-17T07:09:36Z"
"","5617","npm installing the latest version installs the alpha 4.x and not the stable 3.x","Currently in this npm package, if a developer just does `npm install selenium-webdriver` they will get the 4.x.x-alpha version, which is somewhat unstable. They will get the 4 version because that version is tagged as ""latest"" in npm (try `npm view selenium-webdriver dist-tags` to see this).   I believe that until 4 is out of beta, the latest 3.x.x should be tagged as ""latest"", while the 4.x.x should be tagged as ""beta"".  I've been bitten at least three times by this problem, and it takes a while to figure out the problem. Moreover, many of our customers have been having problems because of this issue, so this is not just a theoretical issue.","closed","C-nodejs,","giltayar","2018-03-15T08:08:44Z","2019-08-15T10:09:41Z"
"","5101","The default duration value for the starting pointerMove action should be equal to zero","Current implementation of W3C actions generates the following JSON output for   ```python actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER, ""touch"")) pointer = actions.pointer_action pointer.move_to_location(target_location['x'] + 100, target_location['y'] + 100)\        .click_and_hold()\        .move_by(100, 0)\        .release() actions.perform() ```  action:  ``` ""actions"":[{""parameters"":{""pointerType"":""touch""},""type"":""pointer"",""id"":""touch"",""actions"":[{""duration"":250,""x"":100,""type"":""pointerMove"",""y"":1011,""origin"":""viewport""},{""duration"":0,""button"":0,""type"":""pointerDown""},{""duration"":250,""x"":100,""type"":""pointerMove"",""y"":0,""origin"":""pointer""},{""duration"":0,""button"":0,""type"":""pointerUp""}]}] ```  Actual result: The very first `pointerMove` action item has duration equal to the default value (250ms). This does not look correct from the server's point of view, since `pointerMove` action with non-zero duration is expected to have a starting point, which is unknown in case it is the very first action item in the chain.   Expected result: `pointerMove` action item's duration should always be equal to zero if this is the very first action in the chain. We expect the main purpose of such item is to set the initial coordinates for the following action items.","closed","I-stale,","mykola-mokhnach","2017-11-22T11:47:34Z","2021-12-17T00:06:56Z"
"","5102","Avoid hardcoding relative coordinates for an action element if these are not provided explicitly","Current implementation of W3C actions generates the following JSON output for  ```python actions = ActionBuilder(driver, mouse=PointerInput(interaction.POINTER, ""touch"")) pointer = actions.pointer_action pointer.click_and_hold(target)\        .release() actions.perform() ```  action:  ``` ""actions"":[{""parameters"":{""pointerType"":""touch""},""type"":""pointer"",""id"":""touch"",""actions"":[{""duration"":250,""x"":0,""type"":""pointerMove"",""y"":0,""origin"":{""element-6066-11e4-a52e-4f735466cecf"":""d7d2f5c0-d4d9-4c94-9ef1-916e3a162800""}},{""duration"":0,""button"":0,""type"":""pointerUp""}]}] ```  Actual result: The very first` pointerMove` action item has `x` and `y` equal to the default value (0). This limits the server in coordinates calculation, since coordinates of the default element hitpoint are not always [0, 0] (actually, for the majority of cases, this is the central point of an element: [element.width / 2, element.height / 2]).  Expected result: Do set `x` and `y` to zero for the case above and let the server to calculate the coordinates of the corresponding element's hitpoint.","closed","","mykola-mokhnach","2017-11-22T11:56:29Z","2019-08-17T01:09:40Z"
"","4999","Add support of Chrome's built-in code coverage collection","Chrome v59 introduced code coverage feature. I.e. devtool has functions like  Profiler.startPreciseCoverage Profiler.stopPreciseCoverage Profiler.takePreciseCoverage Profiler.getBestEffortCoverage https://chromedevtools.github.io/devtools-protocol/tot/Profiler/#method-startPreciseCoverage Please allow using them from Selenium somehow.","closed","","stasberkov","2017-11-02T11:33:28Z","2019-08-17T03:09:51Z"
"","4953","Chrome driver crashes if you select Chrome window during maximizing/launching","Chrome driver crashes if you select Chrome window during maximizing/launching  OS: Windows Chrome driver version: 2.33  Steps: 1. Write code to launch browser with webDriver.manage().window().maximize(); 2. Run the tests 3. When it launches browser, just click to browser immediately and move focus outside  It crashes and terminates execution with below error.  # Code:  	preferences.put(""plugins.plugins_disabled"", new String[] { ""Adobe Flash Player"", ""Chrome PDF Viewer"" }); 	preferences.put(""credentials_enable_service"", false); 	preferences.put(""password_manager_enabled"", false); 	options.setExperimentalOption(""prefs"", preferences); 	options.addArguments(""disable-infobars"");      System.setProperty(""webdriver.chrome.driver"", driverFilePath);     options.setCapability(""chrome.switches"", Arrays.asList(""--disable-extensions""));     options.setCapability(ChromeOptions.CAPABILITY, options);     options.setCapability(CapabilityType.LOGGING_PREFS, logs);     webDriver = new ChromeDriver(options);     webDriver.manage().window().maximize();  # Log: ``` host: 'PNQ-JSOJITRA', ip: '172.16.13.11', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_141' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=XP, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\JITESH~1.SOJ\AppData\Local\Temp\scoped_dir3748_26415}, takesHeapSnapshot=true, pageLoadStrategy=normal, unhandledPromptBehavior=, databaseEnabled=false, handlesAlerts=true, version=62.0.3202.62, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}] Session ID: 84cf8d8897a4812f8910b468f78c21e7 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:643) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:877) ```","closed","","jiteshsojitra","2017-10-25T13:01:48Z","2019-08-14T20:09:59Z"
"","5057","Could not create a session: The Safari instance is already paired with another WebDriver session.","Can't start few sessions via RemoteWebDriver on node with   MacOS El Capitan. Hub and node both on selenium-server-standalone-3.7.1.jar Safari v 11.0.1  Trying to run multiple safari tests on one node in parallel.  ## Expected Behavior - Few Safari instances should be run and work simultaneously by one for each test.  ## Actual Behavior - Hub console shows few locked Safari instances, but node start and use the only, the rest of tests fails with  ""org.openqa.selenium.SessionNotCreatedException: Could not create a session: The Safari instance is already paired with another WebDriver session. (WARNING: The server did not provide any stacktrace information)""  **ALSO**:    505 s000  S      0:00.05 /usr/bin/safaridriver --port 44508   760 s000  S      0:00.04 /usr/bin/safaridriver --port 23656   764 s000  S      0:00.04 /usr/bin/safaridriver --port 34016   773 s000  S      0:00.04 /usr/bin/safaridriver --port 41575   776 s000  S      0:00.04 /usr/bin/safaridriver --port 46705   787 s000  S      0:00.05 /usr/bin/safaridriver --port 2775   790 s000  S      0:00.04 /usr/bin/safaridriver --port 10923 This instances are alive even after restarting of grid. Looks like node/hub not terminating safaraidriver instances, after usage.  ## Steps to reproduce - Hub started with config: `java -jar selenium-server-standalone-3.7.1.jar -role hub  -log hub.log -debug `  Node's config: `java -jar selenium-server-standalone-3.7.1.jar -role node -hub http://IP_ADDRESS_HERE:4444/grid/register/ -browser ""browserName=safari,setjavascriptEnabled=true,acceptSslCerts=true,maxInstances=15,Platform=MAC"" -port 5555 -log node.log ` And try run few tests on this grid, using: ``` DesiredCapabilities capability = DesiredCapabilities.safari(); RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://192.168.3.75:4444/wd/hub""), capability); ```","closed","","mikhail-yarosh","2017-11-15T09:46:48Z","2019-08-16T07:09:49Z"
"","5198","Allowing to customise how the proxy is rendered","by using the existing `getHtmlRender()` method.  The idea behind this PR is to customise how proxies are rendered in the grid console. This is not new, I guess this was the intention when each proxy got its [`getHtmlRender()`](https://github.com/SeleniumHQ/selenium/blob/selenium-3.8.1/java/server/src/org/openqa/grid/selenium/proxy/DefaultRemoteProxy.java#L101) method.   Nevertheless, this is not possible currently because the `ConsoleServlet` class uses by default the [`WebProxyHtmlRendererBeta`](https://github.com/SeleniumHQ/selenium/blob/selenium-3.8.1/java/server/src/org/openqa/grid/web/servlet/beta/ConsoleServlet.java#L125) class, so no matter what is set in the customised proxy, the console will use its own to render the proxy.  So this PR uses the proxy's `getHtmlRender()` method in the `ConsoleServlet` class, sets the `WebProxyHtmlRendererBeta` as the default in the `DefaultRemoteProxy` class, and it also removes the `WebProxyHtmlRenderer` since it won't be used anywhere. Some `ServletException` exceptions are removed since they are not thrown anymore.  The current workaround for this is to implement an own grid console servlet to render the proxies as desired. This will allow to render proxies in the grid console in an easier way, e.g. (rendering Sauce Labs as a node in the grid):  ![image](https://user-images.githubusercontent.com/5992658/33813513-7bae3e4c-de24-11e7-91f1-7511c55ed681.png)    - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-grid,","diemol","2017-12-11T02:39:29Z","2018-04-26T07:41:52Z"
"","5623","Selenium Java program not sending search text to search box in Google","Browser Version:   65  ## Expected Behavior - The search string should be passed by java program to google search text, chrome browser ## Actual Behavior -  Code used : System.out.println(""performing search in google""); 	if (textBox.isEnabled()) 			System.out.println(""search box enabled""); 		//send search-text and opening search result 		textBox.click(); 		System.out.println(""clicked""); 		textBox.clear(); 		System.out.println(""cleared""); 		textBox.sendKeys(""Linux fast pc""); 		System.out.println(""sent search string in google"");   Error Observed: The search string is not entered in the search field.Infact it seems the click (first task of inputting in the program) is not working.  Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: call function result missing 'value'   (Session info: chrome=65.0.3325.162)   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.16299 x86) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:22.379Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptSslCerts: true, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.33.506120 (e3e53437346286..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 65.0.3325.162, webStorageEnabled: true} Session ID: 2dd7e11d7fc40b7faabf475b1e145ee8 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279) 	at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:118) 	at browserAutomation.main(browserAutomation.java:94)  ## Steps to reproduce -","closed","","SudeeptMohan","2018-03-15T15:49:43Z","2019-08-16T10:09:35Z"
"","5655","Error during Selenium-Opera Launch","Browser Version:   51.0.283.55  ## Expected Behavior - The opera browser should launch and open the url sent to it ## Actual Behavior - The browser Opera wont launch and calling program crashes with following error Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: cannot find Opera binary   (Driver info: OperaDriver=2.32 (cfa164127aab5f93e5e47d9dcf8407380eb42c50),platform=Windows NT 10.0.16299 x86) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 272 milliseconds Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:22.379Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: googleOperaDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.opera.OperaDriver.(OperaDriver.java:173) 	at org.openqa.selenium.opera.OperaDriver.(OperaDriver.java:160) 	at org.openqa.selenium.opera.OperaDriver.(OperaDriver.java:115) 	at googleOperaDriver.(googleOperaDriver.java:18) 	at browserAutomation.main(browserAutomation.java:44)  ## Steps to reproduce -  	public googleOperaDriver() { 		System.setProperty(""webdriver.opera.driver"", ""C:\\Marionette\\operadriver_win32\\operadriver.exe""); 		OperaOptions options = new OperaOptions(); 		options.setBinary (new File(""C:\\Program Files\\Opera\\51.0.2830.55\\opera.exe""));  		WebDriver driver = new OperaDriver(); 		google g = new google(driver); 		g.launchGoogle(); 		g.searchText();","closed","","SudeeptMohan","2018-03-21T15:16:40Z","2019-08-16T09:09:49Z"
"","5630","Selenium 3 Problem in launching Internet Browser","Browser Version:   11.309.16299.0  ## Expected Behavior - The internet browser should launch  ## Actual Behavior - The internet browser is not launched and following error is observed in java code :  Started InternetExplorerDriver server (32-bit) 3.9.0.0 Listening on port 39335 Only local connections are allowed Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones. Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:22.379Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: InternetExplorerDriver remote stacktrace:  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:223) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:215) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:152) 	at browserAutomation.main(browserAutomation.java:49) ## Steps to reproduce - capabilities.setCapability(CapabilityType.BROWSER_NAME, ""IE""); 		capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS,true); 		capabilities.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true); 		System.setProperty(""webdriver.ie.driver"", ""C:\\Marionette\\IEDriverServer_Win32_3.9.0\\IEDriverServer.exe""); WebDriver driver4 = new InternetExplorerDriver(); 		driver4.manage().window().maximize();","closed","","SudeeptMohan","2018-03-16T13:25:14Z","2019-08-16T09:10:03Z"
"","5622","Selenium 3.9 firefox won't launch via Webdriver","Browser Version:     ## Expected Behavior - The browser firefox mozilla should launch  ## Actual Behavior - The browser doesn't launch and following error is thrown: Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:22.379Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: FirefoxDriver remote stacktrace: stack backtrace:    0:   0x47d2a4 -     1:   0x45d174 -     2:   0x427701 -     3:   0x42ac5a -     4:   0x45ff5e -     5:   0x45581f -     6:   0x4437a6 -     7:   0x443aa6 -     8:   0x6de879 -     9:   0x4439e9 -    10:   0x44385b -    11:   0x4575c8 -    12:   0x6da071 -    13: 0x775a9564 - BaseThreadInitThunk   14: 0x7779293c - EtwProcessPrivateLoggerRequest 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:98) 	at browserAutomation.main(browserAutomation.java:45)  ## Steps to reproduce -","closed","R-awaiting answer,","SudeeptMohan","2018-03-15T15:30:30Z","2019-08-14T17:09:44Z"
"","4914","Add capability to install an addon from a base64 string","As of geckodriver v0.19 you can now pass an addon as a base64 string to be installed.   See the bug reference here: https://bugzilla.mozilla.org/show_bug.cgi?id=1383931","closed","I-enhancement,","jrbenny35","2017-10-19T20:14:00Z","2020-05-06T11:26:38Z"
"","5534","IEDriverServer.exe 3.9.0.0 is detected as SONAR.Heuristic by Symantec Endpoint Protection","As of February 22, 2018 the file IEDriverServer.exe is flagging with Symantec Endpoint Protection as Heur.AdvML.C with the following details:  Category: Malware Sub category: Heuristic Virus Scan type: Auto-Protect Scan Event: Security Risk Found! Security risk detected: Heur.AdvML.C File: C:\PATHING\packages\Selenium.WebDriver.IEDriver.3.9.0\driver\IEDriverServer.exe Location: Deleted or access blocked Computer: User: NETWORK SERVICE Action taken: Cleaned by Deletion  ![iedriverserver flag 01](https://user-images.githubusercontent.com/13453819/36595755-740cafd4-1871-11e8-942b-ec29b3773985.png) ![iedriverserver flag 02](https://user-images.githubusercontent.com/13453819/36595757-75e75930-1871-11e8-82e9-a7a7b84866a9.png)","closed","","KevinChrz","2018-02-23T13:14:17Z","2019-08-16T12:10:05Z"
"","5657","Cloud providers and Grid could benefit from client bindings sending in version and platform info.","As a cloud provider, we would absolutely love a key in the new session request that says something like “hi I’m version X.Y of the Java bindings running on macOS 10.13” — along the lines of an HTTP User-Agent. This would help with diagnosing bugs and incompatibilities, especially when dealing with a wide variety of versions of both the client bindings and Selenium server and drivers. For similar reasons, I suspect it might also be useful for Grid to log this info.  I'd be happy to contribute code for this across a bunch of the bindings, if people think it's a good idea and we can agree on where to put it and what the format should be.","closed","I-enhancement,","sah","2018-03-21T18:13:39Z","2019-08-16T07:09:58Z"
"","4823","Selenium IDE error","Anyone else ever get this error message when using Selenium IDE on Firefox?  *There was an unexpected error. Msg: TypeError: Components.classes['@mozilla.org/supports-array;1'] is undefined Url: chrome://selenium-ide/content/xul-utils.js, line: 36, column: 13 toXPCOMArray@chrome://selenium-ide/content/xul-utils.js:36:13 _loadSeleniumCommands@chrome://selenium-ide/content/treeView.js:200:55 initialize@chrome://selenium-ide/content/treeView.js:90:13 classCreate/","closed","","adrianortiz14","2017-10-06T23:34:00Z","2019-08-17T08:09:58Z"
"","5347","Cannot find proxy with ID ""https""","AMI : Red Hat Enterprise Linux 7.4 Intuit AMI nginx : 1.12 (ssl offloading at nginx) java : 1.8.0_152 google-chrome : 63.0.2840.100-1.x86_64 chromedriver : 2.53.0  We are using selenium grid and running hub and node behind nginx in order to communicate with SSL.  selenium server standalone jar includes the following class:  ProxyStatusServlet.java  Which includes the following piece of code:      try {       URL u = new URL(id);       id = ""http://"" + u.getHost() + "":"" + u.getPort();     } catch (MalformedURLException ignore) {}   this means that if I change the node id to start with ""https"", it will never find it under the proxy registry. because of that, node is always re-registering to grid hub and sessions are terminated.","closed","C-grid,","adiohana","2018-01-17T13:18:40Z","2019-08-14T10:09:44Z"
"","5375","Replace slashes with backslashes in path during file upload on Windows","Although Windows allows both type of slashes in path Firefox doesn't allow slashes. Ruby uses slashes on Windows for file path. This leads to very frustrating exceptions and disallows writing cross-OSes tests easily. You have to create some kind of helper to convert paths in your tests so they would work on both OSes.  This affects capybara for example. Check out teamcapybara/capybara#1950 for the details.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5375)","closed","C-nodejs,","hron","2018-01-20T17:11:24Z","2021-02-04T16:56:19Z"
"","4938","Add missing python W3C ErrorCodes","Aligns with Java Error Codes that are available Closes #4556","closed","C-py,","lmtierney","2017-10-24T12:06:41Z","2017-11-08T00:22:12Z"
"","4845","Merge pull request #1 from SeleniumHQ/master","align with SeleniumHQ  - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","orpolaczek","2017-10-11T07:19:21Z","2017-10-11T07:20:12Z"
"","5071","Breaking backward compatibility","After upgrading selenium-java version from 3.0.1 to 3.7.1 I got a compile error:  ``` Wait waiter waiter.until(ExpectedConditions.presenceOfElementLocated(locator.get())); ``` Waiter expects java Function interface, while ExpectedConditions.presenceOfElementLocated returns ExpectedCondition that extends guava Function.","closed","","leebake","2017-11-17T11:10:05Z","2019-08-17T01:09:59Z"
"","4830","FirefoxDriver freezes","After some steps of proper execution, the firefox window completely freezes and doesn't even respond to external mouse or keyboard.","closed","","ghost","2017-10-09T14:06:31Z","2019-08-17T08:09:45Z"
"","5696","User agent for Python (and formerly Ruby, already merged)","Addresses #5657 for Python and Ruby  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","sah","2018-03-28T04:44:07Z","2018-03-29T18:24:46Z"
"","5230","BrowserStack PlatformNotSupportedException fix for dotnetcore","Adding a PlatformNotSupportedException catch around ConnectionLimit setting to enable usage on dotnetcore when using the RemoteWebDirver with something like BrowserStack.  Also explicitly setting the proxy to null, which solves a PlatformNotSupportedException for dotnetcore on Linux\Ubuntu.  With these two changes, I am able to use Selenium with BrowserStack.  - [x ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","ischyrus","2017-12-18T15:57:18Z","2018-02-23T15:28:18Z"
"","5028","added varargs methods to ExpectedConditions","added varargs methods to ExpectedConditions in order to avoid annoying Arrays.asList  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","krichter722","2017-11-08T05:03:51Z","2022-01-12T22:59:47Z"
"","4963","Added expected condition for element visibility","Added expected condition to determine visibility of any elements that match a given locator, rather than limited to the first element found by ExpectedConditions.visibilityOfElementLocated(By) or all elements found by ExpectedConditions.visibilityOfAllElementsLocatedBy(By).  Addresses #4867  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","Tom-Trumper","2017-10-26T13:47:52Z","2018-10-09T15:15:36Z"
"","5300","Unable to locate element in iframe after switch to iframe","Able to detect the iframe and switch to it succesfully. But when I try to locate the element using driver.find_element_by_id('X78') its not successful.   I'm trying to do 2 item :  a) To detect element of text field and input text into the field b) To detect a radio button and select the option  But its failing to detect the id now and i cant go to next step to either send keys for text field or click the radio button.   There's javascript also involve in the code. Screenshot of the code per below.  This issue has also being shared in stakeoverflow. https://stackoverflow.com/questions/48088420/python-selenium-iframe-dynamically-change-id-and-name-but-src-is-same  ![Uploading Capture.PNG…]()","closed","","mshemadarshini","2018-01-08T07:08:10Z","2019-08-16T18:09:48Z"
"","5798","Is selenium can handle dynamic form fields","A Web form generating elements dynamically, if the fixed elemement it can handled in selenium java but above issue am unable to get solution Pls help me","closed","","naveen12","2018-04-18T12:17:10Z","2019-08-16T05:09:50Z"
"","4968","updated references to 'btnG' (deprecated) to 'btnK'","A number of legacy references to btnG exist within a variety of files throughout the repo. These have been replaced with current name of search button field on Google home page ('btnK)  Did not raise a new issue, since this is related to #4491: it relates to legacy reference to 'btnG' which I gather used to be the name property assigned to the input for 'Google Search' HTML button used as an example throughout the repo. This has since updated to 'btnK' on Google's home page. Comments and examples need to be updated to reflect the change, or otherwise modified (such as the return key option).  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  (Note that this is a partial fix, as the examples on the Selenium WebDriverJs Wiki page still needs updating. Not updated as part of this PR, as content does not appear to be included as part the main repo https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs)  Related to #4491.","closed","","jess010","2017-10-27T04:52:55Z","2017-11-01T03:36:41Z"
"","4825","Test for ChromeOptions setAcceptInsecureCerts()","A new test has been added to ChromeOptionsFunctionalTest to verify this - canSetAcceptInsecureCerts()  I had originally added the method setAcceptInsecureCerts() in ChromeOptions as well as the test but found that Alexei had implemented before me.  Pushing the non-duplicate stuff as I have already done the work.  Feel free to accept or reject as appropriate.  Hopefully it helps.  Applies to #4791  - [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","nvonop","2017-10-08T09:23:24Z","2018-01-08T10:19:07Z"
"","5636","Suppress unintended deprecation warning","A deprecation warning seems not to work correctly. Even if we don't give any settings for `extensions` to `Selenium::WebDriver::Chrome::Profile` , the class warns deprecation. Is this intentional?  The warning comes from `Selenium::WebDriver::Chrome::Driver#create_capabilities`, called from constructor of the class.  https://github.com/SeleniumHQ/selenium/blob/1103cb7e9e35e8bd22a5aea9b5455445baa6fb85/rb/lib/selenium/webdriver/chrome/driver.rb#L85-L86  The profile was processed by `Selenium::WebDriver::Chrome::Profile#as_json`  https://github.com/SeleniumHQ/selenium/blob/1103cb7e9e35e8bd22a5aea9b5455445baa6fb85/rb/lib/selenium/webdriver/chrome/driver.rb#L78  And the method always returns Hash with `:extensions` key.  https://github.com/SeleniumHQ/selenium/blob/1103cb7e9e35e8bd22a5aea9b5455445baa6fb85/rb/lib/selenium/webdriver/chrome/profile.rb#L73-L83  I think `if extensions.any?` is better than `if extension`.  # Reproduction code  ```ruby require 'selenium-webdriver' include Selenium  puts 'with an extensions' profile = Selenium::WebDriver::Chrome::Profile.new profile.add_extension(File.expand_path('../spec/integration/selenium/webdriver/chrome/sample.crx', __FILE__)) Selenium::WebDriver.for(:chrome, profile: profile)  puts 'with no extensions' profile = Selenium::WebDriver::Chrome::Profile.new Selenium::WebDriver.for(:chrome, profile: profile) ```  ## Before  ``` with an extensions 2018-03-19 00:37:08 WARN Selenium [DEPRECATION] Using Selenium::WebDriver::Chrome::Profile#extensions is deprecated. Use Selenium::WebDriver::Chrome::Options#add_extension instead. with no extensions 2018-03-19 00:37:09 WARN Selenium [DEPRECATION] Using Selenium::WebDriver::Chrome::Profile#extensions is deprecated. Use Selenium::WebDriver::Chrome::Options#add_extension instead. ```   ## After  ``` with an extensions 2018-03-19 00:36:58 WARN Selenium [DEPRECATION] Using Selenium::WebDriver::Chrome::Profile#extensions is deprecated. Use Selenium::WebDriver::Chrome::Options#add_extension instead. with no extensions ```  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","treby","2018-03-18T15:53:53Z","2018-03-19T11:22:38Z"
"","5366","Elementfactory in selenium pageobject nodeJS","```js const webdriver = require('selenium-webdriver'); const config = require('../setup/config'); const server_url = 'http://' + config.server + ':' + config.port + '/wd/hub'; const test = require('selenium-webdriver/testing'); const pageNav = require('selenium-pageobject').PageNavigator; const lpo = require('../pages/loginpo'); const login_data = require('../input data/login'); let po = require('selenium-pageobject');   describe('hello', function (done) {     let driver;     /**      * Launch the browser      * Initialise driver      */     before(function (done) {                  driver = new webdriver.Builder().forBrowser('chrome')             .usingServer(server_url).build();         driver.get(config.url).then(done());         po.elements.ElementFactory(driver);             });      /**      * Login to website      */     it('Hello testing', function (done) {         let pageNavigator = new pageNav({ driver: driver });         let myPage = new lpo(driver);         pageNavigator.visit(config.url).then(function () {             myPage.userLogin(driver).then(function () {                 // expect something                  console.log('Pass');             })         }).then(done());     });      after(function (done) {         driver.quit().then(done());     }); }); ```   I m running this code using mocha and getting the below error:  ``` Error: The driver must be specified for the ElementFactory to work       at new ElementFactory (D:\Clientela automation\Cartier with node\node_modules\selenium-pageobject\lib\elements\elementfactory.js:7:15)       at Object.Element (D:\Clientela automation\Cartier with node\node_modules\selenium-pageobject\lib\elements\element.js:10:15)       at Object.TextBox (D:\Clientela automation\Cartier with node\node_modules\selenium-pageobject\lib\elements\textbox.js:10:16)       at new userLogin (D:\Clientela automation\Cartier with node\pages\loginpo.js:19:17)       at Context. (logintest.js:31:22) ```   Please help to resolve the issue or provide a way to use selenium pageobject in node js automation testing","closed","","PoojaMittal27","2018-01-19T12:58:13Z","2019-08-16T16:10:02Z"
"","5634","selenium-webdriver NodeJS 4.0.0-1 alpha does not work in IE driver","```driver.wait(until.elementLocated(By.id('something')), 5000)``` causes IE driver to fail:  `UnsupportedOperationError: Error 404: Not Found`  Version 3.6 works","closed","C-nodejs,","Havunen","2018-03-18T12:37:41Z","2019-08-16T07:09:42Z"
"","5372","Documentation a little confusing in ThenableWebDriver","[The documentation states](https://github.com/SeleniumHQ/selenium/commit/b390490dc93fc77284c484dc06d6e5fcc28d0468#diff-7639464dba3d23cc9e20002f627f55d3R98):       A thenable wrapper around a {@linkplain webdriver.IWebDriver IWebDriver}      instance that allows commands to be issued directly instead of having to      repeatedly call `then`:             let driver = new Builder().build();         driver.then(d => d.get(url));  // You can do this...         driver.get(url);               // ...or this  This confused me: I am late to the Selenium (and promises) party, but... wasn't this the ""normal"" way of doing it?          let driver = new Builder().build();         driver.get(url);               // ...or this  And this being the ""new"" way using the resulting proxying `then`:          let driver = new Builder().build();         driver.then(d => d.get(url));  // You can do this...  ...? The current documentation seems to imply that the proxy ""allows commands to be issued directly instead of having to repeatedly call `then`"" -- but I am confused: isn't the `then` the piece of news here?  It's most likely me. But...","closed","C-docs,","mercmobily","2018-01-20T07:42:30Z","2019-08-16T16:09:56Z"
"","5446","Wrong build uploaded for java client bindings(When i download  selenium java client ,it is downloading standalone server instead of java client .zip or .rar file)","1.Navigate to http://www.seleniumhq.org/download/ 2.Under Selenium Client & WebDriver Language Bindings try to download java client binding and observe.  link:https://goo.gl/wz6ovx  ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior - Should download java client bindings ## Actual Behavior - downloading selenium-server-standalone-3.9.0 (2) instead of java client binding ## Steps to reproduce -","closed","","chennareddy08","2018-02-06T12:58:27Z","2019-08-16T12:09:43Z"
"","5293","OpenQA.Selenium.WebDriverException : Cannot start the driver service on http://localhost/","1. resources I used : C# , Selenium , VS 2017, Jenkins , VM machine (windows 10) , Nunit v3.9, geckoDrive v19, firefox v56/57       2. I can execute firefox / chrome browser cases on local machine       3. I can execute chrome browser cases on VM machine       4. Issue : **I can Not execute firefox cases on VM machine and its throwing below error.**     Error Message OpenQA.Selenium.WebDriverException : Cannot start the driver service on http://localhost:49463/ TearDown : System.NullReferenceException : Object reference not set to an instance of an object.  Stacktrace at OpenQA.Selenium.DriverService.Start() at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(String geckoDriverDirectory, FirefoxOptions options, TimeSpan commandTimeout) at MPAutomation.Driver.Initialize(String browser) in   D:\Workspace.Automation\MPproject\MPAutomation\Utility\Driver.cs:line 79 # code on this line : Instance = new FirefoxDriver(service.FirefoxBinaryPath, options, TimeSpan.FromSeconds(10)); at MPAutomation.BaseTest.Init() in   D:\Workspace.Automation\MPproject\MPAutomation\Utils\BaseTest.cs:line 54 #code here : LoginPage.GoTo(Settings.BrowserType); # I am passing ""Firefox""   --TearDown at MPAutomation.Driver.Close() in   D:\Workspace.Automation\MPproject\MPAutomation\Utility\Driver.cs:line 117 # Instance.Close(); at MPAutomation.BaseTest.Cleanup() in D:\Workspace.Automation\MPproject\MPAutomation\Utils\BaseTest.cs:line 97  ---------------------------------------------------------------------     **firefox implemnetation looks like this in Driver.cs**        else if(browser.Equals(Constant.Firefox))                     { // driver init from here                          FirefoxDriverService service = FirefoxDriverService.CreateDefaultService(DrivePath);                         service.FirefoxBinaryPath = DrivePath;                         var profile = new FirefoxProfile();                         profile.AcceptUntrustedCertificates = true;                         var options = new FirefoxOptions();                         options.AcceptInsecureCertificates = true;                         options.Profile = profile;                                         Instance = new FirefoxDriver(service.FirefoxBinaryPath, options, TimeSpan.FromSeconds(10));                         Instance.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10);                          Utility.Logger.Write(""***** Firefox Browser has been initialized now  *********"");                      }             --------------------------------     5. We have one certificate for firefox and which has already been taken care locally and on VM       6. I am not sure why automation is not able to start firefox on VM    ----------------------- Yes, I followed below links before posting this issue   https://github.com/mozilla/geckodriver/issues/372 https://github.com/SeleniumHQ/selenium/issues/3195","closed","D-firefox,","java123code","2018-01-05T21:44:53Z","2019-08-15T18:09:58Z"
"","5027","Request to update Change Log for Selenium C# 3.7.0","1. Change Log for C# 3.7.0 needs to be updated on  https://raw.githubusercontent.com/SeleniumHQ/selenium/master/dotnet/CHANGELOG   2. On www.SeleniumHQ.org website links are still pointing to 3.6.0.  But Nuget is pointing to 3.7.0. This needs to be updated too.","closed","C-dotnet,","AdvanceAutomation","2017-11-07T17:41:17Z","2019-08-16T14:09:34Z"
"","5586","Why IsSelect() is not working with Selenium?","-1 down vote favorite  I am trying to check whether my radio button is selected or not using selenium IsSelect() method.  Kindly find below HTML code and please let me know a solution.                         Yes                                   No            I tried all possible solution but none of them are working. Please find beow sample code.      @FindBy(xpath ="".//*[@id='my-app']/div/parent/child/div[2]/div/ul/li[1]/label/div"")      WebElement RadioButton;      @FindBy(xpath ="".//*[@id='my-app']/div/parent/child/div[2]/div/ul/li[2]/label/div"")      WebElement RadioButton1;      boolean radioBtnIsEnabled21 = RadioButton.isSelected();     System.out.println(""Is Yes radio button 21 Selected: ""+radioBtnIsEnabled21);      boolean radioBtnIsEnabled22 = RadioButton1.isSelected();      System.out.println(""Is No radio button 22 Selected: ""+radioBtnIsEnabled22);  With above code I was expecting radioBtnIsEnabled22 should give me true value but with above code I am getting false value for both the radio buttons","closed","","dipakbachhav","2018-03-09T06:46:38Z","2019-08-16T11:09:39Z"
"","5621","Firefox 59 fails to return dom elements","- OS:  OSX - Selenium Version:  3.11.0 through protractor - Browser: Firefox 59 - geckodriver-v0.20.0  since the latest firefox version (59) doing a `POST /execute` call that returns a DOM element fails with the following:  ``` Failed: TypeError: cyclic object value     Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z'     System info: xxx os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '1.8.0_74'     Driver info: driver.version: unknown ```  all other browsers, including firefox 58 don't have problems with this. I suppose that this happens because it tries to serialize an object with cyclical references.","closed","D-firefox,","itajaja","2018-03-15T15:11:49Z","2019-08-15T12:09:55Z"
"","4836","[Grid] Add support for customizing the Grid Registry","- Make the grid registry an interface -- GridRegistry. - Introduce BaseGridRegistry which is intended to be extended by   GridRegistry implementations. - Introduce DefaultGridRegistry which replaces the pre-existing   (now deprecated) Registry class. Most of the _real_ code from Registry   was moved to DefaultGridRegistry. - Deprecated Registry. Replaced underlying implementation to use new   DefaultGridRegistry. Also make Registry implement GridRegistry.   Changes here intended to ease migration and allow old   code paths to continue to compile/work in the interim. - Change the return type to T extends GridRegistry for some methods. - Increase visibility of some additional methods and/or types which the   existing DefaultGridRegistry takes advantage of -- allowing reuse. - Add 'registryClass' arugment to '-role hub' for specifying custom   registry implmentation on the CLASSPATH - Update test code to use DefaultGridRegistry and GridRegistry  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-grid,","mach6","2017-10-09T22:41:34Z","2017-12-08T18:49:26Z"
"","5469","Fix Javadoc issues.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix Javadoc issues.","closed","","User253489","2018-02-08T23:09:40Z","2018-02-09T06:38:54Z"
"","5153","Fix issues in Javadocs and exception messages.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix issues in Javadocs and exception messages.","closed","C-docs,","User253489","2017-12-01T04:27:04Z","2018-01-08T08:24:06Z"
"","5714","Fix issues in comments and exception messages.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix issues in comments and exception messages.","closed","C-docs,","User253489","2018-04-01T00:08:44Z","2018-04-06T23:42:47Z"
"","5741","Fix comment issues.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix comment issues.","closed","","User253489","2018-04-09T01:20:55Z","2018-04-09T14:38:09Z"
"","5120","Add import statement for FirefoxOptions","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  With this PR, we can import `webdriver.firefox.options.Options` through `webdriver.FirefoxOptions`, just like `ChromeOptions` and `WebKitGTKOptions`.","closed","","greyli","2017-11-25T02:57:12Z","2017-11-25T03:33:30Z"
"","5456","Allow creating custom FindsBy attributes","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Why needed? In case when we're using custom finders, it would be easier to define own attribute instead of using How.Custom. So instead of `[FindsBy(How = How.Custom, CustomFinderType = typeof(CustomBy), Using = ""value"")]` you could do `[FindsByCustom(Using = ""value"")]` or `[FindsByCustom(""value"")]`  What is done: 1) Created AbstractFindsByAttribute, with abstract get property Finder. Priority property, and all compare and equals methods are moved there from FindsByAttribute 2) FindsByAttribute now inherits AbstractFindsByAttribute 3) Added test for custom FindsBy attribute.  So in order to implement custom FindsBy attribute, it is required to inherit from AbstractFindsByAttribute, and implement Finder property.  Remaining question - there was internal setter for property Finder in FindsByAttribute, but it wasn't used anywhere. I removed it, but maybe I should leave it in AbstractFindsByAttribute ?","closed","C-dotnet,","Dreamescaper","2018-02-07T15:21:56Z","2018-03-12T16:27:40Z"
"","5699","Updated docs for FirefoxDriver from ChromeDriver to FirefoxDriver","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Was looking at intellisense and noticed the constructors for FirefoxDriver mention ChromeDriver.","closed","","phillip-haydon","2018-03-28T09:14:19Z","2018-04-04T16:42:54Z"
"","5116","Deprecate internal Duration in favor of java.time.Duration","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Warning: breaking changes","closed","C-java,","valfirst","2017-11-24T21:03:42Z","2018-03-22T18:36:25Z"
"","5731","Allow extension of RemoteWebElement for caching element attributes","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This update allows the extension of the RemoteWebElement and RemoteWebDriver classes for caching element attributes. By default, there is no caching of attributes enabled.  This is in preparation for the new element attribute caching feature in Appium. See https://github.com/appium/WebDriverAgent/pull/69 and https://github.com/appium/appium-uiautomator2-server/pull/128 for the corresponding changes in the appium servers that allow element attributes to be returned in the find-elements type calls. The attributes are only returned if specific capabilities are enabled. PR https://github.com/appium/appium-dotnet-driver/pull/216 implements the caching on the dotnet side in Appium.","closed","C-dotnet,","mgkeeley","2018-04-05T02:14:27Z","2018-06-23T23:02:23Z"
"","5691","Added more documentation to isEnabled() and resolves #3547","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This PR request fixes https://github.com/SeleniumHQ/selenium/issues/3547. It adds what elements isEnabled() can handle.  Thanks for considering this request.","closed","C-docs,","irrationalRock","2018-03-27T18:00:19Z","2018-06-15T09:27:40Z"
"","5762","add shadow dom v1 support to DOM atoms","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This fixes #5761.  Though it raises another issue: that in several places we only support shadow dom v0, rather than the v1 spec. most of our tests use v0 too, so we don't test against v1 apis like `attachShadow` etc.","closed","D-atoms,","43081j","2018-04-11T12:44:19Z","2018-04-30T18:16:26Z"
"","5755","Fix obscure window switching bug for dotnet","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  The following sequence of events produces a bug in current Selenium dotnet bindings  - Have two windows open in Selenium - Close the one you're currently on - Try to switch to the other by name  When you do this the code for switching to another window by name attempts to get the current window handle.  It needs this handle in order to restore the correct state at the end of the search if the search failed. The driver will correctly inform the dotnet bindings that there is not a current window handle.  This causes the dotnet library to throw the exception ""NoSuchWindow"" which is then propagated up to user code.  This PR aims to fix this bug by allowing ""CurrentWindowHandle"" to return null in this scenario,  Then the window switching code is updated to anticipate a possible null value.","closed","C-dotnet,","Xaeroxe","2018-04-10T17:13:11Z","2018-04-20T20:13:22Z"
"","5288","bump rubyzip version to ~>1.2 to fix CVE-2017-5946","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  see https://github.com/rubyzip/rubyzip/issues/315    I'm not sure how `third_party/jruby` dependencies work but that version looks like it still has the vulnerability, albeit I don't think there's a threat vector from those `third_party/...` gems.","closed","C-rb,","michaelglass","2018-01-04T15:04:50Z","2018-01-09T13:26:57Z"
"","5164","Put encoded extensions in the ChromeOptions map","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Put encoded extensions in the ChromeOptions map. This ensures the extensions specified by the addEncodedExtensions functions are propagated when merged with other capabilities. Otherwise, these extensions are dropped.","closed","R-awaiting review,","mtrea","2017-12-04T18:37:09Z","2017-12-20T01:28:48Z"
"","5451","Allow inheriting FindsByAttribute","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Make FindsByAttribute not sealed and make Finder property `protected internal` instead of 'internal'.  Why needed? In case when we're using custom finders, it would be easier to define own attribute instead of using How.Custom. So instead of `[FindsBy(How = How.Custom, CustomFinderType = typeof(CustomBy), Using = ""value"")]` you could do `[FindsByCustom(Using = ""value"")]` or `[FindsByCustom(""value"")]`","closed","","Dreamescaper","2018-02-07T10:42:55Z","2018-02-07T15:30:23Z"
"","5568","Changing clear element atom to be W3C compliant","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I'm submitting this for review, because I'm deeply insecure about making changes to the atom here. This is an attempt to make the element clear atom compliant with the W3C specification. Notable features: * The atom doesn't focus the element to be cleared unless there is a value in the element. * The atom now fires the ""blur"" event, and sets focus to the `` element after clearing, in keeping with the specification language to ""invoke the unfocusing steps"" for the element, which includes setting the focus to the container (or more precisely the (control group owner object of the element)[https://html.spec.whatwg.org/#unfocusing-steps])  Tagging @shs96c for review.","closed","","jimevans","2018-03-06T12:41:19Z","2019-02-27T21:30:52Z"
"","5304","Use a mutex to lock Win32 message handling","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I use Selenium at work and for our test bed we were having many problems with the IEDriverServer crashing due to a Memory Access Violation. It got to the point where it was impeding our work, so I cloned the project and ran it in debug mode to see if I could identify the problem.  Our test bed was causing the driver to crash specifically on line 441 of IECommandExecutor.cpp, the inner message handling loop for Win32. I believe the crash was occurring due to concurrent use of the Win32 APIs by multiple threads, which do not appear to be thread safe. So I introduced a static mutex shared between threads and had each thread acquire a lock to this mutex before processing messages. This has worked wonderfully for us, our tests are now much more stable. I'd like to contribute this fix back to Selenium.  I believe this may have also been the cause for #1973 and similar issues.","closed","D-IE,","Xaeroxe","2018-01-08T15:18:04Z","2018-01-17T17:24:00Z"
"","5485","Fix 'Selenium-Version' manifest attr to be in 'Build-Info' section","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I noticed in the selenium standalone releases since 3.9.0 that the `Build-Info` manifest section is missing `Selenium-Version`, which seems to be due to some refactoring in https://github.com/SeleniumHQ/selenium/commit/adc87a46fe08edca1a3bc0132643f4c306f95668#diff-f7acb1b90eea8308d4e04f861f59cd4a.  The standalone jar for 3.8.1 for example has this snippet of manifest data: ```python 'Build-Info': {'Build-Revision': '6e95a6684b',    'Build-Time': '2017-12-01T19:05:32.194Z',    'Build-User': 'alexei',    'Name': 'Build-Info',    'Selenium-Version': '3.8.1   '} ```  Compare to 3.9.1:  ```python 'Build-Info': {'Build-Revision': '63f7b50',    'Build-Time': '2018-02-07T22:42:28.403Z',    'Build-User': 'shs',    'Name': 'Build-Info'},   'Selenium': {'Name': 'Selenium', 'Selenium-Version': '3.9.1'} ```  The reason for this PR is that at Sauce we've been parsing this attribute at job run time so that we can dynamically determine the Selenium version being used, even if a user submits a custom jar file to run (which would not be version-controlled by us).  This PR just writes out the manifest file as it was originally before that adc87a46fe08edca1a3bc0132643f4c306f95668 commit, so that `Build-Info` is given for the name and thus `Selenium-Version` is written within that section.  Thanks for your consideration!","closed","C-java,","timsutton-sl","2018-02-12T19:00:54Z","2018-02-14T18:35:00Z"
"","5710","Retain config file paths if specified","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I created a Java library that extends Selenium (https://github.com/Nordstrom/Selenium-Foundation). This library includes code to manage a local Grid instance, and a couple of my unit tests check the paths of the files used to configure the server instances. As a side effect of the refactoring of `selenium-server-standalone` command line processing, this information was no longer being retained. This PR restores this lost behavior by copying the file path from CLI object to configuration object.","closed","C-grid,","sbabcoc","2018-03-30T21:09:33Z","2018-04-12T07:09:57Z"
"","5341","Use old actions for geckodriver","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  At now many actions are not available in firefox with geckodriver. Can you please approve the little fix, till the problem is not resolved?","closed","C-java,","HarryMtv","2018-01-15T22:11:30Z","2018-01-30T15:51:22Z"
"","5588","add before/afterGetScreenshotAs to WebDriverEventListener","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  added events for before and after screen capture","closed","C-java,","morrishoresh","2018-03-09T12:53:54Z","2018-04-03T18:33:51Z"
"","5257","Make DriverService URL Host editable (dotnet core workaround)","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Add property to DriverService to make url host editable (""localhost"" by default). That would make possilble to workaround slow http request to driver on dotnet core by providing ""127.0.0.1"" as host.  (issue https://github.com/dotnet/corefx/issues/24104)","closed","C-dotnet,","Dreamescaper","2017-12-25T16:03:49Z","2018-01-06T23:43:38Z"
"","5367","[rb] Pass storage specs","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  - Fix up a couple of specs `storage_spec.rb` - If required bump Gemfile.lock otherwise can remove commit.  Note this doesn't completely make the tests green. But it reduces the number of failures from 5 to 1. (Fixing the 4 Failing Chrome tests)","closed","C-rb,","luke-hill","2018-01-19T14:07:10Z","2019-11-01T09:02:16Z"
"","5329","Make CreateProxyObject method protected in DefaultPageObjectMemberDecorator","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   Make method CreateProxyObject in DefaultPageObjectMemberDecorator protected instead of private.  That would allow to create custom IPageObjectMemberDecorator, inherit from DefaultPageObjectMemberDecorator, and reuse created proxies for custom controls (e.g. to support creating IWrapsElement element based on IWebElement proxy).","closed","C-dotnet,","Dreamescaper","2018-01-11T16:39:51Z","2018-03-12T16:33:30Z"
"","5619","call afterFindBy with the found element instead of null","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   afterFindBy was called with null instead of the found element object.","closed","","morrishoresh","2018-03-15T11:26:47Z","2018-03-15T12:41:13Z"
"","5728","[java] Use java.time.Duration to configure timeouts","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5728)","closed","C-java,","valfirst","2018-04-03T20:24:10Z","2019-05-20T09:05:50Z"
"","5667","Add ability to filter log entries by range of log levels","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5667)","closed","C-java,","valfirst","2018-03-22T20:18:40Z","2018-10-08T20:52:05Z"
"","5249","[rb] get rid of the redundant /","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   ---  When I investigated Appium Ruby client, I found the `/` only for `:get_page_source` in W3C commands and it led the below error. ``` Selenium::WebDriver::Error::WebDriverError: unexpected response, code=404, content-type=""text/plain"" ``` After removing `/`, the command works fine.","closed","C-rb,","KazuCocoa","2017-12-23T03:38:44Z","2017-12-25T05:05:08Z"
"","5724","Update README.md","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","jomy-matthews","2018-04-02T21:21:16Z","2018-04-03T02:09:14Z"
"","5579","Fix Safari webdriver AttributeError for python client driver #5578","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mingeth","2018-03-07T21:59:03Z","2018-03-13T06:46:58Z"
"","5569","Replace Guava Lists/Sets/Maps/Iterables with plain Java 8","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","valfirst","2018-03-06T13:04:48Z","2018-03-22T18:37:55Z"
"","5503","Replace anonymous types with lambdas","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","valfirst","2018-02-15T22:34:58Z","2018-03-22T18:37:17Z"
"","5444","Handle basic authentication in HttpClient-s","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","valfirst","2018-02-06T10:39:27Z","2018-02-07T13:58:13Z"
"","5441","Adding more expected conditions to dotnet","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","overbit","2018-02-05T14:15:03Z","2018-03-12T16:59:15Z"
"","5440","New expectedconditions dotnet","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","overbit","2018-02-05T14:08:06Z","2018-02-05T14:10:12Z"
"","5384","Adding doc string to find_element and find_elements methods","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","mkvetko","2018-01-23T11:22:53Z","2018-02-02T04:22:44Z"
"","5357","Replace Guava Charsets with Java StandardCharsets","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","valfirst","2018-01-18T08:00:22Z","2018-01-22T17:31:56Z"
"","5271","Fixing typo that can confuse beginner users","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","leonardosalles","2017-12-27T18:22:22Z","2017-12-28T02:42:07Z"
"","5126","Add chance_click method","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","tit","2017-11-27T10:57:47Z","2017-11-27T14:16:09Z"
"","5119","Remove unused Apache commons-collections dependency","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","valfirst","2017-11-24T22:16:47Z","2017-11-27T08:42:17Z"
"","5118","Stop using deprecated org.mockito.Matchers","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","valfirst","2017-11-24T21:24:28Z","2017-11-27T08:41:30Z"
"","5117","Move ""type"" to SourceType","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","valfirst","2017-11-24T21:18:24Z","2017-11-27T08:41:47Z"
"","5115","Remove unused ""incrementMillis"" field from TickingClock","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","valfirst","2017-11-24T21:01:16Z","2019-11-27T09:55:05Z"
"","5105","Add a ""RunWith"" annotation to JsonTest.java","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mtrea","2017-11-22T18:40:16Z","2017-11-25T19:26:14Z"
"","5090","Fixing Typos and removed un-used imports","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-grid,","krmahadevan","2017-11-21T03:54:43Z","2017-11-22T04:17:42Z"
"","5089","Fix failing Grid related tests.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","R-needs code changes,","krmahadevan","2017-11-21T03:34:24Z","2017-11-27T02:41:29Z"
"","5078","Minor refactoring to use streams and lambdas","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","R-needs code changes,","krmahadevan","2017-11-20T03:38:26Z","2017-11-21T02:05:14Z"
"","5042","[ghost] Addressing issues pointed out in #4458","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","santiycr","2017-11-09T23:38:12Z","2017-12-07T02:50:48Z"
"","5581","Screenshot listener","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Added before/afterGetScreenshotAs to WebDriverEventListener","closed","","morrishoresh","2018-03-08T16:58:54Z","2018-03-08T23:23:42Z"
"","5513","Add desired capabilities keyword to IE and Firefox","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Preliminary support for making IE and Firefox drivers have a consistent signature by adding `desired_capabilities` as a keyword.","closed","C-py,","isaulv","2018-02-20T02:55:37Z","2018-03-13T21:02:43Z"
"","5472","Add beforeSwitchToWindow/afterSwitchToWindow hooks to WebDriverEventListener:","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Added beforeWindow/afterWindow Hooks to WebDriverEventListener. This will help for example handle cases when windows disappears after click or randomly.","closed","C-java,","ikalinin1","2018-02-09T11:08:40Z","2018-02-14T14:23:55Z"
"","5455","Correct a part of timing issue #5024","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Remove unecessary loop for mouse move.","closed","D-IE,","Nawakator","2018-02-07T15:12:40Z","2018-03-12T16:47:06Z"
"","5688","adding EC for the number of elements","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","jaroszan","2018-03-27T10:34:20Z","2018-06-26T12:45:20Z"
"","5068","Fix possible NullPointerException in ErrorHandler.rebuildServerError","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   `ErrorHandler.rebuildServerError` can throw NullPointerExceptions whe the remote Selenium server returns an error object which has null values for CLASS or STACK_TRACE. The code currently checks whether these keys are present in the JSON object but not whether they have a value.  This PR fixes that.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5068)","closed","C-java,","qmfrederik","2017-11-16T20:08:46Z","2019-10-05T18:35:24Z"
"","5204","WIP: Merge the IDE into the Selenium upstream","- [ ] Make sure the files are licensed correctly - [ ] Add `rake` tasks for   - yarn test   - yarn build - [ ] Add travis task to run unit tests - [ ] Migrate issues over - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-ide,","corevo","2017-12-11T15:07:36Z","2019-07-28T08:18:12Z"
"","5199","need","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","Manju123456789","2017-12-11T05:57:14Z","2017-12-11T08:45:24Z"
"","5041","Let's give chrome a chance to run on travis","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","sanjeevkumar0589","2017-11-09T23:21:39Z","2017-11-10T02:22:38Z"
"","5245","chromeOptions.AddAdditionalCapability(CapabilityType.AcceptSslCertificates, true) Error","**System:** Platform: Win 10 Chrome: 63.0.3239.84 Selenium WebDriver: 3.8.0 Program Language: C# **Issue** Hey, when I use the dotnet simulation to visit HTTPS website, need to use the chromeOptions.AddAdditionalCapability (CapabilityType.AcceptSslCertificates, true); however, when the program execution here will prompt an error:“ [See nested exception: System.InvalidOperationException: unknown error: cannot parse capability: goog:chromeOptions From unknown error: unrecognized chrome option: acceptSslCerts”,this is my code: var chromeOptions = new ChromeOptions(); chromeOptions.AddAdditionalCapability(CapabilityType.AcceptSslCertificates, true); var driver = new ChromeDriver(chromeOptions); driver.Navigate().GoToUrl(""http://www.baidu.com/"");","closed","","ArmyMedalMei","2017-12-21T16:25:46Z","2019-08-16T19:10:04Z"
"","5809","RemoteWebDriver.findElement()  returns null","**Selenium Version:**  v 3.8.1 (java bindings)  I use `RemoteWebDriver` (connected to chomedriver)  which is wrapped by `EventFiringWebDriver`.   My stacktrace shows NPE with stacktrace  ``` Caused by: java.lang.NullPointerException: 	at org.openqa.selenium.support.events.EventFiringWebDriver.extractInterfaces(EventFiringWebDriver.java:124) 	at org.openqa.selenium.support.events.EventFiringWebDriver.access$500(EventFiringWebDriver.java:69) 	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.(EventFiringWebDriver.java:368) 	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.(EventFiringWebDriver.java:360) 	at org.openqa.selenium.support.events.EventFiringWebDriver.createWebElement(EventFiringWebDriver.java:311) 	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194) ..... ```  NPE was caused by line ``` extractInterfaces(allInterfaces, object.getClass()); ``` in `EventFiringWebDriver.extractInterfaces()`.  When I analyzed chain of calls I found that  `object`  should be the WebElement which is returned by  ```  WebElement temp = driver.findElement(by); ``` by `EventFiringWebDriver.findElement()`. Here `driver` is instance of RemoteWebDriver.  I know that actually it is chromedriver issue. But there are very similar issues here (for findElement*s*() ) which were fixed at client side, see  #4555 and #4375.  **Extra info:** In my case I tried to wait until element in another window will dissapear (by scenario window should be closed after click 'pay' button) So I expected that findElement will throw StaleElementException, ElementNotFoundException or NoSuchWindowException but I got NPE instead.  Subsequent  call to webdriver returned: ```org.openqa.selenium.NoSuchWindowException: no such window: target window already closed from unknown error: web view not found (Session info: chrome=63.0.3239.108) (Driver info: chromedriver=2.34.522940 (1a76f96f66e3ca7b8e57d503b4dd3bccfba87af1),platform=Windows NT 6.1.7601 SP1 x86_64) ....```","closed","C-java,","kool79","2018-04-19T21:32:12Z","2019-08-15T10:09:47Z"
"","5424","Selenium WebDriver API .NET Bindings - OpenQA.Selenium.NoSuchElementException","**Question:**  Is this the default behaviour, that if an element is not found using: `driver.FindElementByCssSelector(""li.myClassName"");`  that an `OpenQA.Selenium.NoSuchElementException` is thrown? I would expect null, if no element is found.  > no such element: Unable to locate element: {""method"":""css selector"",""selector"":""li.myClassName""} >   (Session info: headless chrome=64.0.3282.119) >   (Driver info: chromedriver=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73),platform=Windows NT 10.0.16299 x86_64)  >    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse) >    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) >    at OpenQA.Selenium.Remote.RemoteWebDriver.FindElement(String mechanism, String value) >    at OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByCssSelector(String cssSelector)","closed","","Legends","2018-02-01T17:58:42Z","2019-08-16T15:09:45Z"
"","5243","[Enhancement] Option to specify if it is ok to attempt cilck on elements which appears to be invisible to webdriver","**Problem description:** Recently while working on several automation use cases, i ran in to some sites where  a) target IWebElement is visible on the page , however , selenium reports that it can't interact with the element since element appears to be invisible to webdriver. b) target IWebElement is immediately below some other element and webdriver fails to interact with it since it reports that some other element will receive the click instead. During a user interaction , typically element with watermark (overlaid html) gets removed from DOM and input element has the focus.  **Requested Enhancement:** a) It should be possible to provide a flag whether to attempt any interaction on IWebElement which webdriver detects that it is not visible on the page while the element is actually visible on the page and user can interact with it. b)It should be possible to provide a flag whether to attempt interaction such as click on an element even if webdriver detects that some other element will receive the click instead.   Regards, Nish26","closed","","Nfactor26","2017-12-21T10:08:35Z","2019-08-16T19:09:52Z"
"","5527","Text are typing very slow in text field(both 32 bit and 64 bit) for IE browser in grid node","**Meta -** OS: Windows 7  Selenium Version: 3.7.0(standalone driver)  Browser: Internet explorer 11(driver version 3.8)  **Actual Behavior -** Getting error as ""**org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.**""  Tests are running very slow for IE browser in remote node(Grid Node).The text are typing very slow in text field(both 32 bit and 64 bit) for IE browser.It is typing one by one string.So getting timeOut error. It is running and typing text fast in Local machine.  Is there any specific capability needs to added?","closed","D-IE,","Elakkiyaab","2018-02-22T11:37:22Z","2021-09-05T08:34:56Z"
"","5235","ExpectedConditions do assumptions based on StaleElementReferenceException","**Issue** ExpectedConditions do assumptions based on StaleElementReferenceException   **Example** For example, ExpectedConditions.invisibilityOfElementLocated() evaluates to true on StaleElementReferenceException. In the DOM manipulating javascript-hell of recent ages, StaleElementReferenceException might mean that element is no more - but it might as well mean that the DOM got modified and the locator-identified element is still on the page with a different reference.  So StaleElementReferenceException only means that the reference from findElement() went stale - but one can/should not do any further implication from that. As far as I understand, Selenium should/could retry when StaleElementReferenceException is raised to be sure about the actual state of Locator-pointed element(s).  I tried to find out if this has been a discussed design choice at some point of selenium history. But could not find any records.","closed","R-awaiting answer,","karniemi","2017-12-20T11:17:49Z","2019-08-16T09:09:36Z"
"","5453","Can't launch chrome browser using latest selenium 3.9.0","**Can't launch chrome browser using latest selenium 3.9.0**  OS: Windows 7 (shouldn't matter) Selenium version: 3.9.0 latest Chrome: 64.0 latest  Below code was working fine with 3.7.1 but started failing to launch chrome browser with latest 3.9.0.  # Regression of below change?  https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/internal/OkHttpClient.java  # Code:  	ChromeOptions options = new ChromeOptions(); 	Map preferences = new Hashtable(); 	preferences.put(""plugins.plugins_disabled"", new String[] { ""Adobe Flash Player"", ""Chrome PDF Viewer"" }); 	preferences.put(""credentials_enable_service"", false); 	preferences.put(""password_manager_enabled"", false); 	options.setExperimentalOption(""prefs"", preferences); 	options.addArguments(""disable-infobars""); 	options.addArguments(""start-maximized"");  	System.setProperty(""webdriver.chrome.driver"", driverFilePath); 	options.setCapability(""chrome.switches"", Arrays.asList(""--disable-extensions"")); 	options.setCapability(ChromeOptions.CAPABILITY, options); 	options.setCapability(CapabilityType.LOGGING_PREFS, logs); 	webDriver = new ChromeDriver(options); 	webDriver.manage().window().maximize();  # Exception:  	Caused by: java.lang.reflect.InvocationTargetException 		at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 		at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 		at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 		at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 		at org.testng.internal.ObjectFactoryImpl.newInstance(ObjectFactoryImpl.java:26) 		... 18 more 	Caused by: java.lang.NoClassDefFoundError: okhttp3/ConnectionPool 		at org.openqa.selenium.remote.internal.OkHttpClient$Factory.(OkHttpClient.java:115) 		at org.openqa.selenium.remote.http.HttpClient$Factory.createDefault(HttpClient.java:72) 		at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:49) 		at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 		at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 		at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 		at com.zimbra.qa.selenium.framework.core.ClientSession.webDriver(ClientSession.java:264) 		at com.zimbra.qa.selenium.projects.ajax.core.AjaxCore.(AjaxCore.java:76) 		at com.zimbra.qa.selenium.projects.ajax.core.SetGroupMailByMessagePreference.(SetGroupMailByMessagePreference.java:32) 		at com.zimbra.qa.selenium.projects.ajax.tests.mail.compose.delegates.SendOnBehalfOf.(SendOnBehalfOf.java:28) 		... 23 more 	Caused by: java.lang.ClassNotFoundException: okhttp3.ConnectionPool 		at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 		at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 		at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335) 		at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 		... 33 more","closed","","jiteshsojitra","2018-02-07T11:29:31Z","2019-08-16T14:09:50Z"
"","5163","Appium server node browser is not available","**- META** OS:  Windows Server 2012 R2 Selenium Standalone Server:  3.8.0  **## Expected Behavior -** Appium server node should be present in the list of nodes with one Safari browser slot  **## Actual Behavior -** Appium server node is present, but Safari slot is not available. Additional capabilities present in configuration.   **## Steps to reproduce -** 1. Start Hub with selenium-standalone-server-3.8.0.jar with default config 2. Start appium server node - appium --nodeconfig /path/to/nodeconfig.json  nodeconfig.json ``` {   ""capabilities"":        [ 	{           ""browserName"": ""safari"",           ""maxInstances"": 1,           ""platform"":""mac"",           ""platformName"":""iOS"",           ""platformVersion"":""10.3"",           ""deviceName"":""iPhone 7""         }        ],   ""configuration"":   {     ""cleanUpCycle"":2000,     ""timeout"":30000,     ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",     ""url"":""http://appium_server_ip_address:4723/wd/hub"",     ""host"": ""appium_server_ip_address"",     ""port"": 4723,     ""maxSession"": 1,     ""register"": true,     ""registerCycle"": 5000,     ""hubPort"": 4444,     ""hubHost"": ""hub_ip_address""   } } ```  node configuration (from hub console): ``` browserTimeout: 0 debug: false help: false jettyMaxThreads: -1 port: 4723 role: node timeout: 30000 enablePassThrough: true cleanUpCycle: 2000 host: appium_server_ip_address maxSession: 1 **capabilities: Capabilities {browserName: chrome, maxInstances: 5, seleniumProtocol: WebDriver} capabilities: Capabilities {browserName: firefox, marionette: true, maxInstances: 5, seleniumProtocol: WebDriver} capabilities: Capabilities {browserName: internet explorer, maxInstances: 1, platform: WINDOWS, seleniumProtocol: WebDriver}** capabilities: Capabilities {browserName: safari, maxInstances: 1, platform: MAC, seleniumProtocol: WebDriver, technologyPreview: false} downPollingLimit: 2 hub: http://localhost:4444 id: http://appium_server_ip_address:4723 hubHost: hub_ip_address hubPort: 4444 nodePolling: 5000 nodeStatusCheckTimeout: 5000 proxy: org.openqa.grid.selenium.proxy.DefaultRemoteProxy register: true registerCycle: 5000 remoteHost: http://appium_server_ip_address:4723 unregisterIfStillDownAfter: 60000 ```  Please note, node works as expected with 3.7.1 standalone server.","closed","C-grid,","gleb-k","2017-12-04T15:54:00Z","2019-08-16T20:09:35Z"
"","5751","Allow temporary installation of FF extension (#1)","* Allow temporary installation of FF extension  Extremely handy for testing browser extensions without the need of signing them  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","kvetko","2018-04-10T10:12:21Z","2018-06-28T20:24:40Z"
"","5390","Improvement for merging browser options","(issue #5279) https://github.com/SeleniumHQ/selenium/issues/5279  The issue is improved only for Chrome; it will improved  by me for other browsers a bit later.  The following logic for merging was implemented: 1. For ‘binary’ field: if this fields are both not empty  and their values are different, the IllegalArgumentException  should be thrown; 2. For ‘experimentalOptions’ field: if the source options and receiver options have the same experimental option with different values, the IllegalArgumentException should be thrown; 3. After merging all duplicates in all collections should be deleted.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5390)","closed","C-java,","IlyaNaumovich","2018-01-24T17:21:24Z","2021-01-25T20:37:34Z"
"","4856","Package all Ruby dependencies","> titusfortner: Was talking to Simon. We need a vendor directory in selenium-webdriver to put all of the gems we use so that running `./go test_rb` doesn't require internet access / bundler to work  Finally it's possible to build and test Ruby bindings with no Internet connection and no pre-installed software except Ruby 2.0.  @titusfortner I think that achieves what Simon was looking for. I'm not sure if your IDE would need any changes, but this works fine in macOS terminal (not sure about Windows, will need to check that).  To update gems we need to add custom task that would do something like this:  ```bash $ bundle update gem_name $ bundle package ```","closed","C-rb,","p0deje","2017-10-12T12:54:04Z","2017-10-16T10:44:17Z"
"","5393","selenium-server-standalone-3.8.1.jar is corrupt","$(npm bin)/webdriver-manager start         [14:27:40] I/start - java -Djava.security.egd=file:///dev/./urandom -Dwebdriver.chrome.driver=/home/fredericjost/Sites/website/app/Resources/app/node_modules/protractor/node_modules/webdriver-manager/selenium/chromedriver_2.35 -Dwebdriver.gecko.driver=/home/fredericjost/Sites/website/app/Resources/app/node_modules/protractor/node_modules/webdriver-manager/selenium/geckodriver-v0.19.1 -jar /home/fredericjost/Sites/website/app/Resources/app/node_modules/protractor/node_modules/webdriver-manager/selenium/selenium-server-standalone-3.8.1.jar -port 4444 Error: Invalid or corrupt jarfile /home/fredericjost/Sites/website/app/Resources/app/node_modules/protractor/node_modules/webdriver-manager/selenium/selenium-server-standalone-3.8.1.jar [14:27:40] I/start - seleniumProcess.pid: 13535 [14:27:40] I/start - Selenium Standalone has exited with code 1","closed","C-java,","f-jost","2018-01-25T13:29:53Z","2019-08-16T12:09:54Z"
"","5214","Is there a HideCommandPromptWindow like method for Python like there's one for C#?","### Meta OS:  Windows 10 Selenium Version:  3.8.0, Python Browser:  Chrome Browser Version:  63.0.3239.84 (64-bit)  ### Expected Behavior HideCommandPromptWindow like method for Python like there's one for C#  ### Actual Behavior Non-existent or undocumented  The chromedriver console pops up every time I initialize the driver with it. Is there any way to hide it?","closed","C-py,","flawiddsouza","2017-12-13T13:15:44Z","2021-09-05T08:35:50Z"
"","5067","Can not preform actions. Bad endpoint call","## System * gekodriver: 0.19.1 * Platform: Windows Server 2012 R2 * Firefox: 57 * Selenium: 3.7.1 with Node.js (selenium-webdriver)   creating a set of actions sends commands to /keys endpoint instead of actions /actions  ## Testcase  await driver.actions(). 				keyDown(webdriver.Key.CONTROL). 				keyDown(webdriver.Key.ALT). 				sendKeys('m'). 				keyUp(webdriver.Key.CONTROL). 				keyUp(webdriver.Key.ALT). 				perform()  ## Stacktrace  { UnknownCommandError: POST /session/e18dd3e1-5bd4-4090-91e9-a752f40b9824/keys did not match a known command     at Object.throwDecodedError (C:\eater\node_modules\selenium-webdriver\lib\error.js:514:15)     at parseHttpResponse (C:\eater\node_modules\selenium-webdriver\lib\http.js:519:13)     at doSend.then.response (C:\eater\node_modules\selenium-webdriver\lib\http.js:441:30)     at      at process._tickCallback (internal/process/next_tick.js:188:7) From: Task: sendKeys     at thenableWebDriverProxy.schedule (C:\eater\node_modules\selenium-webdriver\lib\webdriver.js:807:17)     at actions.map.action (C:\eater\node_modules\selenium-webdriver\lib\actions.js:124:23)     at Array.map ()     at C:\eater\node_modules\selenium-webdriver\lib\actions.js:123:29     at TaskQueue.execute_ (C:\eater\node_modules\selenium-webdriver\lib\promise.js:3084:14)     at TaskQueue.executeNext_ (C:\eater\node_modules\selenium-webdriver\lib\promise.js:3067:27)     at asyncRun (C:\eater\node_modules\selenium-webdriver\lib\promise.js:2974:25)     at C:\eater\node_modules\selenium-webdriver\lib\promise.js:668:7     at      at process._tickCallback (internal/process/next_tick.js:188:7) From: Task: ActionSequence.perform     at ActionSequence.perform (C:\eater\node_modules\selenium-webdriver\lib\actions.js:122:33)     at C:\eater\selenium.js:55:5     at      at process._tickCallback (internal/process/next_tick.js:188:7)   name: 'UnknownCommandError',   remoteStacktrace: 'stack backtrace:\n   0:           0x47e934 - \n   1:           0x47f0a3 - \n   2:           0x442649 - \n   3:           0x43c3f0 - \n   4:           0x40530f - \n   5:           0x40d01a - \n   6:           0x6bef19 - \n   7:           0x420b85 - \n   8:           0x6b96e0 - \n   9:     0x7ff871c413d2 - BaseThreadInitThunk' }","closed","C-nodejs,","avner-solomon","2017-11-16T17:21:49Z","2019-08-16T18:09:53Z"
"","4815","Selenium expects HTTP status 400 on ‘no such alert’ error","## System * GeckoDriver Version: 0.19.0 * Platform: Windows/MacOS * Firefox: 56 * Selenium: 3.5.3   ## Testcase  We want to verify an alert is presented on the page after the page load, when call the switch().alert() it will return null immediately rather than wait for the page loading completely   ## Trace-level log  ``` 1506663782880	webdriver::server	DEBUG	-> GET /session/eca71e6a-a826-48cf-a83f-720ec958c490/alert/text  1506663782881	geckodriver::marionette	TRACE	-> 29:[0,73,""getTextFromDialog"",{}] 1506663782883	Marionette	TRACE	0 -> [0,73,""getTextFromDialog"",{}] 1506663782885	Marionette	TRACE	0  incorrect JSON status mapping for 'no such alert' (400 expected) ```","closed","","adam-zjy","2017-10-06T01:41:04Z","2019-08-17T09:09:37Z"
"","5063","I Can't set browserName for FirefoxDriver","## System  Gecko Driver Version: 18.0 Platform: Win 10 Firefox: 54.0.1 Selenium WebDriver: 3.7.0 Program Language: C# ## Issue  I have some problems with modified FireFox browser. When the Browser opens and I get an error:  > **[""System.ArgumentException"" in WebDriver.dll]** TypeError: Given browserName [object String] ""firefox"", but my name is [object String] ""anotherbrowser""  I think, it's because of browser's name ""anotherbrowser"" instead of ""firefox"" in it's binary code.  So I found the solution on **Java**:          FirefoxOptions options = new FirefoxOptions();         options.setBinary(""Path to browser binary"");         options.setCapability(""browserName"", ""anotherbrowser"");         options.setCapability(""marionette"", false);         driver = new FirefoxDriver(options); I tested it, and its work fine. But I need on **C#**, so I tried to rewrite it: **(1st code)**          DesiredCapabilities cap = DesiredCapabilities.Firefox();         cap.SetCapability(""firefox_binary"", @""Path to Browser"");         cap.SetCapability(CapabilityType.BrowserName, ""anotherbrowser"");         IWebDriver driver = new FirefoxDriver(cap); I run the program and I got an error:  > **[""System.ArgumentException"" in WebDriver.dll]** There is already an option for the browserName capability. Please use the instead.  So I re-wrote my code: **(2nd code)**          DesiredCapabilities cap = new DesiredCapabilities(""anotherbrowser"", ""54.0.1"", new Platform(PlatformType.Windows));         cap.SetCapability(""firefox_binary"", @""Path to Browser"");         IWebDriver driver = new FirefoxDriver(cap); And I got same error.  After I tried to test my codes with **Selenium WebDriver 3.6.0**.  I run **1st code** and I got an error:  > **[""System.InvalidOperationException"" in WebDriver.dll]** Invalid moz:firefoxOptions field acceptInsecureCerts  Then I run **2nd code** and I got another error:  > **[""System.InvalidOperationException"" in WebDriver.dll]** Invalid moz:firefoxOptions field browserName  Why isn't it possible in **C#** to rewrite `[browserName]` to another, but in **Java** everything is okay? Please, help me to re-write **Java** solution to **C#**  _P.s. I can't use original Firefox browser, because it doesn't have same advantages as my modified Firefox._","closed","I-needs investigation,","Lonckaster","2017-11-16T13:35:14Z","2019-08-16T07:10:03Z"
"","5624","WebDriverWait().until function not found","## Problem - I decided to upgrade the whole selenium grid environment to use 3.11.0 webdriver. I went through the changes and updated the pom.xml file to use 3.11.0 selenium-java and guava 21.0. So I compiled my project and the following error occurs in WebDriverWait until.  **Before:**    I had the following setup:    Selenium Version: 2.47.0    Guava: 14.0.1    Java: jdk 1.8 (latest) **After:**    Now, this is my setup:    Selenium Version: 3.11.0    Guava: 21.0    Java: jdk 1.8 (latest)  ##Code: - ``` WebDriverWait wait = new WebDriverWait(driver, 10000); wait.until(ExpectedConditions.alertIsPresent()); ``` **The error when i compile is the follow:** [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.7.0:compile (default-compile) on project MyProject: Compilation failure [ERROR] /c:/MyProject/src/main/java/com/atlassian/plugins/MyProject/selenium/keywords.java:[1632,45] cannot access java.util.function.Function                [ERROR] class file for java.util.function.Function not found  **The line of the error is wait.until(ExpectedConditions.alertIsPresent());...**","closed","R-awaiting answer,","pauloaspimenta","2018-03-15T18:03:28Z","2019-08-16T10:09:36Z"
"","5301","getAllCookies returns new issue for Windows 10 and IE11","## Meta: OS:   64bit Windows 10  Pro  version 1709 (OS Build 16299.15) Selenium Version:   3.8.1 Browser:   Internet Explorer 11.15.16299.0  WebDriver: InternetExplorerDriver  32 bit  ## Reproduce process: 1. on local,  using new InternetExplorerDriver() and  navigate().to(""http://xxxxx"") 2. Send message :  Get localhost:xxxx/session/xxxxxxxxxxx/cookie  3. The listening port is shut down   ## Error Log: Started InternetExplorerDriver server (32-bit) 3.8.0.0 Listening on port 43088 Only local connections are allowed Jan 08, 2018 4:18:06 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to localhost:43088 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z' System info: host: 'DESKTOP-UDKNAH9', ip: '172.21.123.189', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:658) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions.getCookies(RemoteWebDriver.java:748) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions.getCookieNamed(RemoteWebDriver.java:783) 	at self.test.App.main(App.java:25)","closed","D-IE,","reekic","2018-01-08T08:45:34Z","2019-08-16T01:09:43Z"
"","5702","Why to include ""--disable-gpu"" for all OS variants (Linux/MacOSX) of ""set_headless(self, headless=True)""","## Meta - Why to include the arguments **`--disable-gpu`**  for all OS variants (Linux/MacOSX) within **`set_headless(self, headless=True)`**  Source Code says :   ```     def set_headless(self, headless=True):         """"""         Sets the headless argument          Args:           headless: boolean value indicating to set the headless option         """"""         args = {'--headless', '--disable-gpu'}         if headless:             self._arguments.extend(args)         else:             self._arguments = list(set(self._arguments) - args) ```  As per [**Getting Started with Headless Chrome**](https://developers.google.com/web/updates/2017/04/headless-chrome) :       --disable-gpu \                # Temporarily needed if running on Windows.  As per [**Headless: make --disable-gpu flag unnecessary**](https://bugs.chromium.org/p/chromium/issues/detail?id=737678) :    - This flag is no longer necessary on Linux or macOS.  - Also it will become unnecessary on Windows as soon as bug [**729961**](https://bugs.chromium.org/p/chromium/issues/detail?id=729961) is fixed.  As per [**SwiftShader fails an assert on Windows in headless mode**](https://bugs.chromium.org/p/chromium/issues/detail?id=729961) seems a patch is on the way.  Though as per [**headless: Enable SwiftShader on Windows**](https://chromium-review.googlesource.com/c/chromium/src/+/543481) the current fix seems failing.  OS:  Linux Selenium Version:  3.11.0> Browser:  All   Browser Version:  All  ## Expected Behavior - We should be able to bypass the **`--disable-gpu`** through a validation :       static final java.lang.String PLATFORM_NAME as LINUX/MacOSX is detected.  ## Actual Behavior - We should be able to bypass the argument **`--disable-gpu`** on LINUX/MacOSX.","closed","","Debanjan-B","2018-03-28T16:09:01Z","2019-08-16T08:09:45Z"
"","5295","WebDriver driver= new PhantomJSDriver();","## Meta - What happened with ""PhantomJSDriver"" ?  With **`Selenium-Java v3.8.1`** `WebDriver driver= new PhantomJSDriver();` doesn't resolves any more on IDE.  JavaDocs have dropped the reference of `PhantomJSDriver` from [**`Interface WebDriver`**](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/WebDriver.html) page.  `Selenium-Java v3.8.1` [**CHANGELOG**](https://raw.githubusercontent.com/SeleniumHQ/selenium/master/java/CHANGELOG) haven't spoken about  **`PhantomJSDriver`** for a while.  OS:  Windows8 Selenium Version:  3.8.1 Browser:  PhantomJSDriver  Browser Version:  2.1.1  ## Expected Behavior - `WebDriver driver= new PhantomJSDriver();` should resolve on IDE.  ## Actual Behavior - `WebDriver driver= new PhantomJSDriver();` doesn't resolves any more on IDE.  ## Steps to reproduce - Minimal Code Block :   	      File path=new File(""C:\\Utility\\phantomjs-2.1.1-windows\\bin\\phantomjs.exe""); 	      System.setProperty(""phantomjs.binary.path"",path.getAbsolutePath()); 	      WebDriver driver= new PhantomJSDriver(); 	      driver.manage().window().maximize(); 	      driver.navigate().to(""https://www.google.co.in/"");","closed","","Debanjan-B","2018-01-06T13:54:13Z","2019-08-16T18:09:46Z"
"","5520","Selenium-Python : selenium.common.exceptions.InvalidElementStateException details are missing from the documentation and source","## Meta - Selenium-Python :  `selenium.common.exceptions.InvalidElementStateException` details are missing from the [documentation](https://seleniumhq.github.io/selenium/docs/api/py/common/selenium.common.exceptions.html#selenium.common.exceptions.InvalidElementStateException) and [source](https://seleniumhq.github.io/selenium/docs/api/py/_modules/selenium/common/exceptions.html#InvalidElementStateException)  OS:  All Selenium Version:  Selenium v3.9.1 Browser:  All  Browser Version:  N/A  ## Expected Behavior - Documentation and source of `selenium.common.exceptions.InvalidElementStateException` must be included.  ## Actual Behavior - Documentation and source of `selenium.common.exceptions.InvalidElementStateException` is missing.  ## Steps to reproduce - `selenium.common.exceptions.InvalidElementStateException`  - [Documentation](https://seleniumhq.github.io/selenium/docs/api/py/common/selenium.common.exceptions.html#selenium.common.exceptions.InvalidElementStateException)  - [Source](https://seleniumhq.github.io/selenium/docs/api/py/_modules/selenium/common/exceptions.html#InvalidElementStateException)","closed","","Debanjan-B","2018-02-21T12:23:43Z","2019-08-16T13:09:45Z"
"","5519","Selenium Java Client (v3.9.1) with IEDriverServer v3.9.0.0 (64-bit) crashes with org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:28286","## Meta - Selenium Java Client (v3.9.1) with IEDriverServer v3.9.0.0 (64-bit) crashes with org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:28286  IEDriverServer [CHANGELOG](https://raw.githubusercontent.com/SeleniumHQ/selenium/master/cpp/iedriverserver/CHANGELOG) mentions :   ``` The ""major"" and ""minor"" fields are synchronized to releases of the Selenium project. Changes in the ""build"" field indicate interim releases made publicly available via the project downloads page. Changes in ""revision"" field indicate private releases checked into the prebuilts directory of the source tree, but not made generally available on the downloads page. ``` But **IEDriverServer_Win32_3.9.0** and **IEDriverServer_x64_3.9.0** was never pushed to [Download](https://docs.seleniumhq.org/download/) TAB of [seleniumhq.org](https://docs.seleniumhq.org/)  @jimevans on stackoverflow discussion [Can't launch Selenium IE Driver after upgrading to version 3.9](https://stackoverflow.com/questions/48895895/cant-launch-selenium-ie-driver-after-upgrading-to-version-3-9/48899810#comment84814851_48899810) confirmed **3.9.0.0** is official.  Thought **IEDriverServer_Win32_3.9.0** executes smooth but **IEDriverServer_x64_3.9.0** crashes with `org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:28286`   OS:  Windows 8 - Pro Selenium Version:  3.9.0.1 Browser:   Internet Explorer v10.x  Browser Version:  Internet Explorer v10.x  ## Expected Behavior - IEDriverServer v3.9.0.0 (64-bit) shouldn't crash with org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:28286  ## Actual Behavior - IEDriverServer v3.9.0.0 (64-bit) crashes with org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:28286  ## Steps to reproduce - MCVE :   ``` package demo;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.ie.InternetExplorerOptions; import org.openqa.selenium.remote.DesiredCapabilities;  public class A_IE_simple { 	public static void main(String[] args)  	{ 			System.setProperty(""webdriver.ie.driver"", ""C:\\Utility\\BrowserDrivers\\IEDriverServer.exe""); 	        WebDriver driver = new InternetExplorerDriver(); 			driver.get(""https://www.google.co.in""); 			System.out.println(""Google Home Page Opened""); 			driver.quit(); 			System.out.println(""Driver Closed""); 	} } ```  Error Stack Trace :   ``` 	Started InternetExplorerDriver server (64-bit) 	3.9.0.0 	Listening on port 28286 	Only local connections are allowed 	Exception in thread ""main"" org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:28286 	Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' 	System info: host: 'ATECHM-03', ip: '192.168.1.35', os.name: 'Windows 8', os.arch: 'amd64', os.version: '6.2', java.version: '1.8.0_144' 	Driver info: driver.version: InternetExplorerDriver 		at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 		at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 		at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 		at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:223) 		at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:215) 		at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:152) 		at demo.A_IE_simple.main(A_IE_simple.java:13) 	Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:28286 		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240) 		at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158) 		at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256) 		at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134) 		at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113) 		at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) 		at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 		at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 		at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 		at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 		at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 		at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 		at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 		at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 		at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 		at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 		at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 		at okhttp3.RealCall.execute(RealCall.java:77) 		at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:104) 		at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:54) 		at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 		at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 		at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 		at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 		... 6 more 	Caused by: java.net.ConnectException: Connection refused: connect 		at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 		at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source) 		at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source) 		at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source) 		at java.net.AbstractPlainSocketImpl.connect(Unknown Source) 		at java.net.PlainSocketImpl.connect(Unknown Source) 		at java.net.SocksSocketImpl.connect(Unknown Source) 		at java.net.Socket.connect(Unknown Source) 		at okhttp3.internal.platform.Platform.connectSocket(Platform.java:125) 		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238) 		... 29 more  ```","closed","C-java,","Debanjan-B","2018-02-21T12:12:38Z","2019-08-14T21:09:37Z"
"","5138","Selenium 3.7.0-Python-GeckoDriver 0.19.1 : print() throws UnicodeEncodeError when printing the characters obtained as Page Source.","## Meta - Selenium 3.7.1-Python-GeckoDriver 0.19.1 : print() throws **`UnicodeEncodeError: 'charmap' codec can't encode characters`** when printing the characters obtained as Page Source.  The complete error is :   ``` Traceback (most recent call last):   File ""C:\Users\AtechM_03\LearnAutmation\PythonProject\Stackoverflow\47548870_page_source.py"", line 14, in      print(StrSource)   File ""C:\Python\lib\encodings\cp1252.py"", line 19, in encode     return codecs.charmap_encode(input,self.errors,encoding_table)[0] UnicodeEncodeError: 'charmap' codec can't encode characters in position 57354-57358: character maps to  ```  OS:  Windows 8, Pro Selenium Version:  Selenium (Python) v3.7.0  Browser:  Firefox Quantum  Browser Version:  57.0 (64-bit)  ## Expected Behavior - Selenium (Python) client should print the characters obtained as Page Source.  ## Actual Behavior - Selenium (Python) client throws UnicodeEncodeError when printing the characters obtained as Page Source.  ## Steps to reproduce - Minimum Code Block  :   ``` from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  driver = webdriver.Firefox() driver.get(""http://www.moneycontrol.com"") searchText = driver.find_element_by_xpath(""//input[@id='search_str']"") searchText.send_keys(""dlf"") search_button = driver.find_element_by_css_selector("".btn_black.btn_search.FR"") search_button.click() WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH,""//h1[text()='DLF']""))) StrSource = driver.page_source print(StrSource) ``` [geckodriver.log](https://github.com/SeleniumHQ/selenium/files/1513423/geckodriver.log)","closed","","Debanjan-B","2017-11-29T10:29:37Z","2019-08-17T00:09:47Z"
"","5108","Selenium 3.7.1-Java-IEDriverServer 3.7.0 : IEDriverServer opens a new Window instead of new TAB when JavascriptExecutor is used.","## Meta - Selenium 3.7.1-IEDriverServer 3.7.0 : **`IEDriverServer`** opens a new **`Window`** instead of new **`TAB`** when **`JavascriptExecutor`** is used.  OS:  Windows 8. Pro  Selenium Version:  3.7.1  Client:    Java  Browser:  Internet Explorer  Browser Version:  10.0  ## Expected Behavior - **`IEDriverServer`** should open a new **`TAB`** when **`JavascriptExecutor`** is used.  ## Actual Behavior - **`IEDriverServer`** opens a new **`Window`** when **`JavascriptExecutor`** is used.  ## Steps to reproduce - Minimum Code Block :   	    String URL=""http://www.google.com""; 	    System.setProperty(""webdriver.ie.driver"", ""C:\\Utility\\BrowserDrivers\\IEDriverServer.exe""); 	    WebDriver driver =  new InternetExplorerDriver(); 	    driver.get(URL); 	    System.out.println(""Page Title is : ""+driver.getTitle()); 	    ((JavascriptExecutor) driver).executeScript(""window.open('http://facebook.com/');"");","closed","","Debanjan-B","2017-11-23T14:09:18Z","2019-08-16T17:09:49Z"
"","5813","Selenium 3.11.0-Java-IEDriverServer 3.11.0: IEDriverServer opens a new Window instead of new TAB but on manual click it opens in new tab.","## Meta - Selenium 3.11.0 -Java-IEDriverServer 3.11.0: IEDriverServer opens a new Window instead of new TAB but on manual click it opens in new tab. IE version 11  OS:  Window 10   Selenium Version:   3.11.0 Browser:   Internet Explorer Browser Version:   11.  ## Expected Behavior - Manualy when click on link it opens in new tab. So with selenium it should open in new tab ## Actual Behavior - Opening link on new window.","closed","","kuldeepkalassts","2018-04-20T14:06:42Z","2019-08-16T05:09:41Z"
"","5378","Selenium:Java - Need the selenium client binary checksum to avoid  encountering errors which may have been introduced during its transmission or storage.","## Meta - Need the **`Selenium Client Binary`** [**`Checksum`**](https://en.wikipedia.org/wiki/Checksum) in [**`Release Notes`**](https://raw.githubusercontent.com/SeleniumHQ/selenium/master/java/CHANGELOG) to avoid  encountering errors which may have been introduced during its transmission or storage.   A checksum which can be possibly calculated via MD5 algorithm.  OS:  All  Selenium Version:  All  Browser:  All  Browser Version:  All  ## Expected Behavior - **`Selenium Client Binary`** [**`Checksum`**](https://en.wikipedia.org/wiki/Checksum) is required [**`Release Notes`**](https://raw.githubusercontent.com/SeleniumHQ/selenium/master/java/CHANGELOG) to avoid  encountering errors which may have been introduced during its transmission or storage.  ## Actual Behavior - **`Selenium Client Binary`** [**`Checksum`**](https://en.wikipedia.org/wiki/Checksum) is not provided in the [**`Release Notes`**](https://raw.githubusercontent.com/SeleniumHQ/selenium/master/java/CHANGELOG) which is required to avoid  encountering errors which may have been introduced during its transmission or storage.  ## Steps to reproduce -   - Download :           selenium-server-standalone-3.9.0          selenium-java-3.9.0  Maven Configuration :               selenium-java             3.9.0","closed","help wanted,","Debanjan-B","2018-01-22T10:04:30Z","2022-07-08T11:55:24Z"
"","5720","[Query] Unable to pass a variable string to the ExpectedConditions method presenceOfElementLocated()","## Meta - Need help to understand the implementation of the _ExpectedConditions_ method `presenceOfElementLocated()` which is defined as :  ```   public static ExpectedCondition presenceOfElementLocated(final By locator) {     return new ExpectedCondition() {       @Override       public WebElement apply(WebDriver driver) { 	return findElement(locator, driver);       } ```  In one of my Tests I have implemented _WebDriverWait_ as follows :  ``` public static WebDriverWait wait = null;  wait = new WebDriverWait(driver, 120); wait.until(ExpectedConditions.presenceOfElementLocated(By.id(HomeScreen.tabHome_ID))); ``` This gives me an error as follows :   ``` Error:(51, 19) java: method until in class org.openqa.selenium.support.ui.FluentWait cannot be applied to given types; required: java.util.function.Function","closed","","Debanjan-B","2018-04-02T12:35:01Z","2019-08-16T07:09:52Z"
"","4952","Mismatch in documentation and implementation of WebDriverWait Constructor argument type","## Meta - Mismatch in WebDriverWait Constructor Argument type.  Though the argument type of the constructor for `WebDriverWait` mentions **`long`** but the `Long.MAX` value **`9223372036854775807`** is not getting accepted.  ## Steps to reproduce - The [documentation](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/support/ui/WebDriverWait.html) of **`WebDriverWait`** says :    	public WebDriverWait(WebDriver driver, long timeOutInSeconds)  Even Eclipse IDE shows the same as follows:  	org.openqa.selenium.support.ui.WebDriverWait.WebDriverWait(WebDriver driver, long timeOutInSeconds) 	 A small test on the Java Primitive Data Types is as follows:  	public class Min_Max_Primitive_Data_Types  	{ 		public static void main(String[] args)  		{ 		    System.out.println(""Integer.MIN = "" + Integer.MIN_VALUE); 		    System.out.println(""Integer.MAX = "" + Integer.MAX_VALUE); 		    System.out.println(""Long.MIN = "" + Long.MIN_VALUE); 		    System.out.println(""Long.MAX = "" + Long.MAX_VALUE); 		} 	} 	 The output reveals:  	Integer.MIN = -2147483648 	Integer.MAX = 2147483647 	Long.MIN = -9223372036854775808 	Long.MAX = 9223372036854775807 	 Now configuring :  	WebDriverWait wait2 = new WebDriverWait(driver, 9223372036854775807); 	 Eclipse IDE showing error as :  	The literal 9223372036854775807 of type int is out of range  Which means though the argument type of the constructor for `WebDriverWait` mentions **`long`** but the `Long.MAX` value **`9223372036854775807`** is not getting accepted.  #OS:  Windows8, Pro  #Selenium Version:  3.6.0  #Browser:  Firefox  #Browser Version:  56.0 (64-bit)  ## Expected Behavior - Documentation and implementation of **`WebDriverWait`** must match.  ## Actual Behavior - Documentation and implementation of **`WebDriverWait`** doesn't match.","closed","","Debanjan-B","2017-10-25T11:52:10Z","2019-08-17T05:09:59Z"
"","5264","Is public Actions doubleClick(WebElement target) deprecated?","## Meta - Is **`public Actions doubleClick(WebElement target)`** deprecated?  Documentation at [**`Package org.openqa.selenium.interactions`**](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/interactions/package-summary.html) says it is deprecated.  ![doubleclick](https://user-images.githubusercontent.com/26503213/34361291-ab87fec0-ea8e-11e7-9ef9-a953c040200d.png)  But again, documentation at [**`doubleClick`**](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html#doubleClick-org.openqa.selenium.WebElement-) says it exists.  ![doubleclick](https://user-images.githubusercontent.com/26503213/34361326-1c41a620-ea8f-11e7-93bb-d49d35171b0c.png)   Can we get a clarification please?  OS:  All Selenium Version:  3.8.1 Browser:  All  Browser Version:  All","closed","","Debanjan-B","2017-12-26T17:21:01Z","2019-08-16T19:09:46Z"
"","4817","""TypeError: Object of type 'set' is not JSON serializable"" error observed when passing a dictionary to ChromeOptions object in Python 3.6.1","## Meta - `TypeError: Object of type 'set' is not JSON serializable` error observed when passing a dictionary to` ChromeOptions` object and invoke `webdriver.Chrome()` in Python 3.6.1  OS:  Windows 8 Pro Selenium Version:  3.6.0 Browser:  Google Chrome Browser Version:  61.0.3163.100 (Official Build) (64-bit) ChromeDriver: v2.32.498550  ## Expected Behavior - `webdriver.Chrome()` should accept dictionary object passed through ChromeOptions object.  ## Actual Behavior - `webdriver.Chrome()` doesn't accepts dictionary object passed through ChromeOptions object and shows `TypeError: Object of type 'set' is not JSON serializable` error.  ## Steps to reproduce -  Minimal Code Block:  ``` from selenium import webdriver  chrome_opt = webdriver.ChromeOptions() prefs = {""credentials_enable_service"", False} prefs = {""profile.password_manager_enabled"", False} chrome_opt.add_experimental_option(""prefs"", prefs) driver = webdriver.Chrome(chrome_options=chrome_opt, executable_path=r'C:\Utility\BrowserDrivers\chromedriver.exe') driver.get(""https://google.com"") ``` Console Output (Error Stack Trace):  ``` Traceback (most recent call last):   File ""C:\Users\AtechM_03\LearnAutmation\PythonProject\Stackoverflow\passwordManagerChrome.py"", line 7, in      driver = webdriver.Chrome(chrome_options=chrome_opt, executable_path=r'C:\Utility\BrowserDrivers\chromedriver.exe')   File ""C:\Python\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 69, in __init__     desired_capabilities=desired_capabilities)   File ""C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 151, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 240, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Python\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 306, in execute     response = self.command_executor.execute(driver_command, params)   File ""C:\Python\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 461, in execute     data = utils.dump_json(params)   File ""C:\Python\lib\site-packages\selenium\webdriver\remote\utils.py"", line 34, in dump_json     return json.dumps(json_struct)   File ""C:\Python\lib\json\__init__.py"", line 231, in dumps     return _default_encoder.encode(obj)   File ""C:\Python\lib\json\encoder.py"", line 199, in encode     chunks = self.iterencode(o, _one_shot=True)   File ""C:\Python\lib\json\encoder.py"", line 257, in iterencode     return _iterencode(o, 0)   File ""C:\Python\lib\json\encoder.py"", line 180, in default     o.__class__.__name__) TypeError: Object of type 'set' is not JSON serializable ```","closed","C-py,","Debanjan-B","2017-10-06T06:21:26Z","2019-08-17T09:09:35Z"
"","4833","Selenium Documentation mentions dubious Method Detail for getScreenshotAs() method","## Meta - [Selenium Documentation](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/TakesScreenshot.html) mentions dubious Method Detail for getScreenshotAs() method  First it mentions:  > For **WebDriver** extending TakesScreenshot, this makes a best effort depending on the browser to return the following in order of preference: >  > - Entire page >  > - Current window >  > - Visible portion of the current frame >  > - The screenshot of the entire display containing the browser  In the very next line it mentions:  > For **WebElement** extending TakesScreenshot, this makes a best effort depending on the browser to return the following in order of preference: - The entire content of the HTML element - The visible portion of the HTML element  OS:  All  Selenium Version:  3.6  Browser:  All   Browser Version:     ## Expected Behavior - Method Detail for **`getScreenshotAs`** should be identical.  ## Actual Behavior - Method Detail for **`getScreenshotAs`** is not identical.  ## Steps to reproduce -  Browse to Interface [**`TakesScreenshot`**](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/TakesScreenshot.html) page and observe the **`getScreenshotAs()`** Method Detail.","closed","C-docs,","Debanjan-B","2017-10-09T18:22:32Z","2019-08-17T07:09:56Z"
"","5308","org.openqa.selenium.remote.SessionNotFoundException is missing from the documentation of Exception Summary and WebDriverException Class","## Meta - **`org.openqa.selenium.remote.SessionNotFoundException`** is missing from the documentation of **`Exception Summary`** in [**`Package org.openqa.selenium`**](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/package-summary.html) page and [**`WebDriverException Class`**](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/WebDriverException.html)  OS:  All Selenium Version:  3.8.1 Browser:  All  Browser Version:  All  ## Expected Behavior - Documentation for **`org.openqa.selenium.remote.SessionNotFoundException`** must be included.  ## Actual Behavior - Documentation for **`org.openqa.selenium.remote.SessionNotFoundException`** is missing.  ## Steps to reproduce - [**`Package org.openqa.selenium`**](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/package-summary.html)   [**`WebDriverException Class`**](http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/WebDriverException.html)","closed","C-docs,","Debanjan-B","2018-01-09T15:34:59Z","2019-08-15T10:09:38Z"
"","5398","Difference in serialization of Capabilities between Dotnet and Java bindings causes issues connecting to Saucelabs","## Meta -  OS:  Windows 10 Selenium Version:  3.8.0 Browser:  Chrome latest  ## Expected Behavior - For constructed in a default manner instance of ChromeOptions, serializers across language bindings must follow the same conventions. ## Actual Behavior - dotnet bindings generate an empty `goog:chromeOptions` property which cannot be properly initialized by SauceLabs. ## Steps to reproduce - Consider the following source code ```     class Program     {         static void Main(string[] args)         {             var options = new ChromeOptions(); /*!*/       options.AddUserProfilePreference(""credentials_enable_service"", false); /*!*/       options.AddUserProfilePreference(""profile.password_manager_enabled"", false);             var caps = options.ToCapabilities() as DesiredCapabilities;             caps.SetCapability(""username"", ""my_user_name"");             caps.SetCapability(""accessKey"", ""my-access-key-as-guid"");             using (var driver = new RemoteWebDriver(new Uri(""http://ondemand.saucelabs.com:80/wd/hub""), caps, TimeSpan.FromSeconds(840)))             {                 driver.Url = ""http://www.google.com"";             }         }     }  ``` This code runs perfectly fine. Same goes for it's Java equivalent. However, if I remove both of marked calls to `options` object, the `RemoteWebDriver` instance throws an exception on creation. The identical Java code still runs fine. Here are logs from runs on both languages with both calls to `options` removed:   - Java (works): https://saucelabs.com/beta/tests/2ff94b46a0064fd39c9e2cbe9e295839/logs#0 ``` {     ""screenshot"": 0,     ""between_commands"": null,     ""suggestion_values"": [],     ""request"": {       ""desiredCapabilities"": {         ""goog:chromeOptions"": {           ""binary"": ""D:\\Program Files\\Chrome 63\\63.0.3239.84\\chrome.exe"",           ""args"": [],           ""extensions"": []         },         ""javascriptEnabled"": true,         ""chromeOptions"": {           ""binary"": ""D:\\Program Files\\Chrome 63\\63.0.3239.84\\chrome.exe"",           ""perfLoggingPrefs"": {             ""enableNetwork"": true,             ""enablePage"": true           },           ""args"": [             ""start-maximized"",             ""disable-webgl"",             ""blacklist-webgl"",             ""blacklist-accelerated-compositing"",             ""disable-accelerated-2d-canvas"",             ""disable-accelerated-compositing"",             ""disable-accelerated-layers"",             ""disable-accelerated-plugins"",             ""disable-accelerated-video"",             ""disable-accelerated-video-decode"",             ""disable-gpu"",             ""disable-infobars"",             ""test-type"",             ""disable-extensions"",             ""remote-debugging-port=64535""           ]         },         ""browserName"": ""chrome"",         ""loggingPrefs"": {           ""performance"": ""ALL"",           ""driver"": ""ALL"",           ""browser"": ""ALL""         }       }     }, ```  - C# (doesn't work): https://saucelabs.com/beta/tests/d1e319ac6f64438b87420abf341c0daa/logs#0 ``` {     ""screenshot"": 0,     ""between_commands"": null,     ""suggestion_values"": [],     ""request"": {       ""desiredCapabilities"": {         ""goog:chromeOptions"": {},         ""deviceName"": """",         ""browserName"": ""chrome"",         ""chromeOptions"": {           ""binary"": ""D:\\Program Files\\Chrome 63\\63.0.3239.84\\chrome.exe"",           ""args"": [             ""start-maximized"",             ""disable-webgl"",             ""blacklist-webgl"",             ""blacklist-accelerated-compositing"",             ""disable-accelerated-2d-canvas"",             ""disable-accelerated-compositing"",             ""disable-accelerated-layers"",             ""disable-accelerated-plugins"",             ""disable-accelerated-video"",             ""disable-accelerated-video-decode"",             ""disable-gpu"",             ""disable-infobars"",             ""test-type"",             ""disable-extensions""           ]         }       }     }, ```  My understanding is that Java serializes child properties allowing SL to set what it needs, e.g. chromeBinary. On contrary, C# leaves empty object, so SL cannot initialize it the expected way.  Disclaimer: I don't work for SL, and this is all info I have from the support ticket. Right now we working this around by calling those preferences.","closed","","AgentMC","2018-01-26T19:02:45Z","2019-08-16T16:09:37Z"
"","5800","Specified exising profile is not being used","## Meta - Version: geckodriver 20 Platform: Windows 10 Firefox: FF 58 Selenium: Selenium standalone 3.10  Selenium-java code is as follows,  String profileDir = ""C:/Users/jlopez/AppData/Roaming/Mozilla/Firefox/Profiles/ddtkw80l.profile5902""; FirefoxProfile ffprofile = new FirefoxProfile();  FirefoxOptions options = new FirefoxOptions(); options.setBinary(""C:\Program Files\Mozilla Firefox\firefox.exe""); options.addArguments(""-profile"", profileDir);  System.setProperty(""webdriver.gecko.driver"",""C:\selenium\drivers\geckodriver.exe"");  capabilities = DesiredCapabilities.firefox(); capabilities.setCapability(""moz:firefoxOptions"", options);  driver = new RemoteWebDriver(new URL(""http://"" + hubHost + "":4567/wd/hub""), capabilities);   FF opens up but it does not go to the URL I specify. If I comment out options.addArguments(""-profile"", profileDir); , it works ok, but with a new profile every time that does not have flash installed which is installed on the profile I have previously created.","closed","D-firefox,","javierlopez111","2018-04-18T17:15:34Z","2019-08-14T14:09:59Z"
"","5567","Add support for sourceMapUrl when fetching Chrome logs","## Meta - Selenium Version:  selenium-webdriver (ruby) 3.9.0  Browser:  Chrome   Browser Version:  64.0.3282.186 (Official Build) (64-bit)   ## Expected Behavior - Fetching browser logs has the ability to return the sourceMapUrl (original file & line) where the log entry was triggered.  ## Actual Behavior - Source Maps are not available, at least in the Ruby Gem  ## Steps to reproduce -  Generate some input to [this page](https://mdn.github.io/devtools-examples/sourcemaps-in-console/index.html)  Without sourcemaps: `main.js:8 Hello Stefan`  With sourcemaps: `main.coffee:4 Hello Stefan`  Chromium team has [provided input](https://bugs.chromium.org/p/chromium/issues/detail?id=812153#c9) for how to access sourceMapUrls but it is a little beyond me to understand how to get this with the remote debugging protocol.","closed","I-question,","swrobel","2018-03-05T20:53:36Z","2021-12-29T00:07:06Z"
"","5362","BUG - Not existing element request with unicode xpath fails with UnicodeDecodeError on Firefox","## Meta - Selenium Version:  3.8.1 Browser:  Firefox 57.0.4 64bit Geckodriver: 0.19.1 win64  ## Expected Behavior - fail with `NoSuchElementException` (works on chrome) ## Actual Behavior - fails with `UnicodeDecodeError` ``` UnicodeDecodeError                        Traceback (most recent call last)  in () ----> 1 driver.find_element_by_xpath(""//*[text()='jüsst-sómè-ūñîçødē']"")  /local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in find_element_by_xpath(self, xpath)     383             element = driver.find_element_by_xpath('//div/td[1]')     384         """""" --> 385         return self.find_element(by=By.XPATH, value=xpath)     386     387     def find_elements_by_xpath(self, xpath):  /local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in find_element(self, by, value)     953         return self.execute(Command.FIND_ELEMENT, {     954             'using': by, --> 955             'value': value})['value']     956     957     def find_elements(self, by=By.ID, value=None):  /local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in execute(self, driver_command, params)     308     309         params = self._wrap_value(params) --> 310         response = self.command_executor.execute(driver_command, params)     311         if response:     312             self.error_handler.check_response(response)  /local/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.pyc in execute(self, command, params)     464         data = utils.dump_json(params)     465         url = '%s%s' % (self._url, path) --> 466         return self._request(command_info[0], url, body=data)     467     468     def _request(self, method, url, body=None):  /local/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.pyc in _request(self, method, url, body)     565                 return data     566         finally: --> 567             LOGGER.debug(u""Finished Request {}"".format(data))     568             resp.close()  UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 86: ordinal not in range(128) ``` ## Steps to reproduce - Run the following code, notice it **SHOULD** fail with `NoSuchElementException`: ``` from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from selenium.webdriver.common.keys import Keys  HUB_IP = '192.168.1.17'  driver = webdriver.Remote(command_executor='http://{}:4444/wd/hub'.format(HUB_IP), desired_capabilities=DesiredCapabilities.FIREFOX) driver.get(""http://www.python.org"") driver.find_element_by_xpath(""//*[text()='jüsst-sómè-ūñîçødē']"") ```","closed","C-py,","lev-cymmetria","2018-01-18T12:48:24Z","2019-08-16T14:09:58Z"
"","5013","Selenium Java 3.7.0 is broken: selenium-remote-driver-3.7.0.jar is invalid","## Meta - Selenium Version:  3.7.0 Framework: Maven (though might also be an issue with direct download as well).  ## Actual Behavior - When downloading Selenium using Maven, the _selenium-remote-driver-3.7.0_ JAR is invalid, so obviously, all the RemoteWebDriver related behavior is missing, and existing code is broken.  ## Steps to reproduce - Use the following dependency in your _pom.xml_ file  ```        org.seleniumhq.selenium       selenium-java       3.7.0   ```  Create any WebDriver instance (e.g., ChromeDriver) and see that the ""get"" method is missing.","closed","","danielputerman","2017-11-04T11:28:14Z","2019-08-17T04:09:45Z"
"","5543","jetty-repacked jar has incorrect dir flag","## Meta - Selenium Version:   3.9.1  ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce - $ zipinfo -l /export/jetty-repacked-9.4.7.v20171121.jar  -rw----     2.0 fat        0 bl        2 defN  1-Feb-85 00:00 META-INF/ -rw----     2.0 fat     3244 bl     1022 defN  1-Feb-85 00:00 META-INF/MANIFEST.MF -rw----     1.0 fat        0 b-        0 stor  1-Feb-85 00:00 META-INF -rw----     2.0 fat        0 bl        2 defN 21-Nov-17 14:28 META-INF/maven/ -rw----     2.0 fat        0 bl        2 defN 21-Nov-17 14:28 META-INF/maven/org.eclipse.jetty/ -rw----     2.0 fat        0 bl        2 defN 21-Nov-17 14:28 META-INF/maven/org.eclipse.jetty/jetty-http/ -rw----     2.0 fat      103 bl      100 defN 21-Nov-17 14:28 META-INF/maven/org.eclipse.jetty/jetty-http/pom.properties  comparing to other jars -rw---- looks wrong for dir","closed","C-java,","isidorkin","2018-02-26T18:29:59Z","2019-10-29T18:45:10Z"
"","5373","Problem with HUB forwarding request to NODE","## Meta - Selenium Version:   * hub docker image: selenium-hub:latest * node docker image: selenium-node-chrome:latest  ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -  We deployed a selenium-hub and several selenium-node-chromes with docker, due to our company's firewall policy, hub does not have direct network to nodes. We have a **single** ingress http gateway (nginx), which does the following route based on `Host` header: * `hub.selenium.mycompany.com` -> route to hub * `node1.selenium.mycompany.com` -> route to chrome node 1 * `node2.selenium.mycompany.com` -> route to chrome node 2 * so on and so forth  The node is started as: ``` SE_OPTS='-remoteHost http://node1.selenium.mycompany.com -id node1' /opt/bin/entry_point.sh ```  And the node successfully registered with hub. However, things failed when hub got a request to create a new session.  The client sends an HTTP request like:  ``` POST /wd/hub/session HTTP/1.1 Host: hub.selenium.mycompany.com (other info snipped) ```  The hub selects an available node (assume it's node1), and forwards the request by:  * first makeing a tcp connection to `node1.selenium.mycompany.com:80` (connected to the nginx) * then forwarding the http request as is, with `Host` header not modified  When this request reaches the nginx, it sees the `Host` header is `hub.selenium.mycompany.com`, so routed back to hub again, causes a dead loop.  Suggested solution is, when hub forwarding the request to node, it should set Host header according to node's `remoteHost` value. This change should do no harm to most existing installations.","closed","R-awaiting answer,","StephenPCG","2018-01-20T08:51:22Z","2021-09-05T10:20:26Z"
"","5554","Unable to Upgrade from Selenium 3.4 - 3.5 - Error running on grid (.java files)","## Meta - Preface: Running all of the below (Apart from not upgrading the versions), and keeping everything at 3.4 works (across all browsers, both locally and remotely) 3.4.0 binding / 3.4.0 IEDriverServer / 3.4.0 standalone / 1.12.16 GridExtras Running all of the items upgraded *locally* works (Across all browsers)  OS:   Win8.1 nodes running on Selenium Grid through Selenium Grid Extras 1.12.17 Selenium Version:   3.5.0 server / 3.5.0 binding Browser:   Internet Explorer 11 - Latest patch - IEDriverServer 3.5.0 64bit (For some reason 32bit provides an invalid URL to download the driver) Java is 1.8.0.102  ## Expected Behavior - I can run a test, any feature ## Actual Behavior - ``` Testing started at 16:03 ... Tags: @@test 2018-03-01 16:03:46 INFO Selenium -> POST session 2018-03-01 16:03:46 INFO Selenium    >>> http://XXXXX:4444/wd/hub/session | {""desiredCapabilities"":{""browserName"":""internet explorer"",""version"":"""",""platform"":""WINDOWS"",""javascriptEnabled"":true,""cssSelectorsEnabled"":true,""takesScreenshot"":true,""nativeEvents"":true,""rotatable"":false,""enablePersistentHover"":true,""ie.ensureCleanSession"":true},""capabilities"":{""firstMatch"":[{""browserName"":""internet explorer""}]}} 2018-03-01 16:03:46 DEBUG Selenium      > {""Accept""=>""application/json"", ""Content-Type""=>""application/json; charset=utf-8"", ""Content-Length""=>""332""} 2018-03-01 16:03:46 INFO Selenium","closed","R-awaiting answer,","luke-hill","2018-03-01T16:24:22Z","2019-08-16T09:10:00Z"
"","5450","webdriver.Firefox() exception on Raspberry pi 3 Ubuntu Classic Server 16.04","## Meta - Platform: Raspberry Pi 3 OS:  Ubuntu 16.04 Classic Server Selenium Version: 3.9.0 Geckodriver: 19.0.1 ARM7hf Browser:  Firefox 58.0.1 Language: Python 3.5.2  ## Expected Behavior - Expect no exception.  ## Actual Behavior - Exception raised:  > Traceback (most recent call last): >   File """", line 1, in  >   File ""/home/martin/.local/lib/python3.5/site-packages/selenium/webdriver/firefox/webdriver.py"", line 162, in __init__ >     keep_alive=True) >   File ""/home/martin/.local/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 154, in __init__ >     self.start_session(desired_capabilities, browser_profile) >   File ""/home/martin/.local/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 243, in start_session >     response = self.execute(Command.NEW_SESSION, parameters) >   File ""/home/martin/.local/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 312, in execute >     self.error_handler.check_response(response) >   File ""/home/martin/.local/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response >     raise exception_class(message, screen, stacktrace) > selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status: 1  geckodriver.log   > 1517973993086	geckodriver	INFO	geckodriver 0.19.1 > 1517973993130	geckodriver	INFO	Listening on 127.0.0.1:33938 > 1517973994816	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.5EcLbXHxWGet"" > ExceptionHandler::GenerateDump cloned child ExceptionHandler::WaitForContinueSignal waiting for continue signal... > 16639 > ExceptionHandler::SendContinueSignalToChild sent continue signal to child  geckodriver.log (from Jenkins test, see below)  > 1517973683203	geckodriver	INFO	geckodriver 0.19.1 > 1517973683224	geckodriver	INFO	Listening on 127.0.0.1:44639 > 1517973686092	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.U9bo7S9WVbVv"" > ExceptionHandler::GenerateDump cloned child 16387 > ExceptionHandler::WaitForContinueSignal waiting for continue signal... > ExceptionHandler::SendContinueSignalToChild sent continue signal to child > 1517973692009	geckodriver	INFO	geckodriver 0.19.1 > 1517973692030	geckodriver	INFO	Listening on 127.0.0.1:51052 > 1517973693698	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.fYJ8OWbQXcXg"" > ExceptionHandler::GenerateDump cloned child 16427 > ExceptionHandler::WaitForContinueSignal waiting for continue signal... > ExceptionHandler::SendContinueSignalToChild sent continue signal to child > 1517973697889	geckodriver	INFO	geckodriver 0.19.1 > 1517973697930	geckodriver	INFO	Listening on 127.0.0.1:51720 > 1517973699621	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.ChmQVltqdxxx"" > ExceptionHandler::GenerateDump cloned child ExceptionHandler::WaitForContinueSignal waiting for continue signal... > 16466 > ExceptionHandler::SendContinueSignalToChild sent continue signal to child >   ## Steps to reproduce - ``` $ python3 >>> from selenium import webdriver >>> webdriver.Firefox() ```  ## My actual problem - Above is the simplest way that I've been able to reproduce the issue. But I've actually been trying to run tests using Jenkins on my Raspberry Pi 3, and I get the same error when `webdriver.Firefox()` is called. The setup on Jenkins is the same, except for `xvfb` is being used with the old `export DISPLAY=:99` trick (which doesn't work for me). I've also tried to use `pyvirtualdisplay` with no luck (same exception as above):  ``` $ python3 >>> from selenium import webdriver >>> from pyvirtualdisplay import Display >>> display = Display(visible=0, size=(1366, 768)) >>> display.start() >>> webdriver.Firefox() ```  I've tried *many* different versions of Selenium, geckodriver (even compiled ARM6hf versions) and Firefox with no luck.  I have had some success though, earlier I had Raspbian Stretch Lite (Nov 2017) on my Raspberry Pi 3 and my tests were working fine on Jenkins using Geckodriver 15.0, Firefox-sre 52.6 and Selenium 3.4.1. I'll fall back to this setup if this issue can't be resolved.","closed","","martinnobis","2018-02-07T02:04:19Z","2019-08-16T14:09:53Z"
"","5680","NodeJS: Support synchronous API","## Meta - OS: Windows 10? Selenium Version: 3.6.0  ## Status Quo -  Currently [`selenium-webdriver`](https://www.npmjs.com/package/selenium-webdriver) works great with `async`/`await` but putting `await` at the beginning of each line can get a little annoying:  ```js const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('firefox').build();   try {     await driver.get('http://www.google.com/ncr');     await driver.findElement(By.name('q'));.sendKeys('webdriver', Key.RETURN);     await driver.wait(until.titleIs('webdriver - Google Search'), 1000);   } finally {     await driver.quit();   } })(); ```  ## Feature Request -  As many scripts don't actually need this asynchronous nature it would be great to provide a synchronous alternative.  One option would be to supply alternative methods by appending `Sync` to the end of each method name:  ```js const {Builder, By, Key, until} = require('selenium-webdriver');  let driver = new Builder().forBrowser('firefox').buildSync(); try {   driver.getSync('http://www.google.com/ncr');   driver.findElementSync(By.name('q'));.sendKeys('webdriver', Key.RETURN);   driver.waitSync(until.titleIs('webdriver - Google Search'), 1000); } finally {   driver.quitSync(); } ```  This doesn't do much in the terms of savings. It is simply a trade-off between `await` and `Sync` but `Sync` is consistent with Node's `fs` module, etc. (e.g. `fs.readSync`).  Perhaps a better option would be to provide a synchronous API using a different module name. e.g. `selenium-webdriver/sync` instead of simply `selenium-webdriver`  ```js const {Builder, By, Key, until} = require('selenium-webdriver/sync');  let driver = new Builder().forBrowser('firefox').build(); try {   driver.get('http://www.google.com/ncr');   driver.findElement(By.name('q'));.sendKeys('webdriver', Key.RETURN);   driver.wait(until.titleIs('webdriver - Google Search'), 1000); } finally {   driver.quit(); } ```","closed","C-nodejs,","mfulton26","2018-03-26T15:07:38Z","2019-08-16T08:09:58Z"
"","5641","Selenium Driver instance will go into sleep state","## Meta - OS: Windows 10 Server Selenium Version: selenium-server-standalone-3.11.0.jar Browser:  Chrome Version : 65.0.3325.162 (Official Build) (64-bit) Chromedriver : 2.37.543627 Language Used : Java  **Application Expected Behavior** :- I have an application which is using Gmail accounts for authentication. When I try to open an URL in chrome browser, it will open a pop-up window(Gmail Authentication Window) with main window(Application view with some third party loader). In the pop-up window, I will enter my gmail username and password and hit on login button. After that the pop-up window will refresh and disappears after particular time. As well as my main-window will refresh and I will logged in into the application successfully.  **Issue** :-  After entering  username and password the child window is refreshing. But it isn't disappear.  **Solution tried** :- When I try to open an URL in chrome browser, it will open a pop-up window(Gmail Authentication Window) with main window(Application view with some third party loader). In the pop-up window, I will enter my gmail username and password and hit on login button. I waited for 1 Minutes and I found that the window won't disappear. So,I have closed the child window and navigated the driver control to main window checked the below solutions, a) Refresh the application b) Tried to open the application URL again c) Used Selenium Press-keys method In first two solutions, selenium isn't perform the activities and it goes to sleep state(Doesn't see any activities in 5 Minutes). In the third solution, the driver will be refreshing the page and it will go to sleep state(Not performing the later activities).  **My application was working fine for below configurations** :- OS: Windows 10 Server Selenium Version: selenium-server-standalone-3.8.1.jar Browser:  Chrome Version : 63.* (Official Build) (64-bit) Chromedriver : 2.35.*","closed","R-awaiting answer,","shaileshrbiradar","2018-03-19T13:12:08Z","2019-08-16T06:09:57Z"
"","5343","Chrome + chromedriver scrolling works, but not --headless","## Meta - OS: Windows 10 and Ubuntu 16.04 LTE Selenium Version:   3.8.1 pip installed python3.6 Browser:   Chrome + chromedriver     Browser Version:   Installed: 63.0.3239.108-0ubuntu0.16.04.1","closed","","riekusr","2018-01-16T13:13:22Z","2019-08-16T17:09:50Z"
"","5006","selenium.common.exceptions.WebDriverException: Message: Unable to find a matching set of capabilities","## Meta - OS: Windows 10 Selenium Version: 3.7.0 Browser:  Firefox Browser Version:  56.0.2 (32-bit)  ## Expected Behavior -  Run sample code for Python taken from [Selenium Python](http://selenium-python.readthedocs.io/getting-started.html). Expect it to work.  ## Actual Behavior -  ```python  >>> from selenium import webdriver >>> from selenium.webdriver.common.keys import Keys >>> >>> driver = webdriver.Firefox() Traceback (most recent call last):   File """", line 1, in    File ""C:\Users\MY_USER_NAME\AppData\Local\Continuum\anaconda3\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", line 154, in __init__     keep_alive=True)   File ""C:\Users\MY_USER_NAME\AppData\Local\Continuum\anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 151, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""C:\Users\MY_USER_NAME\AppData\Local\Continuum\anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 240, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Users\MY_USER_NAME\AppData\Local\Continuum\anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 308, in execute     self.error_handler.check_response(response)   File ""C:\Users\MY_USER_NAME\AppData\Local\Continuum\anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Unable to find a matching set of capabilities  ```  ## Steps to reproduce - Freshly install everything and try to run the python code.","closed","","1kastner","2017-11-03T11:20:39Z","2019-08-17T04:09:44Z"
"","5342","ChromeDriver blocks after clicking browser Print Button","## Meta - OS: Windows 10 Selenium Version:  3.8.1 Chrome Driver version: 2.35 Browser:  Chrome 63.0.3239.132  We have a page with a link for the window print:     	Test Print   Test Print Print Page    We have the following automation code:  		ChromeOptions options = new ChromeOptions(); 		options.addArguments(""start-maximized""); 		System.setProperty(""webdriver.chrome.logfile"", ""D:\\chromedriver.log""); 		System.setProperty(""webdriver.chrome.verboseLogging"", ""true""); 		WebDriver driver = new ChromeDriver(options); 		driver.get(""http://localhost/testprint""); 		System.out.println(""Click the print button!""); 		driver.findElement(By.id(""printButton"")).click(); 		System.out.println(""The Print Preview is displayed!"");  When we run this code, it displays in the console :   Starting ChromeDriver 2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73) on port 7430 Only local connections are allowed. Jan 16, 2018 12:12:27 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Click the print button!  And remain in running for an indefinite period of time.  I've attached the ChromeDriver log.  [chromedriver.log](https://github.com/SeleniumHQ/selenium/files/1634557/chromedriver.log)","closed","D-chrome,","LivClau","2018-01-16T10:18:42Z","2019-08-15T12:09:35Z"
"","5415","Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Failed to start browser C:\Program Files\Mozilla Firefox\firefox.exe: other os error","## Meta - OS: Windows 10 Selenium Version:  3.8.1 Browser: Firefox 57  1517391403310	geckodriver	INFO	geckodriver 0.19.1 1517391403320	geckodriver	INFO	Listening on 127.0.0.1:10056 1517391403926	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-profile"" ""C:\\Users\\vitesh\\AppData\\Local\\Temp\\rust_mozprofile.XcmFT0Ipm65Q"" Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Failed to start browser C:\Program Files\Mozilla Firefox\firefox.exe: other os error Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'VITESH-PC', ip: '10.39.97.43', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4' Driver info: driver.version: FirefoxDriver remote stacktrace: stack backtrace:    0:           0x47e934 -     1:           0x47f0a3 -     2:           0x442649 -     3:           0x44a062 -     4:           0x42a890 -     5:           0x406f5e -     6:           0x40cfc9 -     7:           0x6bef19 -     8:           0x420756 -     9:           0x6b96e0 -    10:     0x7ffeed031fe4 - BaseThreadInitThunk 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.base/java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:98) 	at MyTestCase.MyFirstTestCase.main(MyFirstTestCase.java:12)","closed","","viteshk92","2018-01-31T09:40:36Z","2019-08-16T15:09:51Z"
"","5149","java.lang.RuntimeException: java.net.BindException: Address already in use: connect","## Meta - OS: Windows 10 Selenium Version:  3.7.1 Browser: Chrome Browser Version:  62.0.3202.94 (Официальная сборка), (64 бит) Chromedriver Version: 2.33    Node config ``` {   ""capabilities"":   [     {       ""browserName"": ""firefox"",       ""maxInstances"": 15,       ""seleniumProtocol"": ""WebDriver"", 	  ""version"": ""DEFAULT""     },     {       ""browserName"": ""chrome"",       ""maxInstances"": 15,       ""seleniumProtocol"": ""WebDriver"", 	  ""version"": ""DEFAULT""     },     {       ""browserName"": ""internet explorer"",       ""maxInstances"": 1,       ""seleniumProtocol"": ""WebDriver"", 	  ""version"": ""DEFAULT""     }   ],   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""maxSession"": 15,   ""port"": 5556,   ""register"": true,   ""registerCycle"": 5000,   ""hub"": ""http://my_host:4445"",   ""nodeStatusCheckTimeout"": 5000,   ""nodePolling"": 5000,   ""role"": ""node"",   ""unregisterIfStillDownAfter"": 60000,   ""downPollingLimit"": 2,   ""debug"": false,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {} } ```  Hub config ``` {   ""port"": 4445,   ""newSessionWaitTimeout"": -1,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {},   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""registryClass"": ""org.openqa.grid.internal.DefaultGridRegistry"",   ""throwOnCapabilityNotPresent"": true,   ""cleanUpCycle"": 5000,   ""role"": ""hub"",   ""debug"": false,   ""browserTimeout"": 0,   ""timeout"": 1800 } ```   **SERVER LOG** Line 788985: 14:52:42.591 DEBUG - http-outgoing-16397: set socket timeout to 0 	Line 788996: 14:52:42.591 DEBUG - http-outgoing-16397 >> GET /wd/hub/session/916de56b7b5644306716d27df0ff9fec/element/0.37243952481844755-3/displayed HTTP/1.1 	Line 789000: 14:52:42.591 DEBUG - http-outgoing-16397 >> User-Agent: Python http auth 	Line 789004: 14:52:42.592 DEBUG - http-outgoing-16397 >> Connection: close 	Line 789008: 14:52:42.592 DEBUG - http-outgoing-16397 >> Host: 10.76.163.106:4445 	Line 789011: 14:52:42.592 DEBUG - http-outgoing-16397 >> Accept-Encoding: identity 	Line 789013: 14:52:42.592 DEBUG - http-outgoing-16397 >> Accept: application/json 	Line 789016: 14:52:42.592 DEBUG - http-outgoing-16397 >> Content-Type: application/json;charset=UTF-8 	Line 789019: 14:52:42.592 DEBUG - http-outgoing-16397 >> ""GET /wd/hub/session/916de56b7b5644306716d27df0ff9fec/element/0.37243952481844755-3/displayed HTTP/1.1[\r][\n]"" 	Line 789021: 14:52:42.592 DEBUG - http-outgoing-16397 >> ""User-Agent: Python http auth[\r][\n]"" 	Line 789025: 14:52:42.592 DEBUG - http-outgoing-16397 >> ""Connection: close[\r][\n]"" 	Line 789028: 14:52:42.592 DEBUG - http-outgoing-16397 >> ""Host: 10.76.163.106:4445[\r][\n]"" 	Line 789031: 14:52:42.592 DEBUG - http-outgoing-16397 >> ""Accept-Encoding: identity[\r][\n]"" 	Line 789034: 14:52:42.593 DEBUG - http-outgoing-16397 >> ""Accept: application/json[\r][\n]"" 	Line 789035: 14:52:42.593 DEBUG - http-outgoing-16397 >> ""Content-Type: application/json;charset=UTF-8[\r][\n]"" 	Line 789038: 14:52:42.593 DEBUG - http-outgoing-16397 >> ""[\r][\n]"" 	Line 789165: 14:52:42.614 DEBUG - http-outgoing-16397","closed","C-grid,","theproshin","2017-11-30T13:50:13Z","2020-05-20T23:06:22Z"
"","5668","Internet Explorer: Element is not clickable if there is a hidden HTML element with z-index","## Meta - OS: Windows 10 Selenium Version:  3.11.0 Browser:  Internet Explorer Browser Version:  11.909.15063.0 (Update Version: 11.0.51) IE WebDriver: 3.11.1.1  ## Expected Behavior -  If there is a hidden element with z-index parameter on a page, visible element will be clicked  ## Actual Behavior -   there is a hidden element with z-index parameter on a page, clicking on visible element throws exception: org.openqa.selenium.ElementClickInterceptedException: Element not clickable at point (31,17). Other element would receive the click: <td> 	         <table style=""width: 100%; border-top-color: rgb(233, 246, 255); border-bottom-color: rgb(62, 95, 128); border-left-color: rgb(233, 246, 255); border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid;"" valign=""top""> 	            <tbody><tr> 	               <td> Login </td> 	            </tr> 	         </tbody></table> 	       </td> Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z' System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: eager, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 15000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:25911/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: accept} Session ID: dcf4d1b6-208e-46d2-9fe4-9b8dc7f6f2ae 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83) 	at com.polarion.selenium.test.cases.documents.create.DocumentDialogTests.createNewDocumentTest(DocumentDialogTests.java:51) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) 	at org.junit.rules.RunRules.evaluate(RunRules.java:20) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runners.Suite.runChild(Suite.java:128) 	at org.junit.runners.Suite.runChild(Suite.java:27) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java) 	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) 	at java.util.concurrent.FutureTask.run(FutureTask.java) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748)  ## Steps to reproduce - HTML code in attachment file [ieWebDriverClickErrorHtmlPage.txt](https://github.com/SeleniumHQ/selenium/files/1841135/ieWebDriverClickErrorHtmlPage.txt)  Selenium code Java: `InternetExplorerOptions internetExplorerOptions = new InternetExplorerOptions();  internetExplorerOptions.setCapability(""applicationCacheEnabled"", true);  internetExplorerOptions.waitForUploadDialogUpTo(15, TimeUnit.SECONDS); internetExplorerOptions.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.ACCEPT).setPageLoadStrategy(PageLoadStrategy.EAGER);  WebDriver webDriver = new InternetExplorerDriver(internetExplorerOptions );  webDriver.get(""file:///path/ieWebDriverClickErrorHtmlPage.html"");  WebElement element = webDriver.findElement(By.cssSelector(""#gLink""));  element.click();`","closed","","eugenedani","2018-03-23T10:31:24Z","2019-08-16T00:09:55Z"
"","5015","Add %APPDATA%\..\Local\Mozilla Firefox\firefox.exe to the list of default places to check for Firefox","## Meta - OS: Windows 10 Browser: Firefox Driver: Python  ## Expected Behavior -  Find a user-only installed firefox installation at `%APPDATA%\..\Local\Mozilla Firefox\firefox.exe`  ## Actual Behavior -  Currently at [firefox_binary.py](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/firefox_binary.py) in the method `_default_windows_location` only the following are checked:  ``` [os.getenv(""PROGRAMFILES"", r""C:\Program Files""), os.getenv(""PROGRAMFILES(X86)"", r""C:\Program Files (x86)"")] ```  But not the directory `%APPDATA%\..\Local` aka `C:\Users\CURRENT_USER\AppData\Local` where Firefox is installed if it is only installed for one user.","closed","","1kastner","2017-11-04T14:56:09Z","2019-08-17T04:09:43Z"
"","5363","Actions, input and webdriver: inconsistency or (likely) my own stupidity?","## Meta - OS: Ubuntu  Selenium Version:   Any Browser:  Any  This is not quite an issue, but... help. Since there is virtually no documentation on the javascript/node side of the story, I am self-documenting things and making node from the code. I am stuck at actions. In the [actions.js](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/actions.js) file I see for example       dragAndDrop(element, location) {         return this.mouseDown(element).mouseMove(location).mouseUp();       }  And:       click(opt_elementOrButton, opt_button) {         return this.scheduleMouseAction_('click',             command.Name.LEGACY_ACTION_CLICK, opt_elementOrButton, opt_button);       }  From [this blog](http://www.seleniumeasy.com/selenium-tutorials/how-to-perform-mouseover-action-in-selenium-webdriver) I saw how to use actions. What I don't quite get, is the API. The actions.js file has methods like `mouseUp`, `mouseDown`, `mouseMove`, `click`, `keyUp`, `keyDown`, `sendKeys` .  SOME of them, I found in [input.js](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/input.js), like `keyUp`, `keyDown` (under ""keyboard""); confusingly, the pointer ones in input.js have different names (`press`, `release`, `move`...).  THEN SOME of them I find in [webdriver.js](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/webdriver.js) like (`click`, `sendKeys`, etc.)  Can somebody please explain:  * The relationship between the three files * Why the inconsistency in naming  and parameter (e.g. `mouseMove(location, opt_offset)` in actions.js  vs `move({x = 0, y = 0, duration = 100, origin = Origin.VIEWPORT})` in input.js  * How to do things like `dragAndDrop()` _without_ using an action  Thanks in advance, and sorry about the noise. 1 hour on this, and I just don't get it...","closed","","mercmobily","2018-01-18T15:31:41Z","2019-08-16T16:10:03Z"
"","4895","Unable to click on button placed inside an iframe","## Meta - OS: OSX macOS Sierra 10.12.6   Selenium Version:  3.6.0   Browser:  Safari    Browser Version:  11.0.1(12604.3.2)   ## Expected Behavior - click() action should work on a button located inside an iframe in Safari browser  ## Actual Behavior -  No action when performed button.click() action on Safari browser  ## Steps to reproduce -   1.  Open safari browser 2.  Access web application login screen 3.  Enter valid credentials and click on Login button, pop up appears 4.  Switch to iframe 5.  Click on button placed inside an iframe  No action when clicked on button. Same code is working fine in other browsers(Chrome, Mozilla, IE11)  Below is the code:  ``` SafariOptions options = new SafariOptions(); options.setUseCleanSession(true); driver = new SafariDriver(options);  driver.manage().window().maximize(); driver.get(""testurl""); driver.findElement(By.id(""UN"")).sendKeys(""admin""); driver.findElement(By.id(""UN"")).sendKeys(""admin$""); driver.findElement(By.id(""Login"")).click(); driver.switchTo().frame(driver.findElement(By.xpath(""//*[starts-with(@class,'dijitDialog') and contains(@style,'z-index: 950;')]//*[starts-with(@id,'AxDojo_Dialog_frame')]""))); driver.findElement(By.xpath(""//*[@id='ButtonPlaceHolder']/button[2]"")).click(); ```  No action when last step is executed. As work around found an alternate to perform click on the button with below code `driver.findElement(By.xpath(""//*[@id='ButtonPlaceHolder']/button[2]"")).sendKeys(Keys.ENTER);`  But like this we need to change in many areas, Selenium is browser independent and maintenance of code browser wise is tedious task to us. Please can anyone look into this issue.","closed","","aparna207","2017-10-18T07:36:34Z","2019-08-17T07:09:45Z"
"","5179","Safari does not quit calling .quit","## Meta - OS: OSX highSierra Selenium Version:   Ruby selenium-webdriver v 3.8.0 Browser: Safari   Desktop  Browser Version:  11.0.1 (13604.3.5)  ## Expected Behavior - calling .quit on the browser object should close the window and kill the browser  ## Actual Behavior - calling .quit on the browser object only closes the window and leaves the browser object still running  ## Steps to reproduce - Run this code and expect the browser to quit.  require 'selenium-webdriver'  browser = Selenium::WebDriver.for :safari  browser.get 'https://www.e2x.co.uk'  sleep 2  browser.quit","closed","","ilovegithub2","2017-12-06T10:50:45Z","2019-08-14T13:09:50Z"
"","4890","Mac, Chrome - Selenium does not scroll enough vertically if horizontal scrollbars are present","## Meta - OS: macOS Sierra (10.12.2) Selenium Version:  ChromeDriver 2.30.477690 Browser:  Chrome, CEF Browser Version:  Chrome 58.0.3029.96  ## Usecase -  I am scrolling down to an element on a page that overflows both vertically AND horizontally. I am trying to click an element that is offscreen vertically.  ## Expected Behavior - Upon receiving a click() command, Selenium scrolls down to the target element until the target is within the viewport, and then issues a click.  ## Actual Behavior - This appears to be a symptom of some combination of MacOS and newer Chrome, where the scrollbars are hidden in Chrome until the mouse comes near. This makes the viewport larger, but the actual usable area is still the same size as it would be on Windows, because the scrollbars are still there, even if they are invisible.  So when Selenium scrolls into view, it stops (as expected) when the target element enters the viewport. However, it is not interactable because there is an invisible scrollbar over it, which will appear (briefly) when Selenium issues a click on it. The click hits the scrollbar rather than the target element.  What's really bad about this is that it fails silently. Usually if a click is going to hit an element, but hits another element instead, there is a helpful error message. But in this case, the element simply never receives the click, resulting in mysterious failures.  ## Steps to reproduce - Copy this simple test page: ```                Scrolling test for Selenium  		 	        function been_clicked(clicked_el){ 	        	document.getElementById('HUD').innerHTML=clicked_el; 	        }                       	X-ONLY     	Y-ONLY     	X AND Y     	ORIGIN  		Updates go here       ``` And run this code in your preferred boilerplate Selenium test class:  webDriver.findElement(By.cssSelector(""#x"")).click(); // verify that HUD now says ""X-ONLY"". This is a check to make sure that this is working.  webDriver.findElement(By.cssSelector(""#y"")).click(); // verify that HUD now says ""Y-ONLY"". This fails for me, and if you watch it, you can see the horizontal scrollbar appear briefly as it receives the click. By adding another element lower in the page, and clicking on that, then clicking #y , #y functions normally again.  ## Fallout - This can potentially break tests for any element that needs to be scrolled-to where the center of the element is less than the height (or width) of the scrollbar. While my case has to deal with vertical scrolling and interference with the horizontal scrollbar, I suspect that the same will hold true for horizontal scrolling and vertical scrollbars.  Screenshot:  ![scrollbar_interference](https://user-images.githubusercontent.com/2445805/31676250-02deba10-b335-11e7-81fa-bae76758756b.png)  Note, this issue is CC'd at chromium.org ( https://bugs.chromium.org/p/chromedriver/issues/detail?id=2084 )","closed","","kdillon","2017-10-17T16:16:46Z","2019-08-17T04:09:36Z"
"","5085","Flick action fails with exception ""Failed to construct 'Touch': member target is not of type EventTarget.""","## Meta - OS: Mac OSX 10.13.1 Selenium Version:  selenium-webdriver: v3.7.0, chromedriver: v2.33  Browser:  Chrome v62  Flick action tries to interact with an element an than fails with an exception    ## Expected Behavior - slide changed and there is no any exceptions  ## Actual Behavior - ``` /Users/oleksiybondar/.rbenv/versions/2.1.10/bin/ruby -e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift) /Users/oleksiybondar/Documents/Development/Upwork/qa/autotests/debug/test.rb /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/response.rb:69:in `assert_ok': unknown error: Failed to construct 'Touch': member target is not of type EventTarget. (Selenium::WebDriver::Error::UnknownError)   (Session info: chrome=62.0.3202.94)   (Driver info: chromedriver=2.33.506106 (8a06c39c4582fbfbab6966dbb1c38a9173bfb1a2),platform=Mac OS X 10.13.1 x86_64) 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/http/common.rb:81:in `new' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/http/common.rb:81:in `create_response' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/http/default.rb:104:in `request' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/bridge.rb:168:in `execute' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/oss/bridge.rb:579:in `execute' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/oss/bridge.rb:432:in `touch_element_flick' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/common/touch_screen.rb:91:in `flick' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/common/action_builder.rb:356:in `block in perform' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/common/action_builder.rb:355:in `each' 	from /Users/oleksiybondar/.qa_rubygems/ruby/2.1.0/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/common/action_builder.rb:355:in `perform' 	from /Users/oleksiybondar/Documents/Development/Upwork/qa/autotests/debug/test.rb:18:in `' 	from -e:1:in `load' 	from -e:1:in `' ```  https://www.dropbox.com/s/m7ajmltig058urh/flick2.mov?dl=0  ## Steps to reproduce - ``` require 'bundler/setup' require 'selenium-webdriver'  #-------------------------------------------------------------------------------  mobile_emulation = { ""deviceName"" => ""Nexus 5"" } caps = Selenium::WebDriver::Remote::Capabilities.chrome(""chromeOptions"" => { ""mobileEmulation"" => mobile_emulation }) driver = Selenium::WebDriver.for :chrome, desired_capabilities: caps driver.extend Selenium::WebDriver::DriverExtensions::HasTouchScreen  driver.get ""https://owlcarousel2.github.io/OwlCarousel2/demos/responsive.html""  carousel = driver.find_element css: '.owl-carousel.owl-theme.owl-loaded.owl-drag' item        = carousel.find_element css: '.owl-item.active' driver.touch.flick(item, - item.rect.width, 0, 150).perform sleep 10 # to see the results in case if it works ```","closed","","oleksiybondar","2017-11-20T16:26:19Z","2019-08-17T01:09:51Z"
"","5730","Connection reset by peer on teardown","## Meta - OS: Linux (Travis CI)  Selenium Version: 3.8.0  Browser: Chrome  Browser Version: v61-v66+  ## Expected Behavior - Should teardown successfully  ## Actual Behavior - Intermittent connection reset issues on teardown  ## Steps to reproduce -  Here are travis logs for a few builds that fail on teardown on differing tests:  https://travis-ci.org/getsentry/sentry/jobs/361312007 https://travis-ci.org/getsentry/sentry/jobs/360086412  ``` _____________ ERROR at teardown of AccountSettingsTest.test_simple _____________ Traceback (most recent call last):   File ""/home/travis/build/getsentry/sentry/src/sentry/utils/pytest/selenium.py"", line 267, in fin     driver.quit()   File ""/home/travis/virtualenv/python2.7.13/lib/python2.7/site-packages/selenium/webdriver/chrome/webdriver.py"", line 129, in quit     self.service.stop()   File ""/home/travis/virtualenv/python2.7.13/lib/python2.7/site-packages/selenium/webdriver/common/service.py"", line 149, in stop     self.send_remote_shutdown_command()   File ""/home/travis/virtualenv/python2.7.13/lib/python2.7/site-packages/selenium/webdriver/common/service.py"", line 125, in send_remote_shutdown_command     url_request.urlopen(""%s/shutdown"" % self.service_url)   File ""/opt/python/2.7.13/lib/python2.7/urllib2.py"", line 154, in urlopen     return opener.open(url, data, timeout)   File ""/opt/python/2.7.13/lib/python2.7/urllib2.py"", line 429, in open     response = self._open(req, data)   File ""/opt/python/2.7.13/lib/python2.7/urllib2.py"", line 447, in _open     '_open', req)   File ""/opt/python/2.7.13/lib/python2.7/urllib2.py"", line 407, in _call_chain     result = func(*args)   File ""/opt/python/2.7.13/lib/python2.7/urllib2.py"", line 1228, in http_open     return self.do_open(httplib.HTTPConnection, req)   File ""/opt/python/2.7.13/lib/python2.7/urllib2.py"", line 1201, in do_open     r = h.getresponse(buffering=True)   File ""/home/travis/virtualenv/python2.7.13/lib/python2.7/site-packages/raven/breadcrumbs.py"", line 352, in getresponse     rv = real_getresponse(self, *args, **kwargs)   File ""/opt/python/2.7.13/lib/python2.7/httplib.py"", line 1121, in getresponse     response.begin()   File ""/opt/python/2.7.13/lib/python2.7/httplib.py"", line 438, in begin     version, status, reason = self._read_status()   File ""/opt/python/2.7.13/lib/python2.7/httplib.py"", line 394, in _read_status     line = self.fp.readline(_MAXLINE + 1)   File ""/opt/python/2.7.13/lib/python2.7/socket.py"", line 480, in readline     data = self._sock.recv(self._rbufsize) error: [Errno 104] Connection reset by peer ----------------------------- Captured stdout call ----------------------------- 19:20:43 [INFO] sentry.testutils: selenium.initialize-cookies 19:20:43 [INFO] sentry.testutils: selenium.set-cookie.sentrysid (value=u'.eJxrYKotZNQIZSkuTckvZIrgYWBgyAsy9gkqLQ4LMvUxL2QOFYpPLC3JiC8tTi2KT0pMzk7NSylkCVUqTs0rKarUKy3JzCnWA6nQc81NzMxxBLKcoKpYQ3mR9GamFLJ5s5TqAQA20iZL:1f350V:pTnZzxAJ9RrcexugV2h_dZnyjYw') ----------------------------------- selenium ----------------------------------- WARNING: Failed to gather URL: [Errno 111] Connection refused WARNING: Failed to gather screenshot: [Errno 111] Connection refused WARNING: Failed to gather HTML: [Errno 111] Connection refused WARNING: Failed to gather log types: [Errno 111] Connection refused ```","closed","C-py,","billyvg","2018-04-04T19:13:48Z","2019-08-16T06:10:03Z"
"","5026","Setting user error during remote driver creation","## Meta - OS: Linux Selenium Version: 3.7.0 Browser: Firefox Browser Version: 56.0.2 (32-bit)  ## Expected Behavior - To create driver in a Selenium grid on Firefox using an user profile - Use a container with a Selenium grid - Create an user and set its extension configurations - Execute tests, passing as parameter the user created in the previous step Obs.: It works when driver is locally created.  ## Actual Behavior - ``` DesiredCapabilities capabilities capabilities = DesiredCapabilities.firefox() FirefoxOptions firefoxOptions = new FirefoxOptions() FirefoxProfile profile = new ProfilesIni().getProfile(""profile_name"") firefoxOptions.setProfile(profile) capabilities.setCapability(FirefoxOptions.FIREFOX_OPTIONS, firefoxOptions)  def d = new RemoteWebDriver(         new URL(gridUri), capabilities     ) ``` ## Result - During debug, the extension is set on its profile, but no extensions are visible. ![extension](https://user-images.githubusercontent.com/30508069/32506694-67a123aa-c3cc-11e7-8538-5db12ecd02fe.png) ![profile without extension](https://user-images.githubusercontent.com/30508069/32506703-69c4ba20-c3cc-11e7-93af-eb0a06a73b5d.png)  Browser is open without user's extension.","closed","D-firefox,","WarleyGabriel","2017-11-07T17:00:50Z","2019-08-17T03:09:56Z"
"","5419","org.openqa.selenium.TimeoutException: timeout when navigating within the same page using a URL with the element part","## Meta - OS: Linux Selenium Version:  3.8.1 - both Hub and Node  Browser:  Chrome Chrome driver: 2.35 Browser Version:  Chrome 64.0.3282.119  ## Expected Behavior  Driver is navigating to the page. ## Actual Behavior - Timeout exception is thrown. ## Steps to reproduce - Set up simplest grid - hub and node with the default config running on the same machine (You can use docker images, or selenium standalone servers). Create a new Remote Driver instance.   Run below test: ``` @Test 	public static void test() { 	final String docs = ""seleniumhq.org/docs/""; 	driver.get(docs + ""01_introducing_selenium.jsp""); 	driver.get(docs + ""01_introducing_selenium.jsp#introducing-selenium""); 	} ```  The last line will throw a Timeout Exception.","closed","","baflQA","2018-01-31T20:13:43Z","2019-08-16T14:09:46Z"
"","4899","iOS/Safari - Hybrid App (via Appium) - Unable to find element within IFrame.","## Meta - OS: iOS Selenium Version: 3.0.1 (Also reproducible on 3.6.0) Browser: iOS Hybrid App (Safari) Browser Version:  Not sure - Tested using iOS 11 ## Expected Behavior - I should be able to find elements within an IFrame after executing `driver.SwitchTo().Frame(iFrameElement);`  ## Actual Behavior - When trying to find elements within an IFrame after executing `driver.SwitchTo().Frame(iFrameElement);`, I get NoSuchElementException. Viewing the page source after switching IFrame still shows the parent document.   ## Steps to reproduce - ``` driver.SwitchTo().Frame(iFrameElement); elementWithinIFrame.click(); ```   From what I've seen this is only an issue with Safari. I've had no problems when running the same scenario on Android/Chrome. Sorry I can't provide any code/HTML for you!  Other examples of this issue: https://github.com/appium/appium/issues/5199 https://github.com/SeleniumHQ/selenium/issues/4397 https://github.com/appium/appium/issues/5560","closed","","siggerzz","2017-10-18T15:40:13Z","2019-08-17T07:09:36Z"
"","5374","Origin.pointer is not exported by any ""external"" API module","## Meta - OS: Any   Selenium Version:   Browser:  ANY  ## Description  Origin.pointer, referenced [in the doc](https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/input_exports_Actions.html), is only ever exported by `selenium-webdriver/lib/input`. In the same `lib` directory there is a nice warning in the README telling us that anything in here might change etc.  I think Origin should be exported by `selenium-webdriver`, as it happen now with `Key`, `By`, etc.  Or maybe it should be exported by driver.actions? (which comes from `input`)  We need it to do something like:      await customer.actions({ bridge: true })           .move({x:10, y:20, origin: Origin.VIEWPORT})           .press()           .release()           .sendKeys('blah')           .perform()  Merc.","closed","C-nodejs,","mercmobily","2018-01-20T13:43:47Z","2019-08-16T07:09:59Z"
"","5412","Provide a way to set additional environment variables for drivers","## Meta - OS: All Selenium Version: 3.8.1  I would like to apply specific additional environment variables when running a browser. Now, I've seen that there is at least some hidden (?) way to set environment variables but it's not possible to do it remotely via Selenium Grid.  Why is this needed? For example, I need to retrieve the log from Firefox for specific modules. To do that, I'm required to set an environment variable such as `NSPR_LOG_MODULES=DataChannel:5,SCTP:3`. But only some tests require this log output and other tests will require logging output from different modules. Activating everything and parsing them afterwards would be overkill (and potentially slow).  (I would really be able to fix this for my own use case asap. So, if you have an idea how a quick & dirty fix could be applied (and where), please let me know. Since Java is unable to set environment variables at runtime :unamused: my previous quick & dirty idea failed.)  Related: https://github.com/mozilla/geckodriver/issues/1148","closed","I-stale,","lgrahl","2018-01-30T20:20:18Z","2021-12-07T00:06:59Z"
"","4865","keyDown and keyUp issue clicks when they should not","## Meta - OS: All Selenium Version:  All Browser:  All  keyDown/keyUp requires focus to function, but not a click. A click is a specific way to focus, but focus can also be granted in other ways like tabbing, or from javascript. keyDown/keyUp should not assume that focus has been granted from a click. Focusing via click results in the sending of superfluous events to the element, which can cause incorrect results due to inaccuracy in the events that should be generated for a particular action.  ## Expected Behavior - keyDown/keyUp should focus using the javascript focus API, not clicks.  ## Actual Behavior - keyDown/keyUp triggers a click - a very specific type of focus-granting action that can have side-effects.  ## Steps to reproduce - CTRL+Click on the clickable div in: https://jsfiddle.net/nyw7w6qf/1/ Note: 1 click detected  Now run... WebElement webElement = webDriver.findElement(By.cssSelector(""#testDiv"")); Actions builder = new Actions(webDriver); Action modifierkey = builder.keyDown(webElement, Keys.CONTROL).build(); modifierkey.perform(); webElement.click(); modifierkey = builder.keyUp(webElement, Keys.CONTROL).build(); modifierkey.perform();  Note: 3 clicks detected (at least for me). 1 from keyDown, 1 from click, 1 from keyUp","closed","I-needs investigation,","kdillon","2017-10-13T18:02:40Z","2021-09-05T08:06:38Z"
"","5299","`ChromeOptions.setProxy` not properly set proxy","## Meta - OS:  Xubuntu 17.10  Selenium Version:  3.7.1  Browser:  Chrome   ## Expected Behavior - Created selenium proxy was set: ``` org.openqa.selenium.Proxy proxy = new org.openqa.selenium.Proxy(); proxy.setSocksProxy(proxyPojo.ip + "":"" + proxyPojo.port); proxy.setSocksVersion(5); return proxy; ```  ## Actual Behavior - Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: cannot parse capability: proxy from unknown error: proxyType is 'manual' but no manual proxy capabilities were found  ## Solution that helps - https://stackoverflow.com/a/28891213/285571 ``` ChromeOptions options = new ChromeOptions(); options.addArguments(""--proxy-server=socks5://"" + host + "":"" + port); WebDriver driver = new ChromeDriver(options); ```  Please can you fix converting of selenium proxy object to appropriate Chrome Driver argument string.","closed","D-chrome,","Hronom","2018-01-07T15:55:05Z","2021-09-05T08:35:52Z"
"","4930","NoClassDefFoundError: SessionNotFoundException with selenium 3.6 and HtmlUnitDriver 2.52.0","## Meta - OS:  Windwos 10 Selenium Version:  3.6.0 Browser:  HtmlUnitDriver  Browser Version:  HtmlUnitDriver 2.52.0  ## Expected Behavior - This package configuration should compile and work: org.seleniumhq.selenium:selenium-api:3.6.0 org.seleniumhq.selenium:selenium-java:3.6.0 org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0  ## Actual Behavior - Is causing a NoClassDefFoundError java.lang.NoClassDefFoundError: org/openqa/selenium/remote/SessionNotFoundException  ## Steps to reproduce - Just get sources from [Example](https://github.com/Ben1980/seleniumError.git) and run it with gradlew.bat build or in your IDE","closed","","Ben1980","2017-10-23T15:31:14Z","2019-08-17T06:09:44Z"
"","5011","I am unable to locate any elements on any page in IE11 Windows 10 with IEDriver","## Meta - OS:  Windows10 64 bit  Selenium Version: Selenium Webdriver 3.6    Browser:   IE11   Browser Version:     ## Expected Behavior -  ## Actual Behavior - exception in thread ""main"" org.openqa.selenium.NoSuchElementException: Unable to find element ## Steps to reproduce - Go to URL web page> enter windows authentication credentials using AutoIT and main page opens after that driver not identifying any elements (text box, button click etc..) ( I verified IE protected mode settings set correctly)","closed","","Kumar-tsk","2017-11-04T04:13:58Z","2019-08-17T04:09:46Z"
"","5531","Capability['ignoreZoomSetting'] doesn't work on IE11 with py-selenium 3.8.1","## Meta - OS:  Windows10  Selenium Version:  3.8.1  Browser:  IE11 When I try to run python-selenium on IE11, I got an exception below  > selenium.common.exceptions.SessionNotCreatedException: Message: Unexpected error launching Internet Explorer. Browser zoom level was set to 150%. It should be set to 100%  I have set IE capabilities like below ``` def ie_driver(self):         ie_driver = r'C:\Users\ZiYingSu\Documents\python\IEDriverServer.exe'         os.environ['webdriver.ie.driver'] = ie_driver         cap = DesiredCapabilities.INTERNETEXPLORER         cap['platform'] = 'WINDOWS'         cap['browserName'] = 'internet explorer'         cap['ignoreProtectedModeSettings'] = True         **cap['ignoreZoomSetting'] = True**         cap['IntroduceInstabilityByIgnoringProtectedModeSettings'] = True         cap['requireWindowFocus'] = True         cap['INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS'] = True         self.driver = webdriver.Ie(ie_driver ,capabilities=cap)         return self.driver ```  I don't get it why this capability['ignoreZoomSetting'] doesn't work ? I don't want to adjust my IE by manually everytime Thanks  Browser Version:  IE11(64-bit)   ## Expected Behavior - IE can ignore zoom setting ## Actual Behavior - Got exception on selenium  > selenium.common.exceptions.SessionNotCreatedException: Message: Unexpected error launching Internet Explorer. Browser zoom level was set to 150%. It should be set to 100%","closed","D-IE,","s2005lg","2018-02-23T08:34:33Z","2019-08-15T21:09:40Z"
"","5545","'Click' action doesn't work on IE11 with py-selenium","## Meta - OS:  Windows10  Selenium Version:  3.8.1  Browser:  IE11  Browser Version:  11.248.16299.0   ## Expected Behavior - The 'Click' action can click button or any clickable elements. ## Actual Behavior - With py-selenium IEServerDriver, the 'Click' action doesn't work. Cannot click any button on the page, no errors display in the IDE(intellij IDEA)","closed","R-awaiting answer,","s2005lg","2018-02-27T01:14:44Z","2019-08-14T19:09:35Z"
"","5251","HOW CAN I MAKE selnium testing service SITE ??????????","## Meta - OS:  windows10  Selenium Version:    	 			org.seleniumhq.selenium 			selenium-java 			2.44.0 		  Browser:   Chrome Browser  ## Expected Behavior - I want make the ""selenium testing web site"" .  I want if user click the button on my page, the selenium webdriver started and do the automatically specific actions. (like login)  but,,,, I tested the all code and it works well in my local computer.  but when i uploaded the mycode to webserver (""i'm using hosting service"").  it didn't work.  the problem is ""the web driver open"";  how can i make the selenium testing website?  below is my code.  if user click the open button, user's computer open the chrome browser automatically!!  please help me!!  below is my code. and this is Spring    	@RequestMapping(value = ""/"", method = RequestMethod.GET) 	public String home(Locale locale, Model model, HttpServletRequest httpServletRequest) {  		String chromeDriver2_34 = httpServletRequest.getSession().getServletContext().getRealPath(""resources/chromedriver_win32_1/chromedriver.exe""); 		driver = new ChromeDriver(); 		driver.get(""https://www.naver.com""); 		 		 		 		return ""home""; 	}   ## Actual Behavior -  it works in my local computer.. but it didn't work on the hosting server.  why is it happened? and how can i fix the problem?  ## Steps to reproduce -","closed","","jjunest","2017-12-23T07:06:10Z","2019-08-16T19:09:54Z"
"","5490","IEDriverServer.exe process is not terminated if exception is thrown","## Meta - OS:  Windows Server 2016 (remote grid node) Selenium Version:  v3.8.1 (Java client-bindings) Browser:  Internet Explorer (IEDriverServer v3.8.0 32-bit) Browser Version:  11  ## Expected Behavior - The IEDriverServer.exe process is properly terminated after SessionNotCreatedException is thrown. ## Actual Behavior - The IEDriverServer.exe is left running after SessionNotCreatedException is thrown. This can cause **multiple** IEDriverServer.exe processes to be created/orphaned on a remote node, eventually exhausting the nodes resources such that no future sessions can be established to the remote node. ## Steps to reproduce - This issue was discovered after being required to apply a  Microsoft Security Advisory patch for the  [speculative execution side-channel](https://support.microsoft.com/en-us/help/4072698/windows-server-guidance-to-protect-against-the-speculative-execution) vulnerability.  For reasons I've yet to be able to determine, after applying the registry setting from the Security Advisory, it appeared the Protected Modes were altered as the following exception occurs:  `org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones.`   Test suites are being repeatedly run from CI from various teams, to the point were it was noticed, in mid-run, tests would start to get an `org.openqa.selenium.TimeoutException`. Researching the timeout issue it was discovered that multiple IEDriverServer.exe tasks were running on the remote node (due to the above SessionNotCreatedException) and eventually exhausting the nodes resource.  Inspection of the Protected Mode settings from Internet Options dialog --> Security tab, as well as from Group Policy editor (were actually set) for Internet Zone, Intranet Zone, Restricted Sites Zone and Trusted Sites Zone, it was confirmed the Protected Mode settings were all enabled.  I've subsequently have been able to toggle/order Protected Mode/vulnerability settings to make to IEDriverServer and my IT team happy, but it would be great if/when the SessionNotCreatedException happens that the IEDriverServer.exe is properly terminated and not left running on the remote node (if possible).","closed","D-IE,","schmidtkp","2018-02-13T15:35:31Z","2021-09-05T08:08:39Z"
"","4981","Cannot set 'no proxy' with IEDriverServer","## Meta - OS:  Windows Server 2016 Selenium Version:  3.6.0 (Java client), 3.6.0 (IEDriverServer, 32-bit) Browser:  Internet Explorer Browser Version:  11   ## Expected Behavior - Should be able to specify 'no proxy'/direct connection via Proxy.setProxyType(ProxyType.DIRECT)  ## Actual Behavior - The following exception is thrown: ``` org.openqa.selenium.SessionNotCreatedException: Invalid capabilities in alwaysMatch: a proxy type named direct is specified, but proxy type must be 'pac', 'noproxy', 'autodetect', 'system', or 'manual' Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'EC2AMAZ-28BU9KM', ip: '10.110.67.178', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_144' Driver info: driver.version: unknown remote stacktrace:  Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z' System info: host: '157dc50ca717', ip: '172.17.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.32-15.41.amzn1.x86_64', java.version: '1.8.0_141'  ``` ## Steps to reproduce - ``` Proxy proxy = new Proxy(); proxy.setProxyType(Proxy.ProxyType.DIRECT); DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer(); capabilities.setCapability(CapabilityType.PROXY, proxy); WebDriver webddriver = new RemoteWebDriver(, capabilities); ```  ## NOTE - This same code for setting 'no proxy'/direct connection has worked successfully for IEDriverServer up until v3.6.0 (possibly failing since v3.4.0).  This also leaves the IEDriverServer.exe process running on the node. We have a test suite that runs approx 20 tests, therefore leaving 20 IEDriverServer.exe processes running on the node. Since the call to new RemoteWebDriver throws the exception, we do not get a WebDriver object back in which we can call WebDriver.quit() and clean things up. Also we don't know which node in the grid the IEDriverServer was started on, again, unable to do any fordable kill of the orphaned processes.","closed","D-IE,","schmidtkp","2017-10-30T20:26:58Z","2021-09-05T08:35:55Z"
"","5712","not a valid Base-64 Error on GetScreenshot() for IEWebDriver","## Meta - OS:  Windows server 2016  Selenium Version:  3.11.0 IEWebDriver 3.11.1 Browser:  Internet Explorer 11  -->  Browser Version:  11.1198.14393.0   ## Expected Behavior - I run c# code: ((ITakesScreenshot)driver).GetScreenshot().SaveAsFile(some path + ""/screenshot"" + dateFormatFileNameStr + "".png"", ScreenshotImageFormat.Png);  And I expect the screenshot to be taken and saved in the foder.  ## Actual Behavior - I see error message: ErrorMessage:   System.FormatException : The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.  StackTrace:     at System.Convert.FromBase64_Decode(Char* startInputPtr, Int32 inputLength, Byte* startDestPtr, Int32 destLength)    at System.Convert.FromBase64CharPtr(Char* inputPtr, Int32 inputLength)    at System.Convert.FromBase64String(String s)    at OpenQA.Selenium.Remote.RemoteWebDriver.GetScreenshot()","closed","D-IE,","sisillV","2018-03-31T08:40:10Z","2019-08-15T18:09:47Z"
"","5145","InvalidOperationException while creating the firefox instance","## Meta - OS:  Windows Server 2012 R2, version 6.3  Selenium Version:  3.7  Browser:  Firefox 55   Browser Version:     ## Expected Behavior -  ## Actual Behavior - System.InvalidOperationException: Process unexpectedly closed with status: 0     at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(String geckoDriverDirectory, FirefoxOptions options) ## Steps to reproduce -                      var ffLocation = System.Environment.GetEnvironmentVariable(""FIREFOX"");                     var options = new FirefoxOptions();                     options.SetPreference(""network.http.pipelining"", true);                     options.SetPreference(""network.http.proxy.pipelining"", true);                     options.SetPreference(""network.dns.disableIPv6"", true);                     options.SetPreference(""webdriver.load.strategy"", ""unstable"");                     options.SetPreference(""network.http.response.timeout"", ""400"");                     options.SetPreference(""network.http.connection-timeout"", ""120"");                     options.SetPreference(""network.http.keep-alive.timeout"", ""140"");                     options.SetPreference(""network.http.request.max-start-delay"", ""15"");                     options.BrowserExecutableLocation = @ffLocation;                     Instance = new FirefoxDriver(“gecko driver directory path”,options);  I am using c#. when I try locally the same code is working fine. but when I run the same in teamcity, I am seeing the above error. can you please help me","closed","D-firefox,","Narsimharao","2017-11-29T22:31:12Z","2019-08-16T12:09:50Z"
"","5670","Unable to simulate typing of non printable character","## Meta - OS:  Windows Server 2012 R2 Standard Selenium Version:  3.11.0 Browser:  Chrome Browser Version:  65.0.3325.181 (Official Build) (64-bit)  ## Expected Behavior - I'm trying to simulate the input of a non printable character, specifically the [Group Separator Character](http://www.theasciicode.com.ar/ascii-control-characters/group-separator-ascii-code-29.html). I can manually accomplish this by holding 'Alt' and pressing '029' and thought I could get Selenium to do the same thing.  ## Actual Behavior - To confirm actual behaviour, I've got a web page that outputs the ASCII value of any input to console, I should see '29' but instead I see '0' (null character) entered three times.  ## Steps to reproduce - I've tried various combinations of keydown/up on alt/leftalt and sendkeys for the characters 0 2 and 9: `new Actions(webDriver).KeyDown(Keys.Alt).SendKeys(Keys.NumberPad0 + Keys.NumberPad2 + Keys.NumberPad9).KeyUp(Keys.Alt).Build().Perform();`  `new Actions(webDriver).KeyDown(Keys.LeftAlt).SendKeys(Keys.NumberPad0).SendKeys(Keys.NumberPad2).SendKeys(Keys.NumberPad9).KeyUp(Keys.LeftAlt).Build().Perform();`  `new Actions(webDriver).KeyDown(Keys.Alt).SendKeys(""029"").KeyUp(Keys.Alt).Build().Perform();`","closed","C-dotnet,","AinslieCleverdon","2018-03-23T14:48:05Z","2021-09-05T08:31:29Z"
"","5564","""Access Denied"" on CoCreateInstance causes IEDriverServer crash on Windows'","## Meta - OS:  Windows Server 2012 R2  Selenium Version:  3.0.1, IEDriver version: 3.0.0.0  Browser:  IE10/IE11  In our environment, IEDriverServer.exe runs as a low privileged user and it runs fine for the most part. The environment is deployed as a Windows VM (2012R2) on Amazon EC2. Also, we are running with IEDriver version 3.0.0.0. But, I have verified that the problem persists even in the most recent version of the driver.  After running webdriver scripts for a while, things start to go south. For reasons unknown, IEDriverServer begins crashing everytime an attempt is made to create a new webdriver. Nothing fancy, just a simple `webdriver.Ie()` is enough to crash the IEDriverServer.  I managed to get the crash dump and after debugging it for a bit, I discovered that, in `AttachToBrowserUsingShellWindows`, an attempt is made to `CoCreateInstance` of `CLSID_ShellWindows` and this call fails with 'Access Denied'. Since there is no error checking following this, later code which tries to invoke `_NewEnum` on the `IShellWindows` fails badly. ``` bool BrowserFactory::AttachToBrowserUsingShellWindows( ...   CComPtr shell_windows;   shell_windows.CoCreateInstance(CLSID_ShellWindows);    CComPtr enumerator_unknown;   HRESULT hr = shell_windows->_NewEnum(&enumerator_unknown);   if (FAILED(hr)) {     LOGHR(WARN, hr)   ## Expected Behavior - No IEDriverServer.exe crashes. And the driver object should be created without any issues.  ## Actual Behavior - IEDriverServer.exe crashes because of 'Access Denied' for CoCreateInstance.  ## Steps to reproduce - There is no easy way to reproduce this. It happens in our system after running scripts for a long time as the unprivileged user.","closed","D-IE,","kart","2018-03-04T01:18:16Z","2019-08-16T09:09:51Z"
"","5024","IEDriverServer considerably slower between 3.4 and 3.7","## Meta - OS:  Windows Server 2012 Selenium Version: .NET bindings, 3.5.1, IEDriverServer 3.4 / 3.7 Browser:  Internet Explorer Browser Version:  11.0.9600.17416  We recently tried upgrading from Selenium 3.4 to a newer version. After the upgrade, our tests are running considerably slower. After some trial and error, we found that using the previous version of the IEDriverVersion (3.4) restored the tests to their original speed.  The slow-down is roughly 1.5 to 2 times (varies per test). We added some trace logging, and the logfiles have also become much bigger (log files can be provided if useful).  I have checked with versions 3.5, 3.6 and 3.7, which are all affected.  ## Expected Behavior - Tests run with the same speed using IEDriverServer 3.4 or the latest  ## Actual Behavior - Tests run much slower with the latest version  ## Steps to reproduce - Just run the test with either version 3.4 or 3.7 of the IEDriverServer","closed","I-performance,","rhpijnacker","2017-11-07T16:11:55Z","2019-08-16T13:10:05Z"
"","4993","Javascript Exception With IE 11, iedriver 3.6.","## Meta - OS:  Windows 8.1 64 bit  Selenium Version:  3.6.0  Browser:  Internet Explorer 11   ## Expected Behavior - The following javascript code should execute and click on the ""File"" menu in my application. ((JavascriptExecutor)driver).executeScript(""var tab = document.getElementsByTagName(\""table\"")[0];var ele = tab.getElementsByTagName(\""div\"");for(var i = 0; i < ele.length; i++){if(\""File\"" == ele[i].textContent.trim()){ele[i].click();break;}}"");   ## Actual Behavior - It throws the following javascript exception: 2017-11-02 04:39:04 ERROR [main] (WebUtils.java:1122) - Exception occured while Navigation to Menu: File ==> New ==> Cabinet !! org.openqa.selenium.JavascriptException: JavaScript error Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'VM-001', ip: '10.194.38.187', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_151' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=false, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:28093/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=true}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}] Session ID: 5c4f054c-ae24-4363-b179-04ee62df848b 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:522) 	at com.opentext.webtop.utils.WebUtils.navigateToMenu(WebUtils.java:1043) 	at com.opentext.webtop.pageobjects.CabinetsPage.navigateToNewCabinetMenu(CabinetsPage.java:57) 	at com.opentext.webtop.steps.webtop_acceptance_testsuite.acc_create_cabinet.the_user_navigates_to_the_new_cabinet_menu(acc_create_cabinet.java:75) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at cucumber.runtime.Utils$1.call(Utils.java:37) 	at cucumber.runtime.Timeout.timeout(Timeout.java:13) 	at cucumber.runtime.Utils.invoke(Utils.java:31) 	at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38) 	at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37) 	at cucumber.runtime.Runtime.runStep(Runtime.java:299) 	at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44) 	at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39) 	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44) 	at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91) 	at org.junit.runners.Suite.runChild(Suite.java:128) 	at org.junit.runners.Suite.runChild(Suite.java:27) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.ExamplesRunner.run(ExamplesRunner.java:59) 	at org.junit.runners.Suite.runChild(Suite.java:128) 	at org.junit.runners.Suite.runChild(Suite.java:27) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:53) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:93) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:37) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.api.junit.Cucumber.run(Cucumber.java:98) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) 2017-11-02 04:39:04  INFO [main] (acc_create_cabinet.java:124) - Scenario Status: failed 2017-11-02 04:39:04  INFO [main] (acc_create_cabinet.java:125) - Scenario isFailed: true 2017-11-02 04:39:04  INFO [main] (WebUtils.java:2401) - 2017_11_02 04_39_04_AM    @createCabinet @AcceptanceTestSuite   Scenario Outline: Create Cabinet                                                       # webtop_acceptance_testsuite/acc_create_cabinet.feature:17     Given the user login to the application with 'Administrator' 'Password@123'          # acc_create_cabinet.the_user_login_to_the_application_with(String,String)     And the user navigates to the tree node cabinets in browser tree 'Cabinets'          # acc_create_cabinet.the_user_navigates_to_the_tree_node_cabinets_in_browser_tree(String)     And the user navigates to the new cabinet menu                                       # acc_create_cabinet.the_user_navigates_to_the_new_cabinet_menu()       java.lang.AssertionError       	at org.junit.Assert.fail(Assert.java:86)       	at org.junit.Assert.fail(Assert.java:95)       	at com.opentext.webtop.utils.WebUtils.navigateToMenu(WebUtils.java:1124)       	at com.opentext.webtop.pageobjects.CabinetsPage.navigateToNewCabinetMenu(CabinetsPage.java:57)       	at com.opentext.webtop.steps.webtop_acceptance_testsuite.acc_create_cabinet.the_user_navigates_to_the_new_cabinet_menu(acc_create_cabinet.java:75)       	at ?.And the user navigates to the new cabinet menu(webtop_acceptance_testsuite/acc_create_cabinet.feature:8)      When the user creates a new cabinet 'acc_create_cabinet' 'Cabinet (dm_cabinet)'      # acc_create_cabinet.the_user_creates_a_new_cabinet(String,String)     Then verify a new cabinet is created 'acc_create_cabinet'                            # acc_create_cabinet.verify_a_new_cabinet_is_created(String)     Then the user clicks the cabinet name link to check its content 'acc_create_cabinet' # acc_create_cabinet.the_user_clicks_the_cabinet_name_link_to_check_its_content(String)     Then verify the message no items found                                               # acc_create_cabinet.verify_the_message_no_items_found()     And the user logout from the application                                             # acc_create_cabinet.the_user_logout_from_the_application() 2017-11-02 04:39:04  INFO [main] (RunCucumberTest.java:45) - Ran the after 2017-11-02 04:39:09  INFO [main] (CommonLib.java:353) - Task List: iexplore.exe                  1760 RDP-Tcp#6                  2     30,604 K 2017-11-02 04:39:09  INFO [main] (RunCucumberTest.java:69) - The Process 'iexplore.exe' is Running!! 2017-11-02 04:39:12  INFO [main] (RunCucumberTest.java:75) - The Process 'iexplore.exe' is Killed Successfully!!  Failed scenarios: webtop_acceptance_testsuite/acc_create_cabinet.feature:17 # Scenario Outline: Create Cabinet  1 Scenarios (1 failed) 8 Steps (1 failed, 5 skipped, 2 passed) 1m19.990s  java.lang.AssertionError 	at org.junit.Assert.fail(Assert.java:86) 	at org.junit.Assert.fail(Assert.java:95) 	at com.opentext.webtop.utils.WebUtils.navigateToMenu(WebUtils.java:1124) 	at com.opentext.webtop.pageobjects.CabinetsPage.navigateToNewCabinetMenu(CabinetsPage.java:57) 	at com.opentext.webtop.steps.webtop_acceptance_testsuite.acc_create_cabinet.the_user_navigates_to_the_new_cabinet_menu(acc_create_cabinet.java:75) 	at ?.And the user navigates to the new cabinet menu(webtop_acceptance_testsuite/acc_create_cabinet.feature:8)    ## Steps to reproduce -   Try running the following javascript code: ((JavascriptExecutor)driver).executeScript(""var tab = document.getElementsByTagName(\""table\"")[0];var ele = tab.getElementsByTagName(\""div\"");for(var i = 0; i < ele.length; i++){if(\""File\"" == ele[i].textContent.trim()){ele[i].click();break;}}"");","closed","D-IE,","alokarya0","2017-11-02T05:39:01Z","2019-08-16T23:10:01Z"
"","5570","Selenium standalone doesn't launch Chrome but a blank version of Firefox","## Meta - OS:  Windows 8.1  Selenium Version:  standalone-3.10.0  Browser:  Chrome 64  I'm trying to run test from Behat with Selenium to test the JavaScript. I don't believe my error is linked to either ChromeDriver, but more about my configuration or my way to launch the selenium server.  I just can't manage to make Selenium start a Chrome session and run the tests. I also asked on Stack Overflow but didn't have any luck so far.  ## Expected Behavior -  A new Chrome session starts, the tests are getting done, then Chrome stops.  ## Actual Behavior -  A new and blank Firefox window opens up. After 45s, the standalone server stops because nothing answered it. Chrome is never launched.  ## Steps to reproduce -  Here is my behat.yml file:  ``` default:   suites:     default:       contexts:         - SpheriaContext         - Drupal\DrupalExtension\Context\DrupalContext         - Drupal\DrupalExtension\Context\MinkContext   gherkin:      cache: ~   extensions:     Behat\MinkExtension:       base_url: http://www.spheria.int       sessions:         default:           selenium2:             browser: chrome       browser_name: chrome #        default: #          goutte: ~ #        javascript: #          selenium2: #            browser: chrome #            wd_host: 'http://localhost:4444/wd/hub'     Drupal\DrupalExtension:       blackbox: ~ ```  Here is the test I want to run:  ```    @javascript     Scenario: Modification d'un produit         Given I am on the homepage         And I am logged in with ""administrator spheria""         Then I should see ""Tableau de bord""         When I go to ""/admin/view/produit""         Then I should see ""test produit""         When I click ""test produit""         Then the url should match ""/node/[0-9]+$""         When I edit the entity I'm seeing         Then the url should match ""/node/[0-9]+/edit""         When I fill in ""Test produit - edited"" for ""title[0][value]""         And I attach the file ""spheria/features/files/progression.png"" to ""files[field_produit_image_0]""         And I fill in ""progression"" for ""field_produit_image[0][alt]""         And I press ""Enregistrer""         Then the url should match ""/node/[0-9]+$""         And I should see ""Test produit - edited""         And I should see ""Obsèques""         And I should see 1 images         And I should see ""Ce produit est génial pour les clients post-mortem"" ```  And here is how I launch the Selenium standalone server:  ``` java -Dwebdriver.chrome.driver='./chromedriver.exe' -jar selenium-server-standalone-3.10.0.jar ```  The server gets started normally, and when I go to `http://localhost:4444/wd/hub` I can see a page where sessions should be listed, but it always remains empty.  Just in case, here is the Selenium trace when I try a test:  ``` 14:12:52.239 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.10.0', revision: '176b4a9' 14:12:52.239 INFO [GridLauncherV3$1.launch] - Launching a standalone Selenium Server on port 4444 2018-03-06 14:12:52.337:INFO::main: Logging initialized @365ms to org.seleniumhq.jetty9.util.log.StdErrLog 14:12:52.610 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444 14:13:02.286 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browser: firefox, browserName: chrome, ignoreZoomSetting: false, marionette: false, name: Behat feature suite, tags: [64006A38B5DE, PHP 7.0.10]} 14:13:02.286 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.XpiDriverService) ```  Did I forget anything? Should I do in another way?  Thank you in advance","closed","","Drillan767","2018-03-06T13:15:52Z","2019-08-16T11:09:51Z"
"","4911","Unable to emulate captureEntirePageScreenshot on html-runner-3.6.0","## Meta - OS:  Windows 8.1  Selenium Version:  selenium-html-runner-3.6.0.jar  Browser:  chrome 61.0 and firefox 53.0.3   ## Expected Behavior -  Hi, I want to perform a screenshot from selenium-html-runner-3.6.0.jar  ## Actual Behavior - Actually it's work fine with selenium IDE 2.9.1   captureEntirePageScreenshot | C:\Users\jeirgino\Documents\myscreenshot.jpg |  |  but with html runner, I got this error:  oct. 19, 2017 3:20:50 PM org.openqa.selenium.server.htmlrunner.CoreTestCase run INFOS: |captureEntirePageScreenshot | C:\Users\jeirgino\Documents\myscreenshot.jpg |  | 2017-10-19 15:20:50.045:INFO:osjs.AbstractConnector:main: Stopped ServerConnector@1506f20f{HTTP/1.1,[http/1.1]}{0.0.0.0:6804} 2017-10-19 15:20:50.049:INFO:osjsh.ContextHandler:main: Stopped o.s.j.s.h.ContextHandler@7f6f61c8{/tests,null,UNAVAILABLE} 1508419250063   Marionette      INFO    New connections will no longer be accepted [GFX1-]: Receive IPC close with reason=AbnormalShutdown WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.openqa.selenium.os.ProcessUtils (file:/C:/Users/jeirgino/Desktop/Edito/selenium-html-runner-3.6.0.jar) to field java.lang.ProcessImpl.handle WARNING: Please consider reporting this to the maintainers of org.openqa.selenium.os.ProcessUtils WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release oct. 19, 2017 3:20:51 PM org.openqa.selenium.server.htmlrunner.HTMLLauncher mainInt AVERTISSEMENT: Test of browser failed: *firefox org.openqa.selenium.server.htmlrunner.CoreRunnerError: Unable to emulate captureEntirePageScreenshot [C:\Users\jeirgino\Documents\myscreenshot.jpg, ]         at org.openqa.selenium.server.htmlrunner.ReflectivelyDiscoveredSteps.invokeMethod(ReflectivelyDiscoveredSteps.java:323)         at org.openqa.selenium.server.htmlrunner.ReflectivelyDiscoveredSteps.lambda$null$1(ReflectivelyDiscoveredSteps.java:74)         at org.openqa.selenium.server.htmlrunner.CoreTestCase$LoggableStep.execute(CoreTestCase.java:170)         at org.openqa.selenium.server.htmlrunner.NextStepDecorator.evaluate(NextStepDecorator.java:46)         at org.openqa.selenium.server.htmlrunner.CoreTestCase.run(CoreTestCase.java:71)         at org.openqa.selenium.server.htmlrunner.CoreTestSuite.run(CoreTestSuite.java:73)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.runHTMLSuite(HTMLLauncher.java:118)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.mainInt(HTMLLauncher.java:245)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.main(HTMLLauncher.java:273)  ## Steps to reproduce - java -jar selenium-html-runner-3.6.0.jar -htmlSuite *firefox http://myurl.com testSuite.html log.html -timeout 15   Anyone can help me please ?","closed","C-htmlrunner,","jeirgino","2017-10-19T14:05:44Z","2019-08-15T10:09:35Z"
"","5650","IeDriver do not scroll into element","## Meta - OS:  Windows 7/10 Selenium Version:  Selenium 3.11.1.1 Browser:  Internet Explorer 11  The Ie driver does not scroll into view element anymore (Removed GetLocationOnceScrolledIntoView from InputManager.cpp).  It seems linked to W3C compliant, but I really do not understand this. Internet Explorer will never evolve and the new feature has not applied into the other drivers. Since 3.5.x they are many regressions that make the test between Ie and the other browsers not compatible. We have to update all our test by adding some if browser.equals(...) to be able to run the tests.  Also the scripts may don't work if we change the resolution!  Browser Version:  Ie 11 (Win 64b)  ## Expected Behavior - If a web element is outside the view, the precedents versions scroll into it.  ## Actual Behavior - Now we have an exception MoveTargetOutOfBoundsException  ## Steps to reproduce - You can use the tests create by g04k4 (selenium-tests.zip) From [https://github.com/SeleniumHQ/selenium/issues/5024](url)","closed","R-awaiting answer,","Nawakator","2018-03-21T07:39:25Z","2019-08-16T06:09:55Z"
"","5687","Proxy is not enabled for Internet Explorer when ie.usePerProcessProxy is true","## Meta - OS:  Windows 7, Windows 10  Selenium Version:  3.x (had a chance to reproduce in 3.7.1, 3.11)  Browser:  Internet Explorer   Browser Version:  11.0.9600.18952CO, 11.966.15063.0CO   ## Expected Behavior - For enabled ie.usePerProcessProxy the proxy is used for current IE browser process ## Actual Behavior - Proxy is ignored and is not used by current IE browser proxy at all when ie.usePerProcessProxy is true. ## Steps to reproduce - There is simple java code using BrowserMobProxyServer  ``` import org.openqa.selenium.PageLoadStrategy; import org.openqa.selenium.Proxy; import org.openqa.selenium.UnexpectedAlertBehaviour; import org.openqa.selenium.WebDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.ie.InternetExplorerOptions; import org.openqa.selenium.internal.ElementScrollBehavior;  import net.lightbody.bmp.BrowserMobProxy; import net.lightbody.bmp.BrowserMobProxyServer; import net.lightbody.bmp.client.ClientUtil;  public class IeProxy {     private static BrowserMobProxy proxyServer = new BrowserMobProxyServer();      public static void main(String[] args) throws InterruptedException {         Proxy proxy = getProxy();         InternetExplorerOptions internetExplorerOptions = new InternetExplorerOptions();         internetExplorerOptions             .setProxy(proxy)             .requireWindowFocus().usePerProcessProxy().enableNativeEvents()             .introduceFlakinessByIgnoringSecurityDomains().ignoreZoomSettings()             .setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.ACCEPT)             .enablePersistentHovering().setPageLoadStrategy(PageLoadStrategy.EAGER)             .elementScrollTo(ElementScrollBehavior.TOP).setCapability(InternetExplorerDriver.SILENT, true);          WebDriver driver = new InternetExplorerDriver(internetExplorerOptions);         driver.get(""http://google.com"");          Thread.sleep(5000);          // stopping driver and proxy         driver.close();         driver.quit();         proxyServer.abort();     }      private static Proxy getProxy() {         proxyServer.setTrustAllServers(true);         proxyServer.start();          return ClientUtil.createSeleniumProxy(proxyServer);     } } ```  If do not call `usePerProcessProxy()` then it means we use system proxy. And on the loaded page we will see expected behavior  ![expected](https://user-images.githubusercontent.com/19341020/37957655-2e032bb2-31b7-11e8-9bc5-8db7453e5846.PNG)  If to call `usePerProcessProxy()` then proxy is ignored at all. And unexpected and actual behavior for the loaded page is  ![actual](https://user-images.githubusercontent.com/19341020/37957792-8485b87e-31b7-11e8-92ce-17bebe8edfec.PNG)  So for `usePerProcessProxy()` we expect to see  ![expected](https://user-images.githubusercontent.com/19341020/37957822-983e67bc-31b7-11e8-9c75-7d5ce7436a88.PNG) for the `driver.get(""http://google.com"");`   Maven dependencies: ```                      org.seleniumhq.selenium             selenium-java             3.11.0                                       net.lightbody.bmp             browsermob-core             2.1.5          ```  Related issues: https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/8257","closed","","beluha","2018-03-27T09:12:21Z","2019-08-16T08:09:53Z"
"","5631","Grid node leaves TCP connections to ChromeDriver open causing future tests to fail with the ""Connection timed out"" exception","## Meta - OS:  Windows 7, 10, Server 2012 R2 Selenium Version: 3.8.1 and earlier; 3.9.0-3.11.0 with Apache HttpClient only Browser: Chrome Browser Version: any  When a Selenium Grid node sends the ""POST /session"" HTTP request to a ChromeDriver instance, ChromeDriver closes the TCP connection used for the request after responding, but the Grid node leaves it open even after that ChromeDriver instance terminates. Below is a screenshot that demonstrates the issue (ChromeDriver was listening on port 34755).  ![image](https://user-images.githubusercontent.com/7848534/37533670-dd2dcfae-2918-11e8-99a5-11594a1a78e3.png)  I noticed that the Grid node only closes the connection when it starts another ChromeDriver that listens on the same port. The issue only occurs on Windows if the connection stays in that half-closed state for more than 2 hours and 20 minutes. Another condition is the Grid node should start a new ChromeDriver instance listening on the same port as the old one and also attempt to establish a connection to it using the same source port. In the example above, it would be ports 34755 and 55990. If all these conditions are met, the connect attempt fails with the ""Connection timed out: connect"" exception and the Selenium test fails producing a stack trace like in https://github.com/SeleniumHQ/selenium/issues/5459.  ## Expected Behavior - Tests on Grid run without the ""Connection timed out"" exception when the node tries to connect to ChromeDriver running on localhost.  ## Actual Behavior - Tests on Grid sometimes fail with the ""Connection timed out"" exception.  ## Steps to reproduce - This issue is hard to reproduce because the probability of the node to reuse the same set of ports is small. You just need to run a lot of tests and wait many hours or even days. I wrote a small program that simulates this behavior of the node and can reproduce the same error in two and a half hours. It makes only a single ""/shutdown"" request to ChromeDriver for simplicity.  ``` import java.io.BufferedReader; import java.io.BufferedWriter; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStreamWriter; import java.net.InetAddress; import java.net.Socket;  public class ChromeDriverConnectionTimedOut { 	static void useChromeDriver() throws IOException, InterruptedException { 		// Start a new ChromeDriver instance 		Runtime.getRuntime().exec(""chromedriver.exe --port=10000""); 		// Wait for ChromeDriver to start 		Thread.sleep(1000); 		// Send any command, like shutdown is this case, and leave the socket open 		// for at least 2 hours 20 minutes 		Socket socket = new Socket(""localhost"", 10000, InetAddress.getByName(""localhost""), 20000); 		BufferedWriter out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), ""UTF8"")); 		BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream(), ""UTF8"")); 		System.out.println(""Sending a request""); 		out.write(""GET /shutdown HTTP/1.1\r\n""); 		out.write(""User-Agent: Java/1.8.0_162\r\n""); 		out.write(""Host: localhost:10000\r\n""); 		out.write(""Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\r\n""); 		out.write(""Connection: close\r\n\r\n""); 		out.flush(); 		String responseLine; 		StringBuilder response = new StringBuilder(); 		while ((responseLine = in.readLine()) != null) { 			if (!responseLine.isEmpty()) response.append(""\n\t"" + responseLine); 		} 		System.out.println(""Reseived the response "" + response); 		// Wait 2.5 hours before closing the socket 		Thread.sleep(150 * 60000); 		socket.close(); 		System.out.println(""Closed the socket""); 	} 	public static void main(String[] args) throws IOException, InterruptedException { 		System.out.println(""Using ChromeDriver the first time""); 		useChromeDriver(); 		System.out.println(""Using ChromeDriver the second time""); 		useChromeDriver(); 	} } ```  Here's the output you'll see if you run it  ``` Using ChromeDriver the first time Sending a request Reseived the response  	HTTP/1.1 200 OK 	Content-Length:40 	Content-Type:application/json; charset=utf-8 	Connection:close 	{""sessionId"":"""",""status"":0,""value"":null} Closed the socket Using ChromeDriver the second time Exception in thread ""main"" java.net.ConnectException: Connection timed out: connect 	at java.net.DualStackPlainSocketImpl.connect0(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at java.net.Socket.connect(Socket.java:538) 	at java.net.Socket.(Socket.java:434) 	at java.net.Socket.(Socket.java:286) 	at ChromeDriverConnectionTimedOut.useChromeDriver(ChromeDriverConnectionTimedOut.java:17) 	at ChromeDriverConnectionTimedOut.main(ChromeDriverConnectionTimedOut.java:42) ```","closed","C-grid,","JohnA2","2018-03-16T17:07:07Z","2019-08-16T07:09:40Z"
"","5805","ElementClickInterceptedException: Element not clickable","## Meta - OS:  Windows 7, 10, 2012 Servers  Selenium Version:  3.11.0  Browser:  IE    Browser Version:  11.371.16299.0   Driver: IE Driver 3.11.1 , 3.11.0  ## Expected Behavior - When we call selenium click function, then webdriver should perform click operation on the element in IE browser.  ## Actual Behavior - The click operation fails with exception ""Element is not clickable"". This issue is observed in IE Driver 3.11.0 and 3.11.1 . The same click operation works with older version of IEDriver(3.10).   ## Steps to reproduce - Uncheck ""Enable Protected Mode"" for all Security zones of IE. Turn off pop up blocker in IE.  Run the attached java code.   The java code tries to navigate to ""https://in.reuters.com/"" and click on ""MARKETS"" hyperlink.  ` System.setProperty(""webdriver.ie.driver"", ""C:\\IEDriverServer_Win32_3.11.0\\IEDriverServer.exe""); WebDriver driver = new InternetExplorerDriver(); driver.get(""https://in.reuters.com/""); driver.findElement(By.xpath(""//a[@href='/finance/markets']"")).click(); `  The click operation fails with below exception log.    _Exception in thread ""main"" org.openqa.selenium.ElementClickInterceptedException: Element not clickable at point (262,74). Other element would receive the click: `                     ????                     Argentina                 ` Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z' System info: host: 'L37428WIN', ip: '192.168.13.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:28840/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}} Session ID: b34a33ec-5f14-4913-a40f-e3b9ff9a984d 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstan  ce(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83) 	at IETest.main(IETest.java:12)_","closed","","KRuptPanda","2018-04-19T09:46:03Z","2019-08-16T05:09:43Z"
"","5758","Should use HTTP keep alive to avoid port exhaustion","## Meta - OS:  Windows 7, 10 Selenium Version:  3.8.1 Browser:  Chrome Browser Version:  65.0.3325.181 (64-bit) Node.js: 8.11.1  ## Expected Behavior - During the test, TCP connection should be reused  ## Actual Behavior - Each WebDriver command will create a new TCP connection to ChromeDriver  ## Steps to reproduce - ```JavaScript await browser.get('https://www.google.com/'); for (let i=0; i","closed","C-nodejs,","awarecan","2018-04-11T01:18:16Z","2019-08-15T02:09:50Z"
"","5025","Remote server - failure to get session on account of NullPointerException in org.openqa.selenium.remote.server.handler.NewSession.handle","## Meta - OS:  Windows 7 Professional 64-bit  Selenium Version:  3.7.1  Browser:  Chrome  Browser Version:  62.0.3202.89 (64-bit)  Chrome Driver Version: 2.33.506120  ## Expected Behavior - 1. Create jetty server and embed remote server 2. Create RemoteWebDriver instance and get session 3. Stop jetty server ## Actual Behavior - 1. Create jetty server and embed remote server 2. Creates RemoteWebDriver but throws a NullPointerException on line 66 of org.openqa.selenium.remote.server.handler.NewSession.handle when trying to get a new session.  I'm confident that it is not a ChromeDriver issue as it works perfectly in isolation. ## Steps to reproduce - 1. Download the attached zip containing the maven project 'selenium-test'  - [selenium-test.zip](https://github.com/SeleniumHQ/selenium/files/1450729/selenium-test.zip) 2. Import project into favoured IDE.  3. Run the junit test com.clearswift.selenium_test.TestRemoteServer.java 4. The exception should be thrown.  N.B. The test will leave residual ChromeDriver.exe's running in the background if run multiple times.  I did try to prevent this but the nature of the exception being thrown appeared to stop me from closing the instance.","closed","C-java,","SlyAtBest","2017-11-07T16:26:49Z","2019-08-17T03:09:41Z"
"","5009","UnsupportedCommandException: mouseMoveTo on Selenium 3.6.0 IE browser","## Meta - OS:  Windows 7 Enterprise (64 bit) Selenium Version:   3.6.0 Browser:   Internet Explorer  Browser Version:   IE10 (IEDriverServer 3.6.0) using 32 bit  ## Expected Behavior - mouseMoveTo of Actions API should be supported on IE10 ## Actual Behavior - Fails to perform mouseMoveTo. Following is the log: ``` Caused by: org.openqa.selenium.UnsupportedCommandException: mouseMoveTo Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:222) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:119) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35) 	at org.openqa.selenium.remote.RemoteMouse.mouseMove(RemoteMouse.java:89) 	at org.openqa.selenium.interactions.MoveMouseAction.perform(MoveMouseAction.java:43) 	at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:36) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:641) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:594) ```  ## Steps to reproduce - 1. In the below code, finding a webElement 2. Using the actions API and perform move to the element ``` try{       WebElement el = driver.findElement(by);       Actions builder = new Actions(driver);       builder.moveToElement(el).perform(); }catch(Exception ex){       logger.error(""Exception: {}"", ex); } ``` 3. Observe the exception: ``` Exception: org.openqa.selenium.UnsupportedCommandException: mouseMoveTo ```","closed","D-IE,","Nikunj1703","2017-11-03T16:46:25Z","2019-08-16T19:10:03Z"
"","5176","IEDriverServer 3.7.0 & 3.8.0 - not possible to enter ""@"" (email) symbol","## Meta - OS:  Windows 7 64bit  Selenium Version:  3.8.0 **C#** IEDriverServer 3.8.0 64bit Webdriver 3.8.0  Browser:  IE     Browser Version:  11.0.9600.18837 64bit   ## Expected Behavior -  string contains @ symbol (test@test.com) ## Actual Behavior -  string contains ""2"" instead of ""@"" symbol (test2test.com) ## Steps to reproduce -   driver.FindElement(By.Id(""somelocator"")).SendKeys(""test@test.com"");  NOTE: Ran same test with IEDriverServer 3.4.0 and there was no such issue","closed","D-IE,","sergmal","2017-12-06T09:36:37Z","2019-08-16T22:09:36Z"
"","5381","Geckodriver TakesScreenshot class method getScreenshotAs() creates broken image for page with opened local image file in Firefox","## Meta - OS:  Windows 7 64-bit  Selenium Version:  3.7.1, 3.8.1  Browser:  Firefox   Browser Version:  57.0.4   ## Expected Behavior - Image with browser page content ## Actual Behavior - An empty/broken image ## Steps to reproduce -  1. There is Moon.jpg file in attach. ![moon](https://user-images.githubusercontent.com/19341020/35219397-7c2dcd80-ff83-11e7-99e6-53f76e844a77.jpg) 2. Open this file through code with help of geckodriver and FirefoxDriver. 3. Take screenshot with help of TakesScreenshot getScreenshotAs() method. 4. Validate captured image - just open it.  Or execute the following Java code to reproduce provided steps. ## Java code import java.io.File; import java.io.IOException;  import org.openqa.selenium.OutputType; import org.openqa.selenium.TakesScreenshot; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile;  public class BrowserCapture {     public static void main(String[] args) throws IOException {         WebDriver driver = new FirefoxDriver(new FirefoxOptions().setProfile(new FirefoxProfile()));         driver.get(""file:///C:/temp/Moon.jpg"");         File scrFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);     } } ## Verify Open created image file ""scrFile"". Windows image viewer says it is empty, FF browser says it has errors.  ## Note Chrome driver and IE Driver server don't have such issue.","closed","","beluha","2018-01-22T11:59:16Z","2019-08-16T14:09:51Z"
"","5256","While using pageLoadTimeout it fails to navigate to URL","## Meta - OS:  Windows 7 (64-bit)  Selenium Version:  3.8.1 (Webdriver) - Java Bindings  Browser:  Firefox (57.0.2) Gecko driver version: 0.19.1   Browser Version:  Firefox (57.0.2)   ## Expected Behavior - When we try to set pageLoadTimeouts, the browser should wait till the set timeout while navigating to URL.  ## Actual Behavior - It fails to load the web application. It only launches the browser and fails with exception. if we don't set the pageLoadTimeout then it successfully loads the browser.  ## Steps to reproduce -  JUnit test Case: ``` @Test 	public void test() { 		System.setProperty(""webdriver.gecko.driver"", 				""path to geckodriver.exe""); 		WebDriver browser = new FirefoxDriver(); 		browser.manage().timeouts().pageLoadTimeout(10, TimeUnit.SECONDS); 		browser.get(""https://www.snapdeal.com/""); 		System.out.println(""Wait""); 	} ``` If we don't set pageLoadTimeout then it successfully loads the web application. But if set the pageLoadTimeout then it fails with below exception:  ``` org.openqa.selenium.WebDriverException: timeouts Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z' System info: host: 'MRUNAL-LAPTOP', ip: '192.168.0.100', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_131' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 57.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 1128, moz:profile: C:\Users\\AppData\Loc..., moz:webdriverClick: false, pageLoadStrategy: normal, platform: XP, platformName: XP, platformVersion: 6.1, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}} Session ID: 9cff1de6-be3a-4b8b-80fe-600b911e81fb 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:847) 	at runner.FirefoxTest.test(FirefoxTest.java:16) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)   ``` ## Log ``` 1514187158718	geckodriver	INFO	Listening on 127.0.0.1:2610 1514187159234	geckodriver::marionette	INFO	Starting browser C:\Program Files\Mozilla Firefox\firefox.exe with args [""-marionette""] 1514187161306	Marionette	INFO	Enabled via --marionette Unable to read VR Path Registry from C:\Users\\AppData\Local\openvr\openvrpaths.vrpath [Parent 1128, Gecko_IOThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 Unable to read VR Path Registry from C:\Users\\AppData\Local\openvr\openvrpaths.vrpath [Child 2604, Chrome_ChildThread] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 1514187170623	Marionette	INFO	Listening on port 53942 1514187170979	Marionette	WARN	TLS certificate errors will be ignored for this session 1514187174692	Marionette	DEBUG	Register listener.js for window 4294967297 Dec 25, 2017 1:02:54 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Dec 25, 2017 1:02:55 PM org.openqa.selenium.remote.ErrorCodes toStatus INFO: HTTP Status: '404' -> incorrect JSON status mapping for 'unknown error' (500 expected)  ```","closed","D-firefox,","mrunalgosar","2017-12-25T07:44:26Z","2019-08-16T19:09:38Z"
"","5348","Strange behavior regarding frozen preferences","## Meta - OS:  Windows 7   Selenium Version:  3.8.1  Browser:  Firefox (geckodriver)   Browser Version:  57.0.4 (64 bits)   ## Expected Behavior -  browser.link.open_newwindow preference always set to 2.  ## Actual Behavior -  When using a custom profile with browser.link.open_newwindow preference set to 3, Selenium will automatically change the value to 2, as expected from [webdriver.json](https://github.com/SeleniumHQ/selenium/blob/master/javascript/firefox-driver/webdriver.json#L10) frozen preferences. However, if I do not set a profile, the preference will have value 3.  ## Steps to reproduce -   ### Selenium automatically setting value to 2:  FirefoxProfile profile = new FirefoxProfile(new File(""PATH TO PROFILE"")); FirefoxOptions options = new FirefoxOptions().setProfile(profile); WebDriver driver = new FirefoxDriver(options);  ### Value set to 3:  WebDriver driver = new FirefoxDriver();","closed","","fbergamini","2018-01-17T13:47:52Z","2019-08-16T17:09:48Z"
"","5654","OpenQA.Selenium.Support.UI Namespace does not contain WebDriverWait class","## Meta - OS:  Windows 7   Selenium Version:  3.11.0  Browser:  N/A   Browser Version:  N/A   ## Expected Behavior - Per the documentation OpenQA.Selenium.Support.UI Namespace should contain WebDriverWait class. ## Actual Behavior - WebDriverWait class is not present in the visual studio class inspector and the [github source code](https://github.com/SeleniumHQ/selenium/tree/master/dotnet/src/support/UI) (Result images at bottom of issue)  ## Steps to reproduce - Install Selenium.Support by Selenium Committers NuGet v3.11.0 and inspect the referenced assembly using Visual Studios class view.  Official support ui namespace documentation: ![official support ui namespace documentation](https://user-images.githubusercontent.com/22691751/37716549-c81377ae-2cec-11e8-9f54-e2ec2d567f7c.PNG) Official webdriverwait class documentation: ![official webdriverwait class documentation](https://user-images.githubusercontent.com/22691751/37716554-cb1737c4-2cec-11e8-9cfb-5ee0f806114e.PNG) Selenium github source code - support ui namespace classes: ![selenium github source code - support ui namespace classes](https://user-images.githubusercontent.com/22691751/37716557-ccc8698a-2cec-11e8-8fb3-0b88ff70b3d2.PNG) Missing webdriverwait class in openqa selenium support ui - visual studio class view: ![missing webdriverwait class in openqa selenium support ui](https://user-images.githubusercontent.com/22691751/37716563-ce1636e6-2cec-11e8-9b47-d42c8af610c9.PNG)","closed","","MDCCXIII","2018-03-21T14:55:38Z","2019-08-16T09:09:47Z"
"","5340","IllegalArgumentException on Hub using Chrome","## Meta - OS:  Windows 7 Selenium Version: 3.8.1 Browser:  Chrome  With the following setup I am getting an Exception on the hub  Setup details and code are below.   Grid Config : HUB: selenium-server-standalone-3.8.1 command line :  java -jar selenium-server-standalone-3.8.1.jar -role hub -hubConfig hubconfig.json  Config file:  { ""port"": 8100, ""newSessionWaitTimeout"": -1, ""servlets"" : [], ""withoutServlets"": [], ""custom"": {}, ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"", ""registryClass"": ""org.openqa.grid.internal.DefaultGridRegistry"", ""throwOnCapabilityNotPresent"": true, ""cleanUpCycle"": 5000, ""role"": ""hub"", ""debug"": false, ""browserTimeout"": 0, ""timeout"": 1800 }  Node:  ChromeDriver : v 2.34.522940 selenium-server-standalone-3.8.1  command line : java -Dwebdriver.gecko.driver=""pathtogecko\geckodriver.exe"" -jar selenium-server-standalone-3.8.1.jar -role node -nodeConfig nodeconfig.json  Browsers: Chrome : 63.0.3239.132 Config:  { ""capabilities"": [ { ""browserName"": ""firefox"", ""marionette"": true, ""maxInstances"": 2, ""seleniumProtocol"": ""WebDriver"" }, { ""browserName"": ""chrome"", ""maxInstances"": 2, ""seleniumProtocol"": ""WebDriver"" } ], ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"", ""maxSession"": 5, ""port"": 5555, ""register"": true, ""registerCycle"": 5000, ""hub"": ""http://10.24x.14x.xxx:8100"", ""nodeStatusCheckTimeout"": 5000, ""nodePolling"": 5000, ""role"": ""node"", ""unregisterIfStillDownAfter"": 60000, ""downPollingLimit"": 2, ""debug"": false, ""servlets"" : [], ""withoutServlets"": [], ""custom"": {} } Code: Chrome: try { ChromeOptions chromeoptions = new ChromeOptions(); chromeoptions.AddArgument(""--start-maximized""); chromeoptions.AddArgument(""incognito""); chromeoptions.AddUserProfilePreference(""credentials_enable_service"", false); chromeoptions.AddUserProfilePreference(""profile.password_manager_enabled"", false); _driver = new RemoteWebDriver(new Uri(hub_url),chromeoptions); _driver.Manage().Cookies.DeleteAllCookies(); _driver.FileDetector = new LocalFileDetector(); } catch (Exception e) { Console.Write(e.Message); }  Errors  Chrome:  Actual Behaviour:  The following Exception appears , java.lang.IllegalArgumentException: Illegal key values seen in w3c capabilities: [chromeOptions, javascriptEnabled]  , on the hub.","closed","C-dotnet,","AidanMcD","2018-01-15T08:21:11Z","2019-08-16T17:09:43Z"
"","5099","With Selenium 3.4.0 + geckodriver 0.16.0 + Firefox 52.1.0  combination, browser is ""Not Responding"" sometimes","## Meta - OS:  Windows 7 Selenium Version:  WebDriver 3.4.0 Driver Version:  geckodriver 0.16.0 win-32  Browser:  Firefox: 52.1.0(32-bit)  Issue: While running the Automation script browser is ""Not Responding"" sometimes. Please some let m know if it is an issue. if not please suggest the perfect  combination of Selenium+Firefox browser+geckodriver version. Thanks in Advance...!!!!","closed","","RoupRanjan0308","2017-11-22T07:17:11Z","2019-08-17T01:09:43Z"
"","5508","http async error","## Meta - OS:  Windows 7 Selenium Version:  4.0.0.1alpha Browser:  All Browsers  ## Expected Behavior - Start Browser Instance  ## Actual Behavior -  \node_modules\selenium-webdriver\lib\http.js:454   async execute(command) {         ^^^^^^^ SyntaxError: Unexpected identifier     at Object.exports.runInThisContext (vm.js:76:16)     at Module._compile (module.js:528:28)     at Object.Module._extensions..js (module.js:565:10)     at Module.load (module.js:473:32)     at tryModuleLoad (module.js:432:12)     at Function.Module._load (module.js:424:3)     at Module.require (module.js:483:17)     at require (internal/module.js:20:19)     at Object. (D:\private\new-relic-synthetics\node_modules\selenium-webdriver\http\index.js:29:17)     at Module._compile (module.js:556:32)  ## Steps to reproduce -  Simple .get even doesn't work on the latest version.","closed","C-nodejs,","sarnathkj","2018-02-18T11:39:16Z","2019-08-16T13:09:42Z"
"","5124","UnsupportedOperationException when using advanced user interactions on wrapped HtmlUnitDriver","## Meta - OS:  Windows 7 Selenium Version:  3.7.1 Browser:  HtmlUnit Browser Version:  2.28.2  ## Expected Behavior - when wrapping an `HtmlUnitDriver` inside an `EventFiringWebDriver`, advanced user interactions can be performed without exceptions ## Actual Behavior - an `UnsupportedOperationException` is thrown every time  `EventFiringWebDriver` throws this Exception, because the `HtmlUnitDriver` does not implement the `Interactive` interface; the `BuildAction` only catches `UnsupportedCommandException`s and therefore doesn't use the fallback option => is this meant to work this way and how do I cope with this? ## Steps to reproduce - - wrapping an `HtmlUnitDriver` inside an `EventFiringWebDriver` - performing advanced user interactions  ``` HtmlUnitDriver htmlUnitDriver = new HtmlUnitDriver(); WebDriver driver = new EventFiringWebDriver(htmlUnitDriver);  Actions builder = new Actions(driver); builder.doubleClick().perform(); ```","closed","","lklonowski","2017-11-27T08:17:05Z","2019-08-17T00:09:59Z"
"","5526","sendKeys is very slow in remote node for IE driver 3.8","## Meta - OS:  Windows 7 Selenium Version:  3.7.0(standalone driver) Browser:  Internet explorer 11(driver version 3.8) Tests are running very slow for IE browser in remote node.The text are typing very slow in text field(both 32 bit and 64 bit).It was fast for 3.4 Does this issue fixed in 3.9 standalone server? Is there any specific capability needs to added?","closed","","Elakkiyaab","2018-02-22T11:12:11Z","2019-08-16T13:09:36Z"
"","5065","chrome_options download.default_directory","## Meta - OS:  Windows 7 Selenium Version:  3.7.0 Browser: Chrome Browser Version:  57.0.2987.133 (Official Build) (32-bit)  ## Expected Behavior - I expect it to download and save the file to the specified location. It used to work just fine, but since I updated selenium to the new version; This doesn't work anymore.  ## Actual Behavior - It keeps saving the file to the default directory ""C:/Users/Me/Downloads/""  ## Steps to reproduce -  conda version 4.3.30 python 3.6.3 update selenium package version 3.6.0 >>> 3.7.0  ```python #----------------------------------------------------------- from selenium import webdriver  save_to = ""C:/Users/Me/Desktop/"" chrome_options = webdriver.ChromeOptions() prefs = { 'download':{'default_directory': save_to,                       'directory_upgrade': True,                       'extensions_to_open':''}} chrome_options.add_experimental_option('prefs', prefs)						 driver = webdriver.Chrome(chromedriver_path, chrome_options) #------------------------------------------------------------ ```","closed","","Jawad-As","2017-11-16T14:52:58Z","2019-08-17T02:09:47Z"
"","5171","Disable same origin policy in Chrome","## Meta - OS:  Windows 7 Selenium Version:  3.6.0 Browser: Chrome 62.0.3202.94  Browser Version:  62.0.3202.94  (64-bit)   ## Expected Behavior  --disable-web-security in `ChromeOption `disable same origin policy  ## Actual Behavior  An error has been received in browser console: `Uncaught DOMException: Blocked a frame with origin """" from accessing a cross-origin frame.`  ## Steps to reproduce  Initializing the browser:      ``` private WebDriver initDriver(){         String workingDir = System.getProperty(""user.dir"");         System.setProperty(""webdriver.chrome.driver"", workingDir + ""\\drivers\\chromedriver.exe"");          DesiredCapabilities cap = DesiredCapabilities.chrome();         ChromeOptions options = new ChromeOptions();         options.addArguments(""--test-type"");         options.addArguments(""--start-maximized"");         options.addArguments(""--disable-web-security"");         options.addArguments(""--user-data-dir=D:\\chrome"");         options.addArguments(""--allow-file-access-from-files"");         options.addArguments(""--allow-running-insecure-content"");         options.addArguments(""--allow-cross-origin-auth-prompt"");         options.addArguments(""--allow-file-access"");                  cap.setCapability(ChromeOptions.CAPABILITY, options);         return new ChromeDriver(cap); } ``` Steps in test method:  ``` driver.get(url1); ((JavascriptExecutor)getDriver()).executeScript(""window.open();""); tabs = new ArrayList (getDriver().getWindowHandles()); getDriver().switchTo().window(tabs.get(tabs.size()-1)); getDriver().get(url2); ```","closed","","ChibisBigman","2017-12-05T11:36:04Z","2019-08-16T22:09:43Z"
"","4982","Incomplete error stack when disabling the WebDriverJS promise manager (USE_PROMISE_MANAGER=false)","## Meta - OS:  Windows 7 Selenium Version:  3.6.0 Browser:  Chrome Browser Version:  62.0.3202.75 (Official Build) (64-bit)  ## Expected Behavior - (The examples are based on the new possibility to disable the WebDriverJS promise manager as described in https://github.com/SeleniumHQ/selenium/issues/2969)  When running with the promise manager and a promise gets rejected a complete error stack including the actual code line that caused the problem is shown as expected:  ```cmd D:\promise-manager>npm run test-promise  > example@0.0.0 test-promise D:\promise-manager > mocha test/promise.js    selenium-webdriver using promise manager     √ works as expected  DevTools listening on ws://127.0.0.1:12879/devtools/browser/bb9b92f9-d19e-409a-843e-4f12e6071870     1) shows the error stack when failing [1030/213645.004:ERROR:angle_platform_impl.cc(46)] rx::SwapChain11::present(925): Present failed: the D3D11 device was removed, HRESULT: 0x887A0020 [1030/213645.006:ERROR:gles2_cmd_decoder.cc(15905)] Context lost because SwapBuffers failed. [1030/213645.008:ERROR:gles2_cmd_decoder.cc(16248)] Onscreen context lost via ARB/EXT_robustness. Reset status = GL_UNKNOWN_CONTEXT_RESET_KHR     1 passing (5s)   1 failing    1) selenium-webdriver using promise manager        shows the error stack when failing:      NoSuchElementError: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""*[name=""thisdoesnotexist""]""}   (Session info: chrome=62.0.3202.75)   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64)       at Object.checkLegacyResponse (D:\promise-manager\node_modules\selenium-webdriver\lib\error.js:546:15)       at parseHttpResponse (D:\promise-manager\node_modules\selenium-webdriver\lib\http.js:509:13)       at doSend.then.response (D:\promise-manager\node_modules\selenium-webdriver\lib\http.js:441:30)       at        at process._tickCallback (internal/process/next_tick.js:188:7)   From: Task: WebDriver.findElement(By(css selector, *[name=""thisdoesnotexist""]))       at thenableWebDriverProxy.schedule (D:\promise-manager\node_modules\selenium-webdriver\lib\webdriver.js:807:17)       at thenableWebDriverProxy.findElement (D:\promise-manager\node_modules\selenium-webdriver\lib\webdriver.js:1014:17)       at Context.it (D:\promise-manager\test\promise.js:26:10)       at callFnAsync (D:\promise-manager\node_modules\mocha\lib\runnable.js:377:21)       at Test.Runnable.run (D:\promise-manager\node_modules\mocha\lib\runnable.js:324:7)       at Runner.runTest (D:\promise-manager\node_modules\mocha\lib\runner.js:442:10)       at D:\promise-manager\node_modules\mocha\lib\runner.js:560:12       at next (D:\promise-manager\node_modules\mocha\lib\runner.js:356:14)       at D:\promise-manager\node_modules\mocha\lib\runner.js:366:7       at next (D:\promise-manager\node_modules\mocha\lib\runner.js:290:14)       at Immediate._onImmediate (D:\promise-manager\node_modules\mocha\lib\runner.js:334:5)       at runCallback (timers.js:785:20)       at tryOnImmediate (timers.js:747:5)       at processImmediate [as _immediateCallback] (timers.js:718:5) ```  ## Actual Behavior -  When running without the promise manager (`promise.USE_PROMISE_MANAGER = false`) the same code rewritten with async/await only reports a partial stack trace and does not include the actual code line causing the problem:  ```cmd D:\promise-manager>npm run test-async  > example@0.0.0 test-async D:\promise-manager > mocha test/async.js      selenium-webdriver without promise manager  DevTools listening on ws://127.0.0.1:12497/devtools/browser/c61c0eb4-1efe-4a4e-b60a-665229b68044     √ works as expected (2066ms)     1) shows the error stack when failing     1 passing (4s)   1 failing    1) selenium-webdriver without promise manager        shows the error stack when failing:      NoSuchElementError: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""*[name=""thisdoesnotexist""]""}   (Session info: chrome=62.0.3202.75)   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64)       at Object.checkLegacyResponse (D:\promise-manager\node_modules\selenium-webdriver\lib\error.js:546:15)       at parseHttpResponse (D:\promise-manager\node_modules\selenium-webdriver\lib\http.js:509:13)       at doSend.then.response (D:\promise-manager\node_modules\selenium-webdriver\lib\http.js:441:30)       at        at process._tickCallback (internal/process/next_tick.js:188:7) ```  ## Steps to reproduce - After installing the dependencies just run `npm run test-promise` for the example using the promise manager and `npm run test-async` for the example with the disabled promise manager.  [promise-manager.zip](https://github.com/SeleniumHQ/selenium/files/1428723/promise-manager.zip)","closed","C-nodejs,","doberkofler","2017-10-30T20:51:01Z","2019-08-17T03:10:03Z"
"","5804","ElementNotVisible error for visible elements in IE, When Parent element size is 0px","## Meta - OS:  Windows 7 Selenium Version:  3.11.0  Browser:  Internet Explorer   Browser Version:  11 (32 bit)   ## Expected Behavior -  Regardless of the visibility of the parent elements in the DOM, A visible, interactable element should be accessible through selenium also.Actions which user is able to do manually also should work through selenium. Behaviour in both internet explorer and chrome should be same. ## Actual Behavior - In Internet explorer, elements which are visible and interactable for the user are throwing ElementNotVisible Exception. This issue is there only in internet explorer. When one of the parent has a style property with height 0px and width 0px, selenium is telling the element is not visible.Hence it is not allowing actions on that element also.  ## Steps to reproduce - Use the attached html file to reproduce the issue. There is an input f ield which is visible and accessible for the user.It has a parent div element which has style property with both height and width 0px. There is no issue in chrome. [selenium_bug.zip](https://github.com/SeleniumHQ/selenium/files/1927041/selenium_bug.zip) Steps: >element  = driver.find_element_by_xpath('//input') >element.is_displayed() >False >element.click() >ElementNotVisibleException","closed","D-IE,","athulds","2018-04-19T07:28:50Z","2020-06-24T23:15:13Z"
"","5747","when use MoveByOffset repeatedly ,the real offsetX value  auto increase","## Meta - OS:  Windows 7 Selenium Version:   c#, selenium3.9.1  Browser:   chrome 63  I need move 10 each, but real first time move 10, second move 20 , third move 30, the real move value increment 10 each;   the code is following:  `             int y = 1;                 int currentlocal = ele.Location.X+ele.Size.Width;                 int nextlocal = 0;                 int movewith = 10;                 for (int i = 1; i < width; i++)                 {                     currentlocal = currentlocal + movewith * i;                      nextlocal = currentlocal + movewith * (i + 1);                      Console.WriteLine(i + "";current ele local:"" + currentlocal + "": next ele local:"" + nextlocal);                      action.MoveByOffset(movewith, y).Perform();                      Console.WriteLine(""ele real local:"" + (ele.Location.X + ele.Size.Width));                      Thread.Sleep(waittime);               }`","closed","","duoduoxi","2018-04-10T01:48:42Z","2019-08-15T23:09:56Z"
"","4979","org.openqa.selenium.WebDriverException: disconnected: unable to connect to renderer","## Meta - OS:  Windows 7  Selenium Version:   3.0.1  Browser:  Chrome  Browser Version:  62.0.3202.75 Chrome driver version : 2.30.477700 ## Expected Behavior - Chrome browser should maximise and open URL.  ## Actual Behavior -  Exception in thread ""main"" org.openqa.selenium.WebDriverException: disconnected: unable to connect to renderer - Exception occurs at maximise() step .  ## Steps to reproduce - public class OpenBrowser { public static void main(String args[])  { WebDriver driver; System.setProperty(""webdriver.chrome.driver"",""//path to chrome driver""); driver=new ChromeDriver(); driver.manage().window().maximize(); driver.get(""http://www.google.com""); } }","closed","","gamerchandu","2017-10-30T14:58:05Z","2019-08-15T06:09:35Z"
"","5224","How to Add Socket5 Proxy in C#","## Meta - OS:  Windows 7  Selenium Version:  Selenium.WebDriverBackedSelenium 3.8.0.0  Browser:  FireFox   Browser Version:  FireFox 57.0     ## Expected Behavior - I have some socks5 proxies,I want to use it in my APP ,it developing by C#.  ## Actual Behavior - When i used ""prox.HttpProxy"",browser told me that you need input proxy account and password; When i used ""prox.SocksProxy""+""prox.SocksUserName""+""prox.SocksPassword"",VS alert a error: account:password@104.***.***.19:6*** is not of the form host[:port]  Is it the problem of my code or does the browser don't support  or the current version doesn't support it? I became depressed!!!!  ## Steps to reproduce -         private void btnTestS5Proxy_Click(object sender, EventArgs e){             Proxy prox = new Proxy();             prox.SocksProxy = ""104.***.***.19:6***"";             //prox.HttpProxy = ""104.***.***.19:6***"";             prox.SocksUserName = ""3*******"";             prox.SocksPassword = ""******t"";             FirefoxOptions ffp = new FirefoxOptions();             ffp.Proxy = prox;             IWebDriver driver = new FirefoxDriver(ffp);// Interception Error              Actions action = new Actions(driver);             string baseURL = ""http://www.ip.com/"";             driver.Navigate().GoToUrl(baseURL);             string strHtml = driver.PageSource;             driver.Quit();      }","closed","","laySpring","2017-12-15T02:21:14Z","2019-08-14T16:09:51Z"
"","5510","Timeout issue with Selenium 3.9.0 & okhttp","## Meta - OS:  Windows 7  Selenium Version:  3.9.0   Browser:  Chrome   Browser Version:     ## Expected Behavior -  All tests should pass with Okhttp in version 3.9.0  ## Actual Behavior - Getting org.openqa.selenium.WebDriverException: java.net.SocketException: Read Timeout error. And below error when run in AWS  org.openqa.selenium.remote.UnreachableBrowserException: org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.9.0', revision: '698b3178f0', time: '2018-02-05T14:26:55.441Z' System info: , os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_131' Driver info: driver.version: RemoteWebDriver  Test passes on setting the below property:  System.setProperty(""webdriver.http.factory"", ""apache"");   ## Steps to reproduce - On executing the tests cases using selenium version 3.9.0 , Getting org.openqa.selenium.WebDriverException: java.net.SocketException: Read Timeout error.  Same behavior is observed from CI  like Jenkins/Bamboo  Test pass when run individually.","closed","","KuzhaliDhivyan","2018-02-19T09:51:23Z","2019-08-16T13:09:39Z"
"","5319","Selenium Internet Explorer 11 driver doesn't starting in private mode","## Meta - OS:  Windows 7  Selenium Version:  3.8.1  Browser:  Internet Explorer  Browser Version:  11.0.9600.18349 (64-bit)  ## Expected Behavior - Starting IE on private mode ( via use create force api and command line switches) ## Actual Behavior - IE started not in private mode ## Steps to reproduce - ``` InternetExplorerOptions ieOptions = new InternetExplorerOptions(); ieOptions.setCapability(""ie.enableFullPageScreenshot"", false); ieOptions.setCapability(InternetExplorerDriver.ENABLE_PERSISTENT_HOVERING, false); ieOptions.setCapability(InternetExplorerDriver.LOG_FILE, ""ieDriver.log"")); ieOptions.setCapability(InternetExplorerDriver.LOG_LEVEL, ""DEBUG""); ieOptions.setCapability(InternetExplorerDriver.FORCE_CREATE_PROCESS, true); ieOptions.setCapability(InternetExplorerDriver.IE_SWITCHES, Collections.singletonList(""-private"")); InternetExplorerDriver driver = new InternetExplorerDriver(ieOptions); driver.manage().window().maximize();  WebElement input = driver.findElement(By.id(""input"")); driver.quit(); ```  Capability `InternetExplorerDriver.IE_SWITCHES` requered value as list, but on the ieDriver.log I see the warn `CommandHandlers\NewSessionCommandHandler.cpp(105) Invalid capability setting: ie.browserCommandLineSwitches is type array instead of string. Default value will be used: """"` and the IE doesn't start on the private mode.  Any ideas about it?  Thanks.  [ieDriver.log](https://github.com/SeleniumHQ/selenium/files/1618094/ieDriver.log)","closed","C-java,","AndrewBystrov","2018-01-10T08:53:45Z","2019-08-16T18:09:36Z"
"","5272","Unable to match capability set 0: se:CONFIG_UUID with InternetExplorerDriver on a grid node","## Meta - OS:  Windows 7  Selenium Version:  3.8.1  Browser:  Internet Explorer  Browser Version:  11  ## Expected Behavior - Calling this constructor should launch driver  ## Actual Behavior - Error is `org.openqa.selenium.SessionNotCreatedException: No matching capability sets found. Unable to match capability set 0: se:CONFIG_UUID is an unknown extension capability for IE`  Removing se:CONFIG_UUID capability do the trick, but it's a wordaround   ## Steps to reproduce - I'm using selenium grid with a custom DriverProvider. Grid is started with ""enablePassThrough"" option set to false. It works well with firefox or chrome, but with Internet Explorer, when calling `new InternetExplorerDriver(capabilities);`,I get   `18:03:03.750 INFO - Creating a custom new session for Capabilities {acceptSslCerts: true, browserName: internet explorer, ensureCleanSession: true, ie.ensureCleanSession: true, ignoreProtectedModeSettings: true, ignoreZoomSetting: true, initialBrowserUrl: about:blank, javascriptEnabled: true, proxy: {proxyType: autodetect}, se:CONFIG_UUID: a94e237b-8194-4648-8a5a-460..., takesScreenshot: true, version: , webdriver.ie.driver: D:/Dev/seleniumRobot-grid/d...} org.openqa.selenium.SessionNotCreatedException: No matching capability sets found. Unable to match capability set 0: se:CONFIG_UUID is an unknown extension capability for IE Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z' System info: host: 'SN782980', ip: '172.23.21.176', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_131' Driver info: driver.version: InternetExplorerDriver`  It seems that driver (Win32 version 3.8.0) does not support the CONFIG_UUID capability","closed","","bhecquet","2017-12-29T17:07:08Z","2019-08-16T19:09:37Z"
"","4864","Could not load type 'OpenQA.Selenium.Support.UI.WebDriverWait' in version 3.6.0 for C#","## Meta - OS:  Windows 7  Selenium Version:  3.6.0  Browser:  Chrome   Browser Version:  61.0.3163.100(64 bit)   ## Expected Behavior - Should be able use WebDriverWait class  ## Actual Behavior - Getting error: Could not load type 'OpenQA.Selenium.Support.UI.WebDriverWait' in version 3.6.0 for C#. I was also unable to find the WebDriverWait class in the package explorer in Visual Studio: Take a look at the follow SO : [Question](https://stackoverflow.com/questions/46707725/webdriverwait-not-available-in-openqa-selenium-support-ui)  ## Steps to reproduce - Upgrade to version 3.6.0 and user WebDriverWait class in C#","closed","","medigvijay","2017-10-13T09:32:18Z","2019-08-15T13:09:44Z"
"","5061","Window is closed issue: but window is not closed.","## Meta - OS:  Windows 7  Selenium Version:  3.6  Browser:  IE 11   Browser Version:   11.0.9600.18816 64-bit   ## Expected Behavior - Username should be typed on the field.   ## Actual Behavior - Exception in thread ""main"" org.openqa.selenium.NoSuchWindowException: Window is closed Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:26.402Z' System info: host: 'A118653', ip: '10.34.192.178', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=false, elementScrollBehavior=0, enablePersistentHover=false, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=true, initialBrowserUrl=http://localhost:34248/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}] Session ID: a9018a6d-710e-4aaf-868e-c32a3c29e925 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:643) 	at org.openqa.selenium.remote.RemoteWebDriver.getWindowHandle(RemoteWebDriver.java:503) 	at cucumberTest.SeleniumTest.main(SeleniumTest.java:38)   ## Steps to reproduce - I'm trying this online selenium short tutorial, and I'm encountering this issue (window is closed), but the window is not closed.  Below is my code.   	 	public static void main(String[] args) throws InterruptedException { 		// TODO Auto-generated method stub 		WebDriver driver; 		 		String IEDriverLocation = ""C://jars//IEDriverServer_x64_3.6.0//IEDriverServer.exe""; 		 		File file = new File(IEDriverLocation); 		System.setProperty(""webdriver.ie.driver"", file.getAbsolutePath()); 		 		DesiredCapabilities ieCapabilities = DesiredCapabilities.internetExplorer(); 		ieCapabilities.setCapability(""requireWindowFocus"", true); 		ieCapabilities.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true); 		InternetExplorerOptions s = new InternetExplorerOptions(ieCapabilities); 		 		driver = new InternetExplorerDriver(s); 		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); 		driver.manage().window().maximize(); 		driver.get(""http://www.store.demoqa.com""); 		System.out.println(driver.getWindowHandle());  //checking if there is a handle returned 		driver.findElement(By.xpath("".//*[@id='account']/a"")).click(); 		Thread.sleep(4000); 		System.out.println(driver.getWindowHandle()); //FAILS HERE 		driver.findElement(By.id(""log"")).sendKeys(""testuser_1""); //FAILS ALSO HERE if the previous code line is omitted. 		 	}","closed","D-IE,","blueray333","2017-11-15T18:55:09Z","2019-08-14T18:09:35Z"
"","5764","Grid is not working properly if no of classes greater than one in test tag","## Meta - OS:  Windows 7  Selenium Version:  3.5.3, Selenium Standalone server 3.11.0  Browser:  Firefox, Chrome   Browser Version:    Firefox 59,Chrome 65 ## Expected Behavior - Scripts should execute parallel in the grid ## Actual Behavior - Grid is NOT working. Issue is grid is launching 4 chrome, and 1 fire fox instances and not executing anything. They just launched and stay idle.   ## Steps to reproduce -  i have launched hub with following command java -jar selenium-server-standalone-3.11.0.jar -role hub  i have launched node with following command java -Dwebdriver.gecko.driver=i:/Selenium/geckodriver-v0.20.0-win64/geckodriver.exe -Dwebdriver.chrome.driver=i:/Selenium/chromedriver_win32/chromedriver.exe -jar selenium-server-standalone-3.11.0.jar -role node -hub http://localhost:4444/grid/register  I have the following code in six classes named GridExample_Seek1 to GridExample_Seek6  ``` package GridExample; import java.net.URL; import java.util.Date; import java.util.concurrent.TimeUnit; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.edge.EdgeDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.remote.RemoteWebDriver; import org.testng.annotations.AfterMethod; import org.testng.annotations.BeforeTest; import org.testng.annotations.Parameters; import org.testng.annotations.Test;  public class GridExample_Seek1 {      WebDriver driver;      @BeforeTest     @Parameters(""browser"")     public void setup(String browser) throws Exception{                 if(browser.equalsIgnoreCase(""firefox"")){             System.setProperty(""webdriver.gecko.driver"", ""I:/Selenium/geckodriver-v0.20.0-win64/geckodriver.exe"");             DesiredCapabilities capabilities = DesiredCapabilities.firefox();             capabilities.setPlatform(org.openqa.selenium.Platform.WINDOWS);             driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), capabilities);                     }          else if(browser.equalsIgnoreCase(""chrome"")){             System.setProperty(""webdriver.chrome.driver"",""I:/Selenium/chromedriver_win32_appium/chromedriver.exe"");             DesiredCapabilities capabilities = DesiredCapabilities.chrome();             capabilities.setPlatform(org.openqa.selenium.Platform.WINDOWS);             driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), capabilities);                     }       }      @Test     public void CrossBrowserTesting() throws InterruptedException{           By TextJobName=By.id(""SearchBar__Keywords"");         By TextLocationName=By.id(""SearchBar__Where"");          By LinkInformationTechnology=By.xpath(""//*[@id='classificationsPanel']/nav/ul/li[18]/a"");         By LinkLocationSydney=By.xpath(""//*[@id='react-autowhatever-1-section-0-item-0']/span"");         By LinkLocationMelbourne=By.xpath(""//*[@id='eact-autowhatever-1-section-0-item-0']/span"");          By ButtonSeek=By.xpath(""//*[@id='SearchBar']/button"");          By LabelClassification=By.cssSelector(""._2jxxdU_._2VxM8lk"");          driver.get(""http://seek.com.au"");         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);         driver.findElement(TextJobName).sendKeys(""Selenium webdriver"");         Thread.sleep(1000);         driver.findElement(LabelClassification).click();         Thread.sleep(1000);         driver.findElement(LinkInformationTechnology).click();     }      @AfterMethod     public void teardown() throws InterruptedException{          driver.quit();     } } ```  I observed below points while working with grid.  1.When i mentioned only 1 classe(GridExample_Seek1) under each test tag in xml file, grid is working fine. scripts are running in parallel.  2.When i mentioned only 3 classes(GridExample_Seek1,GridExample_Seek2,GridExample_Seek3) under each test tag in xml file, grid is working. BUT tests are executing one by one, not in parallel.  3.If i mentioned 6 classes(GridExample_Seek1 to GridExample_Seek6) under each test tag in xml file, grid is NOT working. issue is grid is launching 4 chrome, and 1 fire fox instances and not executing anything. They just launched and stay idle.   Please see the snapshots for grid and testng.xml file  ![grid 1](https://user-images.githubusercontent.com/30716119/38628265-9941f516-3dce-11e8-94ac-4ac779d77bc9.png) ![grid 2](https://user-images.githubusercontent.com/30716119/38628267-9aac7426-3dce-11e8-8f5f-808d630efd86.png) ![grid 3](https://user-images.githubusercontent.com/30716119/38628282-a15dfcd6-3dce-11e8-9e25-9498c6cd532c.png) ![testng xml](https://user-images.githubusercontent.com/30716119/38628300-a900aa9c-3dce-11e8-819d-1908f799ac41.png)","closed","R-awaiting answer,","Edzotech","2018-04-11T15:54:09Z","2021-09-05T10:20:26Z"
"","5471","Alert Authentication Method not working properly","## Meta - OS:  Windows 7  Selenium Version:  3.4.3  Browser:  Chrome   Browser Version:  Version 64.0.3282.140 (Offizieller Build) (64-Bit)   ## Expected Behavior - Alert Authenticate method authenticates and execution continues  ## Actual Behavior - Nothing happens. Authenticate method freezes. I think around this point (webdriver.py:295)  ```         if response:             self.error_handler.check_response(response)             response['value'] = self._unwrap_value(                 response.get('value', None))             return response ```  ## Steps to reproduce -  This is the function i'm using to handle the alert:  ```     def login_browser_alert(driver):         WebDriverWait(driver, 3).until(EC.alert_is_present())         current_window = driver.window_handles[0]         driver.switch_to.alert.authenticate('admin', 'admin')         driver.switch_to.window(current_window) ```  This is how I navigate to the page:  ```     def goto_page(self):             self.driver.get(self.URL)             login_browser_alert(self.driver) ```  I'm using http://the-internet.herokuapp.com/basic_auth as a dummy Authentication example. Credentials are user: ""admin"" pass: ""admin""","closed","C-py,","ghost","2018-02-09T10:57:26Z","2019-08-16T04:09:45Z"
"","4975","I want to get the data of trend picture which use svg path label","## Meta - OS:  windows 7  Selenium Version:  2.52  Browser:  Chrome   ## Expected Behavior - - As shown below， I want to get the data of trend picture which use svg path label，I don't have any clue now，who can give me some advices  ![image](https://user-images.githubusercontent.com/12470388/32130315-f84f1a12-bbc8-11e7-9bc1-ed21a90852ee.png) ## Actual Behavior -  ## Steps to reproduce -","closed","","Yanci516","2017-10-28T02:26:43Z","2019-08-17T05:09:44Z"
"","4934","C# Selenium 3.6 & Chrome throws error ""W3C payload contained keys that do not comply with the spec: [chrome.switches]""","## Meta - OS:  Windows 7  Selenium Version:    Selenium standalone server 3.6.0, selenium c# bindings 3.6.0, chrome driver 2.3.3  Browser:   Google Chrome 62.0.3202  Browser Version:  62.0.3202  ## Expected Behavior - Browser opens and executes scripts  ## Actual Behavior - **Exception **   **Exception on Visual studio:**  Result Message:	System.InvalidOperationException : W3C payload contained keys that do not comply with the spec: [chrome.switches]  **StandAlone server log** 16:25:43.276 INFO - Selenium Server is up and running 2017-10-23 16:25:50.865:INFO:osjshC.ROOT:qtp1227229563-12: org.openqa.selenium.r emote.server.WebDriverServlet-26be92ad: Initialising WebDriverServlet 16:25:50.903 INFO - Binding default provider to: org.openqa.selenium.chrome.Chro meDriverService 16:25:50.904 INFO - Found handler: org.openqa.selenium.remote.server.commandhand ler.BeginSession@3dad4b31 16:25:50.907 INFO - /session: Executing POST on /session (handler: BeginSession) Only local connections are allowed.     ## Steps to reproduce - Set up a selenium project with Chrome browser with versions as mentioned above and and run the following script  ``` [TestMethod]         public void TestMethod()         {             DesiredCapabilities capt = new DesiredCapabilities();             capt.SetCapability(CapabilityType.BrowserName, ""chrome"");             capt.SetCapability(""chrome.switches"", ""--disable-extensions"");             IWebDriver wd = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""), capt);             wd.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(5);             wd.Manage().Window.Maximize();             wd.Navigate().GoToUrl(""www.yahoo.com"");             wd.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(5);             wd.Quit();         } ``` NOTE: We updated from Selenium 2.53.1 to Selenium 3.6   now. All of this was working fine before.","closed","D-chrome,","AdvanceAutomation","2017-10-23T21:12:53Z","2021-09-05T09:36:37Z"
"","4926","NodeJS#When I use selenium-webdriver new Builder() driver with setProxy, but return error Uncaught WebDriverError: unknown error: cannot parse capability: proxy from unknown error: proxyType is 'manual' but no manual proxy capabilities were found","## Meta - OS:  Windows 7  Selenium Version:   "" types/selenium-webdriver"": ""^3.0.4"", ""selenium-webdriver"": - ""^3.4.0"",   Browser:     Browser Version:    Version 62.0.3202.62 (Official Build) (64-bit)  ## Expected Behavior -  ## Actual Behavior -  1) Submit ideas Test Case #1: Unauthenticated cannot submit ideas:      Uncaught WebDriverError: unknown error: cannot parse capability: proxy from unknown error: proxyType is 'manual' but no manual proxy capabilities were found   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64)       at WebDriverError (node_modules\selenium-webdriver\lib\error.js:27:5)       at Object.checkLegacyResponse (node_modules\selenium-webdriver\lib\error.js:517:15)       at parseHttpResponse (node_modules\selenium-webdriver\lib\http.js:509:13)       at doSend.then.response (node_modules\selenium-webdriver\lib\http.js:441:30)       at process._tickCallback (internal/process/next_tick.js:109:7)   From: Task: WebDriver.createSession()       at Function.createSession (node_modules\selenium-webdriver\lib\webdriver.js:777:24)       at Function.createSession (node_modules\selenium-webdriver\chrome.js:719:29)       at createDriver (node_modules\selenium-webdriver\index.js:167:33)       at Builder.build (node_modules\selenium-webdriver\index.js:639:16)       at new Browser (dist\lib\browser.js:24:14)       at Object. (dist\tests\test.js:16:38)       at next (native)       at dist\tests\test.js:7:71       at __awaiter (dist\tests\test.js:3:12)       at Context.before (dist\tests\test.js:15:18)  ## Steps to reproduce -   import { Builder, Capabilities, ProxyConfig, ThenableWebDriver, WebElement, By, WebElementPromise } from 'selenium-webdriver';    public constructor(private browserName: string) {       let proxy = require('selenium-webdriver/proxy');     this.driver = new Builder()       .forBrowser(browserName)       .setProxy(proxy.manual({          http : null,         https : null,         shocks : 'ecnshts3016.sh.cn.ao.se:8081'         }))       .build();   }","closed","D-chrome,","wenJanus","2017-10-23T02:20:44Z","2019-08-16T04:09:55Z"
"","5035","TypeError: Cannot read property 'manage' of undefined","## Meta - OS:  windows 7  Selenium Version:    ""types/selenium-webdriver"": ""^3.0.4"",  ""selenium-webdriver"": ""^3.4.0"", Browser:   ""chromedriver"": ""2.33.2"",   Browser Version:      ## Expected Behavior - Run webdriver testcase in local is will.   ## Actual Behavior - But run in docker env show error.   1) Test SSM login ""before all"" hook:      TypeError: Cannot read property 'manage' of undefined       at new Browser (build/test/lib/browser.js:60:21)       at Object. (build/test/testcase/test-uam.js:23:38)       at Generator.next ()       at build/test/testcase/test-uam.js:7:71       at new Promise ()       at __awaiter (build/test/testcase/test-uam.js:3:12)       at Context.before (build/test/testcase/test-uam.js:21:18)  2) Test SSM login ""after all"" hook:      TypeError: Cannot read property 'dispose' of undefined       at Object. (build/test/testcase/test-uam.js:92:21)       at Generator.next ()       at build/test/testcase/test-uam.js:7:71       at new Promise ()       at __awaiter (build/test/testcase/test-uam.js:3:12)       at Context.after (build/test/testcase/test-uam.js:91:17)  ## Steps to reproduce -   Error 1:TypeError: Cannot read property 'manage' of undefined  this.driver.manage().window().maximize();  Error 2: TypeError: Cannot read property 'dispose' of undefined public async dispose(): Promise {     await this.browser.close();   }  public async close(): Promise {     await this.driver.close();   }","closed","","wenJanus","2017-11-09T02:40:50Z","2019-08-17T03:09:44Z"
"","5370","right click not working with IEDriver","## Meta - OS:  Windows 7  Protractor Version:  5.2.2  Browser:  IE 11   Browser Version:  11.0.9600.18893   Driver: IEDriverServer 3.8.0  ## Expected Behavior - Right click on an element should open the context menu ## Actual Behavior - Right click action is not triggered ## Steps to reproduce - In order to right click on an element, I am using       this.executeSequence([             browser.actions().mouseMove(element(by.xpath(""//span[text()='xyz'']"")).perform(),             browser.actions().click(element(by.xpath(""//span[text()='xyz'']""), protractor.Button.RIGHT).perform()         ]);  This works as expected on Chome, but it does not work on IE.","closed","","doshinam","2018-01-19T21:07:35Z","2019-08-16T16:09:59Z"
"","5033","AbstractConnector:main: Stopped ServerConnector error for first time running HTML suite","## Meta - OS:  Windows 7  **Selenium Version:**  Selenium Server 3.7.0, HTML Runner 3.7.0, Jenkins 2.89  **Browser:**  Internet Explorer  **Browser Version:**  11.674.15063.0 update 11.0.47  ## Expected Behavior - The test suite (HTML Test Suite) should run the first time without triggering the exception/error  ## Actual Behavior - the first time you run the test suite the exception/error is triggered.  ## Steps to reproduce - **Pre-condition:** There is a project on Jenkins that has a build step to run/execute a HTML Runner test suite.  1. Login to Jenkins with an account that can run the HTML Runner test suite  2. Build the project  3. Navigate to the console output of the build  **Post-condition:** If you re-run the project immediately after you will be able to successfully run it (no exception/error)  **Observations:** If you wait a short period of time like 10 to 20 minutes after you see the exception/error you can build the project and not see the error.  I do not know how much time has to elapse from the first attempt that fails to see the very next attempt fail.  However, every next day that I come in to run the test, it fails for the first time and when I run again it passes as expected.  This makes it hard to determine if it is TIME or CALENDAR DATE that is the trigger to restart issue.  No matter what browser I have specified in the build/project definition the same actual behaviour happens when the project is built for the first time.  I have seen this error since at least 2.7X of Jenkins and since at least 3.3.0 of the HTML Runner   **Logs/errors:** 12:31:44 2017-11-08 12:31:44.556:INFO:osjs.AbstractConnector:main: Started ServerConnector@779568{HTTP/1.1,[http/1.1]}{0.0.0.0:26980} 12:31:44 2017-11-08 12:31:44.556:INFO:osjs.Server:main: Started @5430ms 12:31:44 2017-11-08 12:31:44.603:INFO:osjs.AbstractConnector:main: Stopped ServerConnector@779568{HTTP/1.1,[http/1.1]}{0.0.0.0:26980} 12:31:44 2017-11-08 12:31:44.603:INFO:osjsh.ContextHandler:main: Stopped o.s.j.s.h.ContextHandler@caa560{/tests,null,UNAVAILABLE} 12:32:22 Nov 08, 2017 12:32:22 PM org.openqa.selenium.server.htmlrunner.HTMLLauncher mainInt 12:32:22 WARNING: Test of browser failed: *iexplore","closed","C-htmlrunner,","giznaj","2017-11-08T17:58:37Z","2019-08-15T09:09:49Z"
"","5723","Exception in thread ""main"" org.openqa.selenium.ElementNotInteractableException: Element  could not be scrolled into view Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:14.666Z'","## Meta - OS:  Windows 2016 Selenium Version:   3.8.1 Browser:   Firefox 59.0.1  Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ghost","2018-04-02T20:17:22Z","2021-09-05T10:35:55Z"
"","4942","""HTTP request to the remote WebDriver timed out in 60 seconds"" when commandTimeout passed to RemoteWebDriver constructor c#","## Meta - OS:  Windows 2012R2  Selenium Version:  webdriver and support 3.6.0  Browser:  chrome, firefox, internet explorer   Browser Version:    Chrome 61.0.3163.100 IE 11 Firefox 56.0.1  ## Expected Behavior - When registering a remote webdriver like so  ``` InternetExplorerOptions ieOptions = new InternetExplorerOptions(); ieOptions.EnsureCleanSession = true; ieOptions.RequireWindowFocus = true; ieOptions.IgnoreZoomLevel = true; ieOptions.BrowserAttachTimeout = TimeSpan.FromSeconds(60); ICapabilities ieCaps = ieOptions.ToCapabilities(); Driver = new RemoteWebDriver(new Uri(""http://chi-grid-hub1.corp.auctiva.com:4444/wd/hub""), ieCaps, TimeSpan.FromMinutes(2)); ``` that WebDriverTimeouts are thrown only when command responses take longer than 2 min.    ## Actual Behavior - Tests are periodically failing after no response is received in 60 seconds. Here is a screenshot of the exception  ![capture](https://user-images.githubusercontent.com/19497855/31966354-4d9d3254-b8bf-11e7-8480-2291d4394d3f.PNG)  I would expect this timeout to only be triggered after 2 min has passed. When debugging the driver I see both `DefaultCommandTimeout` and 'serverResponseTimeout' set  ![capture](https://user-images.githubusercontent.com/19497855/31966563-ec7c701a-b8bf-11e7-8990-b257cf7ba475.PNG) Seems to me that DefaultCommandTimeout is being used regardless of serverResonseTimeout, althought my only 'evidence' for this is me knowing I do not explicitly set any timeouts to 60 seconds and the behavior, of a .Click() being executed and then in CreateResonse() a failure after 60 seconds.    ## Steps to reproduce - I do not have a test case to share being I experience this issue on internal environments. I do not know of a public site where actions take longer than 1 min to return a response. I am gonna try and get a case for you.  Also to my knowledge I have insured that the application code is only setting this one timeout in the driver constructor, and my node and grid timeouts are default. I tried changing the `unregisterIfStillDownAfter` attribute in the node configuration but that didnt do change the failure, and if I based on the comments it seems this attribute is only used to unregister a node if it fails to register to the hub before the timeout.","closed","D-IE,","jburns24","2017-10-24T20:45:22Z","2020-05-20T23:10:29Z"
"","5771","Chrome Driver 2.36 Login issue thread is waiting at Driver.URL C#","## Meta - OS:  Windows 10, Server 2012 Browser: Chrome  Version: 65.0.3325.181 (Official Build) (64-bit)   Web driver: 2.36 Dotnet Framework: 4.6  ## Expected Behavior - In my application I'm using window AD for authentication. Whenever I open application in chrome browser it ask for authentication and a login pop-up window(attached screenshot) gets open. In the pop-up window, I enter my credential and click on login button. Once successfully logged-in I'm able access my application. Expecting same behavior in automation.   ## Actual Behavior - Same thing i have automated with the help of selenium driver. I had used selenium web driver 2.34 for Chrome and Chrome version was 64, with this combination login functionality was working fine. Now recently I have upgraded web driver to 2.36 and Chrome to 65, post this upgrade login functionality is not working. Now in application when login pop-up window opens and application wait for user inputs i'm using auto hot key ""WindowsAuthenticationChrome"" to enter the credentials, now application gets hang at driver.url=""some url"" thread gets blocked and unable to launch auto hotkey and after some time it throw command timeout exception. and when i manually enter credentials or close the popup thread get released and execute next line of code.  **This issue is coming after version upgrade**.  ## Steps to reproduce - Created sample console application  ``` class Program 	{ 		static void Main(string[] args) 		{ 			string[] arguments = new string[] { ""no-sandbox"", ""test-type"", ""ignore-certificate-errors"", ""disable-popup-blocking"" } ; 			var chromeOptions = new ChromeOptions() { BinaryLocation = @""C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"" }; 			chromeOptions.AddArguments(arguments); 			var chromedriver = new ChromeDriver(@""C:\TestCases\Drivers"", chromeOptions, new System.TimeSpan(0, 10, 0)); 			//chromedriver.Url = ""actual url"" login pop-up window come; 			chromedriver.Url = ""https://www.google.co.in/""; 		} 	} ``` In sample code i'm creating object of web driver with some capabilities, when i'm trying to open my application url where login pop-up window come code gets hang after some time it throw command timeout exception however when i'm trying to open simple page (""https://www.google.co.in"") where popup window is not coming code is working fine. ![login issue](https://user-images.githubusercontent.com/38317825/38680811-d64f88ea-3e84-11e8-80e1-6ed957e667b6.jpg)  **Any help would be grateful!**","closed","","PraveenKushwahaa","2018-04-12T13:42:47Z","2019-08-16T05:10:03Z"
"","5072","Click() action unable to perform action on different elements","## Meta - OS:  Windows 10, Fall update Selenium Version: .NET 3.7.0 Browser:  Firefox  Browser Version:  59.0a1 (2017-11-16) (64-Bit)  ## Expected Behavior -  Actions should be capable of performing actions to different elements in one go, as documented in the Python reference [here](https://seleniumhq.github.io/selenium/docs/api/py/webdriver/selenium.webdriver.common.action_chains.html).   ## Actual Behavior -  Calling Click() with different elements results in a StaleElementReference Exception  ## Steps to reproduce - Note: I didn't test if this example works as well, but it generally should. I simply changed my selectors and adjusted them to match those of the test case. ``` Actions cutpaste = new Actions(Driver); 			cutpaste.ContextClick(Driver.FindElement(By.XPath(""//tbody/tr[2]/td[5]""))) 				.Build() 				.Perform();                         // this popup is a child of //tbody/tr[2] 			var popup = Driver.FindElements(By.CssSelector(""ul.ui-menu"")); 			Actions click = new Actions(Driver); 			click.Click(popup[0]).Build().Perform();                         // this works fine, although the value changed 			cutpaste.ContextClick(Driver.FindElement(By.XPath(""//tbody/tr[3]/td[5]""))) 				.Build() 				.Perform();                         // this popup is now a child of //tbody/tr[3] 			popup = Driver.FindElements(By.CssSelector(""ul.ui-menu""));                         // this fails with a staleelementreference exception, although it's the same procedue as contectClick() 			click.Click(popup[0]).Build().Perform(); ```  For an example that should be able to reproduce this, see [here](http://live.datatables.net/savuvija/1/edit).","closed","","curtisy1","2017-11-17T15:59:35Z","2019-08-17T00:09:52Z"
"","4903","C# Selenium 3.5.0 and 3.6.0 not able to load e10s extensions in Firefox 56.0","## Meta - OS:  Windows 10 x64  Selenium Version:  3.5.0 and 3.6.0  Browser:  Firefox 56.0 x64   ## Expected Behavior - Extension gets loaded  ## Actual Behavior - ""FileNotFoundException is thrown ""Could not find file '.\appdata\local\temp\anymous.hash.webdriver\[extensionname]\install.rdf'. "" This is a non-e10s format. The e10s format doesn't require this file and hence it looks like selenium is not yet e10s compatible.  ## Steps to reproduce -  Environment: Selenium 3.5.0 or 3.6.0 Windows 10 x64 FF56.0  x64 e10s extension Geckodriver v0.19 Coding language c#  If you use this c# code with the proper E10SExtensionLocation , GeckoDriverLocationPath, BrowserExecutableLocation  FirefoxOptions options = new FirefoxOptions(); FirefoxProfileManager pm = new FirefoxProfileManager(); string pn = pm.ExistingProfiles.Where(profiles => profiles.Contains(""default"")).Single(); options.Profile = pm.GetProfile(pn); option.BrowserExecutableLocation = BrowserExecutableLocation; options.Profile.AddExtension(E10SExtensionLocation); FirefoxDriverService fds = FirefoxDriverService.CreateDefaultService(GeckoDriverLocationPath); FirefoxDriver driver = new FirefoxDriver(fds, options, TimeSpan.FromSeconds(30));  This code used to work for legacy extensions but now we need to start using e10s moving forward as per requirement from Firefox.","closed","","guygagnon","2017-10-18T19:21:16Z","2019-08-17T06:10:03Z"
"","5350","org.openqa.selenium.WebDriverException: Unable to parse remote response: Unknown error","## Meta - OS:  Windows 10 Pro for Workstations. Selenium Version:  3,8.1 Browser:  Edge Browser Version:  Microsoft Edge 41.16299.15.0  I am attempting to test what happens when I log onto the AUT twice. The expected behaviour - the first session should automatically log me out, with a message in the URL bar, i.e: LOGGED_ON_ELSEWHERE.  The test works perfectly well in Firefox & Chrome, but performs strangely in Edge.  It throws a WebDriverException here at `driver = new EdgeDriver();`      `System.setProperty(""webdriver.edge.driver"", ""C:\\selenium-files\\MicrosoftWebDriver.exe"");      driver = new EdgeDriver();`  The first session just vanishes - browser has closed, and execution continues on the second browser normally.  The error message is unhelpful:  `org.openqa.selenium.WebDriverException: Unable to parse remote response: Unknown error`  How can I remedy this please?","closed","","staplesj","2018-01-17T16:12:32Z","2019-08-14T07:10:04Z"
"","4929","IE11: UnreachableBrowserException: Error communicating with the remote browser. It may have died.","## Meta - OS:  Windows 10 Enterprise Selenium Version:  3.6.0 WebDriver Browser:  Internet Explorer 11 Browser Version:  11.953.14393.0 (32-bit)   ## Information -  I face kinda the same issue as mentioned [here](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/4319).  However, this problem occurres with Internet Explorer 11. It happens randomly in approximately 1 out of 10 test runs. Restarting this failed test run usually leads to the repeated test passing. I already tried the solutions mentioned in the issue linked above, but none of them worked so far. The InternetExplorerDriver is initialized with default values.  Unfortunately, my company's rules do not allow me to publish our test code. What I can say so far is that the exception mostly occurres when calling the webdriver's .get(String url) method, so there is no complex code behind this.  Do you know why the webdriver loses the connection to the browser irregularly and how I can resolve this issue?  Thanks in advance!","closed","D-IE,","LucasException","2017-10-23T14:05:45Z","2019-08-17T00:09:45Z"
"","4816","Exception thrown when instantiating FirefoxDriver on C# .NET","## Meta - OS:  Windows 10 and Mac OS  Selenium Version:  WebDriver 3.6.0, C#  Browser:  Tor Browser  Browser Version:  7.0.6 (based on Firefox 52.4.0 (64-Bit))  ## Expected Behavior - According to the [Nuget page](https://www.nuget.org/packages/Selenium.WebDriver/), the WebDriver supports .Net Standard 2.0.  ## Actual Behavior - when running on a .NET Core 2.0 console project, I encountered an exception  `System.TypeInitializationException: The type initializer for 'System.IO.Compression.ZipStorer' threw an exception. ---> System.NotSupportedException: No data is available for encoding 437.`  ## Steps to reproduce - Just start a new project and instantiate FirefoxDriver by  > var torBinaryPath = @""/Applications/TorBrowser.app/Contents/MacOS/firefox""; var process = new Process(); process.StartInfo.FileName = torBinaryPath; process.StartInfo.Arguments = ""-n""; process.StartInfo.WindowStyle = ProcessWindowStyle.Maximized; process.Start(); var profile = new FirefoxProfile(); profile.SetPreference(""network.proxy.type"", 1); profile.SetPreference(""network.proxy.socks"", ""127.0.0.1""); profile.SetPreference(""network.proxy.socks_port"", 9150); var driver = new FirefoxDriver(profile);  Am I doing anything incorrectly here? Please advise, thank you.","closed","C-dotnet,","cltsang","2017-10-06T05:24:10Z","2021-09-05T08:35:56Z"
"","5266","Cannot open Opera browser","## Meta - OS:  Windows 10 64bit  Selenium Version:  3.8.0  Browser:  Opera   Browser Version:  49.0.2725.64 (PGO)    ## Expected Behavior - Open Opera browser ## Actual Behavior - Throw an exception as below:  ``` Traceback (most recent call last):   File ""c:/Users/dongdn/Desktop/Robot/RobotLibrary/test.py"", line 3, in      browser = webdriver.Opera();   File ""C:\Python36\lib\site-packages\selenium\webdriver\opera\webdriver.py"", line 78, in __init__     service_log_path=service_log_path)   File ""C:\Python36\lib\site-packages\selenium\webdriver\opera\webdriver.py"", line 57, in __init__     service_log_path=service_log_path)   File ""C:\Python36\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 75, in __init__     desired_capabilities=desired_capabilities)   File ""C:\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""C:\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""C:\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: cannot parse capability: operaOptions from unknown error: must be a dictionary   (Driver info: OperaDriver=2.32 (cfa164127aab5f93e5e47d9dcf8407380eb42c50),platform=Windows NT 10.0.14393 x86_64) ``` ## Steps to reproduce - 1. Run the following code.  ``` from selenium import webdriver browser = webdriver.Opera() browser.get('https://google.com') ```  2. The exception will be thrown.","closed","C-py,","dong-nz","2017-12-27T04:11:01Z","2019-08-16T18:09:57Z"
"","4994","SessionNotCreatedException: Unable to create new remote session with IE 11, iedriver 3.6.0.","## Meta - OS:  Windows 10 64 Bit.  Selenium Version:  3.6.0  Browser:  Internet Explorer 11.   ## Expected Behavior - I am using the following code to launch the IE 11 browser: logger.info(""The IE Driver Server Path is: ""+Constant.IE_DRIVER_SERVER_PATH); System.setProperty(""webdriver.ie.driver"",Constant.IE_DRIVER_SERVER_PATH); driver = new InternetExplorerDriver();  The browser should launch successfully and proceed with further login action code.  ## Actual Behavior -  Please find attached the screen shot of the browser. The browser is launching but, throwing the following ""org.openqa.selenium.**SessionNotCreatedException**"" exception: Started InternetExplorerDriver server (32-bit) 3.6.0.0 Listening on port 30197 Only local connections are allowed 2017-11-01 22:48:09 ERROR [main] (DriverInitialize.java:136) - Exception Occured During Initialization of the WebDriver!! 2017-11-01 22:48:09 ERROR [main] (DriverInitialize.java:136) - Exception Occured During Initialization of the WebDriver!! org.openqa.selenium.SessionNotCreatedException: Unable to create new remote session. desired capabilities = Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}], required capabilities = Capabilities [{}] Build info: version: 'unknown', revision: '5234b32', time: '2017-03-10 09:00:17 -0800' System info: host: 'VM-001-0', ip: '10.194.41.76', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: driver.version: InternetExplorerDriver 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:141) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:604) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:244) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:230) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:180) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:172) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:144) 	at com.emc.webtop.commonlibs.DriverInitialize.initializeDriver(DriverInitialize.java:77) 	at com.emc.webtop.commonlibs.ObjectDeclaration.(ObjectDeclaration.java:97) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.api.junit.Cucumber.run(Cucumber.java:98) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)   ## Steps to reproduce - Try running the following code: logger.info(""The IE Driver Server Path is: ""+Constant.IE_DRIVER_SERVER_PATH); System.setProperty(""webdriver.ie.driver"",Constant.IE_DRIVER_SERVER_PATH); driver = new InternetExplorerDriver();","closed","","alokarya0","2017-11-02T05:53:19Z","2019-08-17T03:09:49Z"
"","5097","sel 3.7.0 : Error with send_keys(str)","## Meta - OS:  Windows 10 -- Python 3.6.3, pytest-3.2.5, py-1.5.0, pluggy-0.4.0 Selenium Version:  3.7.0 Browser:  no browser only Appium Android device  ## Expected Behavior - arrive to write in textView by input.send_keys(""toto"") ## Actual Behavior - Error : Message: Parameters were incorrect. We wanted {""required"":[""value""]} and you sent [""text"",""value"",""id"",""sessionId""]   search_input.send_keys(word_to_search) ..\..\..\appdata\local\programs\python\python36-32\lib\site-packages\selenium\webdriver\remote\webelement.py:349: in send_keys     'value': keys_to_typing(value)}) ..\..\..\appdata\local\programs\python\python36-32\lib\site-packages\selenium\webdriver\remote\webelement.py:493: in _execute     return self._parent.execute(command, params) ..\..\..\appdata\local\programs\python\python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:249: in execute     self.error_handler.check_response(response) ..\..\..\appdata\local\programs\python\python36-32\lib\site-packages\appium\webdriver\errorhandler.py:29: in check_response     raise wde ..\..\..\appdata\local\programs\python\python36-32\lib\site-packages\appium\webdriver\errorhandler.py:24: in check_response     super(MobileErrorHandler, self).check_response(response)","closed","","langme","2017-11-21T17:01:48Z","2019-08-17T01:09:46Z"
"","5242","WIN10 IE11 selenium.common.exceptions.NoSuchWindowException: Message: Unable to get browser","## Meta - OS:  WINDOWS 10 (64) Corporate, 1709, 16299.125  Selenium Version:   Server 3.8.1 client 3.8.0 IEDriverServer.exe 3.8.0  Browser:   Internet Explorer 11.125.16299.0 Version update 11.0.49 (KB4052978)  ## Expected Behavior -  driver.title should return the page title  ## Actual Behavior -  selenium.common.exceptions.NoSuchWindowException: Message: Unable to get browser  ## Steps to reproduce -  ``` >>> selenium.__version__ '3.8.0' >>> from selenium.webdriver.common.desired_capabilities import DesiredCapabilities >>> from selenium.webdriver import Remote >>> cap = DesiredCapabilities.INTERNETEXPLORER.copy() >>> driver = Remote(command_executor='http://remote_host:4444/wd/hub', desired_capabilities=cap) >>> driver.get('http://google.com') >>> driver.title Traceback (most recent call last):   File """", line 1, in    File ""C:\VENV\selenium\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 332, in title     resp = self.execute(Command.GET_TITLE)   File ""C:\VENV\selenium\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""C:\VENV\selenium\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchWindowException: Message: Unable to get browser ```  After that, the driver depends and does not respond to any commands  LOG [https://drive.google.com/file/d/1KkBp2xBBS1moSS9u-bemEBt0dQr3Ksxa/view](https://drive.google.com/file/d/1KkBp2xBBS1moSS9u-bemEBt0dQr3Ksxa/view)    PS.  With system preferences  OS WIN 10 64 Pro, 1709, 16299.**19** IE 11 11.**15**.16299.0 update version 11.0.47 (KB4040685)  The error does not repeat.","closed","D-IE,","theproshin","2017-12-21T09:36:47Z","2021-09-05T08:35:54Z"
"","5584","Unable to SendKeys with IEDriver 3.10 - crashes driver","## Meta - OS:  Windows 10 & Windows 7 - exception capture was with windows 10  Selenium Version:   3.10 C# version, Visual Studio IDE. IE driver version 3.10  Browser:   Internet Explorer 11  Browser Version:  11.00.14393.2007   ## Expected Behavior - SendKeys to element works and sends keys  ## Actual Behavior - SendKeys causes the driver to crash the following exception is captured  Faulting application name: IEDriverServer.exe, version: 3.10.0.0, time stamp: 0x5a999b44 Faulting module name: IED4E61.tmp, version: 0.0.0.0, time stamp: 0x5a999b3d Exception code: 0xc0000005 Fault offset: 0x00006a2a Faulting process id: 0x9ad8 Faulting application start time: 0x01d3b70ba8909bc4  Unhandled exception at 0x0FEB6A2A (IED4E61.tmp) in IEDriverServer.exe: 0xC0000005: Access violation reading location 0x00000088.  ## Steps to reproduce - Sample code below. NativeEvents are set to false & protected mode was set to off for all zones within the browser. `             InternetExplorerOptions internetExplorerOptions = new InternetExplorerOptions();             internetExplorerOptions.EnableNativeEvents = false;              InternetExplorerDriver ieDriver = new InternetExplorerDriver(internetExplorerOptions);              ieDriver.Navigate().GoToUrl(""http://google.com"");              System.Threading.Thread.Sleep(2000);                          IWebElement element = ieDriver.FindElementByName(""q"");              element.SendKeys(""test"");  `","closed","","StormCat007","2018-03-08T18:47:18Z","2019-08-16T11:09:42Z"
"","5663","java client. LocalStorage does not pass parameters to some javascripts.","## Meta - OS:  Windows 10 Selenium Version: java client 3.11.0 (https://www.seleniumhq.org/download/  selenium client Java 3.11.0 2018-03-11)  Browser:  no matter  Browser Version:  no matter  ## Expected Behavior - WebDriver java client must send to URI: /session/96d0276c-d355-4a78-8970-de243db0714b/execute/sync Body: {""args"":[""privet-key""],""script"":""localStorage.removeItem('arguments[0]')""}  ## Actual Behavior - WebDriver java client actually sends URI: /session/96d0276c-d355-4a78-8970-de243db0714b/execute/sync Body: {""args"":[],""script"":""localStorage.removeItem('arguments[0]')""}  note empty args array in body JSON.  ## Steps to reproduce - java WebDriver-client code: // create session to any W3C WebDriver-server final URL url = new URL(addr);//""http://localhost:8085""); final DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.setBrowserName(...); driver = new RemoteWebDriver(url, capabilities);   final RemoteExecuteMethod executeMethod = new RemoteExecuteMethod(driver); final RemoteWebStorage webStorage = new RemoteWebStorage(executeMethod); final LocalStorage storage = webStorage.getLocalStorage(); storage.removeItem(key); // fails  ## Thoughts - W3CHttpCommandCodec.java passes javascript text to toScript function, but for some reason does not pass arguments. It seems it should pass arguments as well where appropriate. Like this: // W3CHttpCommandCodec.java line 249 case SET_LOCAL_STORAGE_ITEM: return toScript(""localStorage.setItem('arguments[0]', 'arguments[1]')"", parameters.get(""key""), parameters.get(""value""));  case REMOVE_LOCAL_STORAGE_ITEM: return toScript(""localStorage.removeItem('arguments[0]')"", parameters.get(""key""));  case GET_LOCAL_STORAGE_ITEM: return toScript(""return localStorage.getItem('arguments[0]')"", parameters.get(""key""));  // The same about _SESSION_STORAGE_.  Found it in backwoods of LOL (logic obscure layer).","closed","C-java,","kotrachev","2018-03-22T08:51:57Z","2019-08-16T05:09:46Z"
"","4957","IEDriver find_elements_by_xpath throws 'out of memory error' on Win10","## Meta - OS:  Windows 10 Selenium Version: 2.53.1 , 3.4.0 IEDriver version: 2.53.1, 3.4.0 Browser:  Internet Explorer 11 Browser Version:  11  ## Expected Behavior - list is returned, empty or not ## Actual Behavior - error 'out of memory' ## Steps to reproduce - url = https://www.ncbi.nlm.nih.gov/variation/tools/1000genomes driver.get(url) driver.find_elements_by_xpath(""//div[contains(text(), 'Loading...')]"") First the problem was found using the remote driver on SauceLabs.com (ticket 44343). They reproduced it on local IEDriver (see their screenshot iedriver_out_of_memory). The error is returned when the expected list supposed to be empty (my impression). The error has never happened on Windows 7. ![iedriver_out_of_memory](https://user-images.githubusercontent.com/33096263/32006980-3f6b097e-b976-11e7-9f69-e68c2f0407d2.png)","closed","D-IE,","ovkom","2017-10-25T15:29:48Z","2021-09-05T08:34:44Z"
"","5231","Error on Actions.MoveToElement() - Target element cannot be converted to IWebElementReference","## Meta - OS:  Windows 10 Selenium Version:  Selenium.WebDriver 3.8.0, net45 Browser:  Internet Explorer Browser Version:   11.64.16299.0 (64-bit)  ## Expected Behavior MoveToElement Action Should move the pointer to the element.   ## Actual Behavior  When wrapping an IWebElement in a class that implements IWebElement and ILocatable and then attempting an Action like MoveToElement, an error is received that the target element cannot be converted to IWebElementReference.  I am unable to implement IWebElementReference though because it is an internal class.  This looks to be the same as Issue#4577 that was closed due to no reproducible test case.  #### StackTrace: Result StackTrace:	 at OpenQA.Selenium.Interactions.PointerInputDevice.PointerMoveInteraction.ConvertElement()    at OpenQA.Selenium.Interactions.PointerInputDevice.PointerMoveInteraction.ToDictionary()    at OpenQA.Selenium.Interactions.ActionSequence.ToDictionary()    at OpenQA.Selenium.Remote.RemoteWebDriver.PerformActions(IList`1 actionSequenceList)    at OpenQA.Selenium.Interactions.Actions.Perform()    at TestWebReference() line 344 Result Message:	System.ArgumentException : Target element cannot be converted to IWebElementReference  ## Steps to reproduce            public void TestWebReference()         {             var driver = new InternetExplorerDriver();             driver.Url = ""https://www.google.com"";             IWebElement element = driver.FindElementById(""lst-ib"");             WebElementWrapper wrapper = new WebElementWrapper(element);             Actions act = new Actions(driver);             act.MoveToElement(wrapper).Perform();         }          public class WebElementWrapper : IWebElement, ILocatable         {             private IWebElement _element;             private ILocatable _locatable;              public WebElementWrapper(IWebElement element)             {                 _element = element;                 _locatable = element as ILocatable;             }              public string TagName => _element.TagName;              public string Text => _element.Text;              public bool Enabled => _element.Enabled;              public bool Selected => _element.Selected;              public Point Location => _element.Location;              public Size Size => _element.Size;              public bool Displayed => _element.Displayed;              public Point LocationOnScreenOnceScrolledIntoView => _locatable.LocationOnScreenOnceScrolledIntoView;              public ICoordinates Coordinates => _locatable.Coordinates;              public void Clear()             {                 _element.Clear();             }              public void Click()             {                 _element.Click();             }              public IWebElement FindElement(By by)             {                 return _element.FindElement(by);             }              public ReadOnlyCollection FindElements(By by)             {                 return _element.FindElements(by);             }              public string GetAttribute(string attributeName)             {                 return _element.GetAttribute(attributeName);             }              public string GetCssValue(string propertyName)             {                 return _element.GetCssValue(propertyName);             }              public string GetProperty(string propertyName)             {                 return _element.GetProperty(propertyName);             }              public void SendKeys(string text)             {                 _element.SendKeys(text);             }              public void Submit()             {                 _element.Submit();             }         }","closed","","hprutsman","2017-12-18T20:36:57Z","2019-08-16T20:09:47Z"
"","5334","JsonWireProtocol - `moveto` does not move the mouse pointer to the correct coordinates in Firefox","## Meta - OS:  Windows 10 Selenium Version:  selenium-server-standalone-3.8.1.jar Browser:  Firefox  Browser Version: 57.0.4 (64-bit)  / geckodriver 0.19.1   ## Expected Behavior - `/session/{SESSION_ID}/moveto` to move the mouse pointer to the x/y coordinates relative to the upper-left corner of the element  ## Actual Behavior - The mouse pointer is moved to coordinates relative to the center of the element,  ## Steps to reproduce - `/session/{SESSION_ID}/moveto` ``` {""element"":""898e9e6c-eddf-4d9a-ab3d-5ec383b3f945"",""xoffset"":629,""yoffset"":636} ```  For geckodriver this translates to: ``` { 	""actions"": [{ 		""id"": ""mouse"", 		""type"": ""pointer"", 		""parameters"": { 			""pointerType"": ""mouse"" 		}, 		""actions"": [{ 			""duration"": 200, 			""x"": 629, 			""y"": 636, 			""type"": ""pointerMove"", 			""origin"": { 				""ELEMENT"": ""8694b33d-5c4c-4a2e-94c9-8b513e35c3c5"", 				""element-6066-11e4-a52e-4f735466cecf"": ""8694b33d-5c4c-4a2e-94c9-8b513e35c3c5"" 			} 		}] 	}] } ``` Defined in the [webdriver specification](https://www.w3.org/TR/webdriver/#dfn-dispatch-a-pointermove-action)","closed","R-awaiting answer,","aquilax","2018-01-12T10:11:28Z","2021-09-05T10:20:28Z"
"","5523","dotnet: Firefox e10s extensions fail to load","## Meta - OS:  Windows 10 Selenium Version:  3.9.1 (Selenium dotnet) Browser:  Firefox Browser Version:  58.0.2 (64-bit)  ## Expected Behavior - Firefox should load e10s (web extension API)    ## Actual Behavior - Exception is throw on creation of FirefoxDriver.  Stacktrace: OpenQA.Selenium.WebDriverException occurred   HResult=0x80131500   Message=Error installing extension   Source=WebDriver   StackTrace:    at OpenQA.Selenium.Firefox.FirefoxExtension.ReadIdFromInstallRdf(String root)    at OpenQA.Selenium.Firefox.FirefoxExtension.Install(String profileDirectory)    at OpenQA.Selenium.Firefox.FirefoxProfile.InstallExtensions()    at OpenQA.Selenium.Firefox.FirefoxProfile.WriteToDisk()    at OpenQA.Selenium.Firefox.FirefoxProfile.ToBase64String()    at OpenQA.Selenium.Firefox.FirefoxOptions.GenerateFirefoxOptionsDictionary()    at OpenQA.Selenium.Firefox.FirefoxOptions.ToCapabilities()    at OpenQA.Selenium.Firefox.FirefoxDriver.ConvertOptionsToCapabilities(FirefoxOptions options)    at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxDriverService service, FirefoxOptions options, TimeSpan commandTimeout)   ## Steps to reproduce - Any code that includes a xpi that does not contain an install.rdf, as XML manifests are obsolete: https://developer.mozilla.org/en-US/docs/Archive/Add-ons/Install_Manifests e10s extensions contain a manifest.json: https://developer.mozilla.org/en-US/Add-ons/WebExtensions/manifest.json  Simple C# example: `FirefoxProfileManager profileManager = new FirefoxProfileManager();` `string profilename = profileManager.ExistingProfiles.FirstOrDefault();` `var options = new FirefoxOptions()` `{` `    Profile = profileManager.GetProfile(profilename)` `};` `options.Profile.AddExtension(@""C:\path\to\e10s.xpi"");`   ## Required fix - The fix for this just needs to be implemented in the dotnet code: selenium/dotnet/src/webdriver/Firefox/FirefoxExtension.cs in a similar fashion it was already implemented in the java code: selenium/java/client/src/org/openqa/selenium/firefox/internal/FileExtension.java","closed","","tkempton","2018-02-21T17:41:54Z","2019-08-16T13:09:44Z"
"","5737","Firefox 58.0.2 full screen problem on slideshow","## Meta - OS:  Windows 10 Selenium Version:  3.9.1 Geckodriver: 0.20.0 Browser:  Firefox 58.0.2 (32bit)  ## Expected Behavior -  There are to options: 1. I use Linux and Intellij to run testcases on remote machine as 'local'. The hub and the node is on the remote machine. I also use Windows 7 on Oracle VirtualBox where I establish connection via Remote Desktop Connection to check testrunning on the remote machine. 2. I use Jenkins to run tests from master (linux) on slave (remote machine). When I run selenium test on remote machine (Windows 10) from (Linux ubuntu 16.04) on firefox 58.0.2., or from Jenkins, slideshow should run on full screen which from I can escape pressing F11.  ## Actual Behavior -  I use Remote Desktop Connection to connect to remote machine and watch testrunning on it.  Slideshow runs on 366x144 resolution if and only if I don't watch the testrunning from the begining.   ![slideshow](https://user-images.githubusercontent.com/36341359/38428592-71b05fd0-39bc-11e8-8c66-c1ff0c1b221d.png)  The test fails when selenium wants to click on element which is obscured by an another element because of the small resolution.  If I click twice on firefox icon on taskbar, resolution is OK again.","closed","R-awaiting answer,","yamoussouk","2018-04-06T15:04:14Z","2019-08-14T19:09:34Z"
"","5538","Selenium 3.9.1 SSL_ERROR_HANDSHAKE_FAILURE_ALERT","## Meta - OS:  Windows 10 Selenium Version:  3.9.1 Browser:  Firefox Nightly 60.01a  ""C:\Program Files\Java\jdk1.8.0_151\bin\java"" -ea -Didea.test.cyclic.buffer.size=1048576 ""-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2017.3.1\lib\idea_rt.jar=53081:C:\Program Files\JetBrains\IntelliJ IDEA 2017.3.1\bin"" -Dfile.encoding=UTF-8 -classpath ""C:\Program Files\JetBrains\IntelliJ IDEA 2017.3.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2017.3.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2017.3.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_151\jre\lib\rt.jar;C:\Users\KarantzasL\Desktop\portaltesing\target\test-classes;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-java\3.9.1\selenium-java-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-api\3.9.1\selenium-api-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.9.1\selenium-chrome-driver-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.9.1\selenium-edge-driver-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.9.1\selenium-firefox-driver-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.9.1\selenium-ie-driver-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.9.1\selenium-opera-driver-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.9.1\selenium-remote-driver-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.9.1\selenium-safari-driver-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\org\seleniumhq\selenium\selenium-support\3.9.1\selenium-support-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\net\bytebuddy\byte-buddy\1.7.9\byte-buddy-1.7.9.jar;C:\Users\KarantzasL\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\KarantzasL\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\KarantzasL\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\KarantzasL\.m2\repository\com\google\code\gson\gson\2.8.2\gson-2.8.2.jar;C:\Users\KarantzasL\.m2\repository\com\google\guava\guava\23.6-jre\guava-23.6-jre.jar;C:\Users\KarantzasL\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\KarantzasL\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\KarantzasL\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\KarantzasL\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\KarantzasL\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\KarantzasL\.m2\repository\org\apache\httpcomponents\httpclient\4.5.3\httpclient-4.5.3.jar;C:\Users\KarantzasL\.m2\repository\org\apache\httpcomponents\httpcore\4.4.6\httpcore-4.4.6.jar;C:\Users\KarantzasL\.m2\repository\com\squareup\okhttp3\okhttp\3.9.1\okhttp-3.9.1.jar;C:\Users\KarantzasL\.m2\repository\com\squareup\okio\okio\1.13.0\okio-1.13.0.jar;C:\Users\KarantzasL\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\KarantzasL\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\KarantzasL\.m2\repository\org\testng\testng\6.14.2\testng-6.14.2.jar;C:\Users\KarantzasL\.m2\repository\com\beust\jcommander\1.72\jcommander-1.72.jar;C:\Users\KarantzasL\.m2\repository\org\apache-extras\beanshell\bsh\2.0b6\bsh-2.0b6.jar"" com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 com.portaldashboard.tests.nea.TestLogin 1519584934740	geckodriver	INFO	geckodriver 0.19.0 1519584934758	geckodriver	INFO	Listening on 127.0.0.1:24174 1519584935887	mozrunner::runner	INFO	Running command: ""C:/Program Files/Firefox Nightly/firefox.exe"" ""-marionette"" ""-profile"" ""C:\\Users\\KARANT~1\\AppData\\Local\\Temp\\rust_mozprofile.4ST7MIhoPUgL"" 1519584937034	addons.manager	DEBUG	Application has been upgraded 1519584937060	addons.manager	DEBUG	Loaded provider scope for resource://gre/modules/addons/XPIProvider.jsm: [""XPIProvider"", ""XPIInternal""] 1519584937064	addons.manager	DEBUG	Loaded provider scope for resource://gre/modules/LightweightThemeManager.jsm: [""LightweightThemeManager""] 1519584937086	addons.manager	DEBUG	Loaded provider scope for resource://gre/modules/addons/GMPProvider.jsm 1519584937088	addons.manager	DEBUG	Loaded provider scope for resource://gre/modules/addons/PluginProvider.jsm 1519584937088	addons.manager	DEBUG	Starting provider: XPIProvider 1519584937088	addons.xpi	DEBUG	startup 1519584937088	addons.xpi	INFO	SystemAddonInstallLocation directory is missing 1519584937088	addons.xpi	INFO	Removing all system add-on upgrades. 1519584937090	addons.xpi	DEBUG	checkForChanges 1519584937090	addons.xpi	DEBUG	Loaded add-on state: ${} 1519584937090	addons.xpi	INFO	Mapping activity-stream@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\activity-stream@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping aushelper@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\aushelper@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping firefox@getpocket.com to C:\Program Files\Firefox Nightly\browser\features\firefox@getpocket.com.xpi 1519584937092	addons.xpi	INFO	Mapping followonsearch@mozilla.com to C:\Program Files\Firefox Nightly\browser\features\followonsearch@mozilla.com.xpi 1519584937092	addons.xpi	INFO	Mapping formautofill@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\formautofill@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping onboarding@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\onboarding@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping presentation@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\presentation@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping screenshots@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\screenshots@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping shield-recipe-client@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\shield-recipe-client@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping webcompat-reporter@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\webcompat-reporter@mozilla.org.xpi 1519584937092	addons.xpi	INFO	Mapping webcompat@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\webcompat@mozilla.org.xpi 1519584937092	addons.xpi	DEBUG	New add-on activity-stream@mozilla.org in app-system-defaults 1519584937094	addons.xpi	DEBUG	New add-on aushelper@mozilla.org in app-system-defaults 1519584937094	addons.xpi	DEBUG	New add-on firefox@getpocket.com in app-system-defaults 1519584937096	addons.xpi	DEBUG	New add-on followonsearch@mozilla.com in app-system-defaults 1519584937096	addons.xpi	DEBUG	New add-on formautofill@mozilla.org in app-system-defaults 1519584937096	addons.xpi	DEBUG	New add-on onboarding@mozilla.org in app-system-defaults 1519584937096	addons.xpi	DEBUG	New add-on presentation@mozilla.org in app-system-defaults 1519584937098	addons.xpi	DEBUG	New add-on screenshots@mozilla.org in app-system-defaults 1519584937098	addons.xpi	DEBUG	New add-on shield-recipe-client@mozilla.org in app-system-defaults 1519584937098	addons.xpi	DEBUG	New add-on webcompat-reporter@mozilla.org in app-system-defaults 1519584937098	addons.xpi	DEBUG	New add-on webcompat@mozilla.org in app-system-defaults 1519584937100	addons.xpi	INFO	Mapping {972ce4c6-7e08-4474-a285-3208198ce6fd} to C:\Program Files\Firefox Nightly\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi 1519584937100	addons.xpi	DEBUG	New add-on {972ce4c6-7e08-4474-a285-3208198ce6fd} in app-global 1519584937100	addons.xpi	DEBUG	getInstallState changed: true, state: {} 1519584937100	addons.xpi	INFO	SystemAddonInstallLocation directory is missing 1519584937106	addons.xpi-utils	DEBUG	Opening XPI database C:\Users\KarantzasL\AppData\Local\Temp\rust_mozprofile.4ST7MIhoPUgL\extensions.json 1519584937108	addons.xpi-utils	DEBUG	New add-on activity-stream@mozilla.org installed in app-system-defaults *** Blocklist::_loadBlocklistFromFile: blocklist is disabled 1519584937136	addons.xpi-utils	DEBUG	New add-on aushelper@mozilla.org installed in app-system-defaults 1519584937140	addons.xpi-utils	DEBUG	New add-on firefox@getpocket.com installed in app-system-defaults 1519584937144	addons.xpi-utils	DEBUG	New add-on followonsearch@mozilla.com installed in app-system-defaults 1519584937148	addons.xpi-utils	DEBUG	New add-on formautofill@mozilla.org installed in app-system-defaults 1519584937152	addons.xpi-utils	DEBUG	New add-on onboarding@mozilla.org installed in app-system-defaults 1519584937154	addons.xpi-utils	DEBUG	New add-on presentation@mozilla.org installed in app-system-defaults 1519584937158	addons.xpi-utils	DEBUG	New add-on screenshots@mozilla.org installed in app-system-defaults 1519584937162	addons.xpi-utils	DEBUG	New add-on shield-recipe-client@mozilla.org installed in app-system-defaults 1519584937166	addons.xpi-utils	DEBUG	New add-on webcompat-reporter@mozilla.org installed in app-system-defaults 1519584937170	addons.xpi-utils	DEBUG	New add-on webcompat@mozilla.org installed in app-system-defaults 1519584937176	addons.xpi-utils	DEBUG	New add-on {972ce4c6-7e08-4474-a285-3208198ce6fd} installed in app-global 1519584937180	addons.manager	DEBUG	Registering startup change 'installed' for activity-stream@mozilla.org 1519584937186	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\activity-stream@mozilla.org.xpi 1519584937228	addons.xpi	DEBUG	Calling bootstrap method install on activity-stream@mozilla.org version 2018.02.16.1222-a050adee 1519584937228	addons.xpi-utils	DEBUG	Make addon app-system-defaults:activity-stream@mozilla.org visible 1519584937228	addons.xpi	DEBUG	Updating XPIState for {""id"":""activity-stream@mozilla.org"",""syncGUID"":""{583ec8ca-1415-412e-8f38-3975522bdf4d}"",""location"":""app-system-defaults"",""version"":""2018.02.16.1222-a050adee"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Activity Stream"",""description"":""A rich visual history feed and a reimagined home page make it easier than ever to find exactly what you're looking for in Firefox."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534647,""updateDate"":1519394534647,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\activity-stream@mozilla.org.xpi"",""skinnable"":false,""size"":3453398,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937230	addons.manager	DEBUG	Registering startup change 'installed' for aushelper@mozilla.org 1519584937232	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\aushelper@mozilla.org.xpi 1519584937234	addons.xpi	DEBUG	Calling bootstrap method install on aushelper@mozilla.org version 2.0 1519584937234	addons.xpi-utils	DEBUG	Make addon app-system-defaults:aushelper@mozilla.org visible 1519584937234	addons.xpi	DEBUG	Updating XPIState for {""id"":""aushelper@mozilla.org"",""syncGUID"":""{273dc156-2e24-4a78-8ce5-f55bb5820042}"",""location"":""app-system-defaults"",""version"":""2.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Application Update Service Helper"",""description"":""Sets value(s) in the update url based on custom checks."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534647,""updateDate"":1519394534647,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\aushelper@mozilla.org.xpi"",""skinnable"":false,""size"":8427,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937234	addons.manager	DEBUG	Registering startup change 'installed' for firefox@getpocket.com 1519584937236	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\firefox@getpocket.com.xpi 1519584937242	addons.xpi	DEBUG	Calling bootstrap method install on firefox@getpocket.com version 1.0.5 1519584937242	addons.xpi-utils	DEBUG	Make addon app-system-defaults:firefox@getpocket.com visible 1519584937242	addons.xpi	DEBUG	Updating XPIState for {""id"":""firefox@getpocket.com"",""syncGUID"":""{eb6d5923-732b-49b4-9e79-0349ae84b551}"",""location"":""app-system-defaults"",""version"":""1.0.5"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Pocket"",""description"":""When you find something you want to view later, put it in Pocket."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534652,""updateDate"":1519394534652,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\firefox@getpocket.com.xpi"",""skinnable"":false,""size"":856064,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937242	addons.manager	DEBUG	Registering startup change 'installed' for followonsearch@mozilla.com 1519584937242	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\followonsearch@mozilla.com.xpi 1519584937246	addons.xpi	DEBUG	Calling bootstrap method install on followonsearch@mozilla.com version 0.9.6 1519584937246	addons.xpi-utils	DEBUG	Make addon app-system-defaults:followonsearch@mozilla.com visible 1519584937246	addons.xpi	DEBUG	Updating XPIState for {""id"":""followonsearch@mozilla.com"",""syncGUID"":""{abc9816f-b15b-4aab-80d3-fdfe30ba665c}"",""location"":""app-system-defaults"",""version"":""0.9.6"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Follow-on Search Telemetry"",""description"":null,""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534653,""updateDate"":1519394534653,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\followonsearch@mozilla.com.xpi"",""skinnable"":false,""size"":18539,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""52.0"",""maxVersion"":""66.*""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937246	addons.manager	DEBUG	Registering startup change 'installed' for formautofill@mozilla.org 1519584937246	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\formautofill@mozilla.org.xpi 1519584937248	addons.xpi	DEBUG	Calling bootstrap method install on formautofill@mozilla.org version 1.0 1519584937248	addons.xpi-utils	DEBUG	Make addon app-system-defaults:formautofill@mozilla.org visible 1519584937248	addons.xpi	DEBUG	Updating XPIState for {""id"":""formautofill@mozilla.org"",""syncGUID"":""{13e9f231-1bf9-4240-a1b3-679c8644c50a}"",""location"":""app-system-defaults"",""version"":""1.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Form Autofill"",""description"":""Autofill forms with saved profiles"",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534664,""updateDate"":1519394534664,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\formautofill@mozilla.org.xpi"",""skinnable"":false,""size"":457252,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937248	addons.manager	DEBUG	Registering startup change 'installed' for onboarding@mozilla.org 1519584937250	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\onboarding@mozilla.org.xpi 1519584937254	addons.xpi	DEBUG	Calling bootstrap method install on onboarding@mozilla.org version 1.0 1519584937254	addons.xpi-utils	DEBUG	Make addon app-system-defaults:onboarding@mozilla.org visible 1519584937254	addons.xpi	DEBUG	Updating XPIState for {""id"":""onboarding@mozilla.org"",""syncGUID"":""{729d68f1-b0cf-40b5-a75d-9328cb3db99a}"",""location"":""app-system-defaults"",""version"":""1.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Photon onboarding"",""description"":""Photon onboarding"",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534668,""updateDate"":1519394534668,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\onboarding@mozilla.org.xpi"",""skinnable"":false,""size"":559377,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937254	addons.manager	DEBUG	Registering startup change 'installed' for presentation@mozilla.org 1519584937254	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\presentation@mozilla.org.xpi 1519584937258	addons.xpi	DEBUG	Calling bootstrap method install on presentation@mozilla.org version 1.0.0 1519584937258	addons.xpi-utils	DEBUG	Make addon app-system-defaults:presentation@mozilla.org visible 1519584937258	addons.xpi	DEBUG	Updating XPIState for {""id"":""presentation@mozilla.org"",""syncGUID"":""{3f3c7cc0-ff46-4885-a8d8-4fdc4aaa5ede}"",""location"":""app-system-defaults"",""version"":""1.0.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Presentation"",""description"":""Discover nearby devices in the browser"",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534669,""updateDate"":1519394534669,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\presentation@mozilla.org.xpi"",""skinnable"":false,""size"":14234,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937258	addons.manager	DEBUG	Registering startup change 'installed' for screenshots@mozilla.org 1519584937258	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\screenshots@mozilla.org.xpi 1519584937262	addons.xpi	DEBUG	Calling bootstrap method install on screenshots@mozilla.org version 29.0.0 1519584937262	addons.xpi-utils	DEBUG	Make addon app-system-defaults:screenshots@mozilla.org visible 1519584937262	addons.xpi	DEBUG	Updating XPIState for {""id"":""screenshots@mozilla.org"",""syncGUID"":""{b9adf9a0-405e-4cfa-a015-fff12aab3bbc}"",""location"":""app-system-defaults"",""version"":""29.0.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Firefox Screenshots"",""description"":null,""creator"":null,""homepageURL"":""https://screenshots.firefox.com/""},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534675,""updateDate"":1519394534675,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\screenshots@mozilla.org.xpi"",""skinnable"":false,""size"":988762,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""57.0a1"",""maxVersion"":""*""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937262	addons.manager	DEBUG	Registering startup change 'installed' for shield-recipe-client@mozilla.org 1519584937264	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\shield-recipe-client@mozilla.org.xpi 1519584937266	addons.xpi	DEBUG	Calling bootstrap method install on shield-recipe-client@mozilla.org version 83 1519584937266	addons.xpi-utils	DEBUG	Make addon app-system-defaults:shield-recipe-client@mozilla.org visible 1519584937268	addons.xpi	DEBUG	Updating XPIState for {""id"":""shield-recipe-client@mozilla.org"",""syncGUID"":""{760fb67e-f17a-4840-a086-7bed3353f210}"",""location"":""app-system-defaults"",""version"":""83"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Shield Recipe Client"",""description"":""Client to download and run recipes for SHIELD, Heartbeat, etc."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534678,""updateDate"":1519394534678,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\shield-recipe-client@mozilla.org.xpi"",""skinnable"":false,""size"":369904,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937268	addons.manager	DEBUG	Registering startup change 'installed' for webcompat-reporter@mozilla.org 1519584937268	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\webcompat-reporter@mozilla.org.xpi 1519584937270	addons.xpi	DEBUG	Calling bootstrap method install on webcompat-reporter@mozilla.org version 1.0.0 1519584937270	addons.xpi-utils	DEBUG	Make addon app-system-defaults:webcompat-reporter@mozilla.org visible 1519584937270	addons.xpi	DEBUG	Updating XPIState for {""id"":""webcompat-reporter@mozilla.org"",""syncGUID"":""{24b144b3-fee3-4b8b-a746-2edf02fd4f08}"",""location"":""app-system-defaults"",""version"":""1.0.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""WebCompat Reporter"",""description"":""Report site compatibility issues on webcompat.com."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534678,""updateDate"":1519394534678,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\webcompat-reporter@mozilla.org.xpi"",""skinnable"":false,""size"":12577,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937270	addons.manager	DEBUG	Registering startup change 'installed' for webcompat@mozilla.org 1519584937272	addons.xpi	DEBUG	Loading bootstrap scope from C:\Program Files\Firefox Nightly\browser\features\webcompat@mozilla.org.xpi 1519584937274	addons.xpi	DEBUG	Calling bootstrap method install on webcompat@mozilla.org version 1.1 1519584937274	addons.xpi-utils	DEBUG	Make addon app-system-defaults:webcompat@mozilla.org visible 1519584937276	addons.xpi	DEBUG	Updating XPIState for {""id"":""webcompat@mozilla.org"",""syncGUID"":""{63e64714-6fe1-4af6-b2e5-f7054ca531a5}"",""location"":""app-system-defaults"",""version"":""1.1"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Web Compat"",""description"":""Urgent post-release fixes for web compatibility."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534679,""updateDate"":1519394534679,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\webcompat@mozilla.org.xpi"",""skinnable"":false,""size"":9199,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937276	addons.xpi-utils	DEBUG	Make addon app-global:{972ce4c6-7e08-4474-a285-3208198ce6fd} visible 1519584937276	addons.xpi	DEBUG	Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""{83785162-5acb-4093-9dc6-bcbcb7169d1b}"",""location"":""app-global"",""version"":""60.0a1"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""optionsBrowserStyle"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534628,""updateDate"":1519394534628,""applyBackgroundUpdates"":1,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\extensions\\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""skinnable"":true,""size"":3016,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""userPermissions"":null,""icons"":{},""iconURL"":""chrome://browser/content/default-theme-icon.svg"",""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937276	addons.xpi	DEBUG	Updating XPIState for {""id"":""activity-stream@mozilla.org"",""syncGUID"":""{583ec8ca-1415-412e-8f38-3975522bdf4d}"",""location"":""app-system-defaults"",""version"":""2018.02.16.1222-a050adee"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Activity Stream"",""description"":""A rich visual history feed and a reimagined home page make it easier than ever to find exactly what you're looking for in Firefox."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534647,""updateDate"":1519394534647,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\activity-stream@mozilla.org.xpi"",""skinnable"":false,""size"":3453398,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937276	addons.xpi	DEBUG	Updating XPIState for {""id"":""aushelper@mozilla.org"",""syncGUID"":""{273dc156-2e24-4a78-8ce5-f55bb5820042}"",""location"":""app-system-defaults"",""version"":""2.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Application Update Service Helper"",""description"":""Sets value(s) in the update url based on custom checks."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534647,""updateDate"":1519394534647,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\aushelper@mozilla.org.xpi"",""skinnable"":false,""size"":8427,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937278	addons.xpi	DEBUG	Updating XPIState for {""id"":""firefox@getpocket.com"",""syncGUID"":""{eb6d5923-732b-49b4-9e79-0349ae84b551}"",""location"":""app-system-defaults"",""version"":""1.0.5"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Pocket"",""description"":""When you find something you want to view later, put it in Pocket."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534652,""updateDate"":1519394534652,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\firefox@getpocket.com.xpi"",""skinnable"":false,""size"":856064,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937290	addons.xpi	DEBUG	Updating XPIState for {""id"":""followonsearch@mozilla.com"",""syncGUID"":""{abc9816f-b15b-4aab-80d3-fdfe30ba665c}"",""location"":""app-system-defaults"",""version"":""0.9.6"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Follow-on Search Telemetry"",""description"":null,""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534653,""updateDate"":1519394534653,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\followonsearch@mozilla.com.xpi"",""skinnable"":false,""size"":18539,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""52.0"",""maxVersion"":""66.*""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937290	addons.xpi	DEBUG	Updating XPIState for {""id"":""formautofill@mozilla.org"",""syncGUID"":""{13e9f231-1bf9-4240-a1b3-679c8644c50a}"",""location"":""app-system-defaults"",""version"":""1.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Form Autofill"",""description"":""Autofill forms with saved profiles"",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534664,""updateDate"":1519394534664,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\formautofill@mozilla.org.xpi"",""skinnable"":false,""size"":457252,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937290	addons.xpi	DEBUG	Updating XPIState for {""id"":""onboarding@mozilla.org"",""syncGUID"":""{729d68f1-b0cf-40b5-a75d-9328cb3db99a}"",""location"":""app-system-defaults"",""version"":""1.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Photon onboarding"",""description"":""Photon onboarding"",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534668,""updateDate"":1519394534668,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\onboarding@mozilla.org.xpi"",""skinnable"":false,""size"":559377,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937292	addons.xpi	DEBUG	Updating XPIState for {""id"":""presentation@mozilla.org"",""syncGUID"":""{3f3c7cc0-ff46-4885-a8d8-4fdc4aaa5ede}"",""location"":""app-system-defaults"",""version"":""1.0.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Presentation"",""description"":""Discover nearby devices in the browser"",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534669,""updateDate"":1519394534669,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\presentation@mozilla.org.xpi"",""skinnable"":false,""size"":14234,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937292	addons.xpi	DEBUG	Updating XPIState for {""id"":""screenshots@mozilla.org"",""syncGUID"":""{b9adf9a0-405e-4cfa-a015-fff12aab3bbc}"",""location"":""app-system-defaults"",""version"":""29.0.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Firefox Screenshots"",""description"":null,""creator"":null,""homepageURL"":""https://screenshots.firefox.com/""},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534675,""updateDate"":1519394534675,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\screenshots@mozilla.org.xpi"",""skinnable"":false,""size"":988762,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""57.0a1"",""maxVersion"":""*""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937292	addons.xpi	DEBUG	Updating XPIState for {""id"":""shield-recipe-client@mozilla.org"",""syncGUID"":""{760fb67e-f17a-4840-a086-7bed3353f210}"",""location"":""app-system-defaults"",""version"":""83"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Shield Recipe Client"",""description"":""Client to download and run recipes for SHIELD, Heartbeat, etc."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534678,""updateDate"":1519394534678,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\shield-recipe-client@mozilla.org.xpi"",""skinnable"":false,""size"":369904,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937292	addons.xpi	DEBUG	Updating XPIState for {""id"":""webcompat-reporter@mozilla.org"",""syncGUID"":""{24b144b3-fee3-4b8b-a746-2edf02fd4f08}"",""location"":""app-system-defaults"",""version"":""1.0.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""WebCompat Reporter"",""description"":""Report site compatibility issues on webcompat.com."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534678,""updateDate"":1519394534678,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\webcompat-reporter@mozilla.org.xpi"",""skinnable"":false,""size"":12577,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937292	addons.xpi	DEBUG	Updating XPIState for {""id"":""webcompat@mozilla.org"",""syncGUID"":""{63e64714-6fe1-4af6-b2e5-f7054ca531a5}"",""location"":""app-system-defaults"",""version"":""1.1"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Web Compat"",""description"":""Urgent post-release fixes for web compatibility."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534679,""updateDate"":1519394534679,""applyBackgroundUpdates"":1,""bootstrap"":true,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\features\\webcompat@mozilla.org.xpi"",""skinnable"":false,""size"":9199,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":true,""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""mpcOptedOut"":false,""userPermissions"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937304	addons.xpi	DEBUG	Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""{83785162-5acb-4093-9dc6-bcbcb7169d1b}"",""location"":""app-global"",""version"":""60.0a1"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""optionsBrowserStyle"":null,""aboutURL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1519394534628,""updateDate"":1519394534628,""applyBackgroundUpdates"":1,""path"":""C:\\Program Files\\Firefox Nightly\\browser\\extensions\\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""skinnable"":true,""size"":3016,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""60.0a1"",""maxVersion"":""60.0a1""}],""targetPlatforms"":[],""seen"":true,""dependencies"":[],""hasEmbeddedWebExtension"":false,""userPermissions"":null,""icons"":{},""iconURL"":""chrome://browser/content/default-theme-icon.svg"",""icon64URL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null} 1519584937304	addons.xpi	DEBUG	Updating database with changes to installed add-ons 1519584937304	addons.xpi-utils	DEBUG	Updating add-on states 1519584937314	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\activity-stream@mozilla.org.xpi 1519584937314	addons.xpi	DEBUG	Calling bootstrap method startup on activity-stream@mozilla.org version 2018.02.16.1222-a050adee 1519584937316	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\aushelper@mozilla.org.xpi 1519584937318	addons.xpi	DEBUG	Calling bootstrap method startup on aushelper@mozilla.org version 2.0 1519584937318	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\firefox@getpocket.com.xpi 1519584937320	addons.xpi	DEBUG	Calling bootstrap method startup on firefox@getpocket.com version 1.0.5 1519584937332	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\followonsearch@mozilla.com.xpi 1519584937334	addons.xpi	DEBUG	Calling bootstrap method startup on followonsearch@mozilla.com version 0.9.6 1519584937334	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\formautofill@mozilla.org.xpi 1519584937334	addons.xpi	DEBUG	Calling bootstrap method startup on formautofill@mozilla.org version 1.0 1519584937354	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\onboarding@mozilla.org.xpi 1519584937354	addons.xpi	DEBUG	Calling bootstrap method startup on onboarding@mozilla.org version 1.0 1519584937354	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\presentation@mozilla.org.xpi 1519584937356	addons.xpi	DEBUG	Calling bootstrap method startup on presentation@mozilla.org version 1.0.0 1519584937360	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\screenshots@mozilla.org.xpi 1519584937360	addons.xpi	DEBUG	Calling bootstrap method startup on screenshots@mozilla.org version 29.0.0 1519584937360	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\shield-recipe-client@mozilla.org.xpi 1519584937362	addons.xpi	DEBUG	Calling bootstrap method startup on shield-recipe-client@mozilla.org version 83 1519584937368	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\webcompat-reporter@mozilla.org.xpi 1519584937370	addons.xpi	DEBUG	Calling bootstrap method startup on webcompat-reporter@mozilla.org version 1.0.0 1519584937370	addons.xpi	DEBUG	Registering manifest for C:\Program Files\Firefox Nightly\browser\features\webcompat@mozilla.org.xpi 1519584937370	addons.xpi	DEBUG	Calling bootstrap method startup on webcompat@mozilla.org version 1.1 1519584937374	addons.manager	DEBUG	Registering shutdown blocker for XPIProvider 1519584937374	addons.manager	DEBUG	Provider finished startup: XPIProvider 1519584937374	addons.manager	DEBUG	Starting provider: LightweightThemeManager 1519584937374	addons.manager	DEBUG	Registering shutdown blocker for LightweightThemeManager 1519584937374	addons.manager	DEBUG	Provider finished startup: LightweightThemeManager 1519584937374	addons.manager	DEBUG	Starting provider: GMPProvider 1519584937384	addons.manager	DEBUG	Registering shutdown blocker for GMPProvider 1519584937386	addons.manager	DEBUG	Provider finished startup: GMPProvider 1519584937386	addons.manager	DEBUG	Starting provider: PluginProvider 1519584937386	addons.manager	DEBUG	Registering shutdown blocker for PluginProvider 1519584937386	addons.manager	DEBUG	Provider finished startup: PluginProvider 1519584937386	addons.manager	DEBUG	Completed startup sequence 1519584937402	Marionette	DEBUG	Received observer notification profile-after-change 1519584937935	geckodriver::marionette	TRACE	  connection attempt 0/600 Unable to read VR Path Registry from C:\Users\KarantzasL\AppData\Local\openvr\openvrpaths.vrpath 1519584938156	Marionette	DEBUG	Received observer notification command-line-startup 1519584938156	Marionette	DEBUG	Received observer notification nsPref:changed 1519584938974	addons.manager	DEBUG	Registering upgrade listener for formautofill@mozilla.org 1519584939014	addons.manager	DEBUG	Starting provider: PreviousExperimentProvider 1519584939014	addons.manager	DEBUG	Registering shutdown blocker for PreviousExperimentProvider 1519584939014	addons.manager	DEBUG	Provider finished startup: PreviousExperimentProvider Unable to read VR Path Registry from C:\Users\KarantzasL\AppData\Local\openvr\openvrpaths.vrpath Unable to read VR Path Registry from C:\Users\KarantzasL\AppData\Local\openvr\openvrpaths.vrpath Unable to read VR Path Registry from C:\Users\KarantzasL\AppData\Local\openvr\openvrpaths.vrpath 1519584940097	geckodriver::marionette	TRACE	  connection attempt 1/600 1519584941330	addons.xpi-utils	DEBUG	XPI Database saved, setting schema version preference to 24 1519584942134	Marionette	DEBUG	Received observer notification sessionstore-windows-restored 1519584942170	addons.xpi	INFO	Mapping activity-stream@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\activity-stream@mozilla.org.xpi 1519584942170	addons.xpi	INFO	Mapping aushelper@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\aushelper@mozilla.org.xpi 1519584942170	addons.xpi	INFO	Mapping firefox@getpocket.com to C:\Program Files\Firefox Nightly\browser\features\firefox@getpocket.com.xpi 1519584942170	addons.xpi	INFO	Mapping followonsearch@mozilla.com to C:\Program Files\Firefox Nightly\browser\features\followonsearch@mozilla.com.xpi 1519584942172	addons.xpi	INFO	Mapping formautofill@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\formautofill@mozilla.org.xpi 1519584942172	addons.xpi	INFO	Mapping onboarding@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\onboarding@mozilla.org.xpi 1519584942172	addons.xpi	INFO	Mapping presentation@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\presentation@mozilla.org.xpi 1519584942172	addons.xpi	INFO	Mapping screenshots@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\screenshots@mozilla.org.xpi 1519584942172	addons.xpi	INFO	Mapping shield-recipe-client@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\shield-recipe-client@mozilla.org.xpi 1519584942172	addons.xpi	INFO	Mapping webcompat-reporter@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\webcompat-reporter@mozilla.org.xpi 1519584942172	addons.xpi	INFO	Mapping webcompat@mozilla.org to C:\Program Files\Firefox Nightly\browser\features\webcompat@mozilla.org.xpi 1519584942172	addons.xpi	DEBUG	Existing add-on activity-stream@mozilla.org in app-system-defaults 1519584942172	addons.xpi	DEBUG	Existing add-on aushelper@mozilla.org in app-system-defaults 1519584942174	addons.xpi	DEBUG	Existing add-on firefox@getpocket.com in app-system-defaults 1519584942174	addons.xpi	DEBUG	Existing add-on followonsearch@mozilla.com in app-system-defaults 1519584942174	addons.xpi	DEBUG	Existing add-on formautofill@mozilla.org in app-system-defaults 1519584942174	addons.xpi	DEBUG	Existing add-on onboarding@mozilla.org in app-system-defaults 1519584942174	addons.xpi	DEBUG	Existing add-on presentation@mozilla.org in app-system-defaults 1519584942176	addons.xpi	DEBUG	Existing add-on screenshots@mozilla.org in app-system-defaults 1519584942176	addons.xpi	DEBUG	Existing add-on shield-recipe-client@mozilla.org in app-system-defaults 1519584942176	addons.xpi	DEBUG	Existing add-on webcompat-reporter@mozilla.org in app-system-defaults 1519584942176	addons.xpi	DEBUG	Existing add-on webcompat@mozilla.org in app-system-defaults 1519584942176	addons.xpi	INFO	Mapping {972ce4c6-7e08-4474-a285-3208198ce6fd} to C:\Program Files\Firefox Nightly\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi 1519584942178	addons.xpi	DEBUG	Existing add-on {972ce4c6-7e08-4474-a285-3208198ce6fd} in app-global 1519584942178	addons.xpi	DEBUG	getInstallState changed: false, state: {} 1519584942258	geckodriver::marionette	TRACE	  connection attempt 2/600 1519584942358	Marionette	DEBUG	Setting recommended pref toolkit.cosmeticAnimations.enabled to false 1519584942358	Marionette	DEBUG	Setting recommended pref browser.urlbar.suggest.searches to false 1519584942358	Marionette	DEBUG	Setting recommended pref browser.urlbar.userMadeSearchSuggestionsChoice to true 1519584942358	Marionette	DEBUG	Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false 1519584942432	Marionette	DEBUG	New connections are accepted 1519584942434	Marionette	INFO	Listening on port 53090 1519584943390	geckodriver::marionette	DEBUG	Connected to Marionette on localhost:53090 1519584944004	Marionette	DEBUG	Accepted connection 0 from 127.0.0.1:53123 1519584944005	geckodriver::marionette	TRACE	 163:[0,1,""newSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox"",""capabilities"":{""desiredCapabilities"":{""acceptInsecureCerts"":true,""browserName"":""firefox""}}}] 1519584944034	Marionette	TRACE	0 -> [0,1,""newSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox"",""capabilities"":{""desiredCapabilities"":{""acceptInsecureCerts"":true,""browserName"":""firefox""}}}] 1519584944036	Marionette	WARN	TLS certificate errors will be ignored for this session 1519584944106	Marionette	DEBUG	Register listener.js for window 4294967297 1519584944114	Marionette	TRACE	0  [0,2,""maximizeWindow"",{}] 1519584945206	Marionette	TRACE	0  [0,3,""setTimeouts"",{""pageLoad"":180000}] 1519584945418	Marionette	TRACE	0  [0,4,""get"",{""url"":""https://test-portaldashboard-nea.trasys.gr/group/nea""}] 1519584945448	Marionette	DEBUG	Received DOM event beforeunload for about:blank 1519584946452	Marionette	DEBUG	Received DOM event beforeunload for about:blank 1519584946462	Marionette	DEBUG	Received DOM event pagehide for about:blank 1519584946514	Marionette	DEBUG	Received DOM event DOMContentLoaded for about:neterror?e=nssFailure2&u=https%3A//test-portaldashboard-nea.trasys.gr/group/nea&c=UTF-8&f=regular&d=An%20error%20occurr ... 0%3Ca%20id%3D%22errorCode%22%20title%3D%22SSL_ERROR_HANDSHAKE_FAILURE_ALERT%22%3ESSL_ERROR_HANDSHAKE_FAILURE_ALERT%3C/a%3E%0A 1519584946522	Marionette	TRACE	0  POST /session/c4c4e52a-0c30-4bfe-adc3-f1a88ce3e8c7/element {""value"":""#j_username"",""using"":""css selector""} 1519584947637	geckodriver::marionette	TRACE	-> 66:[0,5,""findElement"",{""using"":""css selector"",""value"":""#j_username""}] 1519584947644	Marionette	TRACE	0 -> [0,5,""findElement"",{""using"":""css selector"",""value"":""#j_username""}] 1519584947660	Marionette	TRACE	0  DELETE /session/c4c4e52a-0c30-4bfe-adc3-f1a88ce3e8c7  1519584947691	geckodriver::marionette	TRACE	-> 37:[0,6,""quit"",{""flags"":[""eForceQuit""]}] 1519584947692	Marionette	TRACE	0 -> [0,6,""quit"",{""flags"":[""eForceQuit""]}] 1519584947694	Marionette	DEBUG	New connections will no longer be accepted  org.openqa.selenium.NoSuchElementException: Unable to locate element: #j_username For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z' System info: host: 'PC12628', ip: '192.168.1.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 60.0a1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 1688, moz:profile: C:\Users\KarantzasL\AppData..., moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: XP, platformName: XP, platformVersion: 10.0, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}} Session ID: c4c4e52a-0c30-4bfe-adc3-f1a88ce3e8c7 *** Element info: {Using=id, value=j_username}  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417) 	at org.openqa.selenium.By$ById.findElement(By.java:218) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363) 	at com.portaldashboard.pages.PageBase.sendText(PageBase.java:34) 	at com.portaldashboard.pages.LoginPage.logInNeaPortDash(LoginPage.java:33) 	at com.portaldashboard.tests.nea.TestLogin.testLoginApplication(TestLogin.java:12) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)  1519584947724	addons.xpi	DEBUG	Calling bootstrap method shutdown on webcompat@mozilla.org version 1.1 1519584947726	addons.xpi	DEBUG	Calling bootstrap method shutdown on webcompat-reporter@mozilla.org version 1.0.0 1519584947726	addons.xpi	DEBUG	Calling bootstrap method shutdown on shield-recipe-client@mozilla.org version 83 1519584947728	addons.xpi	DEBUG	Calling bootstrap method shutdown on screenshots@mozilla.org version 29.0.0 1519584947736	addons.xpi	DEBUG	Calling bootstrap method shutdown on presentation@mozilla.org version 1.0.0 1519584947736	addons.xpi	DEBUG	Calling bootstrap method shutdown on onboarding@mozilla.org version 1.0 1519584947738	addons.xpi	DEBUG	Calling bootstrap method shutdown on formautofill@mozilla.org version 1.0 1519584947738	addons.xpi	DEBUG	Calling bootstrap method shutdown on followonsearch@mozilla.com version 0.9.6 1519584947740	addons.xpi	DEBUG	Calling bootstrap method shutdown on firefox@getpocket.com version 1.0.5 1519584947740	addons.xpi	DEBUG	Calling bootstrap method shutdown on aushelper@mozilla.org version 2.0 1519584947742	addons.xpi	DEBUG	Calling bootstrap method shutdown on activity-stream@mozilla.org version 2018.02.16.1222-a050adee 1519584947796	Marionette	TRACE	0   ## Expected Behavior - I would expect to see the login of the application.  ## Actual Behavior - The browser does not show the login page  This is the part code of my TestBase where i set up the firefox.  System.setProperty(""webdriver.gecko.driver"",""C:\\Users\\KarantzasL\\Desktop\\portaltesing\\src\\test\\resources\\Drivers\\geckodriver.exe"");         DesiredCapabilities desiredCapabilities = new DesiredCapabilities();         desiredCapabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS,true);         FirefoxProfile firefoxProfile = new FirefoxProfile();         firefoxProfile.setAcceptUntrustedCertificates(true);         desiredCapabilities.setCapability(FirefoxDriver.PROFILE,firefoxProfile);         FirefoxOptions firefoxOptions = new FirefoxOptions();         firefoxOptions.merge(desiredCapabilities);         firefoxOptions.setProfile(firefoxProfile);         firefoxOptions.setLogLevel(FirefoxDriverLogLevel.TRACE);         firefoxOptions.setBinary(""C:\\Program Files\\Firefox Nightly\\firefox.exe"");         driver = new FirefoxDriver(firefoxOptions);         Thread.sleep(1000);         driver.manage().window().maximize();         driver.manage().timeouts().pageLoadTimeout(180, TimeUnit.SECONDS);  Please if anyone can help me this issue.","closed","","LamprosK","2018-02-25T19:06:44Z","2019-08-16T12:09:35Z"
"","5778","Internet Explorer automation crashes when a long test is run that interacts multiple webpages","## Meta - OS:  Windows 10 Selenium Version:  3.9.0 (IEDriverServer.exe) Browser: Internet Explorer 11  selenium-webdriver (npm): 4.0.0-alpha.1 Node: 8.10.0  Browser Version: 11.909.15063.0 (64-bit)  ## Expected Behavior - I should be able to run a long test that interacts with multiple pages without my test crashing.  ## Actual Behavior - Webdriver (or Internet Explorer?) crashes when repeatedly loading and interacting with pages with Internet Explorer. This is NOT the only condition under which this bug occurs. It seems that issuing too many Webdriver commands with at least some driver.get() commands mixed in will reliably cause the crash. I consider this to be a SERIOUS BUG because it seems that it can break ANY long test against IE that interacts with more than one page.  The following does NOT seem to cause the crash:  * A long test that never changes pages or reloads the current page * Only calling driver.get() without interacting with the page  The crash can take a variety of forms. Typically it happens after running for 10-20 minutes and will produce one of the following errors.  * Sometimes the browser page will go white and can no longer be interacted with, causing webdriver to error: `TimeoutError: Timed out waiting for page to load.` * Sometimes the browser page will appear to load, but webdriver will report that an element clearly visible on the page cannot be interacted with: ` NoSuchElementError: Unable to find element with css selector == *[id=""q""]` * Sometimes Internet Explorer crashes completely, causing the standard Windows error window when a program stops responding: `Internet Explorer has stopped working. A problem caused the program to stop working correctly. Please close the program.`  ## Steps to reproduce - Execute this code and let the loop repeat for approximately 10-20 minutes. For your convenience I put this code with a package.json and complete setup instructions in [this git repo](https://github.com/GitSage/selenium-bug-browserget-repro).  ```const {Builder, By} = require('selenium-webdriver');  (async function example() { 	let browser = await new Builder() 		.forBrowser('internet explorer') 		.build(); 	let startTime = new Date().getTime(); 	let currentTime; 	let numLoops = 0;  	while(true) { 		currentTime = new Date().getTime(); 		numLoops++; 		process.stdout.write(`\rReloads: ${numLoops}, elapsed time: ${getElapsedTimeString(startTime, currentTime)}        `); 		await browser.get('https://google.com'); 		await browser.findElement(By.name('q')).sendKeys('This will crash soon'); 	} })();  function getElapsedTimeString(startTime, endTime) { 	let elapsedSeconds = Math.floor((endTime - startTime) / 1000);  	let date = new Date(null); 	date.setSeconds(elapsedSeconds); 	return date.toISOString().substr(11, 8); }```","closed","I-stale,","ben-yocum","2018-04-13T23:06:31Z","2021-12-06T00:07:02Z"
"","5310","NullReferenceException when using FirefoxDriver.Keyboard.SendKeys(Keys.Space)","## Meta - OS:  Windows 10 Selenium Version:  3.8.0 C# Browser:  Firefox Browser Version:  57.0.4 (64-bit)  ## Expected Behavior - SendKeys should execute  ## Actual Behavior - ``` NullReferenceException    at OpenQA.Selenium.Remote.HttpCommandExecutor.HttpRequestInfo..ctor(Uri serverUri, Command commandToExecute, CommandInfo commandInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteKeyboard.SendKeys(String keySequence) ```  ## Steps to reproduce - ```c# WebDriver.Keyboard.SendKeys(Keys.Space); ```  See issue https://github.com/mozilla/geckodriver/issues/939","closed","C-dotnet,","darxis","2018-01-09T19:18:47Z","2019-08-16T16:09:48Z"
"","4988","FindElement so slow on .NetCore Version","## Meta - OS:  Windows 10 Selenium Version:  3.7 latest on the github master branch, and 3.6 on nuget both .NET Core Browser:  Firefox and PhatomJS  Browser Version:   Firefox 47 PhatomJS 2.1  Python 3 bindings with practically the same code run way faster than the .net core version  In .net core with this code: https://i.imgur.com/VdkiPdk.png  Output: 3168 3110  I believe it is not supposed to take 3 seconds to find an element on a simple page, in the python version it was so fast that i didn't even had to measure, it was way below 50 ms","closed","","MarioGK","2017-11-01T13:01:05Z","2019-08-16T19:09:44Z"
"","4935","Cant read input field with selenium 3.6 and htmlunitdriver 2.27","## Meta - OS:  Windows 10 Selenium Version:  3.6.0 Browser:  HtmlUnitDriver  Browser Version:  HtmlUnitDriver 2.27  ## Expected Behavior - Should be able to fill input field and read its content.  ## Actual Behavior - With artifacts: org.seleniumhq.selenium:selenium-api:3.6.0 org.seleniumhq.selenium:selenium-java:3.6.0 org.seleniumhq.selenium:htmlunit-driver:2.27 Causing NoSuchMethodError: com.gargoylesoftware.htmlunit.html.Keyboard and getAttribute(""value"") returns empty string.  With artifacts: org.seleniumhq.selenium:selenium-api:2.53.1 org.seleniumhq.selenium:selenium-java:2.53.1 Everthing is fine.  ## Steps to reproduce - Just get sources from [Example ](https://github.com/Ben1980/seleniumError.git) and run it with gradlew.bat build or in your IDE","closed","","Ben1980","2017-10-24T07:08:09Z","2019-08-17T06:09:42Z"
"","4855","Conversion from FirefoxOptions to Capabilities not working","## Meta - OS:  Windows 10 Selenium Version:  3.6.0 Browser:  Firefox  Browser Version:  56.0  ## Expected Behavior -  I can convert FirefoxOptions options to DesiredCapabilities/ICapabilities capabilities using var capabilities = options.ToCapabilities() and instantiate a new FirefoxDriver using Driver = new FirefoxDriver(capabilities) or Driver = new FirefoxDriver(options.ToCapabilities)  ## Actual Behavior -  The setup throws a System.ArgumentException: There is already an option for the moz:firefoxOptions capability. Please use that instead. Parametername: capabilityName  Using capabilties.SetCapabilties(moz:firefoxOptions, options) or capabilties.SetCapabilties(moz:firefoxOptions, options.ToCapabilities()) results in the same error.  Before you ask: The conversion is needed because for some strange reason when running tests on an Azure testing server, the setup complains about being unable to find a matching set of capabilities, which I haven't figured out why this happens yet. The tests run fine locally and the Build is a 1:1 copy of the local structure.  I'd be happy about any indication that you could give. Also tagging @jimevans since he seems to be the .NET expert here.  ## Steps to reproduce - ``` FirefoxOptions foptions = new FirefoxOptions(); foptions.SetPreference(""browser.download.folderList"", 2); //=do not use default download dir foptions.SetPreference(""browser.download.dir"", FileExportPath); //=use this as download dir foptions.SetPreference(""browser.download.manager.alertOnEXEOpen"", false); foptions.SetPreference(""browser.helperApps.neverAsk.saveToDisk"", ""application/msword, application/vnd.ms-excel, application/csv, application/ris, text/csv, data:image/png, image/png, application/pdf, text/html, text/plain, application/zip, application/x-zip, application/x-zip-compressed, application/download, application/octet-stream"");					foptions.SetPreference(""pdfjs.previousHandler.alwaysAskBeforeHandling"", false); foptions.SetPreference(""browser.download.useDownloadDir"", true); foptions.SetPreference(""browser.helperApps.alwaysAsk.force"", false); foptions.SetPreference(""devtools.selfxss.count"", 100); foptions.SetPreference(""DeleteAfterUse"", true); // sets the logging level. Change if you need it foptions.LogLevel = FirefoxDriverLogLevel.Trace; foptions.UseLegacyImplementation = false; // starts FF in headless mode (available from v56) //foptions.AddArgument(""--headless""); // use for FF-Stable foptions.BrowserExecutableLocation = ""C:\\Program Files\\Mozilla Firefox\\firefox.exe""; ICapabilities capabilities = foptions.ToCapabilities(); #if DEBUG 		Driver = new FirefoxDriver(capabilities); #else 		Driver = new FirefoxDriver(foptions.ToCapabilities()); #endif ```","closed","C-dotnet,","curtisy1","2017-10-12T12:12:19Z","2019-08-16T09:09:38Z"
"","4863","WebDriverError: unknown error: cannot find Chrome binary","## Meta - OS:  Windows 10 Selenium Version:  3.6.0 Browser:  ChromeDriver Browser Version:  2.33.506120  ## Expected Behavior - chromedriver work well with selenium-webdriver  ## Actual Behavior - throw an error: ``` WebDriverError: unknown error: cannot find Chrome binary   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.15063 x86_64)     at Object.checkLegacyResponse (c:\Source_Code\spider.wihu.com\newSpider\node_modules\selenium-webdriver\lib\error.js:546:15)     at parseHttpResponse (c:\Source_Code\spider.wihu.com\newSpider\node_modules\selenium-webdriver\lib\http.js:509:13)     at doSend.then.response (c:\Source_Code\spider.wihu.com\newSpider\node_modules\selenium-webdriver\lib\http.js:441:30)     at      at process._tickCallback (internal/process/next_tick.js:188:7) From: Task: WebDriver.createSession()     at Function.createSession (c:\Source_Code\spider.wihu.com\newSpider\node_modules\selenium-webdriver\lib\webdriver.js:769:24)     at Function.createSession (c:\Source_Code\spider.wihu.com\newSpider\node_modules\selenium-webdriver\chrome.js:761:15)     at createDriver (c:\Source_Code\spider.wihu.com\newSpider\node_modules\selenium-webdriver\index.js:170:33)     at Builder.build (c:\Source_Code\spider.wihu.com\newSpider\node_modules\selenium-webdriver\index.js:642:16)     at spider (c:\Source_Code\spider.wihu.com\newSpider\index.js:26:10)     at Object. (c:\Source_Code\spider.wihu.com\newSpider\index.js:118:1)     at Module._compile (module.js:570:14)     at Object.Module._extensions..js (module.js:584:10)     at Module.load (module.js:507:32)     at tryModuleLoad (module.js:470:12) ```  ## Steps to reproduce - ``` JavaScript require('chromedriver'); const webdriver = require('selenium-webdriver'); const chrome = require('selenium-webdriver/chrome'); var chromePath = require('chromedriver').path; let service = new chrome.ServiceBuilder(chromePath).build(); chrome.setDefaultService(service);      let driver = new webdriver.Builder()     .withCapabilities(webdriver.Capabilities.chrome())     .build();  driver.get('http://www.baidu.com') ```","closed","C-nodejs,","jokyme","2017-10-13T05:04:11Z","2019-08-14T14:10:00Z"
"","5327","Copy paste not working using Robot Class: Ctrl+C; content is not saving into clipboard, but it used to work perfectly fine few days back","## Meta - OS:  Windows 10 Selenium Version:  3.5.3; WebDriver Browser:  NA; Trying to copy text from outlook/Any file using Robot class and its features; Basically we can open outlook using Sikuli or Winnium; here problem is about Robot class and its features that ""Using Robot class i have copied content during run time BCDE and trying to retrieve it from clipboard to print again in console or any other file. But it's fetching old value from the clip board? but it used to work perfectly fine few days back. Expected Output is: BCDE""  import java.awt.AWTException; import java.awt.HeadlessException; import java.awt.Robot; import java.awt.Toolkit; import java.awt.datatransfer.Clipboard; import java.awt.datatransfer.DataFlavor; import java.awt.datatransfer.StringSelection; import java.awt.datatransfer.Transferable; import java.awt.datatransfer.UnsupportedFlavorException; import java.awt.event.InputEvent; import java.awt.event.KeyEvent; import java.io.IOException;  import org.sikuli.basics.Settings; import org.sikuli.script.FindFailed; import org.sikuli.script.Key; import org.sikuli.script.Pattern; import org.sikuli.script.Screen;  public class Sikuli_Demo {  public static void main(String[] args) throws InterruptedException, FindFailed, AWTException, HeadlessException, UnsupportedFlavorException, IOException {  	Screen screen=new Screen(); 	Thread.sleep(2000); 	Pattern clickOutlook=new Pattern(""images\\1_ClickOutlook.png"");  	Pattern clickNewMail=new Pattern(""images\\3_NewMail.png"");  	screen.click(clickOutlook); 	Thread.sleep(2000); 	screen.click(clickNewMail); 	Thread.sleep(2000); 	screen.type(""ABCDE""); 	screen.type(Key.LEFT+Key.LEFT+Key.LEFT+Key.LEFT); 	Thread.sleep(2000);  	Robot robot=new Robot(); 	Thread.sleep(4000); 	 	robot.keyPress(KeyEvent.VK_SHIFT); 	robot.keyPress(KeyEvent.VK_RIGHT); 	robot.keyPress(KeyEvent.VK_SHIFT); 	robot.keyPress(KeyEvent.VK_RIGHT); 	robot.keyPress(KeyEvent.VK_SHIFT); 	robot.keyPress(KeyEvent.VK_RIGHT); 	robot.keyPress(KeyEvent.VK_SHIFT); 	robot.keyPress(KeyEvent.VK_RIGHT);  	Thread.sleep(2000); 	robot.keyRelease(KeyEvent.VK_RIGHT); 	robot.keyRelease(KeyEvent.VK_SHIFT); 	Thread.sleep(2000); 	System.out.println(""Check1""); 	robot.keyPress(KeyEvent.VK_CONTROL); 	robot.keyPress(KeyEvent.VK_C); 	Thread.sleep(2000); 	robot.keyRelease(KeyEvent.VK_CONTROL); 	robot.keyRelease(KeyEvent.VK_C); 	Thread.sleep(2000); 	robot.keyPress(KeyEvent.VK_RIGHT); 	robot.keyRelease(KeyEvent.VK_RIGHT);  	System.out.println(""Check2"");  	String str=(String)Toolkit.getDefaultToolkit().getSystemClipboard().getData(DataFlavor.stringFlavor); 	Thread.sleep(2000);  	System.out.println(""Copied content is :""+str); 	screen.type(str); } }  **Console: ![1_clickoutlook](https://user-images.githubusercontent.com/35334539/34831328-b2e564de-f70c-11e7-96f8-875491f9a97c.png) ![3_newmail](https://user-images.githubusercontent.com/35334539/34831329-b33de708-f70c-11e7-8e0f-c99c1aaa05a6.png)  **  Basically i got below error first: Jan 11, 2018 6:15:36 PM java.util.prefs.WindowsPreferences  WARNING: Could not open/create prefs root node Software\JavaSoft\Prefs at root 0x80000002. Windows RegCreateKeyEx(...) returned error code 5. [log] CLICK on L(540,1401)@s(0)[0,0 2560x1440] [log] CLICK on L(58,214)@s(0)[0,0 2560x1440] [log] TYPE ""ABCDE"" [log] TYPE ""#LEFT.#LEFT.#LEFT.#LEFT."" Check1 Check2 Exception in thread ""main"" java.awt.datatransfer.UnsupportedFlavorException: Unicode String at sun.awt.datatransfer.SunClipboard.getData(Unknown Source) at Sikuli_Demo.main(Sikuli_Demo.java:63)  But After following below steps error is not coming but clipboard is not saving the copied content during run time: https://stackoverflow.com/questions/8513740/copy-paste-not-working-in-a-signed-applet  On Windows 7, it can be found at C:\Program Files (x86)\Java\jre6\lib\security. Copy this file to your home folder (ex. C:\Users\Kyle). Rename the file to .java.policy (note the period at the beginning). Edit the file in a text editor. Locate this line of text: Add the following line just below it like so:  // ""standard"" properies that can be read by anyone permission java.awt.AWTPermission ""accessClipboard""; Save the file. Close any open browsers and ensure that Java is not running before testing.   **Console after following above steps**:  Jan 11, 2018 5:41:31 PM java.util.prefs.WindowsPreferences  WARNING: Could not open/create prefs root node Software\JavaSoft\Prefs at root 0x80000002. Windows RegCreateKeyEx(...) returned error code 5. [log] CLICK on L(540,1401)@s(0)[0,0 2560x1440] [log] CLICK on L(58,214)@s(0)[0,0 2560x1440] [log] TYPE ""ABCDE"" [log] TYPE ""#LEFT.#LEFT.#LEFT.#LEFT."" Check1 Check2 Copied content is :praveenreddygm@gmail.com [log] TYPE ""praveenreddygm@gmail.com ""  **Expected Output**: BCDE","closed","","praveenreddygm","2018-01-11T14:50:55Z","2019-08-16T17:10:01Z"
"","4808","httpOnly cookie attribute not being honored","## Meta - OS:  Windows 10 Selenium Version:  3.5.0 Browser:  Chrome, Firefox Browser Version:  Chrome:  61.0.3163.100 ## Expected Behavior - Setting an HTTP Only Cookie and expecting the cookie to be set.   ## Actual Behavior - Cookie is set, but HTTP only bit is not applied to the cookie.   ## Steps to reproduce - 1. Start selenium driver 2. Set HTTPOnly cookie 3. Look at browser console to see cookies and notice that HTTP only flag isn't set.  TS code:   //create a selenium driver const driver: ThenableWebDriver = new Builder().forBrowser('chrome').build(); await driver.manage().addCookie({name: 'test', value: 'test', httpOnly: true, expiry: 1538655709});  Code changes required to work in webdriver.js 1. In function addCookie, for building of cookieString, need to append http only: (spec.httpOnly ? ';httpOnly' : '') 2. need to pass through to command: 'httpOnly': !!spec.httpOnly  I will submit a pull request if you agree this is the proper solve.","closed","C-nodejs,","burd0047","2017-10-04T12:26:02Z","2019-08-17T09:09:39Z"
"","5703","Unable to access element that has ng-click","## Meta - OS:  Windows 10 Selenium Version:  3.4 Browser:  Firefox java: 1.8                                 Browser Version:  59.0.2(64 bit)   ## Expected Behavior  I am able to access this element to click on it  ## Actual Behavior - i am not able to access this element to click on it  ## Steps to reproduce -","closed","","juzdarwin","2018-03-28T16:16:02Z","2019-08-16T07:09:56Z"
"","5769","Chromedriver hangs on switchTo().defaultContent()","## Meta - OS:  Windows 10 Selenium Version:  3.11.0 (latest) Browser:  Chrome Browser Version: 65.0.3325.181 (Official Build) (32-bit) Chrome Driver: 2.37 (latest)  Issue Description: Chromedriver hangs on switchTo().defaultContent(). Sometime hangs 10 from 10, some time 3 from 10. Log and code are the same each time.  Firefox works fine.  Steps: 1. Login to Gmail 2. Click on menu in the top 3. Switch to default content  Chrome: 65.0.3325.181 (Official Build) (32-bit) Driver: 2.37 (latest) Selenium: 3.11.0 (latest)  Code is attached. Log file is attached [code and log.zip](https://github.com/SeleniumHQ/selenium/files/1903028/code.and.log.zip)","closed","","vmarchev","2018-04-12T12:17:04Z","2019-08-16T06:09:40Z"
"","5750","nightwatch+phantomjs do not running","## Meta - OS:  Windows 10 Selenium Version:  3.11.0 Browser:  phantomjs-prebuilt Browser Version:  2.1.14  ## Expected Behavior - nightwatch.conf.js  `require('babel-register') var config = require('../../config')  // http://nightwatchjs.org/gettingstarted#settings-file module.exports = {   src_folders: ['test/e2e/specs'],   output_folder: 'test/e2e/reports',   custom_assertions_path: ['test/e2e/custom-assertions'],   selenium: {     start_process: true,     server_path: require('selenium-server').path,     host: '127.0.0.1',     port: 4444,     cli_args: {       'webdriver.chrome.driver': require('chromedriver').path     }   },    test_settings: {     default: {       selenium_port: 4444,       selenium_host: 'localhost',       silent: true,       globals: {         devServerURL: 'http://localhost:' + (process.env.PORT || config.dev.port)       }     },      chrome: {       desiredCapabilities: {         browserName: 'chrome',         javascriptEnabled: true,         acceptSslCerts: true,         chromeOptions:{           args:['--headless']         }       }     },      firefox: {       desiredCapabilities: {         browserName: 'firefox',         javascriptEnabled: true,         acceptSslCerts: true       }     },      phantom: {       desiredCapabilities: {         browserName: ""phantomjs"",         javascriptEnabled: true,         acceptSslCerts: true,         ""phantomjs.binary.path"": require(""phantomjs-prebuilt"").path                 // ""phantomjs.cli.args"": [""--webdriver=4444""],//--ignore-ssl-errors=true         // ""phantomjs.page.settings.userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36""       }     }    } } ` ## Actual Behavior -  > my-project@1.0.0 e2e E:\JavaTest\my-project > node test/e2e/runner.js  Starting selenium server... started - PID:  2752  [Test] Test Suite =====================  Running:  default e2e tests  Error retrieving a new session from the selenium server  Connection refused! Is selenium server started? { value:    { message: 'Unable to create session from org.openqa.selenium.remote.NewSessionPayload@34df0cf9\nBuild info: version: \'3.11.0\', revision: \'e59cfb3\', time: \ '2018-03-11T20:33:15.31Z\'\nSystem info: host: \'IC-CHENWZ\', ip: \'10.52.4.76\', os.name: \'Windows 10\', os.arch: \'amd64\', os.version: \'10.0\', java.version: \'1.8.0_161\'\nDriver info: driver.version: unknown',      error: 'session not created' },   status: 33 }  npm ERR! code ELIFECYCLE npm ERR! errno 1 npm ERR! my-project@1.0.0 e2e: `node test/e2e/runner.js` npm ERR! Exit status 1 npm ERR! npm ERR! Failed at the my-project@1.0.0 e2e script. npm ERR! This is probably not a problem with npm. There is likely additional logging output above.  npm ERR! A complete log of this run can be found in:","closed","","Cuna","2018-04-10T08:36:49Z","2019-08-16T06:09:46Z"
"","5738","Internet Explorer fails to launch with IEDriverServer v3.9.0, standalone selenium","## Meta - OS:  Windows 10 Selenium Version:  3.11.0 Browser:  Internet Explorer Browser Version:  11  ## Expected Behavior - With standalone selenium hub & node on Windows 10, IE 11 should launch with the latest IEDriverServer.  ## Actual Behavior - The node fails with:  ``` Started InternetExplorerDriver server (64-bit) 3.9.0.0 Listening on port 50390 Only local connections are allowed 19:19:39.406 WARN [RemoteSession$Factory.performHandshake] - Failed to connect to localhost/0:0:0:0:0:0:0:1:50390 java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:50390 ```  ## Steps to reproduce - 1. Download and extract [Selenium Hub and Nodes files.zip](https://github.com/SeleniumHQ/selenium/files/1885510/Selenium.Hub.and.Nodes.files.zip).  Contents:     - Selenium/selenium-server-standalone-3.11.0.jar  (standalone selenium jar)     - Selenium/IEDriverServer.exe  (IEDriverServer v3.9.0)     - Selenium/hub.json  (hub config)     - Selenium/node_ie.json  (node config)     - Selenium/start_hub.bat  (starts the standalone server in hub mode)     - Selenium/start_node.bat  (starts the standalone server in node mode)     - Selenium/launch.js  (nodejs script to launch IE via webdriver) 2. Get nodejs if you don't have it.  (I'm using the current LTS, 8.11, with node in the PATH) 3. Double-click on ""start_hub"" and ""start_node"" to set up a simple selenium grid, with hub and node running in their own terminal windows. 4. Open another terminal. (Window+R, ""cmd"") 5. Change directory into the ""Selenium"" folder you extracted from the zip. 6. Run command ""npm install selenium-webdriver"" to install the required node module. 7. Run command ""node launch.js"" to launch IE 8. Observe the error in the output of the node.  ## Notes - If you replace IEDriverServer.exe with v3.8.0, everything works.  This issue is preventing us from upgrading to the latest IE driver.  We would like to make sure everything is upgraded before we file bugs for other IE-related issues we are having, in case those have already been fixed.  I'm suspicious of the IPv6 IP given on the console.  I can't compare this to the IP used by v3.8.0, because it only seems to print an IP when it fails to connect.  I attempted to work around this by disabling IPv6, but I think I only know how to do this on the ethernet adapter, not the loopback.  Disabling IPv6 on the ethernet adapter had no effect on this issue.","closed","C-docs,","joeyparrish","2018-04-06T20:54:16Z","2019-08-15T21:10:01Z"
"","5719","IEDriver takeScreenshot() scroll to page top before taking the image","## Meta - OS:  windows 10 Selenium Version:  3.11 Browser:  IE11  i'm trying to take a screenshot of a scrollable element on IE11 and do it with scroll and take screenshot. i scroll each iteration to a different position in the page but before the IEdriver take the screenshot it scroll to the top of the page and takes screenshot of the page's top section over and over again Browser Version:    ## Expected Behavior - take screenshot of the current position ## Actual Behavior - take screenshot of the page's top ## Steps to reproduce - scroll in jumps of 250px and use the selenium getScreenshotAs(OutputType.BASE64) method","closed","D-IE,","yanivyu1","2018-04-02T11:02:23Z","2019-08-16T03:09:51Z"
"","5734","Selenium WebDriver has inconsistent behaviour on finding Elements (contained in IFrame)","## Meta - OS:  Windows 10 Selenium Version:  3.10.0 Browser:  Google Chrome Browser Version:  Version 65.0.3325.181 (Official Build) (32-bit) Java Version: JDK 1.8.0_131  ## Expected Behavior -  When invoking findElement() for an Element, which is not yet attached to the DOM, because the IFrame is not loaded yet, one expects, that the WebDriver will find the Element after it has appeared in the DOM with implicit wait timeout sufficiently choosen. When WebDriverWait.until(...) has no disadvantage compared to Thread.sleep(...)   ## Actual Behavior - When invoking findElement() before IFrame is loaded (Element not available) it will cause: 1) NoSuchElementException (if implicit wait timeout to low) 2) NoSuchElementException (if implicit wait timeout large enough) though element gets loaded and attached to DOM during execution time  When invoking WebDriverWait.until( [ElementVisible] ) 1) TimeoutException (if explicit wait timeout to low), 2) TimeoutException (if explicit wait timeout large enough), though element has been loaded and appears in DOM  When pausing the Application in Debug Mode after failing to find the desired element, it will never be found again, no matter how long you wait, though it is clearly loaded in the browser.  Now the Abnormality: If one uses Thread.sleep() before with sufficiently large time amount, findElement() as well as WebDriverWait.until() end up successfull finding element or returning from wait with no exception. If then the program is stopped in debug mode, one will always find the element.  So there seems to be a different in the state of the WebDriver object when you either: 1) use it (e.g. findElement()) BEFORE element is loaded correctly 2) do NOT use it until element is loaded correctly  (also works when you set breakpoint before finding element instead of Thread.sleep() and continue after element appears in browser)  The behaviour of the WebDriver after the element is loaded is expected to be the same, no matter if you try to find an element before its loaded or not. This is not the case with this issue.   ## Steps to reproduce -  Here a little example code: ################################################################################ // getting Selenium WebDriver object final WebDriver driver = this.seleniumContext.getDriver();  // setting implicit wait timeout sufficiently large (5 seconds) driver.manage().timeouts().implicitlyWait(5000, TimeUnit.MILLISECONDS);  try { 	driver.findElement(By.id(""ELEMENT_ID"")); 	System.out.println(""Driver HAS found element BEFORE sleep!""); } catch (final NoSuchElementException e) { 	System.out.println(""Driver has NOT found element BEFORE sleep!""); }  // sleeping 5 seconds Thread.sleep(5000);  try { 	driver.findElement(By.id(""ELEMENT_ID"")); 	System.out.println(""Driver HAS found element AFTER sleep!""); } catch (final NoSuchElementException e) { 	System.out.println(""Driver has NOT found element AFTER sleep!""); } ################################################################################ Output: Driver has NOT found element BEFORE sleep! Driver has NOT found element AFTER sleep! ################################################################################ Now the example with no findElement() before sleep: ################################################################################ // getting Selenium WebDriver object final WebDriver driver = this.seleniumContext.getDriver();  // setting implicit wait timeout sufficiently large (5 seconds) driver.manage().timeouts().implicitlyWait(5000, TimeUnit.MILLISECONDS);  // sleeping 5 seconds before first findElement() Thread.sleep(5000);  try { 	driver.findElement(By.id(""ELEMENT_ID"")); 	System.out.println(""Driver HAS found element AFTER sleep!""); } catch (final NoSuchElementException e) { 	System.out.println(""Driver has NOT found element AFTER sleep!""); } ################################################################################ Output: Driver HAS found element AFTER sleep! ################################################################################  Now the big Question:  How can the first call of findElement() (before sleep) influence the result of the second call (after sleep) ? If you leave it out, the driver then finds the element.  Can someone explain the behaviour of the WebDriver in this case, and maybe give me a solution to properly wait for the desired element? Remind, that if a wait routine is invoked before sleep, it will still not find the element and always ends up in TimeoutException.  Thanks for Your support Folks,  Kind Regards,  Marcel","closed","R-awaiting answer,","marci13","2018-04-05T16:07:42Z","2019-08-16T03:09:53Z"
"","5765","Unable to connect to the remote server 'driver.Manage().Timeouts()'","## Meta - OS:  Windows 10 Selenium Version:  2.37 Browser:  chrome i got this message after waiting command line  driver.Manage().Timeouts().ImplicitWait = (TimeSpan.FromSeconds(10));  Unable to connect to the remote server ---> System.Net.Sockets.SocketException: No connection could be made because the target machine actively refused it 127.0.0.1:60837    at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)    at System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Socket s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state, IAsyncResult asyncResult, Exception& exception)    --- End of inner exception stack trace ---    at System.Net.HttpWebRequest.GetRequestStream(TransportContext& context)    at System.Net.HttpWebRequest.GetRequestStream()    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)","closed","D-chrome,","mh884","2018-04-11T21:55:01Z","2021-09-05T09:36:52Z"
"","5137","Send keys to authentication window doesn't work for chromdriver.","## Meta - OS:  Windows 10 Selenium Version:   3.7.0 Browser: Chrome 62, chromediver 2.33 python 2.7  here is the code sample 1 wait(driver, 5).until(EC.alert_is_present()) 2 alert = driver.switch_to_alert() 3 alert.send_keys(""username"" + Keys.TAB + ""password"") 4 alert.accept()  ## Expected Behavior - send username and password to popup and apply. This works as expected with firefox.  ## Actual Behavior - I'm getting timeout exception on line 1 - selenium.common.exceptions.TimeoutException: Message:  but actually the alert is present.  ![chromeauthenticationrequired](https://user-images.githubusercontent.com/14979534/33370348-b33954e0-d510-11e7-884d-37bf60741510.PNG)   when removing line 1, I'm getting exception on line 2 selenium.common.exceptions.NoAlertPresentException: Message: no alert open","closed","","lilit14","2017-11-29T10:22:49Z","2019-08-14T20:09:41Z"
"","5736","${KEY_ENTER} or any ${KEY_***} doesn't work with html-runner","## Meta - OS:  Windows 10 Html-runner version:  3.10.0 Browser:  Firefox and Chrome Gecko Driver : 0.20.0 Chrome Driver : 2.37  Browser Version:  Firefox 54.1, Chrome 65.0.3325.181  ## Expected Behavior -  When I run the command `sendKeys id=myId ${KEY_ENTER}`, I want it to simulate the behavior of someone pressing enter.  ## Actual Behavior -  Instead, it fills my text box with null. Every other ${KEY_***} also fill my text box with null. For example, if I write this :  ```  	sendKeys 	id=myId 	test   	sendKeys 	id=myId 	${KEY_ENTER}   	sendKeys 	id=myId 	${KEY_BKSP}   	sendKeys 	id=myId 	${KEY_LEFT}   	sendKeys 	id=myId 	${something}  ``` It will fill my textbox with : testnullnullnullnull Is it a syntax problem, do I have a bad html-runner version, or a bad chrome/gecko driver ?","closed","C-htmlrunner,","Jordannoel","2018-04-06T08:58:30Z","2019-08-15T10:09:33Z"
"","5250","Maps returned form Javascript are empty","## Meta - OS:  Windows 10  Selenium Version: 3.4.0   Browser:  Chrome 63.0.3239.84 (Official Build) (64-bit)  ## Expected Behavior - Given the following: `((JavascriptExecutor) driver).executor.executeScript(""var foo = new Map(); foo.set('one', 2); foo.set('two', 4); foo.set('three', 8); foo.set('four', '16'); return foo;"");` A `Map` is expected to be returned  ## Actual Behavior - An empty `Map` is returned, event when attempting to cast from the originally returned `Maps$TransformedEntriesMap` class to a `Map` or `Map`  ## Steps to reproduce - ``` package com.example.selenium.bug;  import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class BugDemo { public static void main(String[] args) { Map values = ((JavascriptExecutor) new ChromeDriver()).executor.executeScript(""var foo = new Map(); foo.set('one', 2); foo.set('two', 4); foo.set('three', 8); foo.set('four', '16'); return foo;""); System.out.println(""Size: "" + values.size()); // Should be 4, returns 0 } ```","closed","","MrNakaan","2017-12-23T06:06:44Z","2019-08-16T04:09:39Z"
"","5666","Exception thrown when trying to Throttle Chrome using dotnetcore (c#)","## Meta - OS:  Windows 10  Selenium Version: 3.11.0   Browser:  Chrome   Browser Version:  65.0.3325.181   ## Expected Behavior - When setting the NetworkConditions of the ChromeDriver, the browser should run throttled with the specified network settings when using c# dotnet ## Actual Behavior - The following error is thrown:  OpenQA.Selenium.WebDriverException : Unexpected error. unknown command: session/62fe84edb13b79c914bef4b7d1181f6a/chromium/network_connection    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Chrome.ChromeDriver.get_NetworkConditions()  ## Steps to reproduce -  Currently I've tried:         var options = new ChromeOptions();     options.AddArguments(""disable-infobars"");      private ChromeDriver _webDriver;     _webDriver = new ChromeDriver(options);      var networkConditions = new ChromeNetworkConditions();     networkConditions.Latency = new TimeSpan(150);     networkConditions.IsOffline = false;     networkConditions.DownloadThroughput = 450 * 1024;     networkConditions.UploadThroughput = 150 * 1024;     _webDriver.NetworkConditions = networkConditions;   AND       var options = new ChromeOptions();      options.AddArguments(""disable-infobars"");       private ChromeDriver _webDriver;      _webDriver = new ChromeDriver(options);      _webDriver.NetworkConditions.Latency = new TimeSpan(150);     _webDriver.NetworkConditions.IsOffline = false;     _webDriver.NetworkConditions.DownloadThroughput = 450 * 1024;     _webDriver.NetworkConditions.UploadThroughput = 150 * 1024;   The seems to be occuring when trying to set ' _webDriver.NetworkConditions'","closed","","qwertykg","2018-03-22T13:50:09Z","2019-08-16T08:09:47Z"
"","5411","Selenium IDE 2.9.1.1-signed is disabled in Firefox 52 ESR","## Meta - OS:  Windows 10  Selenium Version:  Selenium IDE 2.9.1.1-signed  Browser:  Firefox 52 ESR   ![2018-01-30 12_02_12-add-ons manager](https://user-images.githubusercontent.com/422244/35579791-7568bab8-05b5-11e8-9daa-f73db9269ddf.png)  Was working fine before, and was able to ""re-enable"" it again this morning, however, not any more now, and I have no idea why. The only option left for me is to remove it now:  ![2018-01-30 12_06_04-add-ons manager](https://user-images.githubusercontent.com/422244/35579962-fb163a0a-05b5-11e8-9714-d8a1707fe49f.png)  Anything I should check? Thx!","closed","","suntong","2018-01-30T17:06:35Z","2019-08-16T15:09:55Z"
"","5215","32 bit Windows IE driver is blocked by McAfee","## Meta - OS:  Windows 10  Selenium Version:  3.8.1  Browser:  Internet Explorer   Browser Version:     ## Expected Behavior - IEDriverServer_Win32_3.8.0.zip should not be detected as malware.   ## Actual Behavior - It is not possible to download the IEDriverServer_Win32_3.8.0.zip as it is blocked by McAfee in our corp network. Virus analysis can be seen on this page: https://www.virustotal.com/en/file/17d0d4095c6fdfd8b8699eefb8fadd7fcfa322f789d9cba43aafc5e40c88789a/analysis/  Compare to 64bit version (which is not being blocked): https://www.virustotal.com/en/file/d1e633dece685e506d06159bd70850711d38fd47c74b1db241b9020db796b92f/analysis/  ## Steps to reproduce -  - Try to download driver for 32 bit Windows IE from http://www.seleniumhq.org/download/ while having McAfee Web Gateway enabled OR - Verify the file on https://www.virustotal.com","closed","D-IE,","allaco","2017-12-13T14:56:18Z","2019-08-16T20:09:40Z"
"","5587","About ChromeDriver TimeoutExecption","## Meta - OS:  Windows 10  Selenium Version:  3.8.1  Browser:  Chrome   Browser Version:  65.0.3325.146   ## Expected Behavior - If I visit the site timeout occurred. Use js to open a new tab, and before the closing of the tab. ## Actual Behavior - Chrome's occurred timeout, but firefox not. ## Steps to reproduce -  ```python        browser_driver = driver.Chrome()        browser_driver.set_page_load_timeout(10)         try:             browser_driver.get(""https://wenku.baidu.com/"")         except TimeoutException:             js = 'window.open(""https://www.baidu.com/"");'             browser_driver.execute_script(js)             handlers = browser_driver.window_handles             browser_driver.switch_to.window(handlers[0])             browser_driver.close() ``` ![default](https://user-images.githubusercontent.com/18007341/37202306-1df5584e-23c5-11e8-972f-7125d8caed61.png) ![default](https://user-images.githubusercontent.com/18007341/37202324-286e5654-23c5-11e8-9a4d-fcbdbc4f33c9.png)","closed","R-awaiting answer,","idlefire","2018-03-09T10:12:06Z","2019-08-16T10:09:51Z"
"","5324","Selenium 3.8 dotnet DLL's are not CLS-compliant","## Meta - OS:  Windows 10  Selenium Version:  3.8.0  Browser:    Browser Version:     ## Actual Behavior (Issue) The webdriver DLL's are not CLS-compliant, so any project that uses them and that wants to be CLS-compliant, shows hundreds of warnings like this:   ![image](https://user-images.githubusercontent.com/8699293/34814746-1a0720e8-f6af-11e7-8277-7c0e0ce18c2e.png)  The CLS-compliant attribute may be set at assembly level, and you may see it using [ILSpy.net](https://github.com/icsharpcode/ILSpy#ilspy-------) or any other assembly decompiler. For example, using ILSpy.net, the webdriver.dll file looks like this:   ![image](https://user-images.githubusercontent.com/8699293/34776758-2d76ee0c-f618-11e7-9e26-a6ae49d27b26.png)  ## Expected Behavior - The webdriver DLL's should be CLS-compliant, like they were was on version 3.4.0:  ![image](https://user-images.githubusercontent.com/8699293/34814943-ce31bf9c-f6af-11e7-8850-72f6d2183cc4.png)  One possible solution could be this small modification in the ""WebDriver"" and ""WebDriver.Support"" projects of the Selenium .NET solution:  1. Create a folder called ""Properties"" 2. Create a file called ""AssemblyInfo.cs"" inside that folder with the following content:   ``` using System; using System.Reflection; using System.Runtime.CompilerServices; using System.Runtime.InteropServices;  [assembly: CLSCompliant(true)] ```  ## Steps to reproduce -  1. Download the latest [Selenium code from GitHub](https://github.com/SeleniumHQ/selenium) 2. Open the .NET solution (""dotnet > WebDriver.NET.sln"") in Visual Studio 3. Build all 4. Open [ILSpy.net](https://github.com/icsharpcode/ILSpy#ilspy-------) or any other assembly browser. Open webdriver.dll, located in ""build"" folder (for example, ""build > cli > Debug > net45"") 5. You WON'T see the following line: [assembly: CLSCompliant(true)], which meand the DLL is not CLS-compliant.","closed","C-dotnet,","mellamojaja","2018-01-11T08:22:41Z","2019-08-16T16:09:34Z"
"","5060","Selenium script was working fine in windows 7 and not working in windows 10, Also getting ""Nosuch Element exception""","## Meta - OS:  Windows 10  Selenium Version:  3.6.0.0  Browser:  Internet Explorer   Browser Version:  11   ## Expected Behavior - When the executing script in Windows 7 with IE11 + VSTS 2012 and VSTS 2013, VSTS 2015 script was working fine. It should be work for Windows 10 + VSTS 2015.  ## Actual Behavior - Script is not run on Windows 10 with VSTS 2015.  ## Steps to reproduce -","closed","","manoece90","2017-11-15T13:33:21Z","2019-08-17T02:09:51Z"
"","5181","Custom user agent string in MicrosoftEdge webdriver","## Meta - OS:  Windows 10  Selenium Version:  3.6.0  Browser:  MicrosoftEdge   Browser Version:  41.16299.15.0   ## Expected Behavior - Be able to custom a user agent string from Edge webdriver python. ## Actual Behavior - This behavior dose not exsist at all in Edge.  In Firefox there is: profile.set_preference('general.useragent.override', XXX) In Chrome there is: MyChromeOptions().add_argument('--user-agent=' + XXX)  ## Steps to reproduce -","closed","","SagitYehezkeli","2017-12-06T16:25:47Z","2019-08-16T22:09:42Z"
"","5676","c# querying Dom elements is very slow on dotnet core 2.","## Meta - OS:  WIndows 10  Selenium Version:  3.11.0  Browser:  Chrome   Browser Version:  62.0.3202.94    ## Expected Behavior - It should not take a long time to find Dom elements on the web page. ## Actual Behavior - It takes about 3 seconds to find a Dom element on the web page.   ## Steps to reproduce -  ``` var options = new ChromeOptions(); options.AddArguments(""disable-infobars"");  private ChromeDriver _webDriver; _webDriver = new ChromeDriver(options);  var element = _webDriver.FindElementById(""btnLogin"");  ```","closed","","nikheelr","2018-03-26T07:23:48Z","2019-08-16T08:09:59Z"
"","5574","ExecuteAsyncScript timing out C# console application","## Meta - OS:  Windows 10  Selenium Version:  3.10  Browser:  Chrome   Browser Version:  65.0.3325.146 (64 bit)   ## Expected Behavior - I'm trying to run the code below, in order to get the string response from XHtmlrequest:  `var result = js.ExecuteAsyncScript(                 ""var uri = arguments[0]; console.log(uri);"" +                 ""var callback = function(result){ return result; };"" +                 ""var toBase64 = function(buffer){ for (var r, n = new Uint8Array(buffer), t = n.length, a = new Uint8Array(4 * Math.ceil(t / 3)), i = new Uint8Array(64), o = 0, c = 0; 64 > c; ++c) i[c] = \""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"".charCodeAt(c); for (c = 0; t - t % 3 > c; c += 3, o += 4) r = n[c]  18],a[o + 1] = i[r >> 12 & 63],a[o + 2] = i[r >> 6 & 63],a[o + 3] = i[63 & r]; return t % 3 === 1 ? (r = n[t - 1], a[o] = i[r >> 2], a[o + 1] = i[r  10], a[o + 1] = i[r >> 4 & 63], a[o + 2] = i[r","closed","","ricardoperovano","2018-03-07T11:26:02Z","2019-08-16T11:09:48Z"
"","4923","issue of using selenium IDE to record in firefox","## Meta - OS:  Windows 10  Selenium Version:  2.9.1  Browser:  FireFox   Browser Version:  33.0   ## Expected Behavior - guide how to install IDE to record action ## Actual Behavior -  ## Steps to reproduce -   Hi Export, i am not possible to use selenium IDE to record in firefox, could you please suggest what's the exact issue is? thanks. ![image](https://user-images.githubusercontent.com/32993851/31858200-67a9ff8e-b724-11e7-80cd-1e85aec63f15.png) ![image](https://user-images.githubusercontent.com/32993851/31858201-6ec82bec-b724-11e7-8c83-b74c94f59788.png)","closed","","AiolosYang","2017-10-22T04:29:17Z","2019-08-17T06:09:45Z"
"","5790","Firefox webdriver not using browser caching","## Meta - OS:  Windows 10  Selenium Version:  2.47.0  Browser:  Firefox   Browser Version: 41.0.2 64-bit   ## Expected Behavior -  When loading a website with a specified cache folder, the browser will cache any of the files downloaded, and use the cache when loading the website (like a regular browser)  ## Actual Behavior -  No files from the website are cached. It does not use any caching mechanism when loading a website.  ## Steps to reproduce -  In firefox, type in `about:config` and then create a new key `browser.cache.disk.parent_directory` with a path of your choice, eg: `C:\temp`  Close the browser and re-open. You should see a `cache2` folder created. When you go to `google.com`, it will create a bunch of files inside the `entries` subfolder. You can verify that the cache is working by checking `about:cache`. This will verify that the custom cache directory works.  In Java, I use a custom firefox profile with the following preference:  ```` profile.setPreference(""browser.cache.disk.parent_directory"", ""C:\\temp""); ````  The custom cache directory will be created when webdriver starts the browser, but it does not cache any files from any websites it loads, even during the same session. So everytime we load a page, we need to re-download everything.","closed","","MxyL","2018-04-17T20:12:08Z","2019-08-16T05:09:53Z"
"","5401","Issue with chrome driver not able to switch to frame","## Meta - OS:  Windows 10  Selenium Version:   2.53  Browser:  Chrome   Browser Version:    Version 64.0.3282.119 (Official Build) (64-bit) ## Expected Behavior - While Switching to Frame it should switch to desired Frame using xpath given ## Actual Behavior - Fails to switch to desired frame directly using xpath ## Steps to reproduce -  No specific step code was working fine till **chrome driver version 2.29** on **chrome version 62.00** and works fine on IE driver as well with same code Now after using **chrome driver 2.35** with chrome version **64**,  I see the issue I googled and found same issue reported earlier and closed   [Similar old issue that was closed ](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/1969)  If i use the workaround suggested in same thread I see it works  ie Find Frame by its xpath  then again switch to same frame by using getattribute id  something like:  ``` WebElement frame = drv.findElement(By.xpath(""//iframe[@title='...']"")); 		drv.switchTo().frame(frame.getAttribute(""id"")); ```  This used to work in older chrome driver 2.29 and below with chrome version 62 and below and still works on Internet explorer driver. `wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.id("".."")));`  Please confirm if this is issue Let me know if threre are plans to fix this so that I may twaek my framework accordingly","closed","D-chrome,","prasannarhegde2015","2018-01-28T11:35:31Z","2019-08-14T09:09:58Z"
"","5377","TypeError: Libs.Selenium.WebElement.subelement object is not JSON serializable","## Meta - OS:  Windows 10  Selenium Version:   3.33  Browser:   Chrome   Browser Version:   Version 63.0.3239.132 (Official Build) (64-bit)  ## Expected Behavior - driver.execute_script(js, ele) should work.  ## Actual Behavior - TypeError:  is not JSON serializable  ## Steps to reproduce - I created StaticElement to inherit selenium original WebElement in my script running with Chrome browser. But it failed to execute js with wrror ""TypeError: Libs.Selenium.WebElement.subelement object is not JSON serializable"".  After that, I tried to type my StaticElement to WebElement.  Besides, I have read issues#2666, and I don't think it helps on Chrome browser. Can you guys take a look? Thanks!","closed","","cindysongzi","2018-01-22T09:29:13Z","2019-08-16T14:09:49Z"
"","5499","ChromeWebDriver.dispose() does not execute HTTP command after timeout","## Meta - OS:  Windows 10  Selenium Version:   ""Selenium.WebDriver"" version=""3.8.0"" ""Selenium.WebDriver.ChromeDriver"" version=""2.34.0""  Browser:   Chrome   Browser Version:   Versjon 64.0.3282.167 (64-bit)  ## Expected Behavior - driver.Dispose(); - close open drivers and clean up their processes. This works if no timeout occurs.  ## Actual Behavior - chromedriver.exe is registered as an app in Task manager, with two ""children"":  ![image](https://user-images.githubusercontent.com/36502463/36252074-bedc9774-1243-11e8-86ef-f90449dfca3e.png)  When driver.dispose() is called after a timeout in the browser, the HTTP command directed to the webdriver is not executed.   ""OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL http://localhost:`port`/session/`sessionid`/element timed out after 60 seconds.   ----> System.Net.WebException : The request was aborted: The operation has timed out.""  Only the ""chromedriver.exe"" app and processchild is killed, leaving the Console window Host an orphan process. However, this orphaned process is holding the chromedriver.exe process, so the next time we run our tests the build folder cannot be cleaned.   ## Steps to reproduce - The ReproduceError() test, will as the name says, reproduce the error as long as a breakpoint in fiddler are set: bpu https://google.com and one waits for selenium to timeout. The windows will not close, in the cleanup.  We have a temporary worakaround demonstrated in ErrorWorkAround(), using processid's to kill the process in question (still using a breakpoint in fiddler, and waiting for the timeout to appear).           [Test]         public void ReproduceError()         {             using (var driver = new ChromeDriver())             {                 try                 {                     driver.Navigate().GoToUrl(""https://bing.com"");                     // Set breakpoint in fiddler: bpu https://google.com                     // Wait for selenium to timeout                     driver.Navigate().GoToUrl(""https://google.com"");                     driver.FindElementById(""fkbx-text"");                 }                 finally                 {                     driver.Dispose();                 }             }         }          [Test]         public void ErrorWorkAround()         {             var service = ChromeDriverService.CreateDefaultService();             ChromeDriver driver;             try             {                 driver = new ChromeDriver(service);                                  driver.Navigate().GoToUrl(""https://bing.com"");                 // Set breakpoint in fiddler: bpu https://google.com                 // Wait for selenium to timeout                 driver.Navigate().GoToUrl(""https://google.com"");                 driver.FindElementById(""fkbx-text"");             }             finally             {                 var pid = service.ProcessId;                 Process.GetProcessById(pid).CloseMainWindow();             }         }","closed","C-dotnet,","ktakle","2018-02-15T14:25:22Z","2021-09-05T08:06:31Z"
"","5806","Selenium Web-driver  IE11 unable to perform click operation ?","## Meta - OS:  Windows 10  Selenium Versio: 3.5  Browser:  Internet Explorer    HI Team, I am unable to perform click operation in internet explorer 11 and I used all the list of possible ways like desired capabilities, internet options settings, javascript executors and I drown graded my version and both selenium and IE driver but still no luck my end please could help one this.  1.There are no issues with other browsers like chrome and firefox. 2.It was developed by QlikView. 3. And the same code will be executed fine in chrome.   Note 👍   1. I checked the different version of selenium and ie11 driver also. 2.checked Action class but no luck. 3.Done the settings of IE like All Zones, Sizes,  Desired capabilities but there is no luck my end.    Why it was not able to click if you have documents please reply me.  Thanks Rama","closed","D-IE,","ram3131","2018-04-19T11:49:01Z","2019-08-15T04:09:36Z"
"","5748","IEdriver initialize failed.","## Meta - OS:  Windows 10  Browser:  Internet Explorer   Browser Version: IE11     ## Expected Behavior - I tried initialize my iedriver but failed, i was setting my config as [doc says](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#required-configuration)   Plz help me find out the problem!  (I also tested other driver like Chromedriver run my code, it's can work.)  ## Actual Behavior -  `from selenium import webdriver` `driver = webdriver.Ie(log_level= 'DEBUG', log_file = r'D:\Google Drive\Project\autologinVPN\logfile.txt')`  Traceback (most recent call last):   File ""D:/Google Drive/Project/autologinVPN/Main.py"", line 5, in      driver = webdriver.Ie(log_level= 'DEBUG', log_file = r'D:\Google Drive\Project\autologinVPN\logfile.txt')   File ""C:\Program Files\Python36\lib\site-packages\selenium\webdriver\ie\webdriver.py"", line 87, in __init__     desired_capabilities=capabilities)   File ""C:\Program Files\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""C:\Program Files\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Program Files\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 310, in execute     response = self.command_executor.execute(driver_command, params)   File ""C:\Program Files\Python36\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 466, in execute     return self._request(command_info[0], url, body=data)   File ""C:\Program Files\Python36\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 528, in _request     resp = opener.open(request, timeout=self._timeout)   File ""C:\Program Files\Python36\lib\urllib\request.py"", line 526, in open     response = self._open(req, data)   File ""C:\Program Files\Python36\lib\urllib\request.py"", line 544, in _open     '_open', req)   File ""C:\Program Files\Python36\lib\urllib\request.py"", line 504, in _call_chain     result = func(*args)   File ""C:\Program Files\Python36\lib\urllib\request.py"", line 1346, in http_open     return self.do_open(http.client.HTTPConnection, req)   File ""C:\Program Files\Python36\lib\urllib\request.py"", line 1321, in do_open     r = h.getresponse()   File ""C:\Program Files\Python36\lib\http\client.py"", line 1331, in getresponse     response.begin()   File ""C:\Program Files\Python36\lib\http\client.py"", line 297, in begin     version, status, reason = self._read_status()   File ""C:\Program Files\Python36\lib\http\client.py"", line 258, in _read_status     line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"")   File ""C:\Program Files\Python36\lib\socket.py"", line 586, in readinto     return self._sock.recv_into(b) ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host遠端主機已強制關閉一個現存的連線。  Here is DEBUG logfile: I 2018-04-10 13:29:17:539 server.cc(86) Starting WebDriver server on port: '50847' on host: '' I 2018-04-10 13:29:17:539 IEServer.cpp(33) Driver version: 3.9.0.0 (64-bit) D 2018-04-10 13:29:17:539 server.cc(148) Civetweb ACL is -0.0.0.0/0,+127.0.0.1 D 2018-04-10 13:29:20:540 server.cc(281) Command: POST /session {""capabilities"": {""firstMatch"": [{}], ""alwaysMatch"": {}}, ""desiredCapabilities"": {}} D 2018-04-10 13:29:20:540 IESession.cpp(53) Mutex acquired for session initalization D 2018-04-10 13:29:20:544 IESession.cpp(109) Releasing session initialization mutex D 2018-04-10 13:29:20:544 command.cc(36) Raw JSON command: { ""name"" : ""newSession"", ""locator"" : { }, ""parameters"" : {""capabilities"": {""firstMatch"": [{}], ""alwaysMatch"": {}}, ""desiredCapabilities"": {}} } D 2018-04-10 13:29:20:544 CommandHandlers\NewSessionCommandHandler.cpp(46) Found W3C capabilities structure D 2018-04-10 13:29:20:544 CommandHandlers\NewSessionCommandHandler.cpp(208) Found alwaysMatch in capabilities D 2018-04-10 13:29:20:544 CommandHandlers\NewSessionCommandHandler.cpp(572) Validating capabilities object D 2018-04-10 13:29:20:544 CommandHandlers\NewSessionCommandHandler.cpp(572) Validating capabilities object   ## Steps to reproduce -","closed","","kevin94chen","2018-04-10T06:03:29Z","2021-09-05T08:34:55Z"
"","5150","Getting error as No matching capability sets found for IE Driver 3.7 in remote machine","## Meta - OS:  Windows   Selenium Version:  3.7.0  Browser:  IE   Browser Version:  11.0.48   ## Expected Behavior -  ## Actual Behavior - Caused by: org.openqa.selenium.SessionNotCreatedException: No matching capability sets found. Unable to match capability set 0: platformName must be 'windows', but was 'win8' Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:07:36.161Z' Driver info: driver.version: unknown remote stacktrace:  ## Steps to reproduce - I have given platform name in config file as below browserType=internet explorer browserVersion=11 platform=WIN8 remoteWebDriverUrl=Grid URL  I have given capabilities in node as below {           ""browserName"": ""internet explorer"",           ""version"": ""11"",           ""platform"": ""WIN8"",           ""maxInstances"": 10 		 }","closed","D-IE,","Elakkiyaab","2017-11-30T14:09:33Z","2019-08-15T05:09:52Z"
"","5030","Disconnectedundefined message is really confusing.","## Meta - OS:  Windows Selenium Version:  3.6.0 Browser:  IE 11 Browser Version:  11.1480  ## Expected Behavior - All test pass ## Actual Behavior - I have Disconectedundefined error and my test suit fails. ## Steps to reproduce -  I have setup that consist of Slenium Grid . Several nodes that run Firefox, Chrome, IE10 on Windows and Safari 10 on MacOS. Projects use Karma for e2e tests that are hooked up to Selenium grid.    I have this one project that constantly fails . Its started with failures in Safari.  I could not find errors in logs on any side of the setup. The only thing that was abnormal was error message Disconnectedundefined message in karma log. Ive disconnected Safari browser . The same issue appeared on IE couple of days later.  QUESTION: How can i even debug such situation.  Lack of error message is very disturbing, i cant blame developers since i cant point out problem.","closed","","AlexShemeshWix","2017-11-08T10:56:15Z","2019-08-17T03:09:38Z"
"","5405","Timed out receiving message from renderer","## Meta - OS:  Window XP Selenium Version:  3.60 Browser:  chrome Browser Version: 49.0.2623.112 (32-bit)     (Session info: chrome=49.0.2623.112)   (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Windows NT 5.1 SP3 x86) Traceback (most recent call last):   File """", line 141, in    File ""E:\Code\Python\AutoOptimize\autooptimize\operateprocess\processFactory.py"", line 42, in excecute   File ""E:\Code\Python\AutoOptimize\autooptimize\operateprocess\baiduMapProcess.py"", line 45, in execute   File ""C:\Users\Administrator\AppData\Roaming\Python\Python34\site-packages\splinter\driver\webdriver\__init__.py"", line 185, in visit   File ""C:\Users\Administrator\AppData\Roaming\Python\Python34\site-packages\selenium\webdriver\remote\webdriver.py"", line 320, in get   File ""C:\Users\Administrator\AppData\Roaming\Python\Python34\site-packages\selenium\webdriver\remote\webdriver.py"", line 308, in execute   File ""C:\Users\Administrator\AppData\Roaming\Python\Python34\site-packages\selenium\webdriver\remote\errorhandler.py"", line 194, in check_response selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.486   (Session info: chrome=49.0.2623.112)   (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Windows NT 5.1 SP3 x86)  My computer is old and very slow。But this problem happend inconditiontly.How can I add the time of renderer.","closed","","AllenLink","2018-01-30T04:38:05Z","2019-08-16T15:09:59Z"
"","5369","Firefox - C# - (3.8.0) - Null Exception thrown when try to Capture javascript console logs.","## Meta - OS:  Window Sever 2012 Selenium Version:   3.8.0 Browser:   Firefox Browser Version:   57.0.4 (64-bit)  ## Expected Behavior -  Capture javascript console logs  ## Actual Behavior - Null Exception  ## Steps to reproduce -                    Configuration:                      FirefoxOptions options = new FirefoxOptions();                     options.SetLoggingPreference(LogType.Browser, LogLevel.All);                     var driver = new FirefoxDriver(@""C:\Selenium"",options);                     driver.Navigate().GoToUrl(""https://www.google.com."");                     IJavaScriptExecutor js = (IJavaScriptExecutor)driver;                     js.ExecuteScript(""console.error('log error')"");                     List logs = driver.Manage().Logs.GetLog(LogType.Browser).ToList();","closed","","beloquintana","2018-01-19T19:46:17Z","2019-08-16T16:09:45Z"
"","5817","Unable to maximize and find element not working in the chrome browser using intelliJ Idea 2018.1","## Meta - OS:  window 7 professional 64 bit with service pack 1  Selenium Version:  selenium-server-standalone-3.11.0  Browser:  Chrome   ## **Code** `package SeleniumTutorial;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.NoSuchElementException;  import java.util.concurrent.TimeUnit;  public class selectCalender {     public static void main(String[] args) throws InterruptedException {          System.setProperty(""webdriver.chrome.driver"", ""H:\\software\\Selenium & Java & Components\\drivers\\chromedrive\\chromedriver.exe"");         WebDriver driver = new ChromeDriver();// launch chrome          driver.manage().window().maximize(); // maximize the window        driver.manage().deleteAllCookies(); // delete all cookies          driver.manage().timeouts().pageLoadTimeout(40, TimeUnit.SECONDS);          driver.manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);         driver.get(""https://www.freecrm.com/"");          driver.findElement(By.name(""username"")).sendKeys(""jashangunike"");         driver.findElement(By.name(""password"")).sendKeys(""test@123"");         Thread.sleep(5000);         driver.findElement(By.className(""btn btn-small"")).click();          driver.switchTo().frame(""mainpanel"");      } } ` ## **_Error Log_**  > ""C:\Program Files\Java\jdk1.8.0_131\bin\java.exe"" ""-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.1.1\lib\idea_rt.jar=61795:C:\Program Files\JetBrains\IntelliJ IDEA 2018.1.1\bin"" -Dfile.encoding=UTF-8 -classpath ""C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Users\jashan\IdeaProjects\SeleniumJava\out\production\SeleniumJava;H:\selenium-server-standalone-3.11.0.jar"" SeleniumTutorial.selectCalender Starting ChromeDriver 2.30.477700 (0057494ad8732195794a7b32078424f92a5fce41) on port 39835 Only local connections are allowed. Apr 22, 2018 11:14:57 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Exception in thread ""main"" org.openqa.selenium.WebDriverException: disconnected: unable to connect to renderer   (Session info: chrome=66.0.3359.117)   (Driver info: chromedriver=2.30.477700 (0057494ad8732195794a7b32078424f92a5fce41),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z' System info: host: 'JASHAN-PC', ip: '192.168.119.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_131' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptSslCerts: true, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.30.477700 (0057494ad87321..., userDataDir: C:\Users\jashan\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.117, webStorageEnabled: true} Session ID: 9e7a2c5cf96e947bfc0590415db35c5b 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:836) 	at SeleniumTutorial.selectCalender.main(selectCalender.java:17)  Process finished with exit code 1","closed","","jashangunike","2018-04-22T17:53:25Z","2019-08-16T05:09:38Z"
"","5674","unable to sendkey in selenium - call function result missing 'value'","## Meta - OS:  Window 7 Selenium Version:  3.8.1 Browser:  Chrome 65.0.3325.181   ## Expected Behavior - on email control ""rahul"" should get typed ## Actual Behavior - facebook page iopened and ""rahul""  is not typed. it display below error Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: call function result missing 'value' Note: It was running good uesterd although I found this error today. Note: Chrome Version-65.0.3325.181  ## Steps to reproduce - I have written below code driver.get(""http://facebook.com""); driver.findElement(By.xpath(""//*[@id='email']"")).sendKeys(""rahul"");","closed","","oxiput","2018-03-24T13:35:27Z","2019-08-16T03:09:39Z"
"","5517","Firefox related error: UnsupportedOperationError: sendKeysToActiveElement with sendkeys","## Meta - OS:  Win7 Selenium Version:  Standalone Server 3.9.1 Browser:  Firefox 58.0.2  Geckodriver 0.19.1 Protractor: 5.3.0  ## Expected Behavior - sending keys to browser via sendKeys() function  ## Actual Behavior - I get this error: UnsupportedOperationError: sendKeysToActiveElement with sendkeys ## Steps to reproduce -  This is the code where the error occurs. This works perfectly when running in Chrome.  ``var loginForm = element(by.id(""loginForm""));             loginForm.isPresent().then(function(result) {                 if (result) {                     element(by.id(""username"")).isPresent().then(function(result) {                         if (result) {                             element(by.id(""username"")).clear().sendKeys(browser.params.dev_username);                         }                     });                     element(by.id(""password"")).isPresent().then(function(result) {                         if (result) {                             element(by.id(""password"")).clear().sendKeys(browser.params.dev_password);                         }                     });                 }             }); ``","closed","","bsarkadi","2018-02-21T10:29:02Z","2019-09-04T20:09:35Z"
"","5484","Open the same instance of browser every time with the same UUID","## Meta - OS:  Win7  Selenium Version:  3.6.0  Browser:  Opera   Browser Version:   48.0.2685.52 (PGO) (64bit)  ## Expected Behavior - To open every instance of browser with the same UUID, and the same as the ""normal"" browser when i click on it  ## Actual Behavior - It open every time with different UUID, so i am unable to login to site because it's not the same UUID of browser  ## Steps to reproduce - every time you open a browser with selenium it open a new profile with a new UUID, i just want to open the same profile as a browser when i open it manually with the same UUID, i am using python.","closed","","Bo-M","2018-02-12T18:21:55Z","2019-08-16T13:09:40Z"
"","4943","CSS selector cannot identify the new attribute for input type.","## Meta - OS:  win10  Selenium Version: 3.5    Browser:  chrome the latest   Browser Version:  61.0.3163.100 (64 bits)   ## Expected Behavior - driver.findElement(By.cssSelector(""input[data-ctm-test='userName']"")).sendKeys(""Admin""); can be recognized. ## Actual Behavior - Exception encounter by no element is found. ## Steps to reproduce - The name and id will be different for each publish so we mock up a new attribute called data-ctm-test for CSS selector to identify as below:","closed","R-awaiting answer,","timcons2","2017-10-24T21:44:54Z","2019-08-17T03:09:48Z"
"","4950","doubleClick with selenium-html-runner-3.6.0 doesn't work on firefox 53","## Meta - OS:  win 8.1 Selenium Version:  selenium-html-runner-3.6.0 Browser:  firefox  Browser Version:  53.0  ## Expected Behavior - Hello everyone. Thank you for watching my issue. In my testcase I want to perform a doubleClick throught html-runner command  ## Actual Behavior - In selenium-IDE-2.9.1 it works but when I launch the script with html-runner-3.6.0 and a htmlSuite the log said that the command passed but nothing happened on firefox. It works for chrome.  ## Steps to reproduce - in my test case: doubleClick | //div[3]/div/div[2]/div/table/tbody[2]/tr/td/div |  java -jar selenium-html-runner-3.6.0.jar -htmlSuite  *firefox  @baseURL testSuite.html log.html","closed","","jeirgino","2017-10-25T09:46:53Z","2019-08-17T05:10:02Z"
"","5365","On the main Selenium Page, the link to the Selenium Standalone gives you a massive com folder and not the jar file.","## Meta - OS:  Win 7  Selenium Version:  3.8.1  Browser:  IE 11   Browser Version:     ## Expected Behavior - On the Main Selenium Download page, you click to down load the Selenium standalone 3.8.1.  ## Actual Behavior - Instead of getting the jar file, you get a massive folder of unexplained code. If you hover both links go to the same place. ## Steps to reproduce - http://www.seleniumhq.org/download/ Download version 3.8.1   To run Selenium tests exported from IDE, use the Selenium Html Runner.","closed","","ghost","2018-01-18T20:15:00Z","2021-09-05T10:20:38Z"
"","5263","IE11 Don't work InPrivate Mode and ie.ensureCleanSession with RemoteWebDriver","## Meta - OS:  WIN 10 x64 1709 16299.64  Selenium Version:   Server 3.8.1  Client 3.8.0 IEDriverServer.exe 3.80  Browser:   Internet Explorer 11  Browser Version:   11.64.16299.0  ## Expected Behavior - The browser starts with clean cookie, localstorage, history and etc ## Actual Behavior - The browser starts with the data from the last session ## Steps to reproduce - https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver Follow the instructions Required Configuration and Multiple instances of InternetExplorerDriver  ``` >>> import selenium >>> selenium.__version__ '3.8.0' >>> from selenium import webdriver >>> opt = webdriver.ie.options.Options() >>> opt.force_create_process_api=True >>> opt.add_argument('-private') >>> caps = webdriver.DesiredCapabilities.INTERNETEXPLORER.copy() >>> caps.update(opt.to_capabilities()) >>> caps {'platform': 'WINDOWS', 'browserName': 'internet explorer', 'se:ieOptions': {'ie.browserCommandLineSwitches': '-private', 'ie.forceCreateProcessApi': True}, 'version': ''} >>> driver = webdriver.Remote(command_executor='http://host:4445/wd/hub', desired_capabilities=caps) >>> driver.get('https://google.com')  **Enter your login and password to log in to your account** >>> driver.quit()  >>> driver = webdriver.Remote(command_executor='http://host:4445/wd/hub', desired_capabilities=caps) >>> driver.get('https://google.com')  **Authentication already passed** ```  The same thing you need to repeat with the option ie.ensureCleanSession","closed","D-IE,","theproshin","2017-12-26T17:16:17Z","2019-08-16T01:09:38Z"
"","5457","The HTTP request to the remote WebDriver server for URL http://localhost:42607/session timed out after 60 seconds.","## Meta - OS:  Win 10 c64  Selenium Version:  3.9.0.0 Selenium.WebDriver.ChromeDriver version=""2.35.0"" targetFramework=""net47""   Browser:  Chrome Version 64.0.3282.140 (Official Build) (64-bit)    ## Expected Behavior - Get data back. It is the same code I use in my unit test. My unit test passes successfully, but when running in IIS I get the error below. ## Actual Behavior -  Throws exception when hitting the chromeDriver constructor. Strange exception message is: http://localhost:42607/session timed out after 60 seconds. I do not do a request to this url? I don't know where it comes from?! When I open this url in chrome, it displays: Unknown command.  > { >     ""Message"": ""An error has occurred."", >     ""ExceptionMessage"": ""The HTTP request to the remote WebDriver server for URL http://localhost:42607/session timed out after 60 seconds."", >     ""ExceptionType"": ""OpenQA.Selenium.WebDriverException"", >     ""StackTrace"": ""   at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)\r\n   at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)\r\n   at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)\r\n   at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)\r\n   at Web.Scraping.WebApi.ScrapeController.Post(List`1 listDTO) in C:\\Users\\Admin\\Documents\\Visual Studio 2017\\Projects\\Phantomjs.UnitTests\\Web.Scraping.WebApi\\ScrapeController.cs:line 45\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.c__DisplayClass10.b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ActionFilterResult.d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.d__1.MoveNext()"", >     ""InnerException"": { >         ""Message"": ""An error has occurred."", >         ""ExceptionMessage"": ""The request was aborted: The operation has timed out."", >         ""ExceptionType"": ""System.Net.WebException"", >         ""StackTrace"": ""   at System.Net.HttpWebRequest.GetResponse()\r\n   at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)"" >     } > }  ## Steps to reproduce - This code works fine in my unit test and also worked fine in IIS before, but out of sudden it is broken.   ``` var co = new ChromeOptions();             co.AddArgument(""headless"");             co.AcceptInsecureCertificates = true;             co.PageLoadStrategy = PageLoadStrategy.Normal;              Dictionary dic = new Dictionary();              using (var driver = new ChromeDriver(co))             {                 try                 {                     var urls = new string[] { paypalUrl, noPaypalUrl, paypalUrl1 };                     driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10);                      for (int i = 0; i < urls.Length; i++)                     {                         var url = urls[i];                          var exists = driver.CheckElementExists(url,                              wt => !string.IsNullOrWhiteSpace(wt.FindElement(By.CssSelector(""ul.payment-type-list"")).Text), ""li.pt-paypal"");                          dic.Add(url, exists);                     }                      driver.Close();  ....    static IWebElement TryFindElementByCssSelector(this ChromeDriver self, string cssSelector)         {             try             {                 return self.FindElementByCssSelector(cssSelector);             }             catch (Exception) { }              return null;         }          public static bool CheckElementExists(this ChromeDriver driver, string url, Func waitCondition, string cssSelectorToLookFor)         {             driver.Navigate().GoToUrl(url);             var wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));             wait.Until(waitCondition);              var liPaypal = driver.TryFindElementByCssSelector(cssSelectorToLookFor);              return liPaypal == null ? false : true;         } ```","closed","","Legends","2018-02-07T16:04:55Z","2019-02-05T03:56:56Z"
"","5290","Firefox profile not applying","## Meta - OS:  Win 10 64  Selenium Version:  3.8.0, WebDriver, C#, GeckoDriver  Browser: Firefox   Visual Studio 2017 Pro  npm installed in project: Selenium.Support Selenium.WebDriver Selenium.WebDriver.ChromeDriver Selenium.WebDriver.GeckoDriver.Win64 Selenium.WebDriver.IEDriver Selenium.WebDriverBackedSelenium  Browser Version:   Name: Firefox Version.: 57.0.3 Build-ID: 20171226083017  (64-bit) User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0   ## Expected Behavior - Firefox should use the provided profile  ## Actual Behavior - Firefox is not using the provided profile  ## Steps to reproduce - Code to reproduce: ``` private IWebDriver _driver;  private void button1_Click(object sender, EventArgs e) { var profileManager = new FirefoxProfileManager(); FirefoxProfile profileF = profileManager.GetProfile(""Selenium""); FirefoxOptions opt= new FirefoxOptions(); opt.Profile = profileF; _driver = new FirefoxDriver(opt); }  ```  Same result for: ```  private IWebDriver _driver;  private void button1_Click(object sender, EventArgs e) { var profileManager = new FirefoxProfileManager(); FirefoxProfile profileF = profileManager.GetProfile(""Selenium""); _driver = new FirefoxDriver(profileF); }  ```  For creating this profile use in windows run command: ""firefox.exe -P"" while no instance of firefox is open. There is a menu for creating a profile with name like above.  Geckodriver will open an instance of cmd, in this cmd you will already see there will be ""-profile"" ""something\\rust_mozprofile.randomnumber"" instead of the profile you have chosen. ![image](https://user-images.githubusercontent.com/4158547/34602997-60230cc4-f202-11e7-99df-ca7a4a32b423.png)  This can also be seen when looking inside browser: Help -> Troubleshooting Information -> Profile Folder - Show Folder This will lead to the random profile instead of the chosen one. ![image](https://user-images.githubusercontent.com/4158547/34603026-75b4fdae-f202-11e7-9af8-dec857077017.png)  In Debug it is visible that the correct profile is in the options. Or chosen by firefoxprofile.  AddArguments could solve this issue, but when doing it the same way as in cmd (see above) by ""-profile"" ""%absolute_path%"" you will get the error that arguments need to begin with ""--"" two minus. So you cannot write the arguments as they should be written.","closed","D-firefox,","HthSolid","2018-01-05T09:29:29Z","2019-08-15T23:09:42Z"
"","5195","Receiving the error Window is closed with the IE driver 3.8.0 and selenium webdriver3.8.0","## Meta - OS:  Win 10  Selenium Version:  3.8.0  Browser:  IE 11   Browser Version:     ## Expected Behavior - Error should not be received stating Window is Closed, since window is open  ## Actual Behavior - Receiving error message stating Window is Closed with the IE Driver 3.8.0 and webdriver 3.8.0  ## Steps to reproduce -","closed","","KS261187","2017-12-10T02:44:10Z","2019-08-16T21:09:52Z"
"","5339","Documentation snippet for Javascript doesn't work","## Meta - OS:  Ubuntu/GNU/Linux Selenium Version:   selenium-webdriver@4.0.0-alpha.1 Browser:  Chrome  I just wanted to let you know that the JAVASCRIPT snippet here: http://docs.seleniumhq.org/docs/03_webdriver.jsp  Which reads as follows:      var driver = new webdriver.Builder().build();     driver.get('http://www.google.com');      var element = driver.findElement(webdriver.By.name('q'));     element.sendKeys('Cheese!');     element.submit();      driver.getTitle().then(function(title) {       console.log('Page title is: ' + title);     });      driver.wait(function() {       return driver.getTitle().then(function(title) {         return title.toLowerCase().lastIndexOf('cheese!', 0) === 0;       });     }, 3000);      driver.getTitle().then(function(title) {       console.log('Page title is: ' + title);     });      driver.quit();  Has a ""number"" of issues:  * `require` is missing * `forBrowser()` is missing (so yes, even by adding the `require()`, it still doesn't work * It doesn't use the MUCH more readable async/await feature of ES6 (and it really should) * `driver.quit()` is not nested into a `then`, which means it might happen *before* things have finished  This is what the snippet could look like:      const webdriver = require('selenium-webdriver');      (async function () {       try {         var driver = new webdriver.Builder().forBrowser('chrome').build()         await driver.get('http://www.google.com')          var element = await driver.findElement(webdriver.By.name('q'))         await element.sendKeys('Cheese!')         await element.submit()          var title = await driver.getTitle()         console.log('Page title is: ' + title)         await driver.quit()       } catch (e) {         console.log('Error', e)       }     })()  After writing all of this, I just realised that the snippet is https://www.npmjs.com/package/selenium-webdriver is very similar to mine.","closed","C-docs,","mercmobily","2018-01-14T16:40:42Z","2020-06-24T23:48:05Z"
"","5247","set_window_size crashing browser","## Meta - OS:  Ubuntu Server 16.04  Selenium Version:  3.8.0  Browser:  Chrome   Browser Version:  63.0.3239.84   ## Expected Behavior - Save screenshot of very long page. ## Actual Behavior - ``` Traceback (most recent call last):   File ""do.py"", line 13, in      browser.get(""https://github.com/SeleniumHQ/docker-selenium/issues/520"")   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 323, in get     self.execute(Command.GET, {'url': url})   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed   (Session info: headless chrome=63.0.3239.84)   (Driver info: chromedriver=2.34.522913 (36222509aa6e819815938cbf2709b4849735537c),platform=Linux 4.4.0-87-generic x86_64) ```  ## Steps to reproduce - ``` from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  options = webdriver.ChromeOptions() options.add_argument('headless')  browser = webdriver.Remote(         command_executor = 'http://selenium:4444/wd/hub',         desired_capabilities = options.to_capabilities())  browser.set_window_size(1280, 10000) browser.maximize_window() browser.get(""https://github.com/SeleniumHQ/docker-selenium/issues/520"") browser.save_screenshot(""s.png"") browser.quit() ``` Reducing height to under 2000px seems to work most of the time, although sometimes I get the same error for lower height.","closed","","JClant","2017-12-22T14:32:43Z","2019-08-16T19:09:56Z"
"","5643","WebDriver ruby API tries to call new for nil class in Selenium::WebDriver.for","## Meta - OS:  Ubuntu 17.10 (64 bit)  Selenium Version:  selenium-webdriver 3.11.0  Browser:  Firefox   ## Expected Behavior - A functional driver instance.  ## Actual Behavior - Uncaught exception: undefined method `new' for main:Object 	/home/jeffery/RubymineProjects/selenium/navigate.rb:3:in `'  Using RubyMine, it looks like the for method gets to its last step in driver.rb:  def initialize(bridge, listener: nil)         @bridge = bridge         @bridge = Support::EventFiringBridge.new(bridge, listener) if listener end  The error occurs upon return from this  superclass constructor, which should return back through the stack to the original for method.  Everything to this point appears to be set up properly: geckodriver is started, the session request is successful, and  browser window appears.  It seems like the ruby stack is corrupted in some fashion.  ## Steps to reproduce - Firefox 59.0.1 (64-bit) selenium-webdriver 3.11.0 ruby 2.5.0 geckodriver 0.20.0 Ubuntu 17.10 (64 bit)  Code (navigate.rb):  require 'selenium-webdriver'  driver = Selenium::WebDriver.for :firefox  # error here line 3 driver.navigate.to 'http://google.com' driver.quit","closed","","jeffery-cavallaro-cavcom","2018-03-20T04:53:05Z","2019-08-16T09:09:55Z"
"","5433","How to use selenium with ?","## Meta - OS:  Ubuntu 17.10 Selenium Version:  3.8.1(I think), in Python Browser:  Firefox  ## Expected Behavior - The form should get submitted ## Actual Behavior - The button is never even clicked ## The problem - I tried clicking the button manually after having python fill the form, and it worked. However, when I let python do the clicking, it doesn't work. I figured that this is because it is not a regular button, but an input with type submit. How do I make this work? Also, all of this is not inside a form but a fieldset.","closed","","cubetastic33","2018-02-03T16:27:00Z","2019-08-16T15:09:37Z"
"","5711","session deleted twice? not sure if this is a selenium bug or a geckodriver bug?","## Meta - OS:  Ubuntu 17.10 Selenium Version:  3.8.1 Browser:  Firefox 59.0.2  My tests are OK with selenium 3.4.0 + geckodriver 0.16.1 but after upgrading to selenium 3.8.1 with geckodriver 0.19.1 I started to see errors due to a ""session being deleted twice"". To narrow down the issue I tested a bunch of versions and I noticed that selenium 3.5.0 + geckodriver 0.16.1 (i.e. slight selenium upgrade and no change for geckodriver) was enough to reproduce the bug.  I'm including selenium 3.8.1. + geckodriver 0.19.1 logs (with geckodriver TRACE logging enabled) below: [full-log-selenium-3.8.1-with-geckodriver-0.19.1.txt](https://github.com/SeleniumHQ/selenium/files/1864879/full-log-selenium-3.8.1-with-geckodriver-0.19.1.txt)  The session being deleted twice is visible in this part specifically: ``` 23:35:10.435 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6957251c 23:35:10.435 INFO - Handler thread for session e9867af1-cc3b-40c2-9691-279b4ce66cad (firefox): Executing POST on /session/e9867af1-cc3b-40c2-9691-279b4ce66cad/keys (handler: ServicedSession) 23:35:10.443 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6957251c 23:35:10.443 INFO - Handler thread for session e9867af1-cc3b-40c2-9691-279b4ce66cad (firefox): Executing POST on /session/e9867af1-cc3b-40c2-9691-279b4ce66cad/actions (handler: ServicedSession) 23:35:10.551 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6957251c 23:35:10.551 INFO - Handler thread for session e9867af1-cc3b-40c2-9691-279b4ce66cad (firefox): Executing DELETE on /session/e9867af1-cc3b-40c2-9691-279b4ce66cad (handler: ServicedSession) 23:35:10.552 DEBUG - CookieSpec selected: default 23:35:10.552 DEBUG - Auth cache not set in the context 23:35:10.552 DEBUG - Connection request: [route: {}->http://localhost:30990][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 23:35:10.553 DEBUG - Connection leased: [id: 345][route: {}->http://localhost:30990][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 23:35:10.553 DEBUG - Opening connection {}->http://localhost:30990 23:35:10.553 DEBUG - Connecting to localhost/127.0.0.1:30990 23:35:10.553 DEBUG - Connection established 127.0.0.1:37448127.0.0.1:30990 23:35:10.553 DEBUG - http-outgoing-345: set socket timeout to 10800000 23:35:10.553 DEBUG - Executing request DELETE /session/e9867af1-cc3b-40c2-9691-279b4ce66cad HTTP/1.1 23:35:10.553 DEBUG - Target auth state: UNCHALLENGED 23:35:10.553 DEBUG - Proxy auth state: UNCHALLENGED 23:35:10.553 DEBUG - http-outgoing-345 >> DELETE /session/e9867af1-cc3b-40c2-9691-279b4ce66cad HTTP/1.1 23:35:10.553 DEBUG - http-outgoing-345 >> Host: localhost:30990 23:35:10.553 DEBUG - http-outgoing-345 >> Connection: Keep-Alive 23:35:10.553 DEBUG - http-outgoing-345 >> User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_161) 23:35:10.553 DEBUG - http-outgoing-345 >> Accept-Encoding: gzip,deflate 23:35:10.553 DEBUG - http-outgoing-345 >> ""DELETE /session/e9867af1-cc3b-40c2-9691-279b4ce66cad HTTP/1.1[\r][\n]"" 23:35:10.553 DEBUG - http-outgoing-345 >> ""Host: localhost:30990[\r][\n]"" 23:35:10.553 DEBUG - http-outgoing-345 >> ""Connection: Keep-Alive[\r][\n]"" 23:35:10.554 DEBUG - http-outgoing-345 >> ""User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_161)[\r][\n]"" 23:35:10.554 DEBUG - http-outgoing-345 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 23:35:10.554 DEBUG - http-outgoing-345 >> ""[\r][\n]"" [Child 45720, Chrome_ChildThread] WARNING: pipe error (15): Connection reset by peer: file /build/firefox-MBnaRH/firefox-59.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353 [Child 45720, Chrome_ChildThread] WARNING: pipe error (34): Connection reset by peer: file /build/firefox-MBnaRH/firefox-59.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353 [Child 45720, Chrome_ChildThread] WARNING: pipe error (3): Connection reset by peer: file /build/firefox-MBnaRH/firefox-59.0.2+build1/ipc/chromium/src/chro[mGFeX/1co-]m:m oRne/ciepicv_ec hIaPnCn ecll_opsoes iwxi.tchc ,r elaisnoen =3A5b3n ormalShutdown 23:35:10.759 DEBUG - http-outgoing-345  Accept-Encoding: gzip,deflate 23:35:10.769 DEBUG - http-outgoing-346 >> ""DELETE /session/e9867af1-cc3b-40c2-9691-279b4ce66cad HTTP/1.1[\r][\n]"" 23:35:10.770 DEBUG - http-outgoing-346 >> ""Host: localhost:30990[\r][\n]"" 23:35:10.770 DEBUG - http-outgoing-346 >> ""Connection: Keep-Alive[\r][\n]"" 23:35:10.770 DEBUG - http-outgoing-346 >> ""User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_161)[\r][\n]"" 23:35:10.770 DEBUG - http-outgoing-346 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 23:35:10.770 DEBUG - http-outgoing-346 >> ""[\r][\n]"" 23:35:10.771 DEBUG - http-outgoing-346","closed","D-marionette,","mo","2018-03-30T22:13:03Z","2019-08-16T07:09:46Z"
"","4861","Add cookie exception when dot exists before domain name","## Meta - OS:  Ubuntu 17.04 Selenium Version: 3.5.1  Browser:  FireFox Browser Version:  55.0.3  ## Expected Behavior -  1. Loaded the webpage http://www.cbc.ca 2. Add a cookie with the domain .www.cbc.ca 3. Cookie is added  ## Actual Behavior -  1. Loaded the webpage http://www.cbc.ca 2. Add a cookie with the domain .www.cbc.ca 3. Exception is generated due to the dot (.) in front of the www.cbc.ca  ``` amplitude_id_statswww.cbc.ca=eyJkZXZpY2VJZCI6IjMzZjA1NzU4LTc3ODMtNDBmOS05NDZkLWIyOWNhYzA0YTMyZVIiLCJ1c2VySWQiOm51bGwsIm9wdE91dCI6ZmFsc2UsInNlc3Npb25JZCI6MTUwNzgzNzAxMTU5OCwibGFzdEV2ZW50VGltZSI6MTUwNzgzNzAxMTYwMCwiZXZlbnRJZCI6MSwiaWRlbnRpZnlJZCI6MCwic2VxdWVuY2VOdW1iZXIiOjF9; path=/; **domain=.www.cbc.ca** You may only set cookies for the current domain  Build info: version: '3.5.1', revision: '9c21bb67ef', time: '2017-08-17T15:26:08.955Z' System info: host: 'ubuntu', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.10.0-35-generic', java.version: '1.8.0_144'  Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=/tmp/rust_mozprofile.Hp4phd3YgXqn, rotatable=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, platform=ANY, specificationLevel=0.0, moz:accessibilityChecks=false, acceptInsecureCerts=false, browserVersion=55.0.3, platformVersion=4.10.0-35-generic, moz:processID=9650.0, browserName=firefox, javascriptEnabled=true, platformName=linux}] Session ID: c720ed38-7226-458f-8a77-aed7336a1c37  org.openqa.selenium.InvalidCookieDomainException: You may only set cookies for the current domain Build info: version: '3.5.1', revision: '9c21bb67ef', time: '2017-08-17T15:26:08.955Z' System info: host: 'ubuntu', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.10.0-35-generic', java.version: '1.8.0_144' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=/tmp/rust_mozprofile.Hp4phd3YgXqn, rotatable=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, platform=ANY, specificationLevel=0.0, moz:accessibilityChecks=false, acceptInsecureCerts=false, browserVersion=55.0.3, platformVersion=4.10.0-35-generic, moz:processID=9650.0, browserName=firefox, javascriptEnabled=true, platformName=linux}] Session ID: c720ed38-7226-458f-8a77-aed7336a1c37 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:641) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions.addCookie(RemoteWebDriver.java:768)  ```  ## Steps to reproduce -          driver.get(cbcURL);         driver.manage().addCookie(cbcCookie);","closed","","alexgmuir","2017-10-12T20:10:25Z","2019-08-16T13:10:00Z"
"","5647","Phantomjs jquery dialog pop-up","## Meta - OS:  ubuntu 17 x64  Selenium Version:  3.4.3  Browser:  phantomjs   Browser Version:  2.1.1 last   ## Expected Behavior - Can I handle a jquery dialog popup with phantomjs _ I can do it with FF but it doesn t handle it?  ## Actual Behavior -  ## Steps to reproduce -","closed","","csselo","2018-03-20T15:43:22Z","2019-08-16T09:09:43Z"
"","5187","WebDriverException in python binding of 'set_page_load_timeout'","## Meta - OS:  Ubuntu 16.04.3 Selenium Version:  3.8.0 Browser:   Firefox 57.0 / geckodriver 0.16.0     ## Expected Behavior -  The method `set_page_load_timeout`  works as described in the [documentation](http://selenium-python.readthedocs.io/api.html)  ## Actual Behavior -  ``` Traceback (most recent call last):   File ""example.py"", line 3, in      driver.set_page_load_timeout(3)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 833, in set_page_load_timeout     'type': 'page load'})   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: timeouts ```   ## Steps to reproduce -  ``` from selenium import webdriver driver = webdriver.Firefox() driver.set_page_load_timeout(3) driver.get(""http://selenium-python.readthedocs.io"") ```  with python 2.7.12","closed","","alex4200","2017-12-07T13:27:12Z","2019-08-16T21:09:58Z"
"","5799","Chrome Session not created","## Meta - OS:  Ubuntu 16.04- Selenium Version:  3.11.0 Browser:   Chrome(66.0.3359.117) ChromeDriver: 2.37.544315  Using python client for selenium.  Getting below issue: SessionNotCreatedException: Message: session not created exception from disconnected: unable to connect to renderer   (Session info: chrome=66.0.3359.117)   (Driver info: chromedriver=2.37.544315 (730aa6a5fdba159ac9f4c1e8cbc59bf1b5ce12b7),platform=Linux 4.13.0-38-generic x86_64)   I have tried to downgrade version of Chrome & Chrome Driver but facing same type of issue","closed","","i-made","2018-04-18T12:58:27Z","2019-08-16T05:09:44Z"
"","5542","Unable to find a matching set of capabilities","## Meta - OS:  Ubuntu 16.04  Selenium Version:  3.9.0  Browser:  Firefox   Browser Version:  58.0.2 (64-bit)   Geckodriver: 0.19.1  ## Expected Behavior - opening an headless firefox instance ## Actual Behavior - failing to opening an firefox instance due being unable to find a matching set of capabilities ## Steps to reproduce - ```python opts = FirefoxOptions() opts.add_argument('-headless')  self.driver = webdriver.Firefox(firefox_options=opts) ``` ## note using the exact setup on windows it succeeds, upon the linux server with identical: FireFox, Selenium, Python (2.7.13) and code i get: ```python traceback DEBUG:selenium.webdriver.remote.remote_connection:POST http://127.0.0.1:37767/session {""capabilities"": {""alwaysMatch"": {""acceptInsecureCerts"": true, ""browserName"": ""firefox"", ""moz:firefoxOptions"": {""args"": [""-headless""]}}, ""firstMatch"": [{}]}, ""desiredCapabilities"": {""acceptInsecureCerts"": true, ""browserName"": ""firefox"", ""moz:firefoxOptions"": {""args"": [""-headless""]}}} DEBUG:selenium.webdriver.remote.remote_connection:Finished Request Traceback (most recent call last):   File ""/var/lib/jenkins/jobs/experitybots/workspace/experity_statistics_robot.py"", line 93, in      r.start_robot()   File ""/var/lib/jenkins/jobs/experitybots/workspace/experity_statistics_robot.py"", line 54, in start_robot     with firefox_driver() as driver:   File ""/var/lib/jenkins/jobs/experitybots/workspace/experity_statistics_robot.py"", line 39, in __enter__     firefox_options=opts   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 162, in __init__     keep_alive=True)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities ```","closed","D-firefox,","reashetyrr","2018-02-26T16:41:52Z","2019-08-15T18:09:51Z"
"","5155","","## Meta - OS:  Ubuntu 16.04  Selenium Version:  3.8.0  Browser:  Firefox   Browser Version:  57.0 (64-bit)   ## Steps to reproduce   I am crawling a site using django-rest-framework. my sources are: ``` python def create_driver_session(session_id, executor_url):     from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver      # Save the original function, so we can revert our patch     org_command_execute = RemoteWebDriver.execute      def new_command_execute(self, command, params=None):         if command == ""newSession"":             # Mock the response             return {'success': 0, 'value': None, 'sessionId': session_id}         else:             return org_command_execute(self, command, params)      # Patch the function before creating the driver object     RemoteWebDriver.execute = new_command_execute      new_driver = webdriver.Remote(command_executor=executor_url, desired_capabilities={})     new_driver.session_id = session_id      # Replace the patched function with original function     RemoteWebDriver.execute = org_command_execute      return new_driver  @api_view(['POST']) def phone_auth_num(request):     display = Display(visible=0, size=(800, 600))     display.start()      driver = webdriver.Firefox()     data = request.POST      driver.get('https://noom.co.kr/faq/')      time.sleep(3)      t = driver.find_element_by_css_selector('#accordion-5564-1 > div:nth-child(2) > div.panel-heading > h4')     t.click()      executor_url = driver.command_executor._url     session_id = driver.session_id      return Response({""message"": ""Success"", ""executor_url"": executor_url, ""session_id"": session_id})  @api_view(['POST']) def manufacture_list(request):     data = request.POST      driver = create_driver_session(data['session_id'],data['executor_url'])      for _ in range(0,30):         d = driver.find_element_by_css_selector(""#accordion-5564-1 > div:nth-child(2) > div.panel-heading > h4"")         print(d.text)      d.click()      driver.quit()      return Response({""message"": ""Success""}) ```  `phone_auth_num` function will be called when `/phone-auth` url request, and   `manufacture_list` function will be called when `/manufacture-list` url request.  When I continuously request `/phone-auth` and `/manufacture-list` at first time, it works well. but When I request second time, it occurs error with below message:  ``` shell Internal Server Error: /manufacture-list/ Traceback (most recent call last):   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/urllib/request.py"", line 1318, in do_open     encode_chunked=req.has_header('Transfer-encoding'))   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/http/client.py"", line 1239, in request     self._send_request(method, url, body, headers, encode_chunked)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/http/client.py"", line 1285, in _send_request     self.endheaders(body, encode_chunked=encode_chunked)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/http/client.py"", line 1234, in endheaders     self._send_output(message_body, encode_chunked=encode_chunked)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/http/client.py"", line 1026, in _send_output     self.send(msg)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/http/client.py"", line 964, in send     self.connect()   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/http/client.py"", line 936, in connect     (self.host,self.port), self.timeout, self.source_address)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/socket.py"", line 722, in create_connection     raise err   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/socket.py"", line 713, in create_connection     sock.connect(sa) ConnectionRefusedError: [Errno 111] Connection refused  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/django/core/handlers/exception.py"", line 41, in inner     response = get_response(request)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/django/core/handlers/base.py"", line 187, in _get_response     response = self.process_exception_by_middleware(e, request)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/django/core/handlers/base.py"", line 185, in _get_response     response = wrapped_callback(request, *callback_args, **callback_kwargs)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/django/views/decorators/csrf.py"", line 58, in wrapped_view     return view_func(*args, **kwargs)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/django/views/generic/base.py"", line 68, in view     return self.dispatch(request, *args, **kwargs)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/rest_framework/views.py"", line 483, in dispatch     response = self.handle_exception(exc)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/rest_framework/views.py"", line 443, in handle_exception     self.raise_uncaught_exception(exc)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/rest_framework/views.py"", line 480, in dispatch     response = handler(request, *args, **kwargs)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/rest_framework/decorators.py"", line 52, in handler     return func(*args, **kwargs)   File ""./inscheck/spider/views.py"", line 194, in manufacture_list     d = driver.find_element_by_css_selector(""#accordion-5564-1 > div:nth-child(2) > div.panel-heading > h4"")   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 512, in find_element_by_css_selector     return self.find_element(by=By.CSS_SELECTOR, value=css_selector)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 858, in find_element     'value': value})['value']   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 309, in execute     response = self.command_executor.execute(driver_command, params)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 460, in execute     return self._request(command_info[0], url, body=data)   File ""/home/ubuntu/.pyenv/versions/3.6.0/envs/inscheck-3.6.0-env/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 522, in _request     resp = opener.open(request, timeout=self._timeout)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/urllib/request.py"", line 526, in open     response = self._open(req, data)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/urllib/request.py"", line 544, in _open     '_open', req)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/urllib/request.py"", line 504, in _call_chain     result = func(*args)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/urllib/request.py"", line 1346, in http_open     return self.do_open(http.client.HTTPConnection, req)   File ""/home/ubuntu/.pyenv/versions/3.6.0/lib/python3.6/urllib/request.py"", line 1320, in do_open     raise URLError(err) urllib.error.URLError:  ```","closed","","wkdtjsgur100","2017-12-01T12:06:17Z","2019-08-17T00:09:38Z"
"","5081","Selenium 3.7.0 default download directory change failure on chrome driver","## Meta - OS:  Ubuntu 16.04  Selenium Version:  3.7.0  Browser:  Chrome   Browser Version:  61.0.3163.91   ## Expected Behavior - After changing default download directory, it is expected to find downloaded file in that particular directory  ## Actual Behavior - Files being downloaded to default directory (Downloads) ## Steps to reproduce - python code:     prefs = {""download.default_directory"" : /new/existing/directory/}     chromeOptions.add_experimental_option(""prefs"",prefs)     browser = webdriver.Chrome(executable_path=chromedriver, chrome_options=chromeOptions)","closed","D-chrome,","matasbalcaitis","2017-11-20T07:41:13Z","2019-08-17T01:09:57Z"
"","5383","Selenium test does not work with chromium headless","## Meta - OS:  Ubuntu 14.04.1 Selenium Version:   3.8.1 (python 3.4.3) Browser:  chromium Browser Version:  63.0.3239.84 ChromeDriver: 2.33  ## Expected Behavior - That the test works ## Actual Behavior - Test work now and then ## Steps to reproduce - -  I have the following problem, but I do not know if it is a Selenium or Chromium headless problem. On the development system, the tests are developed and they run through error-free at any time. But if these tests are played on the live test system and run there, then they run 30% error free and the others time not.  I have, as far as I was able, the software Selenium and Chromium on both systems brought to the same version The only difference at the moment is that the development system is Ubutnu 16.04.2 and the python version is 3.5.2. I even tried ChromeDriver 2.35, but there was no improvement.","closed","","creatorness","2018-01-23T09:33:01Z","2019-08-16T16:09:51Z"
"","5539","PHPUnit + Selenium 3.9 + Firefox 58 - Page elements are not found","## Meta - OS:  Ubuntu 14.04 (64-bit) Selenium Version:  3.9.0, 3.9.1 Browser:  Firefox Browser Version: 57, 58 Programming language: PHP: 7.0 Testing Framework: PHPUnit 6.4 PHP Webdriver Client: facebook/webdriver 1.5 Webdriver: Geckodriver 0.19.1  ## Expected Behavior - Page elements, its values and properties are found by the corresponding framework classes (in the same way as I it works for Chrome browser).  ## Actual Behavior - Firefox starts and is controlled by Selenium, but page elements are not found.  All is working under Selenium 3.8.1, with parameter '-enablePassThrough false'. But this parameter is not supported anymore for Selenium version 3.9. So, things are broken now.  Error examples: 1) Facebook\WebDriver\Exception\UnknownCommandException: GET /session/b0ad47a7-c9b3-4f62-a40e-3be0efd9e301/element//attribute/class Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'webdev-vm', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-116-generic', java.version: '1.8.0_141' Driver info: driver.version: unknown 2) Facebook\WebDriver\Exception\UnknownCommandException: POST /session/de260f02-3bb3-481f-9bc1-23c16aa3c78f/element//elements Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'webdev-vm', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-116-generic', java.version: '1.8.0_141' Driver info: driver.version: unknown 3) Facebook\WebDriver\Exception\UnknownCommandException: POST /session/de260f02-3bb3-481f-9bc1-23c16aa3c78f/element//text Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'webdev-vm', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-116-generic', java.version: '1.8.0_141' Driver info: driver.version: unknown  Log: 09:38:55.791 INFO - /session: Executing POST on /session (handler: BeginSession) 09:38:55.806 INFO - Capabilities are: Capabilities {acceptInsecureCerts: true, acceptSslCerts: false, args: --ignore-ssl-errors=yes, browserName: firefox, firefox_profile: UEsDBAoAAAAAANtMWkzf9RXUMgA...} 09:38:55.806 INFO - Capabilities {acceptInsecureCerts: true, acceptSslCerts: false, args: --ignore-ssl-errors=yes, browserName: firefox, firefox_profile: UEsDBAoAAAAAANtMWkzf9RXUMgA...} matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) 1519630735814	geckodriver	INFO	geckodriver 0.19.1 1519630735817	geckodriver	INFO	Listening on 127.0.0.1:2006 1519630735934	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.P9RpNhYTN433"" 1519630736509	Marionette	INFO	Enabled via --marionette  (firefox:9645): GLib-GObject-CRITICAL **: g_object_ref: assertion 'object->ref_count > 0' failed  (firefox:9645): GLib-GObject-CRITICAL **: g_object_unref: assertion 'object->ref_count > 0' failed  (firefox:9645): GLib-GObject-CRITICAL **: g_object_ref: assertion 'object->ref_count > 0' failed  Test Code: $host = 'localohost:4444/wd/hub'; $capabilities = DesiredCapabilities::firefox(); $capabilities->setCapability('acceptSslCerts', false); $capabilities->setCapability('acceptInsecureCerts', true); $capabilities->setCapability('args', '--ignore-ssl-errors=yes'); $this->webDriver = RemoteWebDriver::create($host, $capabilities); $this->webDriver->get($this->url); //any url  $step = $this->webDriver->findElement(WebDriverBy::cssSelector('step1')); $this->webDriver->findElement(WebDriverBy::id('firstname'))->sendKeys('John');","closed","","ijain","2018-02-26T07:56:54Z","2019-08-16T06:10:00Z"
"","5708","Use ""ChromeOpthions().set_headless() "" to start_up chrome with headless is not work.","## Meta - OS:  ubuntu   Selenium Version:   3.11.0  Browser:   chrome   Browser Version:   65.0.3325.181    ## Expected Behavior - start chrome with headless ## Actual Behavior - start chrome not headless ## Steps to reproduce - **This code will open a chrome window,that is not start_up chrome withe headless** ```python from selenium import  webdriver web = webdriver.ChromeOptions().set_headless() d = webdriver.Chrome(chrome_options=web,executable_path='./chromedriver') d.get('http://www.baidu.com') d.quit() ``` **But use this code that be work** ```python from selenium import  webdriver web = webdriver.ChromeOptions() web.add_argument(""--headless"") web.add_argument(""--disable-gpu"") d = webdriver.Chrome(chrome_options=web,executable_path='./chromedriver') d.get('http://www.baidu.com') print(d.page_source) d.quit() ```  Then i try to find reason  I am find that diffent withe this \: use set_headless \: in optihons.py 192 line will return {.......'args':[],......} use add_argument \: in opthons.py 192 line will return {....'args':['--headless','--disable--gpu'],......}  so, that is a bug? can you tell me the rason? thank you very much 😊","closed","","JamesBaiyong","2018-03-30T07:52:24Z","2019-08-16T07:10:01Z"
"","5330","Python-Selenium-Eclipse-safari -connection refused error","## Meta - OS:  OSX EL Capitan version 10.11.6   Selenium Version:   3.8.1  Browser:  Version 11.0.2 (11604.4.7.1.6)   Browser Version:  Version 11.0.2 (11604.4.7.1.6)   ## Expected Behavior - Launching safari browser and opening google.com  ## Actual Behavior - Connection refused  ## Steps to reproduce -","closed","","deals4kr","2018-01-11T17:03:34Z","2019-08-16T17:10:02Z"
"","5402","Issues with using the new safari driver with selenium in javascript","## Meta - OS:  OSX 10.13.3 Selenium Version:  3.7.1 Browser:  safari  Browser Version:  11.0.3 (13604.5.6)  ## Expected Behavior - tests to pass  ## Actual Behavior - tests are failing with this stack trace  ``` safari 11.0.3            Tests failed: {""value"":{""stacktrace"":""org.openqa.selenium.SessionNotCreatedException: Could not create a session: The session timed out while connecting to a Safari instance. (WAR NING: The server did not provide any stacktrace information)\nCommand duration or timeout: 30.44 seconds\nBuild info: version: \u00273.7.1\u0027, revision: \u00278a0099a\u0027, time: \u00272017-11-06T21:0 7:36.161Z\u0027\nSystem info: host: \u0027Patricks-MBP\u0027, ip: \u0027192.168.1.231\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.13.3\u0027, java.version: \u00271.8.0_161\u0027\nDriver info: driver.version: unknown\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)\n\tat org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)\n\tat org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)\n\tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\tat java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)\n\tat org.openqa.selenium.remote.server.ServicedSession$Factory.apply(ServicedSession.java:218)\n\tat org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$11(ActiveSessionFactory.java:167)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373)\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n\tat java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\tat java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)\n\tat org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:170)\n\tat org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$1(NewSessionPipeline.java:44)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.Collections$2.tryAdvance(Collections.java:4717)\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\tat java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)\n\tat org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$2(NewSessionPipeline.java:47)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.stream.DistinctOps$1$2.accept(DistinctOps.java:175)\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n\tat java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Streams.java:405)\n\tat java.util.stream.Streams$ConcatSpliterator.tryAdvance(Streams.java:728)\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\tat java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)\n\tat org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:50)\n\tat org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:77)\n\tat org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:240)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"",""stackTrace"":[{""fileName"":""NativeConstructorAccessorImpl.java"",""methodName"":""newInstance0"",""className"":""sun.reflect.NativeConstructorAccessorImpl"",""lineNumber"":-2},{""fileName"":""NativeConstructorAccessorImpl.java"",""methodName"":""newInstance"",""className"":""sun.reflect.NativeConstructorAccessorImpl"",""lineNumber"":62},{""fileName"":""DelegatingConstructorAccessorImpl.java"",""methodName"":""newInstance"",""className"":""sun.reflect.DelegatingConstructorAccessorImpl"",""lineNumber"":45},{""fileName"":""Constructor.java"",""methodName"":""newInstance"",""className"":""java.lang.reflect.Constructor"",""lineNumber"":423},{""fileName"":""ErrorHandler.java"",""methodName"":""createThrowable"",""className"":""org.openqa.selenium.remote.ErrorHandler"",""lineNumber"":214},{""fileName"":""ErrorHandler.java"",""methodName"":""throwIfResponseFailed"",""className"":""org.openqa.selenium.remote.ErrorHandler"",""lineNumber"":166},{""fileName"":""JsonWireProtocolResponse.java"",""methodName"":""lambda$new$0"",""className"":""org.openqa.selenium.remote.JsonWireProtocolResponse"",""lineNumber"":53},{""fileName"":""JsonWireProtocolResponse.java"",""methodName"":""lambda$getResponseFunction$2"",""className"":""org.openqa.selenium.remote.JsonWireProtocolResponse"",""lineNumber"":91},{""fileName"":""ProtocolHandshake.java"",""methodName"":""lambda$createSession$0"",""className"":""org.openqa.selenium.remote.ProtocolHandshake"",""lineNumber"":123},{""fileName"":""ReferencePipeline.java"",""methodName"":""accept"",""className"":""java.util.stream.ReferencePipeline$3$1"",""lineNumber"":193},{""fileName"":""Spliterators.java"",""methodName"":""tryAdvance"",""className"":""java.util.Spliterators$ArraySpliterator"",""lineNumber"":958},{""fileName"":""ReferencePipeline.java"",""methodName"":""forEachWithCancel"",""className"":""java.util.stream.ReferencePipeline"",""lineNumber"":126},{""fileName"":""AbstractPipeline.java"",""methodName"":""copyIntoWithCancel"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":498},{""fileName"":""AbstractPipeline.java"",""methodName"":""copyInto"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":485},{""fileName"":""AbstractPipeline.java"",""methodName"":""wrapAndCopyInto"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":471},{""fileName"":""FindOps.java"",""methodName"":""evaluateSequential"",""className"":""java.util.stream.FindOps$FindOp"",""lineNumber"":152},{""fileName"":""AbstractPipeline.java"",""methodName"":""evaluate"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":234},{""fileName"":""ReferencePipeline.java"",""methodName"":""findFirst"",""className"":""java.util.stream.ReferencePipeline"",""lineNumber"":464},{""fileName"":""ProtocolHandshake.java"",""methodName"":""createSession"",""className"":""org.openqa.selenium.remote.ProtocolHandshake"",""lineNumber"":126},{""fileName"":""ProtocolHandshake.java"",""methodName"":""createSession"",""className"":""org.openqa.selenium.remote.ProtocolHandshake"",""lineNumber"":73},{""fileName"":""ServicedSession.java"",""methodName"":""apply"",""className"":""org.openqa.selenium.remote.server.ServicedSession$Factory"",""lineNumber"":218},{""fileName"":""ActiveSessionFactory.java"",""methodName"":""lambda$apply$11"",""className"":""org.openqa.selenium.remote.server.ActiveSessionFactory"",""lineNumber"":167},{""fileName"":""ReferencePipeline.java"",""methodName"":""accept"",""className"":""java.util.stream.ReferencePipeline$3$1"",""lineNumber"":193},{""fileName"":""ReferencePipeline.java"",""methodName"":""accept"",""className"":""java.util.stream.ReferencePipeline$3$1"",""lineNumber"":193},{""fileName"":""ReferencePipeline.java"",""methodName"":""accept"",""className"":""java.util.stream.ReferencePipeline$11$1"",""lineNumber"":373},{""fileName"":""ReferencePipeline.java"",""methodName"":""accept"",""className"":""java.util.stream.ReferencePipeline$2$1"",""lineNumber"":175},{""fileName"":""Spliterators.java"",""methodName"":""tryAdvance"",""className"":""java.util.Spliterators$ArraySpliterator"",""lineNumber"":958},{""fileName"":""ReferencePipeline.java"",""methodName"":""forEachWithCancel"",""className"":""java.util.stream.ReferencePipeline"",""lineNumber"":126},{""fileName"":""AbstractPipeline.java"",""methodName"":""copyIntoWithCancel"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":498},{""fileName"":""AbstractPipeline.java"",""methodName"":""copyInto"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":485},{""fileName"":""AbstractPipeline.java"",""methodName"":""wrapAndCopyInto"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":471},{""fileName"":""FindOps.java"",""methodName"":""evaluateSequential"",""className"":""java.util.stream.FindOps$FindOp"",""lineNumber"":152},{""fileName"":""AbstractPipeline.java"",""methodName"":""evaluate"",""className"":""java.util.stream.AbstractPipeline"",""lineNumber"":234},{""fileName"":""ReferencePipeline.java"",""methodName"":""findFirst"",""className"":""java.util.stream.ReferencePipeline"",""lineNumber"":464},{""fileName"":""ActiveSessionFactory.java"",""methodName"":""apply"",""className"":""org.openqa.selenium.remote.server.ActiveSessionFactory"",""lineNumber"":170},{""fileName"":""NewSessionPipeline.java"",""methodName"":""lambda$null$:  ``` ## Steps to reproduce - Use web component tester 2.5.0+ https://github.com/Polymer/web-component-tester  1. run tests with web-component-tester you could use gerrit to reproduce this, see https://github.com/GerritCodeReview/gerrit (needs bazel installed) 2. polygerrit_ui/app/run-test.sh  Im not sure if there needs to be any changes in wct to support the new safari driver?","closed","","paladox","2018-01-28T13:52:07Z","2019-08-15T20:09:48Z"
"","4897","WebDriverError: disconnected: unable to connect to renderer","## Meta - OS:  OSX 10.12.6 (16G29) Selenium Version:  ```bash  ~./node_modules/chromedriver/bin/chromedriver  -v ChromeDriver 2.32.498537 (cb2f855cbc7b82e20387eaf9a43f6b99b6105061)  ~ $ echo $JAVA_HOME /Library/Java/JavaVirtualMachines/jdk1.7/Contents/Home  ~ $ node -v v6.11.2 ``` Browser:   Chrome Version 62.0.3202.62 (Official Build) (64-bit)  Browser Version:   62.0.3202.62 (Official Build) (64-bit)  ## Expected Behavior - A Chrome session should start and the script should execute till the end ## Actual Behavior - The browser is started but the script immedialy crashes. ```  > ucb-client@2.97.3 selenium-local /Users/Georgios/Development/rocket-internet/ucb-client > node test/automation-tests/testcases/happy-path/Local_Guest_Cash.js  /Users/Georgios/Development/rocket-internet/ucb-client/node_modules/selenium-webdriver/lib/promise.js:2634         throw error;         ^  WebDriverError: disconnected: unable to connect to renderer   (Session info: chrome=62.0.3202.62)   (Driver info: chromedriver=2.32.498537 (cb2f855cbc7b82e20387eaf9a43f6b99b6105061),platform=Mac OS X 10.12.6 x86_64)     at WebDriverError (/Users/Georgios/Development/rocket-internet/ucb-client/node_modules/selenium-webdriver/lib/error.js:27:5)     at Object.checkLegacyResponse (/Users/Georgios/Development/rocket-internet/ucb-client/node_modules/selenium-webdriver/lib/error.js:529:15)     at parseHttpResponse (/Users/Georgios/Development/rocket-internet/ucb-client/node_modules/selenium-webdriver/lib/http.js:509:13)     at doSend.then.response (/Users/Georgios/Development/rocket-internet/ucb-client/node_modules/selenium-webdriver/lib/http.js:441:30)     at process._tickCallback (internal/process/next_tick.js:109:7) From: Task: WebDriver.manage().window().setSize(1280, 720)     at thenableWebDriverProxy.schedule (/Users/Georgios/Development/rocket-internet/ucb-client/node_modules/selenium-webdriver/lib/webdriver.js:807:17)     at Window.setSize (/Users/Georgios/Development/rocket-internet/ucb-client/node_modules/selenium-webdriver/lib/webdriver.js:1677:25)     at Object. (/Users/Georgios/Development/rocket-internet/ucb-client/test/automation-tests/testcases/happy-path/Local_Guest_Cash.js:8:26)     at Module._compile (module.js:570:32)     at Object.Module._extensions..js (module.js:579:10)     at Module.load (module.js:487:32)     at tryModuleLoad (module.js:446:12)     at Function.Module._load (module.js:438:3)     at Module.runMain (module.js:604:10)     at run (bootstrap_node.js:389:7) ```  ## Actual script (beginning) ```js require('chromedriver'); var webdriver = require('selenium-webdriver'), By = webdriver.By, until = webdriver.until; var driver = new webdriver.Builder().forBrowser('chrome').build(); var timeout = 15000; ```","closed","","gkatsanos","2017-10-18T09:41:55Z","2019-08-15T04:09:43Z"
"","5152","[Grid] cannot parse capability: goog:chromeOptions","## Meta - OS:  OSX 10.12.6 Selenium Version:  3.8.0 (Java and Python bindings, also Grid) Browser: Chrome   Browser Version:   62.0.3202.94 ChromeDriver=2.33.506106  ## Expected Behavior - Start new session when running a test agains a Grid  ## Actual Behavior - No session is created and this the error at the client side ``` org.openqa.selenium.WebDriverException: unknown error: cannot parse capability: goog:chromeOptions from unknown error: cannot parse binary from unknown error: must be a string   (Driver info: chromedriver=2.33.506106 (8a06c39c4582fbfbab6966dbb1c38a9173bfb1a2),platform=Mac OS X 10.12.6 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 5 milliseconds ```  ## Steps to reproduce - 1. Start a hub and a node (previously having ChromeDriver properly configured) ``` java -jar selenium-server-standalone-3.8.0.jar -role hub java -jar selenium-server-standalone-3.8.0.jar -role node ``` 2. Execute this [test](https://github.com/diemol/demos/blob/master/simple-grid-test/src/test/java/SimpleGridTest.java).  These are the hub and node logs:  hub: ``` 23:59:17.419 INFO - Selenium build info: version: '3.8.0', revision: '924c4067df' 23:59:17.420 INFO - Launching Selenium Grid hub 2017-11-30 23:59:18.381:INFO::main: Logging initialized @1414ms to org.seleniumhq.jetty9.util.log.StdErrLog 23:59:18.404 INFO - Will listen on 4444 2017-11-30 23:59:18.490:INFO:osjs.Server:main: jetty-9.4.7.v20170914 2017-11-30 23:59:18.532:INFO:osjs.session:main: DefaultSessionIdManager workerName=node0 2017-11-30 23:59:18.532:INFO:osjs.session:main: No SessionScavenger set, using defaults 2017-11-30 23:59:18.536:INFO:osjs.session:main: Scavenging every 600000ms 2017-11-30 23:59:18.547:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@18a70f16{/,null,AVAILABLE} 2017-11-30 23:59:18.581:INFO:osjs.AbstractConnector:main: Started ServerConnector@75f9eccc{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 2017-11-30 23:59:18.582:INFO:osjs.Server:main: Started @1615ms 23:59:18.582 INFO - Nodes should register to http://192.168.1.7:4444/grid/register/ 23:59:18.582 INFO - Selenium Grid hub is up and running 23:59:21.819 INFO - Registered a node http://192.168.1.7:5555 00:04:04.005 INFO - Got a request to create a new session: Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}} 00:04:04.025 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, se:CONFIG_UUID=25ba6690-d893-4f22-af45-f31ae43c37f5, browserName=chrome, maxInstances=5, platform=MAC} ```  node: ``` 23:59:20.806 INFO - Selenium build info: version: '3.8.0', revision: '924c4067df' 23:59:20.807 INFO - Launching a Selenium Grid node 2017-11-30 23:59:21.454:INFO::main: Logging initialized @935ms to org.seleniumhq.jetty9.util.log.StdErrLog 23:59:21.504 INFO - Using `new FirefoxOptions()` is preferred to `DesiredCapabilities.firefox()` 23:59:21.528 INFO - Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()` 23:59:21.533 INFO - Using `new EdgeOptions()` is preferred to `DesiredCapabilities.edge()` 23:59:21.534 INFO - Driver class not found: com.opera.core.systems.OperaDriver 23:59:21.534 INFO - Using `new OperaOptions()` is preferred to `DesiredCapabilities.operaBlink()` 23:59:21.536 INFO - Using `new SafariOptions()` is preferred to `DesiredCapabilities.safari()` 23:59:21.537 INFO - Driver class not found: org.openqa.selenium.phantomjs.PhantomJSDriver 23:59:21.566 INFO - Driver provider class org.openqa.selenium.ie.InternetExplorerDriver registration is skipped:  registration capabilities Capabilities {browserName: internet explorer, ensureCleanSession: true, platform: WINDOWS, version: } does not match the current platform MAC 23:59:21.566 INFO - Driver provider class org.openqa.selenium.edge.EdgeDriver registration is skipped:  registration capabilities Capabilities {browserName: MicrosoftEdge, platform: WINDOWS, version: } does not match the current platform MAC 23:59:21.605 INFO - Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()` 23:59:21.607 INFO - Using `new EdgeOptions()` is preferred to `DesiredCapabilities.edge()` 23:59:21.607 INFO - Using `new FirefoxOptions()` is preferred to `DesiredCapabilities.firefox()` 23:59:21.608 INFO - Using `new OperaOptions()` is preferred to `DesiredCapabilities.operaBlink()` 23:59:21.608 INFO - Using `new SafariOptions()` is preferred to `DesiredCapabilities.safari()` 23:59:21.619 INFO - Using the passthrough mode handler 2017-11-30 23:59:21.651:INFO:osjs.Server:main: jetty-9.4.7.v20170914 2017-11-30 23:59:21.679:WARN:osjs.SecurityHandler:main: ServletContext@o.s.j.s.ServletContextHandler@6200f9cb{/,null,STARTING} has uncovered http methods for path: / 2017-11-30 23:59:21.683:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@6200f9cb{/,null,AVAILABLE} 2017-11-30 23:59:21.707:INFO:osjs.AbstractConnector:main: Started ServerConnector@6aaceffd{HTTP/1.1,[http/1.1]}{0.0.0.0:5555} 2017-11-30 23:59:21.709:INFO:osjs.Server:main: Started @1189ms 23:59:21.709 INFO - Selenium Grid node is up and ready to register to the hub 23:59:21.740 INFO - Starting auto registration thread. Will try to register every 5000 ms. 23:59:21.740 INFO - Registering the node to the hub: http://localhost:4444/grid/register 23:59:21.819 INFO - The node is registered to the hub and ready to use 2017-12-01 00:04:04.066:INFO:osjshC.ROOT:qtp172032696-15: org.openqa.selenium.remote.server.WebDriverServlet-3590fc5b: Initialising WebDriverServlet 00:04:04.115 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@2f551120 00:04:04.129 INFO - /session: Executing POST on /session (handler: BeginSession) 00:04:04.276 INFO - Capabilities are: Capabilities {browserName: chrome, goog:chromeOptions: {args: [], binary: null, extensions: []}, se:CONFIG_UUID: 25ba6690-d893-4f22-af45-f31...} 00:04:04.281 INFO - Capabilities {browserName: chrome, goog:chromeOptions: {args: [], binary: null, extensions: []}, se:CONFIG_UUID: 25ba6690-d893-4f22-af45-f31...} matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 2.33.506106 (8a06c39c4582fbfbab6966dbb1c38a9173bfb1a2) on port 26803 Only local connections are allowed. ```  I think the issue could be here: ``` 00:04:04.276 INFO - Capabilities are: Capabilities {browserName: chrome, goog:chromeOptions: {args: [], binary: null, extensions: []}, se:CONFIG_UUID: 25ba6690-d893-4f22-af45-f31...} 00:04:04.281 INFO - Capabilities {browserName: chrome, goog:chromeOptions: {args: [], binary: null, extensions: []}, se:CONFIG_UUID: 25ba6690-d893-4f22-af45-f31...} matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) ``` Seems that the Chrome options are receiving a null as value for the binary key.  EDIT: I tried again with the grid in Standalone mode, and it works. Seems that it only fails when using hub/node.","closed","C-grid,","diemol","2017-11-30T23:10:00Z","2019-08-16T22:10:03Z"
"","5193","All tests failing with EOFError","## Meta - OS:  OSX 10.12.6 Selenium Version:  3.8.0 Browser:  Chrome, Chromium Webdriver  Browser Version:  Version 63.0.3239.84 (Official Build) (64-bit) ChromeDriver 2.33.506106 (8a06c39c4582fbfbab6966dbb1c38a9173bfb1a2)  ## Expected Behavior -  Tests run and browser closes  ## Actual Behavior - All tests, even trivial ones created for this purpose, terminate with EOFError and leave the instantiated browser open.  I can get 5 or 6 copies of Chrome running on my desktop at once.  ## Steps to reproduce -  I feel that it is quite likely that I have having some version mismatch problem, but I don't know what it is.  I just hit a different issue that required that I rebuild all of my brew infrastructure.  I've downloaded new versions of Xcode and Xcode command line tools, but this did not help.  Searching the web gave me year-old pages that say to update my version of chromedriver and selenium.  That hasn't helped, as far as I can see.","closed","C-rb,","gischer","2017-12-08T17:36:55Z","2019-08-16T21:09:56Z"
"","4884","find_element_by_id throws exception in selenium 3.6.0 for python with FireFox 55+","## Meta - OS:  OSX 10.12.6  Selenium Version:  3.6.0 for python  Browser:  FireFox    Browser Version:  55+ with geckodriver 0.19.0   ## Expected Behavior - Find an element by id in the page using browser.find_element_by_id function  It works just fine with Firefox 54-  ## Actual Behavior - Throwing exception:  Traceback (most recent call last):   File ""FUE.py"", line 58, in      filter_button=browser.find_element_by_id(filter_button_id)   File ""/Users/.../GeckoDriver/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 341, in find_element_by_id     return self.find_element(by=By.ID, value=id_)   File ""/Users/.../GeckoDriver/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 843, in find_element     'value': value})['value']   File ""/Users/.../GeckoDriver/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 308, in execute     self.error_handler.check_response(response)   File ""/Users/.../GeckoDriver/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None Message:   ## Steps to reproduce -  Open any page with Firefox using selenium webdriver and try to find an element using function browser.find_element_by_id('some_element_id'):  from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from selenium.webdriver.firefox.firefox_binary import FirefoxBinary  firefox_capabilities = DesiredCapabilities.FIREFOX firefox_capabilities['marionette'] = True  ff_profile = webdriver.FirefoxProfile('my_profile_path') ff_binary = FirefoxBinary('/Applications/Firefox.app/Contents/MacOS/firefox-bin') browser = webdriver.Firefox(firefox_profile=ff_profile,                             firefox_binary=ff_binary)  browser.get('base_url' + '/some_PAGE') filter_button=browser.find_element_by_id('filter_button_id')","closed","D-firefox,","isalsberg-mx","2017-10-17T03:58:43Z","2019-08-17T02:09:46Z"
"","5098","Looking for wrong jar version","## Meta - OS:  OSx 10.12.6  Selenium Version:   3.7.1  Browser:   N/A  ## Expected Behavior - Download and run the desired version on Selenium. ## Actual Behavior - check-paths-existence.js is looking for 3.5.3 when 3.7.1 is installed. ``` selenium install: from: https://selenium-release.storage.googleapis.com/3.7/selenium-server-standalone-3.7.1.jar to: /Users/qa-administrator/jenkins/workspace/dev-demo-tim/node_modules/selenium-standalone/.selenium/selenium-server/3.7.1-server.jar --- chrome install: from: https://chromedriver.storage.googleapis.com/2.33/chromedriver_mac64.zip to: /Users/qa-administrator/jenkins/workspace/dev-demo-tim/node_modules/selenium-standalone/.selenium/chromedriver/2.33-x64-chromedriver --- firefox install: from: https://github.com/mozilla/geckodriver/releases/download/v0.18.0/geckodriver-v0.18.0-macos.tar.gz to: /Users/qa-administrator/jenkins/workspace/dev-demo-tim/node_modules/selenium-standalone/.selenium/geckodriver/0.18.0-x64-geckodriver   ----- selenium-standalone installation finished ----- error in start selenium Error: Missing /Users/qa-administrator/jenkins/workspace/dev-demo-tim/node_modules/selenium-standalone/.selenium/selenium-server/3.5.3-server.jar     at /Users/qa-administrator/jenkins/workspace/dev-demo-tim/node_modules/selenium-standalone/lib/check-paths-existence.js:15:20     at FSReqWrap.cb [as oncomplete] (fs.js:257:19) ``` ## Steps to reproduce - Run a test however the Selenium file check-paths-existence.js fails","closed","","toien44","2017-11-21T17:12:22Z","2019-08-17T01:09:47Z"
"","5795","Safari freezing after click, Which leads to naviagate to another page.","## Meta - OS:  OSX 10 Selenium Version:  3.8.1 Browser:  Safari Browser Version:  11.0.3  Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->    ## Expected Behavior - After **click** in the current page, It needs to navigate to next page. While navigating running WaitUntilElementClickable or presence or visible. Once element clickable needs to perform another task. ## Actual Behavior - After **click** in current page, It is slowly navigating to next page. If we run while navigating running WaitUntilElementClickable. safari freezing. No more operations performed.  As my observation running WaitUntilElementClickable uses the while loop with multiple times trying findElement() until element clickable. This while loop will exit after wait time. On the first iteration in while loop it will go to findelement and then freezing.  until method logic.  while(true){     findelement() -> freezing here as my expectation. And then it is not breaking the loop.     if(wait time reached){           break;     } }  ## Steps to reproduce -  Go to any website. Click on any link to navigate. Run WaitUntilElementClickable or presence or visible. the issue will start here. safari freez.  We have a temporary solution like by giving sleep for some time(10 sec), We can perform further tasks.","closed","R-awaiting answer,","NaveenKummetha","2018-04-18T09:37:57Z","2019-08-16T03:09:55Z"
"","4862","Couldn't download 3.5.3 selenium jar","## Meta - OS:  OSX  Selenium Version:  3.5.3 Hi guys, I encounter `service unavailable` if I try to access  https://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar  This is happening in browser, and in terminal `  ./node_modules/.bin/selenium-standalone install`  there is only couldn't download. Firstly it seemed as internet problem but not anymore since it's not available in the browser as well. Sincerely dankonino","closed","","dankonino","2017-10-13T02:51:30Z","2019-08-14T19:10:01Z"
"","5185","Selenium::WebDriver.for(:remote, url:'http://localhost:4444/wd/hub') throws NoMethodError","## Meta - OS:  OSX Selenium Version: 3.8.0 Browser: Chrome Browser Version: never actually gets that far - but I'm using the chrome that comes with the `selenium/standalone-chrome-debug:3.8.1-aluminum` docker container  ## Expected Behavior - `Selenium::WebDriver.for(:remote, url:'http://localhost:4444/wd/hub')` should open a connection to a selenium/standalone chrome instance running in my docker container as documented in https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings#remote. I'm actually using Capybara to launch this but the above code snippet seems to be what Capybara is doing [here](https://github.com/teamcapybara/capybara/blob/master/lib/capybara/selenium/driver.rb#L23).  ## Actual Behavior - ``` ~ % irb irb(main):001:0> require 'selenium-webdriver' => true irb(main):002:0> Selenium::WebDriver.for(:remote, url:'http://localhost:4444/wd/hub') NoMethodError: undefined method `capabilities' for nil:NilClass     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/w3c/capabilities.rb:146:in `from_oss'     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/bridge.rb:177:in `merged_capabilities'     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/bridge.rb:97:in `create_session'     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/bridge.rb:53:in `handshake'     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/driver.rb:37:in `initialize'     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver/common/driver.rb:56:in `new'     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver/common/driver.rb:56:in `for'     from /Users/abaird/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/selenium-webdriver-3.8.0/lib/selenium/webdriver.rb:84:in `for'     from (irb):2     from /Users/abaird/.rbenv/versions/2.2.5/bin/irb:11:in `' ```  ## Steps to reproduce - see above irb session  ... which eventually fails [here](https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/remote/bridge.rb#L53) and then ultimately [here](https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/remote/w3c/capabilities.rb#L146).","closed","C-rb,","abaird","2017-12-07T03:48:41Z","2019-08-16T22:09:37Z"
"","5474","How do you enable Selenium webdriver for wkwebview on MacOS?","## Meta - OS:  OSX Selenium Version:  General Browser:  WkWebview","closed","","atishay","2018-02-09T18:59:00Z","2019-08-16T14:09:45Z"
"","5159","Download file in headless chrome","## Meta - OS:  OSX Selenium Version:  3.8.1 Browser:  Chrome  ## Expected Behavior - Permit files to be downloaded in headless mode.  ## Actual Behavior - Files aren't downloaded.  ## Steps to reproduce - Launch chrome in headless mode and try to download any file.  Looks like it is a feature to prevent sites from downloading files when running chrome in headless mode. https://bugs.chromium.org/p/chromium/issues/detail?id=696481  To permit downloads it's necessary to send a command to chrome. I'm using java and I couldn't find a way to make it work.  I even tried sending a post request to `/session/:sessionId/chromium/send_command` but that didn't work.","closed","I-enhancement,","jonhkr","2017-12-02T23:33:53Z","2021-11-17T00:06:22Z"
"","5158","send_keys() is having problems sending the character ""3""","## Meta - OS:  OSX Selenium Version:  3.8 Browser:  Chrome  Browser Version:  Version 62.0.3202.94 (64-bit)  ## Expected Behavior - send_keys(""12345"") -> to send the string 12345 to the given web element ## Actual Behavior - ""1245"" gets sent, excluding the character `3` ## Steps to reproduce - Opening a python shell to execute these commands, and viewing the results in the browser.  ``` Python 3.6.1 (default, Apr  4 2017, 09:40:21)  [GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.38)] on darwin Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> from selenium.webdriver.chrome import webdriver >>> wd = webdriver.WebDriver() >>> wd.get('https://google.com') >>> wd.find_element_by_id(""lst-ib"").send_keys(""test"") >>> wd.find_element_by_id(""lst-ib"").send_keys(""12345"") >>>  ```","closed","","tylerpaskowski","2017-12-01T16:56:25Z","2019-08-17T00:09:36Z"
"","5632","webdriver.executeScript function return different results for string script vs function","## Meta - OS:  OSX  Selenium Version:  4.0.0-alpha.1  Browser:  Firefox   Browser Version:  59   ## Expected Behavior - webdriver.executeScript should take either string or function as the script to execute. I would expect it's return value should not be different if I pass string vs function.   ## Actual Behavior - When passing string, it may gave different result compare to function.   ## Steps to reproduce - Correct: ``` driver.executeScript(() => window.devicePixelRatio); // give 2 on retina screen ```  Wrong: ``` driver.executeScript('window.devicePixelRatio'); // give 1 on retina screen ```","closed","C-nodejs,","ryancat","2018-03-16T17:35:37Z","2019-08-16T07:09:41Z"
"","5616","WebElement takeScreenshot function doesn't work if the window is scrolled","## Meta - OS:  OSX  Selenium Version:  4.0.0-alpha.1  Browser:  Firefox   Browser Version:  59   ## Expected Behavior - ```element.takeScreenshot()``` should take a screenshot for the element, regardless if the window is scrolled.  ## Actual Behavior - When taking screenshot for element, if the window is scrolled, the screenshot position is wrong.  ## Steps to reproduce -  ``` describe('google.com', () => {   let driver;    before(async () => {     driver = await (new Builder()).forBrowser('firefox').build();   });    after(async () => {     return await driver.quit();   });    it('should have correct title', async () => {     try {       await driver.get('https://www.google.com/search?q=espn#searchform');       let data = await driver.findElement(By.id('searchform')).takeScreenshot();       fs.writeFileSync('/path/to/screenshot', 'screenshot.png', data, 'base64');     }      catch (err) {       console.log(err);     }   }); }); ```","closed","D-firefox,","ryancat","2018-03-15T01:23:42Z","2021-09-05T08:08:30Z"
"","5792","Shadow dom elements are not clickable in Safari 10.13.1","## Meta - OS:  OSX  Selenium Version:  3.8.1  Browser:  Safari   Browser Version:  10.13.1   ## Expected Behavior - Allow clicking of buttons in extensions using shadow DOM on Safari (10+)  ## Actual Behavior - Upon grabbing a shadow dom element and attempting to click, the follow error message is presented: An unknown server side error occurred while processing the command.  ## Steps to reproduce - 1. Install an extension that utilizes the shadow dom on Safari 10+ (i.e. Honey) 2. Use selenium to grab any clickable element located within the shadow DOM (we use a selenium wrapper class to interact with these elements) 3. Use `.click()` 4. View the error","closed","R-blocked on external,","davidchunhoney","2018-04-18T00:24:34Z","2021-09-05T08:10:39Z"
"","5086","Send Keys do not send ""password123"" to any text field . While using Javascript i am able to fill","## Meta - OS:  OSX  Selenium Version:  3.5.2  Browser:  Chrome   Browser Version:     ## Expected Behavior - Below is code which I run and its not passing exact string to text field on any website   I am passing value to textfield using sendkeys function it should send the exact value e.g. **password123** Its really strange this string can be tried with any type of text field issue remains  ## Actual Behavior - If you check on the website it will only send text **password12** its very strange as it work with all other string e.g. if i pass  driver.findElement(By.id(""user[login]"")).sendKeys(""password456""); it enter in field as expected : **password456**  ## Steps to reproduce -  **JAVA Code**  WebDriver driver = new ChromeDriver(); 	driver.get(""https://github.com/""); 	driver.findElement(By.id(""user[login]"")).sendKeys(""password123""); 	Thread.sleep(2000);  _**I have actually overcome the issue by using javascript which is as below:**_  	JavascriptExecutor  js= (JavascriptExecutor) driver; 	js.executeScript(String.format(""document.getElementById('user[login]').value='password123';""));","closed","","asjadtariq","2017-11-20T17:29:38Z","2019-08-17T01:09:53Z"
"","5332","Selenium Grid - Firefox - UnknownCommandError: POST /session/{sessionId}/moveto did not match a known command","## Meta - OS:  OSX  Selenium Grid Version:  3.8.1  Browser:  Firefox   Browser Version:  57.0.4   ## Expected Behavior - Actions class function should work  ## Actual Behavior - Actions class function are not working  # _**This issue is specific to selenium grid only**_  ## Steps to reproduce - Run the following protractor script in FIREFOX browser:    `describe('Test', function () {  'use strict';   it('Firefox Actions class', function () {         browser.get('http://www.protractortest.org/#/');         browser.actions().mouseMove(element(by.css('.github-button'))).perform();         browser.sleep(10000);     }); })`  _**Note that the same works on Selenium grid 3.2.0**_","closed","","sahil1610","2018-01-12T07:24:33Z","2019-08-14T19:09:57Z"
"","4949","Click ignored when asynchronous js processing intervenes","## Meta - OS:  OS X 10.12, CentOS 6, Windows 10 Selenium Version:  3.4, 3.5, 3.6 Browser:  Firefox (52, 56) Chromium (63.0.3213.0)  ## Expected Behavior -  When executing a click event on an href, the link should be followed  ## Actual Behavior -  If the click event is executed too early during page load, while there is still js processing working in the background (not affecting the href in any way as far as I can tell), the click event regularly leads to the link being visible selected (:active) but not being clicked / followed.  ## Steps to reproduce -  Sadly, I haven't been able to reduce this from the application that I have seen this happen with. I can give some manual steps to get to where this happens if that helps though.  To Do so: *  Go to https://zms-demo.de and get an admin account (left side down). * log in as admin * In the upper right, click the gear icon and select 'System'  The problem can now be observed when (automated via selenium) clicking back and forth between the secondary level tab bar ('Benutzer', 'System', 'Sprachen', 'Meta-Attribute', ...) It works great by hand, but via selenium the click events are ignored anything between 10-50% of the time, also depending on the browser executing this. Especially clicking away from the 'System' tab when it is loading.  However, when I tried to reduce this behavior without talking to the real server, it always vanished. I suspect that I haven't been able to retain the asynchronous behavior that makes this happen, but I cannot invest more time in it now.  ## Workaround -  We have used code like the following to create a workaround signal in the website  ```js $(""body"").addClass(""loading"");  $(document).ready(function() {         if ($.active !== 0) {                 $(document).ajaxStop(function() {                         $(""body"").removeClass(""loading"").addClass(""loaded"");                 })         } else {                 $(""body"").removeClass(""loading"").addClass(""loaded"");         } }); ```  and then wait for the `.loaded` class to appear on the website before interacting with it via selenium manually in the tests. Which is of course quite inconvenient. Especially because the JS is (supposedly just) doing progressive enhancement which his not relevant to what is interacted with in these tests.  Sorry I couldn't reproduce this further, I would very much appreciate any Ideas if there is a better way to achieve this, or if I'm missing any crucial feature of Selenium to cope with this? Also I still think there is a bug in Selenium, which makes it not correctly execute click events in certain conditions that I could not reduce yet.  What kind of guidance can I give you to find this bug? (Sorry, It will be hard for me to justify investing another 2-3 days to completely take the App apart to minify this).","closed","R-awaiting answer,","dwt","2017-10-25T08:35:35Z","2019-08-17T02:09:43Z"
"","5779","[Mac OS][C#]FireFox Driver asking for gecko.exe even though its Mac","## Meta - OS:  OS X Selenium Version:  3.11.2  Browser:  FireFox 59  Hi there, I download C# build of Selenium 3.11.2 from Nuget and im able to run a safari on my Mac. But if i run the FireFox it shows following error  `DriverServiceNotFoundException: The geckodriver file does not exist in the current directory or in a directory on the PATH environment variable. The driver can be downloaded at https://github.com/mozilla/geckodriver/releases.`   Now the thing is im on Mac, and when i open FireFoxDriver class code , all i see is refences to .exe which i believe is meant for windows.  Anyhow, i tried with following approaches by providing path directly to downloaded Gecko for Mac or its parent directory but still same error  ``` new FirefoxDriver(""/Volumes/BOOTCAMP/Projects/SeleniumProjct/geckodriver""); new FirefoxDriver(""/Volumes/BOOTCAMP/Projects/SeleniumProjct/""); ```  Please advise. Thanks","closed","","kenofori","2018-04-14T16:34:21Z","2019-08-16T05:09:59Z"
"","4960","Actions.dragAndDropBy() fails with short stroke - completion depends timing/cpu load","## Meta - OS:  OpenSUSE 42.2 Selenium Version:  3.5.3 Browser:  Firefox Browser Version: 56   -->  ## Expected Behavior -  Drag should've moved the full stroke specified by the offsets, not short-stroking.  ## Actual Behavior -  In default (non-legacy) mode, and geckodriver (18 and 19 tested), Actions.dragAndDropBy() fails to complete the drag, seemingly moving the thumbslider (in my case) a random distance less than what I requested.    ## Steps to reproduce -  By manually composing a sequence:  Actions.clickAndHold(element).moveByOffset(xOffset,yOffset).release()  I see the same behavior, ... but it's fixed if I insert a pause  Actions.clickAndHold(element).moveByOffset(xOffset,yOffset).pause(500).release()  So obviously, what's happening is that the code is actually only attempting to drag for a fixed amount of time, and then giving up.  If the underlying JavaScript/browser code triggered by the thumb dragging hasn't finished running and the thumb slider hasn't actually moved the requested distance within that fixed amount of time, it simply releases prematurely.  Note that, legacy mode works perfectly - I don't need to add any delay.  Can you provide an Actions.moveByOffsetAndWait() that waits until the cursor reaches the requested offset?  Otherwise, I'm going to be stuck trying to pick an appropriate pause(), which may either be too much, or not enough.  Note that I can provide a repro case, but I suspect the devs may acknowledge the behavior I describe as expected or part of the design - but then how do I deal with the variability in execution time breaking my tests - other than adding a very large pause?","closed","D-firefox,","gwtuser","2017-10-26T07:58:18Z","2019-08-16T23:09:59Z"
"","5475","Select doesn't work for drop-down menus","## Meta - OS:  macOS Sierra 10.12.6   Selenium Version:  3.8.1  Browser:  Safari 11.0.3    Browser Version:     ## Expected Behavior - select an element from a drop-down menu.  ## Actual Behavior - finds the element but doesn't select it.  ## Steps to reproduce -                 mySelect = Select(webdriver.find_element_by_xpath(xpath/to/element))                 mySelect.select_by_visible_text('visible_text')","closed","","MarkDabe","2018-02-09T20:13:43Z","2021-09-05T08:35:53Z"
"","5020","Cannot run Safari Technology Preview with RemoteWebDriver","## Meta - OS:  macOS Sierra 10.12.6 Selenium Version:  v3.7.0 (Java client) Browser:  Safari Technology Preview Browser Version:  Release 43 (Safari 11.1, WebKit 12605.1.12)  ## Expected Behavior - Should be able to launch Safari Technology Preview via DesiredCapabilites and RemoteWebDriver after calling SafariOptions.setUseTechnologyPreview(). ## Actual Behavior - Setting technologyPreview flag has no effect on launching Safari Technology Preview. This ability last worked in v3.4.0 and has failed ever since.  I know SafariOptions.setUseTechnologyPreview() has been marked deprecated in v3.7.0, but it is still available for use, however is seems to be ignored and only launches the standard Safari browser.  I'm now only successful at getting Safari Technology Preview to launch if I call SafariDriver(SafariOptions). ## Steps to reproduce - The following attempts FAIL to launch Safari Technology Preview for v3.5.x, 3.6.0 and 3.7.0): ``` DesiredCapabilities caps = DesiredCapabilities.safari(); SafariOptions safariOptions = new SafariOptions(); safariOptions.useCleanSession(true); safariOptions.setUseTechnologyPreview(true);","closed","C-java,","schmidtkp","2017-11-06T18:42:55Z","2019-08-16T11:09:38Z"
"","5228","DefaultDriverFactory.DEFAULT_DRIVER_PROVIDERS needs to be updated to use Options","## Meta - OS:  macOS Sierra Selenium Version:  3.8.1 Browser:  ANY Browser Version:  ANY  ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce - A call to SelfRegisteringRemote.startRemoteServer() to create a node will eventually call static DefaultDriverFactory.DEFAULT_DRIVER_PROVIDERS. This static makes several calls to DesiredCapabilites which log message like ""Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()`"".  This is just an FYI....","closed","C-grid,","schmidtkp","2017-12-15T22:32:39Z","2019-08-16T20:09:55Z"
"","5793","""Maximise browser Window"" keyword not working in chrome.I am using selenium2Library.","## Meta - OS:  macOS High Sierra 10.13.4 Selenium Version:  3.11.0, Selenium2library=3.1.1  Browser:  Chrome Browser Version:   Chrome --> 65.0.3325.181  ## Expected Behavior - Chrome browser should maximize to full screen mode. ## Actual Behavior - Chrome browser does not maximize fully on using ""Maximize Browser Window"". Its not full screen. ## Steps to reproduce - try Maximize Browser Window command with chrome browser on pycharm. or  Easiest way to find where the problem is to you to run the following script: save below steps as test.py script. Run from command line. --> python test.py driver = webdriver.Chrome() driver.get('https://github.com/robotframework/SeleniumLibrary') driver.maximize_window() time.sleep(5) driver.quit()  from discussion : https://github.com/robotframework/SeleniumLibrary/issues/123#issuecomment-382142668  -->","closed","","mithunsureshqa","2018-04-18T01:22:41Z","2019-08-16T05:09:52Z"
"","5470","Unable to interact with light DOM children in browser using polyfill","## Meta - OS:  macOS High Sierra 10.13.2 Selenium Version:   3.8.1 Browser:   Works on Chrome+Safari which have native Shadow DOM support Broken in IE11, Edge, Firefox  ## Expected Behavior - - You can interact with an element which is in light DOM only, regardless of if the browser supports native shadow DOM or not. - An element returned from `executeScript` can be used in a subsequent call instead of always throwing `StaleElementReferenceException`  ## Actual Behavior - An element which is in light DOM only can be returned by `executeScript` but trying to perform any action on the element results in `StaleElementReferenceException`  ## Steps to reproduce -  ``` git clone https://github.com/Artur-/shadydom-selenium cd shadydom-selenium mvn install ```","closed","R-awaiting answer,","Artur-","2018-02-09T08:16:04Z","2020-04-18T22:16:30Z"
"","5335","SessionNotCreatedException when specifying `safari.options` and `port`","## Meta - OS:  macOS 10.13.2  Selenium Version:   3.8.0/3.8.1  Browser:   Safari  Browser Version:   11.0.2  ## Expected Behavior -  If we start a remote driver with the following desired caps:  ```python {'browserName': ""safari"", 'safari.options': {'port': 1034} ```  ## Actual Behavior -  The following exception and backtrace:  ```java SessionNotCreatedException: Message: Unable to create new service: SafariDriverService Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'Tim-Sutton-SL0280.local', ip: 'fe80:0:0:0:8d6:1d46:d1a5:993d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.2', java.version: '9.0.1' Driver info: driver.version: unknown Stacktrace:     at org.openqa.selenium.remote.server.ServicedSession$Factory.lambda$get$0 (ServicedSession.java:208)     at org.openqa.selenium.remote.server.ServicedSession$Factory.apply (ServicedSession.java:218)     at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$11 (ActiveSessionFactory.java:167)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.stream.ReferencePipeline$11$1.accept (ReferencePipeline.java:375)     at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:177)     at java.util.Spliterators$ArraySpliterator.tryAdvance (Spliterators.java:958)     at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:127)     at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:502)     at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:488)     at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:474)     at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)     at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)     at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:476)     at org.openqa.selenium.remote.server.ActiveSessionFactory.apply (ActiveSessionFactory.java:170)     at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$1 (NewSessionPipeline.java:44)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.Collections$2.tryAdvance (Collections.java:4734)     at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:127)     at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:502)     at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:488)     at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:474)     at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)     at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)     at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:476)     at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$2 (NewSessionPipeline.java:47)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.stream.DistinctOps$1$2.accept (DistinctOps.java:175)     at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:177)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:177)     at java.util.stream.Streams$StreamBuilderImpl.tryAdvance (Streams.java:397)     at java.util.stream.Streams$ConcatSpliterator.tryAdvance (Streams.java:720)     at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:127)     at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:502)     at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:488)     at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:474)     at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)     at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)     at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:476)     at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession (NewSessionPipeline.java:50)     at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute (BeginSession.java:77)     at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:240)     at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:514)     at java.util.concurrent.FutureTask.run (FutureTask.java:264)     at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1167)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:641)     at java.lang.Thread.run (Thread.java:844) ```  ## Steps to reproduce -  Start selenium standalone on macOS:  `java -jar selenium-server-standalone-3.8.1.jar`  Connect to it (using Python as an example):  ```python from selenium import webdriver driver = webdriver.Remote('http://localhost:4444/wd/hub', {'browserName': ""safari"", 'safari.options': {'port': 1034}}) ```  If I omit the `port` option, it's fine.  ## Other notes  When looking further to the actual `/usr/bin/safaridriver` process that gets launched, that on prior versions of SE that it sets a random `--port` option anyway. (Looking at this line [here](https://github.com/SeleniumHQ/selenium/blob/781c1c668d1ef44a81b8349882987f4df58082d0/java/client/src/org/openqa/selenium/safari/SafariDriverService.java#L92))  Is it possible this was only functional with the old 2.x Safari extension? I looked a little and couldn't find any documentation for the `port` `safari.options`. I guess I just thought it was interesting that this version has that exception, even if it would not normally result in an explicit port being set anyway.  Thanks for your time and consideration!","closed","C-grid,","timsutton-sl","2018-01-12T14:59:53Z","2021-10-25T00:06:31Z"
"","5127","Undefined method `log` for Selenium::WebDriver::Remote::W3C::Bridge","## Meta - OS:  macOS 10.13.1 (17B48) Selenium Version: selenium-webdriver 3.7.0 GeckoDriver Version: 0.19.1 Browser: Firefox   Browser Version: 57.0  ## Expected Behavior -  I am able to access the JavaScript console logs.  ## Actual Behavior -  An exception is raised:  ``` Exception: NoMethodError: undefined method `log' for # --  0: .../gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/common/logs.rb:30:in `get' ```  ## Steps to reproduce -  **repro.rb**  ```ruby require 'rubygems' require 'webdrivers' require 'selenium-webdriver'  driver = Selenium::WebDriver.for :firefox driver.get ""http://google.com""  errors = driver.manage.logs.get(:browser) puts errors  driver.quit ```  **Gemfile**  ```ruby # frozen_string_literal: true source ""https://rubygems.org""  gem ""webdrivers"", '3.2.2' gem ""selenium-webdriver"", '3.7.0' ```  ``` bundle exec ruby ./repro.rb ```","closed","","shepmaster","2017-11-27T15:12:19Z","2019-08-14T07:09:41Z"
"","5627","Firefox proxy port not set correctly in selenium-webdriver","## Meta - OS:  macOS 10.12.6 (16G1212) Selenium Version:  Selenium Webdriver v3.6.0 Browser:  Firefox (via GeckoDriver)  Browser Version:  58.0.2 (64-bit)  ## Expected Behavior - Running ```javascript const mitmProxy = proxy.manual({http: 'localhost:8080', https: 'localhost:8081'}); const firefoxOptions = new firefox.Options(); firefoxOptions.setBinary(ffBinary); firefoxOptions.setProxy(mitmProxy); var driver = new webdriver.Builder().forBrowser('firefox').setFirefoxOptions(firefoxOptions).build(); ``` should set the 'http' proxy to 'localhost' with port '8080', and set the 'ssl' proxy to 'localhost' with port '8081'  ## Actual Behavior - Running the above code correctly sets the proxy addresses to 'localhost', but the HTTP port is set to '80' and the SSL port is set to '443'.  ## Steps to reproduce - Run the above code snippet, then go to `about:preferences` -> 'Network Proxy'","closed","C-nodejs,","thislooksfun","2018-03-15T22:25:02Z","2021-09-05T08:34:55Z"
"","5232","Should method .quit kill the Safari process or just close all the safari window?","## Meta - OS:  MACOS 10.12.6  Selenium Version:  3+  Browser:  Safari10   Browser Version:     ## Expected Behavior - Not a bugs, just want to ask. ## Actual Behavior -  ## Steps to reproduce -","closed","","JoannaCode","2017-12-18T21:57:58Z","2019-08-16T20:09:45Z"
"","5549","Selenium webdriver findElements getText throws exception","## Meta - OS:  MacOS Selenium Version:  ""selenium-webdriver"": ""^4.0.0-alpha.1"", Browser:  Chrome, Safari, Firefox  Selenium webdriver findElements getText throws exception  I'm using cucumber-js with selenium-driver to create automated tests for my website. Now I'm trying to obtain a specific button by using its class and the text it has in it. When I use findElement function this works alright, I can use getText to obtain the text inside the **WebElementPromise** that I get from findElement:  ``` When('I click on {string} button', async function (buttonClass) {     const cta = currentDriver.findElement(seleniumWebDriver.By.className(buttonClass));     cta.getText().then(console.log); // logs the text in the element     await cta.click(); }); ``` But when I use findElements in order to obtain an array of **WebElements** and iterate them to get their inner text I get an exception:  ``` When('I click on {string} class {string} button', async function (buttonClass, buttonText) {     let cta;     currentDriver.findElements(seleniumWebDriver.By.className(buttonClass))     .then(function(elements){         elements.forEach(function(element, index) {             element.getText().then(function(buttonInnerText) {                 console.log(buttonInnerText);                 if (buttonInnerText.trim() === buttonText.trim()) cta = element;             }, console.log);         });     });     if (cta) await cta.click(); }); ```  **_console.log(buttonInnerText);_** Is usually not executed (some random but very sporadic times it did log the elements text which is very strange) and I get the following exceptions, logged by the rejection console.log callback function, for each time getText is called:  **Chrome driver** { NoSuchSessionError: no such session   (Driver info: chromedriver=2.35.528157 (4429ca2590d6988c0745c24c8858745aaaec01ef),platform=Mac OS X 10.13.3 x86_64)     at Object.checkLegacyResponse (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/error.js:585:15)     at parseHttpResponse (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/http.js:533:13)     at Executor.execute (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/http.js:468:26)     at      at process._tickCallback (internal/process/next_tick.js:160:7) name: 'NoSuchSessionError', remoteStacktrace: '' }  **Safari driver** { UnsupportedOperationError: A session with id = '9C117DB8-BF35-4CBE-81F9-1694C44D7BCC' was not found.     at parseHttpResponse (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/http.js:557:11)     at Executor.execute (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/http.js:468:26)     at      at process._tickCallback (internal/process/next_tick.js:160:7) name: 'UnsupportedOperationError', remoteStacktrace: '' }  **Firefox driver** { WebDriverError: An unknown server-side error occurred while processing the command.     at Object.checkLegacyResponse (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/error.js:585:15)     at parseHttpResponse (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/http.js:533:13)     at Executor.execute (/Users/gustavofranco/Desktop/PrimaryBid/Projects/pb-web-tests/node_modules/selenium-webdriver/lib/http.js:468:26)     at      at process._tickCallback (internal/process/next_tick.js:160:7) name: 'WebDriverError', remoteStacktrace: '' }","closed","C-nodejs,","gusfran17","2018-02-28T10:14:01Z","2019-08-16T11:10:03Z"
"","5640","Capability ""loggingPrefs"" is rejected because it is not W3C-conform","## Meta - OS:  macOS Selenium Version:   3.9.1, 3.11.0 Browser:   Chrome  Browser Version:   65.0.3325.146  ## Expected Behavior -  Capability ""loggingPrefs"" is used to change the log level of certain log types in Chrome  ## Actual Behavior -  Capability ""loggingPrefs"" is rejected by selenium since 3.9  ## Steps to reproduce -  ` ChromeOptions options = new ChromeOptions(); final LoggingPreferences logs = new LoggingPreferences(); logs.enable(LogType.BROWSER, Level.ALL); options.setCapability(""loggingPrefs"", logs); RemoteWebDriver driver = new RemoteWebDriver(""http://localhost:4444/wd/hub"", options); driver.get(""http://example.com"") `  If i run the above code selenium is rejecting the request with ""loggingPrefs"" in capabilities: java.lang.IllegalArgumentException: Illegal key values seen in w3c capabilities: [loggingPrefs]  I guess this is because the ""loggingPrefs"" capability is not part of the w3c standard. The code that does the rejection is here: https://github.com/SeleniumHQ/selenium/blob/d7fe2c464aaa2629d7e1fed7d8e1374144e9d8d4/java/client/src/org/openqa/selenium/remote/NewSessionPayload.java#L85  I also tried to use ""goog:LogginPrefs"" instead, but it does not change the log level in chrome.  I opened an issue on the chromedriver bugtracker too, because I'm not sure who has to fix it: https://bugs.chromium.org/p/chromedriver/issues/detail?id=2315","closed","D-chrome,","mythsunwind","2018-03-19T11:35:04Z","2019-08-16T08:10:01Z"
"","5671","selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service ""chromedriver""","## Meta - OS:  Mac OSX 10.12.6 Selenium webdriver Version: 3.9.0 ChromeDriver: 2.37.544337 Browser:  Chrome Browser Version:  Version 65.0.3325.181 (Official Build) (64-bit)  ## Expected Behavior -  Program should:  1. open chrome browser 2. open indicated webpage 3. prompt for login credentials 4. select agree to terms box and login 5. select link1 6. select link2 7. select link3 8. open Tracker software  This program runs perfectly fine at the office and on my mobile hotspot.  ## Actual Behavior -  When logged into my home network I error out in running the chromedriver with the following error message:     -selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service chromedriver  If I test this by connecting to my hot spot I can my code with no issues.  ## Steps to reproduce -  #! /usr/bin/env python3 # This program is intended to login to the Lion Street website and utilize Tracker 4.0. # Import selenium and webdriver to use browser  import time, selenium from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import Select   # Enter login information user = input('Enter your username: ') pwd = input('Enter your password: ')  # Open chrome browser and Lion Street website login chromeDriver = '/LOCATION-OF/chromedriver' browser = webdriver.Chrome(chromeDriver) browser.get('https://MYWEBSITE.com/') assert ""Lion Street"" in browser.title username = browser.find_element_by_id('user_login') # Find username input password = browser.find_element_by_id('user_pass') # Fins password input username.send_keys(user) # Send username input to webpage password.send_keys(pwd) # Send password input to webpage  agree = browser.find_element_by_name('terms') # Finds agree to terms agree.click() # Checks agree to terms  log_in = browser.find_element_by_name('login-submit') # Finds ""Log In"" button log_in.click() # Selects ""Log In"" button  # Navigate to tracker  #tracker = browser.find_element_by_xpath(""//img[contains(@src, 'Tracker_logo-300x71.png')]/parent::a"").click() # Finds ""Tracker"" button #tracker.click() # Selects ""Tracker"" button quicklinks = browser.find_element_by_link_text('Quick Links').click() # Finds and clicks ""Quick Links"" menu tracker = browser.find_element_by_link_text('TRACKER').click() # Finds and clicks ""Tracker"" button trackerFinal = browser.find_element_by_name('tracker').click() # Finds ""Go to Tracker Now"" button","closed","","murflaw7424","2018-03-23T15:15:23Z","2019-08-16T08:10:02Z"
"","4866","Protractor tests stopped working after recent update of selenium+chrome","## Meta - OS:  Mac OS X' os.version: 10.12.6  Selenium Version:   3.6.0 Browser:   Chrome  61.0.3163.100 Node 7.5 java.version: '1.8.0_144' Scenario: All of sudden from October 5th after latest chrome driver and selenium are updated, I cannot run the tests as driver server cannot start, nothing seems to help me.   Browser Version:   Chrome  61.0.3163.100  ## Expected Behavior - tests should just run ## Actual Behavior - Tests do not run this is what I see in the console ``` node:22587) DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead. [15:20:14] I/launcher - Running 1 instances of WebDriver [15:20:14] I/local - Starting selenium standalone server... [15:20:15] I/local - Selenium standalone server started at http://10.4.8.202:55567/wd/hub [15:20:35] E/launcher - Timed out waiting for driver server to start. Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: '*****.local', ip: 'fe80:0:0:0:93:890d:affc:6e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_144' Driver info: driver.version: unknown [15:20:35] E/launcher - WebDriverError: Timed out waiting for driver server to start. Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: '*****.local', ip: 'fe80:0:0:0:93:890d:affc:6e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_144' Driver info: driver.version: unknown     at Object.checkLegacyResponse (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/error.js:505:15)     at parseHttpResponse (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:509:13)     at doSend.then.response (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:440:13)     at process._tickCallback (internal/process/next_tick.js:103:7) From: Task: WebDriver.createSession()     at Function.createSession (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver.js:777:24)     at Function.createSession (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/selenium-webdriver/chrome.js:709:29)     at createDriver (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/selenium-webdriver/index.js:167:33)     at Builder.build (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/selenium-webdriver/index.js:623:16)     at Local.getNewDriver (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/built/driverProviders/driverProvider.js:53:33)     at Runner.createBrowser (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/built/runner.js:195:43)     at q.then.then (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/built/runner.js:339:29)     at _fulfilled (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/q/q.js:834:54)     at self.promiseDispatch.done (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/q/q.js:863:30)     at Promise.promise.promiseDispatch (/*****/.nvm/versions/node/v7.5.0/lib/node_modules/protractor/node_modules/q/q.js:796:13) [15:20:35] E/launcher - Process exited with error code 199 ```  ## Steps to reproduce - Not sure if it can be easily reproducible, but none of my tests work, so I tried to run with no dependencies and with a simple example, but no luck, not sure if I have some corrupted binaries.  ``` // spec.js describe('Protractor Demo App', function() {   it('should have a title', function() {     browser.get('http://juliemr.github.io/protractor-demo/');      expect(browser.getTitle()).toEqual('Super Calculator');   }); });  // conf.js exports.config = {   framework: 'jasmine',   browserName: 'chrome',   specs: ['spec.js'] } ```","closed","C-nodejs,","Jag-MW","2017-10-13T19:53:39Z","2019-08-17T07:09:48Z"
"","5447","3.9.0 Java java.net.SocketTimeoutException: timeout when typing long string","## Meta - OS:  Mac OS X x86_64 10.13.3 Selenium Version:  3.9.0 Browser:  Chrome Browser Version: 64 Driver: chromedriver 2.35  ## Expected Behavior - Text is typed in the textarea field ## Actual Behavior - openqa.selenium.WebDriverException: java.net.SocketTimeoutException: timeout is thrown ## Steps to reproduce - The page contains the textarea field with maxlength=""500"" attribute. I'm checking if only 500 chars can be typed in this field.  Using Apache commons lang3 RandomStringUtils.randomAlphanumeric(501) method, I generate the String longer than 500chars, and then using sendKeys() method try to type this string in the textarea field.  After some time, and some number of chars being sent, WebDriver throws the error.   `Caused by: java.net.SocketTimeoutException: timeout 	at okio.Okio$4.newTimeoutException(Okio.java:230) 	at okio.AsyncTimeout.exit(AsyncTimeout.java:285) 	at okio.AsyncTimeout$2.read(AsyncTimeout.java:241) 	at okio.RealBufferedSource.indexOf(RealBufferedSource.java:345) 	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:217) 	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212) 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:97) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:47) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:157) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)`","closed","","baflQA","2018-02-06T13:30:05Z","2019-08-15T13:09:54Z"
"","4927","Selenium 3.6.0 WebDriverException: Message: Unable to find a matching set of capabilities","## Meta - OS:  Mac OS Sierra - 10.12.1 Selenium Version:  3.6.0 Browser:  Firefox Browser Version: 52.4.1 (64-bit) geckodriver: v0.19.0  When I try a simple code to open a browser in `python` and hit a page in this :  `driver = webdriver.Firefox(executable_path=""/Users/tarun/mozDriver"")` I get this error :  `WebDriverException: Message: Unable to find a matching set of capabilities`  Other suggested posts suggest that I should update browser, selenium etc, but I have already updated them and still get the error. I don't get this error on chrome","closed","","TarunTater","2017-10-23T06:32:04Z","2019-08-16T06:09:48Z"
"","5125","Not able to use Page factory model with appium","## Meta - OS:  MAC OS SIERRA (version 10.13) Selenium Version:  3.4.0 Browser:  NA Browser Version:  NA Appium : 1.7.1 Java Client : 5.0.4  ## Expected Behavior - Should able to use page factory model with appium  ## Actual Behavior - Not able to use page factory model with appium, getting below error in until method of FluentWait class:  java.lang.NoSuchMethodError: org.openqa.selenium.support.ui.FluentWait.until(Lcom/google/common/base/Function;)Ljava/lang/Object; at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:88) at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:103) at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:57) at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$c0b591f0.click() at com.app.automation.app.android.AndroidAppHome.androidAppLaunch(AndroidAppHome.java:64) at com.app.automation.core.appMain.androidAppLogin(appMain.java:902) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108) at org.testng.internal.Invoker.invokeMethod(Invoker.java:661) at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869) at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193) at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) at org.testng.TestRunner.privateRun(TestRunner.java:744) at org.testng.TestRunner.run(TestRunner.java:602) at org.testng.SuiteRunner.runTest(SuiteRunner.java:380) at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375) at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) at org.testng.SuiteRunner.run(SuiteRunner.java:289) at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301) at org.testng.TestNG.runSuitesLocally(TestNG.java:1226) at org.testng.TestNG.runSuites(TestNG.java:1144) at org.testng.TestNG.run(TestNG.java:1115) at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230) at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)  ## Steps to reproduce - Try to automate any app using page factory model","closed","","ArpitJain10","2017-11-27T08:59:38Z","2019-08-17T00:09:55Z"
"","5477","Set flag (chrome://flags/#autoplay-policy) with ChromeOptions.","## Meta - OS:  Mac OS Hight Sierra v10.13.3 Selenium Version:  3.8.1 Browser:  Google Chrome Version 64.0.3282.140 (Official Build)  ## Expected Behavior  - Switch flag chrome://flags/#autoplay-policy to ""Document user activation is required.""  Is it possible?  ## Actual Behavior  - Chrome starts with a default value.  ## Steps to reproduce -      ChromeOptions options = new ChromeOptions();     Map prefs = Maps.newHashMap();     prefs.put(""--autoplay-policy"", ""Document user activation is required."");     options.setExperimentalOption(""prefs"", prefs);     WebDriver driver = new ChromeDriver(options);  I trying:      options.addArguments(""--autoplay-policy=document-user-activation-required"");  Same result. doesn't work.","closed","","PavelRavvich","2018-02-10T10:04:47Z","2019-08-16T14:09:40Z"
"","5345","EPIPE write EPIPE error","## Meta - OS:  Mac OS High Sierra  Selenium Version:  WebdriverJS   Browser:  Chrome  Browser Version:  63.0  ## Expected Behavior - All tests should run, instead of passing undefined back to function, custom value should be passed back  ## Actual Behavior - I am getting the below error, which as a result is failing my step as the value being passed back is undefined as opposed to the value null, which I declared. This behaviour is sporadic and happens consistently however in different step definitions. After doing some reading, it looks like it might be as I'm using Promise.all() in one of the functions I'm using:  ` Error: EPIPE write EPIPE     at ClientRequest. (/Users/iona-kathrynevans/Desktop/UIAutomation2/node_modules/selenium-webdriver/http/index.js:238:15)     at emitOne (events.js:115:13)     at ClientRequest.emit (events.js:210:7)     at Socket.socketErrorListener (_http_client.js:401:9)     at emitOne (events.js:115:13)     at Socket.emit (events.js:210:7)     at onwriteError (_stream_writable.js:392:12)     at onwrite (_stream_writable.js:414:5)     at _destroy (internal/streams/destroy.js:39:7)     at Socket._destroy (net.js:556:3)`","closed","C-nodejs,","i0na-k","2018-01-16T16:26:43Z","2019-08-16T16:09:46Z"
"","5707","Add support for the new Safari Driver in javascript","## Meta - OS:  mac 10.13 Selenium Version:  3 Browser:  safari  Browser Version:  11.0.3 (13604.5.6)  ## Expected Behavior - I expect to be able to run tests in safari using javascript  ## Actual Behavior - It dosen't work  It starts the browser but then immediately closes a few seconds after. Whereas it works with chrome.   Is the new safari driver supported in javascript?","closed","","paladox","2018-03-29T15:00:20Z","2019-08-16T08:09:41Z"
"","4818","[Facebook\WebDriver\Exception\SessionNotCreatedException] Unable to create new service: ChromeDriverService","## Meta - OS:  MAC   Selenium Version:  3.6  Browser:  Chrome, Firefox   Browser Version:   Chrome Version - 61.0.3163.100  Firefox Version - 56.0 (64-bit) ## Expected Behavior - It should open the browser and script should run ## Actual Behavior - Script is not running.  Check the log here -  Selenium Log - ``` 11:52:26.038 INFO - Selenium build info: version: '3.6.0', revision: '6fbf3ec767' 11:52:26.038 INFO - Launching a standalone Selenium Server 2017-10-06 11:52:26.069:INFO::main: Logging initialized @333ms to org.seleniumhq.jetty9.util.log.StdErrLog 11:52:26.135 INFO - Driver class not found: com.opera.core.systems.OperaDriver 11:52:26.172 INFO - Driver provider class org.openqa.selenium.ie.InternetExplorerDriver registration is skipped:  registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform MAC 11:52:26.172 INFO - Driver provider class org.openqa.selenium.edge.EdgeDriver registration is skipped:  registration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform MAC 11:52:26.227 INFO - Using the passthrough mode handler 2017-10-06 11:52:26.270:INFO:osjs.Server:main: jetty-9.4.5.v20170502 2017-10-06 11:52:26.303:WARN:osjs.SecurityHandler:main: ServletContext@o.s.j.s.ServletContextHandler@eec5a4a{/,null,STARTING} has uncovered http methods for path: / 2017-10-06 11:52:26.310:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@eec5a4a{/,null,AVAILABLE} 2017-10-06 11:52:26.354:INFO:osjs.AbstractConnector:main: Started ServerConnector@9660f4e{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 2017-10-06 11:52:26.356:INFO:osjs.Server:main: Started @620ms 11:52:26.356 INFO - Selenium Server is up and running 2017-10-06 11:52:38.203:INFO:osjshC.ROOT:qtp971848845-11: org.openqa.selenium.remote.server.WebDriverServlet-28d25987: Initialising WebDriverServlet 11:52:38.254 INFO - Binding default provider to: org.openqa.selenium.chrome.ChromeDriverService 11:52:38.255 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@124a951f 11:52:38.260 INFO - /session: Executing POST on /session (handler: BeginSession) 11:52:38.326 INFO - Capabilities are: Capabilities {browserName=chrome} 11:52:38.327 INFO - Capabilities {browserName=chrome} matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 11:52:38.328 INFO - Capabilities {browserName=chrome} matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) ``` Script Log -   ``` Test  tests/acceptance/testCept.php                                                                                                                                                                                                                                                                                                                                                                                               [Facebook\WebDriver\Exception\SessionNotCreatedException] Unable to create new service: ChromeDriverService Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'krupa.local', ip: '192.168.0.100', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_111' Driver info: driver.version: unknown   ``` ## Steps to reproduce -  I am running my script for codeception test. Once I run the script it thorws the exception shown above.   Please help me to fix this issue.","closed","R-awaiting answer,","kjnanda","2017-10-06T06:29:00Z","2019-09-28T20:09:35Z"
"","5571","Selenium Password Management","## Meta - OS:  Linux/Windows    Selenium Version:  any future release  Browser:  CHROME/IE/FF   Browser Version:     ## Expected Behavior - When i was using tools like UFT ( Unified Functional Testing by HP ) - they have provided a saperate password encrypter tool or online service - where user can just enter their password and get encrypted password.  And then use webdriver.sendkeys_encrypted ( Assuming - that selenium can provide function like this ), which internally decrypts the password and sends to browser password field.  This will be a really good help for many who are putting their passwords in plain text in their selenium java code.  This is just a suggestion for the future. But certainly big step for passwords management for many.  ## Actual Behavior -  ## Steps to reproduce -","closed","","arpit-patel1","2018-03-06T14:06:24Z","2019-08-16T10:09:55Z"
"","5418","server timeouts seem to be broken?","## Meta - OS:  Linux, Win7 Selenium Version:   3.8.1, 3.6.0 Browser:   FF, Chrome, IE Browser Version:   FF 57 Chrome 63 IE11  ## Expected Behavior - I expect the browser sessions  to eventually be killed when the tests hang and can't deliberatly quit().  ## Actual Behavior - Sessions just sit around forever until I close them manually or reboot the machine.  ## Steps to reproduce - run the server like this: `#!/bin/bash java -Dwebdriver.chrome.driver=drivers/linux/chromedriver -jar lib/selenium-server-standalone-3.6.0.jar -port 4466 -timeout 60 -browserTimeout 60 `  then connect to http://localhost:4466/wd/hub/static/resource/hub.html and create a new chrome session.  You can wait as long as you like, the session will not be cleaned up.  I'm aware that there's some confusion about whether those numbers are millis, seconds or minutes, so I tried appropriate values for all of them and none seem to work.  And if I omit the timeout params, the default 30m timeout also does not kill the browser instances.","closed","C-grid,","josh-walker","2018-01-31T19:49:24Z","2019-08-15T07:09:48Z"
"","5812","WebDriverException: failed to lookup address information: Name does not resolve","## Meta - OS:  Linux Ubuntu 16.04 Selenium Version:  3.11.0' Browser:  Firefox 59.0.1  ``` Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'Unknown', ip: 'Unknown', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-116-generic', java.version: '1.8.0_151' Driver info: driver.version: FirefoxDriver ``` **Exception Traces:**  `FAILED CONFIGURATION: @BeforeMethod beforeMethod org.openqa.selenium.WebDriverException: failed to lookup address information: Name does not resolve Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'Unknown', ip: 'Unknown', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-116-generic', java.version: '1.8.0_151' Driver info: driver.version: FirefoxDriver remote stacktrace: stack backtrace:    0:           0x4f388c - backtrace::backtrace::trace::h736111741fa0878e    1:           0x4f38c2 - backtrace::capture::Backtrace::new::h63b8a5c0787510c9    2:           0x4ef156 - webdriver::error::WebDriverError::new::hca4407bc48fe2453    3:           0x4efa17 - ::from::hc878346f79b0fc74    4:           0x447b37 - geckodriver::marionette::MarionetteHandler::create_connection::hf8b6061dba65cdd0    5:           0x42ac91 - ::run::hba9181b5aacf8f04    6:           0x402c59 - std::sys_common::backtrace::__rust_begin_short_backtrace::h19de262639927233    7:           0x40c065 - std::panicking::try::do_call::h6c1659fc4d01af51    8:           0x5e38ec - panic_unwind::__rust_maybe_catch_panic                         at /checkout/src/libpanic_unwind/lib.rs:98    9:           0x420d32 - ::call_box::h953e5f59694972c5   10:           0x5dc00b - alloc::boxed::{{impl}}::call_once                         at /checkout/src/liballoc/boxed.rs:661                          - std::sys_common::thread::start_thread                         at /checkout/src/libstd/sys_common/thread.rs:21                          - std::sys::imp::thread::{{impl}}::new::thread_start                         at /checkout/src/libstd/sys/unix/thread.rs:84 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:132) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at test.SuperTest.beforeMethod(SuperTest.java:24) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at org.testng.TestRunner.privateRun(TestRunner.java:756) 	at org.testng.TestRunner.run(TestRunner.java:610) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) 	at org.testng.SuiteRunner.run(SuiteRunner.java:289) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218) 	at org.testng.TestNG.runSuites(TestNG.java:1133) 	at org.testng.TestNG.run(TestNG.java:1104) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)  SKIPPED CONFIGURATION: @AfterMethod afterMethod SKIPPED: createOrg org.openqa.selenium.WebDriverException: failed to lookup address information: Name does not resolve Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'Unknown', ip: 'Unknown', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-116-generic', java.version: '1.8.0_151' Driver info: driver.version: FirefoxDriver remote stacktrace: stack backtrace:    0:           0x4f388c - backtrace::backtrace::trace::h736111741fa0878e    1:           0x4f38c2 - backtrace::capture::Backtrace::new::h63b8a5c0787510c9    2:           0x4ef156 - webdriver::error::WebDriverError::new::hca4407bc48fe2453    3:           0x4efa17 - ::from::hc878346f79b0fc74    4:           0x447b37 - geckodriver::marionette::MarionetteHandler::create_connection::hf8b6061dba65cdd0    5:           0x42ac91 - ::run::hba9181b5aacf8f04    6:           0x402c59 - std::sys_common::backtrace::__rust_begin_short_backtrace::h19de262639927233    7:           0x40c065 - std::panicking::try::do_call::h6c1659fc4d01af51    8:           0x5e38ec - panic_unwind::__rust_maybe_catch_panic                         at /checkout/src/libpanic_unwind/lib.rs:98    9:           0x420d32 - ::call_box::h953e5f59694972c5   10:           0x5dc00b - alloc::boxed::{{impl}}::call_once                         at /checkout/src/liballoc/boxed.rs:661                          - std::sys_common::thread::start_thread                         at /checkout/src/libstd/sys_common/thread.rs:21                          - std::sys::imp::thread::{{impl}}::new::thread_start                         at /checkout/src/libstd/sys/unix/thread.rs:84 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:132) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at test.SuperTest.beforeMethod(SuperTest.java:24) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at org.testng.TestRunner.privateRun(TestRunner.java:756) 	at org.testng.TestRunner.run(TestRunner.java:610) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) 	at org.testng.SuiteRunner.run(SuiteRunner.java:289) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218) 	at org.testng.TestNG.runSuites(TestNG.java:1133) 	at org.testng.TestNG.run(TestNG.java:1104) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)  SKIPPED: editOrg java.lang.Throwable: Method Organization_Test.editOrg()[pri:2, instance:rl.catalyst.com.catalyst.organization.Organization_Test@4b9e13df] depends on not successfully finished methods 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at org.testng.TestRunner.privateRun(TestRunner.java:756) 	at org.testng.TestRunner.run(TestRunner.java:610) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) 	at org.testng.SuiteRunner.run(SuiteRunner.java:289) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218) 	at org.testng.TestNG.runSuites(TestNG.java:1133) 	at org.testng.TestNG.run(TestNG.java:1104) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)  SKIPPED: deleteOrg java.lang.Throwable: Method Organization_Test.deleteOrg()[pri:3, instance:rl.catalyst.com.catalyst.organization.Organization_Test@4b9e13df] depends on not successfully finished methods 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1068) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at org.testng.TestRunner.privateRun(TestRunner.java:756) 	at org.testng.TestRunner.run(TestRunner.java:610) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) 	at org.testng.SuiteRunner.run(SuiteRunner.java:289) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218) 	at org.testng.TestNG.runSuites(TestNG.java:1133) 	at org.testng.TestNG.run(TestNG.java:1104) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)   ===============================================     Default test     Tests run: 3, Failures: 0, Skips: 3     Configuration Failures: 1, Skips: 1 ===============================================   =============================================== Default suite Total tests run: 3, Failures: 0, Skips: 3 Configuration Failures: 1, Skips: 1 ===============================================  [TestNG] Time taken by [FailedReporter passed=0 failed=0 skipped=0]: 14 ms [TestNG] Time taken by org.testng.reporters.EmailableReporter2@52af26ee: 30 ms [TestNG] Time taken by org.testng.reporters.JUnitReportReporter@e15b7e8: 15 ms [TestNG] Time taken by org.testng.reporters.jq.Main@1151e434: 61 ms [TestNG] Time taken by org.testng.reporters.SuiteHTMLReporter@55634720: 11 ms [TestNG] Time taken by org.testng.reporters.XMLReporter@59505b48: 15 ms `","closed","R-awaiting answer,","meghasaxena","2018-04-20T03:49:39Z","2019-08-16T02:09:54Z"
"","5226","Selenium+chromedriver+google-chrome “--host-rules” option doesn't work?","## Meta - OS:  Linux Ubuntu Selenium Version:  3.8.1 Browser:  ChromeDriver(2.34.522913)+Chrome(63.0.3239.84 64-bit) (also tried with Chromium(63.0.3239.84) ) Python 3.5.2  ## Expected Behavior -  `--host-rules ""MAP * localhost""`  maps all hosts to localhost. And no page is loaded.  ## Actual Behavior -  Nothing happens - all hosts resolved as usual without mapping. In log file all seems to be allright - no errors or something... > [1,018][INFO]: Launching chrome: /opt/google/chrome/google-chrome --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --disable-web-resources --enable-automation --enable-logging --force-fieldtrials=SiteIsolationExtensions/Control **--host-rules=""MAP * localhost""** --ignore-certificate-errors --load-extension=/tmp/.org.chromium.Chromium.dgOMsm/internal --log-level=0 --metrics-recording-only --no-first-run --password-store=basic --remote-debugging-port=12406 --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.org.chromium.Chromium.ZOu1OP data:,  ## Steps to reproduce - ```python from pyvirtualdisplay import Display display = Display(visible=0, size=(800, 600)) display.start()  from selenium import webdriver from selenium.webdriver.chrome.options import Options  chrome_options = Options() chrome_options.add_argument('--host-rules ""MAP * localhost""') service_log_path = 'chromedriver.log' service_args = ['--verbose'] driver = webdriver.Chrome('/usr/local/bin/chromedriver', chrome_options=chrome_options, service_args=service_args, service_log_path=service_log_path) driver.get('http://google.com') print(driver.page_source) driver.close() driver.quit() display.stop() ```  This code prints loaded html. But if `--host-rules ""MAP * localhost""` worked as expected - there must be a connection error. (There's no proxy on localhost)  When I've tried to write `chrome_options.add_argument('--host-rules=""MAP * localhost""')` (added '=' sign) - there was an error in log: > v14830:14885:1215/122036.230588:ERROR:host_mapping_rules.cc(107)] Failed parsing rule: ""MAP * localhost""  And no mapping of course...","closed","","asegrenev","2017-12-15T09:29:18Z","2019-08-14T23:09:58Z"
"","5582","Selenium HTML Runner not working behind corporate proxy server","## Meta - OS:  Linux RedHat 7  Selenium Version:  selenium-html-runner-3.4.0.jar + IDE 2.9.1 Browser:  Firefox   Browser Version:  Firefox 57.0.4  ## Expected Behavior Be able to specify (in some way) the proxy hostname/IP and Port so that Selenium HTML runner can run behind/through a proxy  ## Actual Behavior - I get a timeout executing selenium test cases because these particular webpages need to be opened only when the proxy is defined.  ## Steps to reproduce -  I tried passing to Java the proxy parameter (-D) in different manners but it does not seem to make a difference.","closed","C-htmlrunner,","Redirts","2018-03-08T17:26:53Z","2019-08-15T10:09:34Z"
"","5563","Selenium does not allow negative values for Set_window_position","## Meta - OS:  Linux mint 18.3  Selenium Version:  3.9.0  Browser:  Chrome 64 using chromedriver 3.25   Browser Version:    64 ## Expected Behavior - Set_window_position moves window to described position even if position value is negative.  ## Actual Behavior - Set_window_position moves window to 0 if provided position is negative.  ## Steps to reproduce -  1. Launch chrome via selenium webdriver and Python.  2. Attempt to move window with Set_window_position to 0,-50.  3. Validate window position with get_window_position - it is 0,0.","closed","","flamaster2016","2018-03-03T23:04:27Z","2019-08-16T11:09:56Z"
"","5609","WebDriverException: unknown error: cannot determine loading status from unknown error: unknown sessionId","## Meta - OS:  Linux 4.4.0-116-generic x86_64 Selenium Version:  3.11.0 Browser:  chrome  Browser Version:  65.0.3325.146 (64-bit)  ## Expected Behavior - Element is found  ## Actual Behavior - org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status from unknown error: unknown sessionId (Session info: chrome=65.0.3325.146) (Driver info: chromedriver=2.36.540471 (9c759b81a907e70363c6312294d30b6ccccc2752),platform=Linux 4.4.0-116-generic x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'ITM-41', ip: '10.3.199.68', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121' Driver info: ru.wb.site.uitest.common.selenium.CustomRemoteWebDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540471 (9c759b81a907e7..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 65.0.3325.146, webStorageEnabled: true, webdriver.remote.sessionid: 0b7ec67533c747fd1e0a8e65333...} Session ID: 0b7ec67533c747fd1e0a8e65333dddd9 *** Element info: {Using=xpath, value=//ul[@class='user_menu']/li[@data-jsv]/a}  ## Steps to reproduce - 1. find element by xpath=//h1[text()='К сожалению, запрошенная вами страница не существует'] | //h1[text()='404 Not Found'] | //h1[starts-with(text(),'Ошибка сервера')] | //p[starts-with(normalize-space(text()), 'В данный момент запрашиваемая вами страница недоступна.')]  - NotFoundException is thrown - it is ok as expected 2. find element by xpath=//ul[@class='user_menu']/li[@data-jsv]/a   But I can get the page screenshot and htmlsource","closed","","jselect","2018-03-14T09:23:12Z","2019-08-16T10:09:37Z"
"","5280","Performance getting slower and slower after each webDriver.navigate().to(pageUrl); and findElement*()","## Meta - OS:  linux / Ubuntu 16.04 x64 Selenium Version:  3.8.1 Browser:  Firefox Browser Version:  57.0.1   ## Expected Behavior - on many page opens with `webDriver.navigate().to(pageUrl)` and in every page itself about 100 `webElement.findElement*(By.xpath())` or `webDriverWait.findElement*(By.xpath())` shall not change any response times of the findElement*() method.  ## Actual Behavior - right now (and at least since 3.5) the longer we try to hold open one webdriver (FF-window) the slower the access are getting. (but you need to access different xpaths and really many thousands different findElement*(By.xpath()) methods. The performance is degrading for a simple xpath quickly to 1000ms on the same page, which take before only tens of ms.  The only workaround is to close the current webdriver about 1000 findElement*() calls and to reopen a new webdriver. The issue here is that it is not so easy to take over the session details from webdriver to webdriver. (hope someone can point me to a good solution, which is able to handle also XSRF-tokens and other security dependent tokens.  ## Steps to reproduce - on any page with many results can this behavior be reproduced. (e.g. google, amazon, ...)","closed","","dpalic","2018-01-02T20:10:11Z","2019-08-16T18:10:00Z"
"","4821","Python seleneum remote driver","## Meta - OS:  Linux (possibly any)  Selenium Version:  python selenium 3.6.0, selenium standalone > 3.4  Browser:  Any   Browser Version:     ## Expected Behavior - WebDriverException: Message: Unable to find command matching POST to //session  Then i use selenium standalone > 3.4 and last (3.6.0) python selenium, on any command i has this error. Possibly fix, in remote/remote_connection.py delete all leading / on commands.","closed","","ZeroTworu","2017-10-06T14:52:19Z","2019-08-17T08:10:00Z"
"","5136","Node: selenium-webdriver: UnsupportedOperationError when taking screenshot of elemet with a remote server","## Meta - OS:  linux (arch)  Selenium Server Version:  3.7.1 selenium-webdriver Version: 3.0.8  Browser:  firefox Browser Version:  Mozilla Firefox 57.0 Geckodriver Driver:  0.19.0  ## Expected Behavior - To take screenshot of element.  ## Actual Behavior - Throws UnsupportedOperationError:  ## Steps to reproduce - In node: `let driver = new Builder()   .forBrowser(""firefox"")   .usingServer('http://localhost:4444/wd/hub')   .build();`  and a selenium server sunning `java -jar selenium-server-standalone-3.7.1.jar` I took a screenshot of a element with `element.takeScreenshot(true)`  and got:  `node:6930) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): UnsupportedOperationError: GET /session/4cfba22f-cd2f-4e3a-8547-0c7a8eeb3624/element/e3226585-6fe0-409c-a431-47fb9fc8c308/screenshot Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:07:36.161Z' System info: host: 'audioxd', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.13.12-1-ARCH', java.version: '1.8.0_144' Driver info: driver.version: unknown.`  **NOTE: If I remove the usingServer option it works.**","closed","G-w3c,","audioXD","2017-11-28T21:53:15Z","2019-08-16T06:09:59Z"
"","5211","RemoteWebdriver binds on a non ephemeral port","## Meta - OS:  Linux Selenium Version:  any Browser:  chrome, probably firefox as well Browser Version: Any  ## How currently works Once we create a `webdriver.Remote` selenium server tries to find an acceptable port to start the ""new driver""(I'm not that familiar with the terms).  Digging into the code I noticed that we explicitly avoid ephemeral ports, probably to avoid race conditions with other systems binding on port `0`. This is the code path that does this: https://github.com/SeleniumHQ/selenium/blob/02a0df9d72273415c02bc8da6f517585e7fb8123/java/client/src/org/openqa/selenium/net/PortProber.java#L80  Other systems that have full control of the host might have fixed ports for isolation, but selenium races with them.  The same thing happens with chromedriver, they have a similar approach but at least they have a fixed range that we can avoid: https://cs.chromium.org/chromium/src/chrome/test/chromedriver/server/http_handler.cc?l=88  I think it is great the selenium actually finds a random non-ephemeral port, but this might have side effects on other distributed systems.  My proposal is to add a new capability to Remote: https://github.com/SeleniumHQ/selenium/blob/3cd788933ddc49171d389d481a9b2a7e3e12cb72/java/client/src/org/openqa/selenium/remote/CapabilityType.java#L23  It could be a `port` capability that would allow others to actually specify selenium which port it should run the new driver, another solution I'd like is to actually provide selenium server a range which we consider acceptable, the latter wouldn't require adding a new capability and we could control when starting the server.","closed","C-java,","phyllipecesar","2017-12-12T16:29:09Z","2019-08-15T22:10:02Z"
"","5135","WebDriverException: Message: Process unexpectedly closed with status: 11","## Meta - OS:  linux Selenium Version:  3.7.0 Browser:  Firefox, geckodriver 2.33  When I try to run geckodriver in parallel using threads I'm getting this exception below in Linux. When running on Windows this exception is not being raised, also on Linux when running just 3 or 2 threads again no exception is being raised.  Note that I'm running in headless mode and using proxies, in case if this makes any difference.  line 105, in __getDriverFirefox     firefox_options=options)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 154, in __init__     keep_alive=True)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 151, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 240, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 308, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) WebDriverException: Message: Process unexpectedly closed with status: 11","closed","OS-linux,","lilit14","2017-11-28T21:30:40Z","2019-08-16T22:09:44Z"
"","5578","safari Webdriver() throws AttributeError with default arguments for python client driver","## Meta - OS:  linux Selenium Version:  3.10.0 Browser:  Safari/Version 11.0.3 (13604.5.6)  ## Expected Behavior - launching webdriver.Safari() from python with default arguments should create a safaridriver instance  ## Actual Behavior - AttributeError: 'WebDriver' object has no attribute 'service'  ## Steps to reproduce - >>> from selenium import webdriver >>> s = webdriver.Safari() Traceback (most recent call last):   File """", line 1, in    File ""/selenium/webdriver/safari/webdriver.py"", line 49, in __init__     self.service.start() AttributeError: 'WebDriver' object has no attribute 'service'","closed","","mingeth","2018-03-07T21:30:33Z","2019-08-16T04:09:48Z"
"","5576","WebDriver Not Compatible with Chrome/65.0.3325.146 on LINUX","## Meta - OS:  LINUX Selenium Version:  3 .7. 1 Browser:   Chrome/65.0.3325.146  -->  Browser Version:   Chrome/65.0.3325.146 (64-bit)  ## Expected Behavior - Webdriver should be able to click on webelement ## Actual Behavior - `Test Failed: org.testng.TestException: The following element is not clickable: [[[ChromeDriver: chrome on LINUX (d03e89e10987409f7705777f68e0204c)] -> id: topbar__login]]`  `searchFuncationality Test Failed: org.openqa.selenium.WebDriverException: unknown error: call function result missing 'value' (Session info: chrome=65.0.3325.146) (Driver info: chromedriver=2.33.506092 (733a02544d189eeb751fe0d7ddca79a0ee28cce4),platform=Linux 3.10.0-693.2.2.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:01:39.354Z' System info: host: 'ip-10-30-74-198.eu-west-1.compute.internal', ip: '10.30.74.198', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.2.2.el7.x86_64', java.version: '1.8.0_152' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptSslCerts: true, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.33.506092 (733a02544d189e..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 65.0.3325.146, webStorageEnabled: true} Session ID: 56e57cfa83a7d0ff79500c238608a779`  `addProductToCart Test Failed: org.testng.TestException: The following element is not clickable: [[[ChromeDriver: chrome on LINUX (f10c1eab1c3034045e01555ef00bef63)] -> css selector: .product-item-link]]`  ## Steps to reproduce - # Pre-requisite: setup a Linux OS and Chrome/65.0.3325.146 (64-bit) # Create a selenium script to perform click operation.    ## NOTE: Chrome/65.0.3325.146 (64-bit) and MAC OS: test suite is working as expected on MAC OS.","closed","D-chrome,","dipesh17","2018-03-07T17:05:29Z","2019-08-14T19:09:58Z"
"","4826","socket.error: [Errno 111] Connection refused when initialising Firefox webdriver","## Meta - OS:  Linux Selenium Version:  2.53.2 Browser:  Firefox Browser Version: 45.3.0    ## Expected Behavior - No exception.  ## Actual Behavior - A socket.error exception is raised.  ## Steps to reproduce -  Run this script via `xvfb-run -d python fail.py`:  from selenium import webdriver browser = webdriver.Firefox()  Intermittently, this script produces the traceback shown in the attachment. [traceback.txt](https://github.com/SeleniumHQ/selenium/files/1367202/traceback.txt)","closed","C-py,","bje-","2017-10-08T21:01:57Z","2019-08-17T08:09:54Z"
"","5448","Getting ""The process has not exited yet therefore no result is available ..."" error on running the tests on the Grid.","## Meta - OS:  Linux Selenium Version:  2.53.1 IDE  Browser:  Google chrome Browser Version:  2.53.1  ## Expected Behavior - Bring up the node to execute the tests.   ## Actual Behavior - Tests just die after the above error message and no screenshots are captured.    ## Steps to reproduce - We are not sure what is causing this error to appear. We have recently updated the Selenium version and browsers on our EC2 vm's that run the tests on the grid.   ## Exception and Stack Trace:  Exception org.openqa.selenium.WebDriverException Message: The process has not exited yet therefore no result is available ... Command duration or timeout: 101.91 seconds Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03' System info: host: 'ip-172-30-0-86', ip: '172.30.0.86', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-104-generic', java.version: '1.8.0_102' Driver info: org.openqa.selenium.remote.RemoteWebDriver  Stacktrace:  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:158) at com.ttg.guitest.navigator.TestServerApi.setupRemoteMode(TestServerApi.java:219) at com.ttg.guitest.navigator.TestServerApi.start(TestServerApi.java:286) at com.ttg.guitest.navigator.TestNavigator.start(TestNavigator.java:259) at com.ttg.guitest.navigator.TestNavigator._setUp(TestNavigator.java:248) at com.ttg.guitest.navigator.TestNavigator.setUp(TestNavigator.java:227) at com.ttg.guitest.navigator.TestNavigator.setUp(TestNavigator.java:217) at com.ttg.dealmaker.tests.smartom.imx.AddingNodesToInsightMapTest.setUpBeforeClass(AddingNodesToInsightMapTest.java:32) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85) at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510) at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211) at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138) at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.IllegalStateException: The process has not exited yet therefore no result is available ... at org.apache.commons.exec.DefaultExecuteResultHandler.getException(DefaultExecuteResultHandler.java:76) at org.openqa.selenium.os.UnixProcess.checkForError(UnixProcess.java:171) at org.openqa.selenium.os.CommandLine.checkForError(CommandLine.java:185) at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:177) at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:166) at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:170) at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:138) at sun.reflect.GeneratedConstructorAccessor40.newInstance(Unknown Source) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) at java.lang.reflect.Constructor.newInstance(Unknown Source) at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103) at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97) at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60) at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222) at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1) at java.util.concurrent.FutureTask.run(Unknown Source) at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176) at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) at java.lang.Thread.run(Unknown Source)","closed","R-awaiting answer,","pbarnabas","2018-02-06T17:12:37Z","2019-08-16T10:09:52Z"
"","5735","Update Selenium-Webdriver WebElement ID Keys for Firefox 61+","## Meta - OS:  Linux  Selenium Version:  4 (selenium-webdriver 4.0.0alpha-1 npm module)  Browser:  Firefox   Browser Version:  61.0a1 (64bit)   ## Expected Behavior - Selenium-Webdriver successfully extracting a chrome element in Firefox as a WebElement.  ## Actual Behavior - Selenium-Webdriver extracting a chrome element in Firefox as a plain object.  ## Steps to reproduce -  Once you have an instance of a Firefox driver:  ``` driver.setContext(firefox.Context.CHROME) .then(()=>driver.wait(until.elementLocated(By.id('pageActionButton')))); ```  I'm filing this preemptively... I saw that Firefox Nightly now has a change from [bug 1400233](https://bugzilla.mozilla.org/show_bug.cgi?id=1400233) that removed the LEGACY_ELEMENT_ID_KEY of ""ELEMENT"" and added a new id key for chrome elements.  Since that [geckodriver hasn't been updated](https://hg.mozilla.org/mozilla-central/file/tip/testing/geckodriver/src/marionette.rs#l655) at the time of writing, the error will be from geckodriver if you try the code above.  But, looking at [the code](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/webdriver.js#L1720), a corresponding change appear to be necessary in selenium-webdriver as well.","closed","D-firefox,","chenba","2018-04-06T00:04:00Z","2021-09-05T08:21:39Z"
"","5496","binary browser option from the nodes are not respected","## Meta - OS:  Linux  Selenium Version:  3.9.1  Browser:  Firefox, Chrome   Browser Version:     ## Expected Behavior - Setting custom binary option for a browser version should be respected. ## Actual Behavior - The default Firefox or Google-Chrome binary is executed. ## Steps to reproduce -  Running selenium server and nodes v3.9.1. The node has the following config: ""capabilities"": [     {       ""seleniumProtocol"": ""WebDriver"",       ""browserName"": ""chrome"",       ""maxInstances"": 1,       ""version"": """"     },     {       ""chrome_binary"": ""/usr/bin/google-chrome-beta"",       ""seleniumProtocol"": ""WebDriver"",       ""browserName"": ""chrome"",       ""maxInstances"": 1,       ""version"": ""beta""     },     {       ""seleniumProtocol"": ""WebDriver"",       ""browserName"": ""firefox"",       ""maxInstances"": 1,       ""version"": """"     },     {       ""seleniumProtocol"": ""WebDriver"",       ""firefox_binary"": ""/usr/bin/firefox-beta"",       ""browserName"": ""firefox"",       ""maxInstances"": 1,       ""version"": ""beta""     }   ],  When the remote driver requests browserName: firefox and version: beta the option firefox_binary is not respected, the same applies for browserName: chrome and version: beta.","closed","R-awaiting answer,","damencho","2018-02-14T23:34:27Z","2021-09-05T10:02:55Z"
"","5075","in “__del__” driver.close() failed","## Meta - OS:  centos7 Selenium Version:  3.7.0 Browser:  chrome Browser Version:  62.0.3202.94(64-bit)  ## Expected Behavior - process ""chromedriver --port=xxxx"" exit ## Actual Behavior - process ""chromedriver --port=xxxx"" not exit ## Steps to reproduce - ``` #coding:utf-8 from selenium import webdriver from pyvirtualdisplay import Display  class Test:         def __init__(self):                 self.display=Display(visible=0,size=(1366,768))                 self.display.start()                 options = webdriver.ChromeOptions()                 options.add_argument(""--no-sandbox"")                 self.driver = webdriver.Chrome(chrome_options=options)                 print ""init""          def __del__(self):                 self.driver.close()                 self.display.stop()                 print ""del""  if __name__ == ""__main__"":         t = Test()         # ps aux|grep chromedriver         # process chromedriver not exit         #del t ```","closed","","sohow","2017-11-18T13:40:55Z","2019-08-17T01:10:02Z"
"","5002","RESPONSE InitSession unknown error: Chrome failed to start: exited abnormally","## Meta - OS:  CentOS 7.3 Selenium Version:  2.53.1 Browser:  Chrome v62.0.3202.75 ChromeDriver:  v2.33.506092  Can someone help me ? thank you very much!","closed","","82006463","2017-11-03T06:41:29Z","2019-08-16T15:09:39Z"
"","5312","Fixing ChromeDriverService initialization from capabilities","## Meta - OS:  CentOS 7 Selenium Version:  3.8.1 Browser:  Chrome  Browser Version:  63.0.3239.108  ## Expected Behavior - Successful launch of chrome binary set by the capabilities flag on the Selenium Grid Node config   ## Actual Behavior - The chrome version on the default path is launching instead.  ## Steps to reproduce - Start up a selenium grid node with -capabilities ""browserName=chrome,chrome_binary=/custom/path/to/binary""   It looks like this was a feature that was in selenium pre 3.x, but then got removed and then added back for Firefox and Safari, but it looks like it might not have gotten added back for chrome.  Safari: [src](https://github.com/SeleniumHQ/selenium/blob/selenium-3.8.1/java/client/src/org/openqa/selenium/safari/SafariDriverService.java#L62) Firefox: [src](https://github.com/SeleniumHQ/selenium/blob/selenium-3.8.1/java/client/src/org/openqa/selenium/firefox/GeckoDriverService.java#L74) Chrome: [src](https://github.com/SeleniumHQ/selenium/blob/selenium-3.8.1/java/client/src/org/openqa/selenium/chrome/ChromeDriverService.java#L87)","closed","D-chrome,","joegrasse","2018-01-09T19:32:06Z","2021-09-05T10:20:28Z"
"","5429","Drag and drop does not work properly in chrome (remote within docker container and locally via chromedriver)","## Meta - OS:  Archlinux Selenium Version:  ruby gem selenium-webdriver 3.9 Browser:  Chrome  Browser Version:  Google Chrome 63.0.3239.132 Chromedriver version: ChromeDriver 2.33  Otherwise in Docker: latest `selenium/chrome-standalone-debug`  ## Expected Behavior -  When I run:  ``` driver.action.drag_and_drop(draggable, droppable).perform ```  It should move the mouse to the `droppable` element and release the mouse button. Then the two elements should switch order.  ## Actual Behavior -  When I run:  ``` driver.action.drag_and_drop(draggable, droppable).perform ```  The mouse is not moved. The Ghost for the element currently being dragged is at the position, where the mouse was before I ran the tests. Release is not working either.  (When I configure the VNC viewer to send pointer events, the dragging is still going on, following the mouse if I move into the vnc viewer window.)  ## Steps to reproduce -  I wrote a script for reproduction here:  https://gist.github.com/leoc/1837a0d1066fba1fd5649dc9dd196f5b  I attached screenshots to the gist to show the situation before the `drag_and_drop` invocation and after. Unfortunately `scrot` does not capture the mouse pointer of my local system. But the situation is the same locally as it is within the docker container. The mouse is not moved, but `click and hold` seems to have been started dragging, thus chrome displays the dragged element at the position where the mouse was earlier, before the method invocation.","closed","D-chrome,","leoc","2018-02-02T11:28:36Z","2019-08-15T07:09:59Z"
"","4891","Time for timeout parameters should be in ms in command line help","## Meta - OS:  Any console  Selenium Version:  >= 3.0.0  Browser:  N/A   Browser Version:  N/A   ## Expected Behavior - In console help all timing parameters should be in ms. ## Actual Behavior - Wrong time dimensions for parameters related to timeouts in console help.   -browserTimeout         in seconds   -timeout, -sessionTimeout         in seconds ## Steps to reproduce -  Type in command line `java -jar selenium-server-standalone-3.6.0.jar --help`","closed","C-grid,","oflorko","2017-10-17T20:38:55Z","2020-05-20T23:21:48Z"
"","5154","What is wrong with java v3.8.0?","## Meta - OS:  Any Selenium Version:  3.8.0 ## Expected Behavior - It should work with the latest api which is version 3.8.0.  ## Actual Behavior - Classes are missing, these are some of them: ``` org.openqa.selenium.logging.LoggingHandler org.openqa.selenium.remote.SessionNotFoundException org.openqa.selenium.remote.CapabilityType ```  It looks like `selenium-firefox-webdriver` 3.8.0 still depends on the api 2.X. How can you release a 3.x that can't use the 3.x api?  If it still uses the old api (2.x) it should not be released as 3.x  ## Steps to reproduce -  Create a new project and add the dependencies: ```gradle dependencies {     compile('org.seleniumhq.selenium:selenium-api:3.8.0')     compile('org.seleniumhq.selenium:selenium-firefox-driver:3.8.0') } ``` Run the code: ```Java FirefoxOptions options = new FirefoxOptions()                 .addPreference(""plugin.state.java"", 2)                 .addPreference(""browser.download.folderList"", 2)                 .addPreference(""browser.download.dir"", new File("""").getAbsoluteFile().toString())                 .addPreference(""browser.download.manager.showWhenStarting"", false)                 .addPreference(""browser.download.manager.focusWhenStarting"", false)                 .addPreference(""browser.download.useDownloadDir"", true)                 .addPreference(""browser.helperApps.alwaysAsk.force"", false)                 .addPreference(""browser.download.manager.alertOnEXEOpen"", false)                 .addPreference(""browser.download.manager.closeWhenDone"", true)                 .addPreference(""browser.download.manager.showAlertOnComplete"", false)                 .addPreference(""browser.download.manager.useWindow"", false)                 .addPreference(""browser.helperApps.neverAsk.saveToDisk"", ""multipart/form-data"");          FirefoxDriver webDriver = new FirefoxDriver(options);          webDriver.get(""http://www.google.com/""); ```","closed","","jonhkr","2017-12-01T11:39:02Z","2019-08-17T00:09:39Z"
"","4847","Selenium Java API does not conceal Action protocol differences with moveToElement(element,xOffset,yOffset)","## Meta - OS:  Any Selenium Version:  3.6.0 Browser:  Chrome, Firefox  ## Expected Behavior -  Selenium should do what its Javadoc says, and it should be consistent independently from the underlying wire protocol: `moveToElement(element,xOffset,yOffset)` moves the mouse to an offset from the top-left corner of the element.  ## Actual Behavior -  It prints out ""INFORMATION: When using the W3C Action commands, offsets are from the center of element"" and moves the cursor differently than stated in the method doc  ## Steps to reproduce -  ```java final boolean useW3C = true; final WebDriver driver = useW3C ? new FirefoxDriver() : new ChromeDriver();  driver.get(""https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_event_mouse_clientxy"");  driver.switchTo().frame(""iframeResult"");  final WebElement header = driver.findElements(By.tagName(""h2"")).get(0);   final int xOffset = 10; final int yOffset = 5;  final Actions builder = new Actions(driver); builder.moveToElement(header, xOffset, yOffset); // Javadoc: Moves the mouse to an offset from the top-left corner of the element. builder.click(); builder.perform();  final Point location = header.getLocation(); final String expectedResult = String.format(""X coords: %d, Y coords: %d"",         location.x + xOffset,         location.y + yOffset);  final String result = driver.findElement(By.id(""demo"")).getText();  if (expectedResult.equals(result)) {     System.out.println(""fine.""); } else {     System.out.format(""not ok: '%s' instead of '%s'\n"", result, expectedResult); }; ```","closed","C-docs,","pbi-qfs","2017-10-11T09:42:21Z","2021-09-05T08:35:51Z"
"","5610","There is no way of Basic Authenticate in cases when username and password are not supported in urls","## Meta - OS:  ALL Selenium Version:  3.4 and above Browser:  ALL  When the webpage as target of a test case requires BasicAuth to be able to access the website, there is no way to pass this by simply handling the Alert window. Currently passing the UserName and Password inside the url only works with Chrome, Firefox, IE11. Safari 11 and Edge browsers are not supporting this way.  ## Expected Behavior - Maybe the best would be if we would be able to communicate with the Alert popup directly through the Alert interface. Then it could be standardised across all the browsers.  ## Actual Behavior - Currently we have the sendKeys method which is only sending string to the username field, and there is no way AFAIK to switch over to the password field.  ## Steps to reproduce - 1. Open a site that requires BasicAuth using: Safari Edge Chrome Firefox IE11 2. Try to fill out the fields of the Alert popup through the Alert interface.","closed","","DavidGangel","2018-03-14T12:10:15Z","2019-08-16T10:09:44Z"
"","5709","[python] chrome options overwrite capabilities that was settled previously","## Meta - OS:  All  Selenium Version:  3.11.0  Browser:  Chrome   ## Expected Behavior - Platform that I've settletd up in desired_capabilities shouln'd be overwrited by chrome options.  ## Actual Behavior - When I run remote driver with chrome options and capabilities, where I've specify concrete platform, I getting instance with platform 'ANY' instead of selected.  ## Steps to reproduce - ``` from selenium import webdriver from selenium.webdriver import ChromeOptions  options = ChromeOptions() desired_caps = {'platform': 'Linux'} browser = webdriver.Remote(         desired_capabilities=desired_caps,         options=options     ) print(browser.capabilities['platform']) -> ANY ```  ``` > /home/manjaro/.pyenv/versions/2.7.13/envs/eyes2/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py(143)__init__()     142  --> 143         if options is not None:     144             desired_capabilities.update(options.to_capabilities())  ipdb> desired_capabilities {'platform': 'Linux'}  ipdb> n > /home/manjaro/.pyenv/versions/2.7.13/envs/eyes2/lib/python2.7/site-packages/selenium/webdriver/chrome/options.py(192)to_capabilities()     190         chrome[self.KEY] = chrome_options     191  --> 192         return chrome  ipdb> chrome {'goog:chromeOptions': {'args': [], 'extensions': []}, 'platform': 'ANY', 'browserName': 'chrome', 'version': ''} ipdb> n > /home/manjaro/.pyenv/versions/2.7.13/envs/eyes2/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py(143)__init__()     142             desired_capabilities.update(options.to_capabilities()) --> 143         self.command_executor = command_executor     144         if type(self.command_executor) is bytes or isinstance(self.command_executor, str):  ipdb> desired_capabilities {'goog:chromeOptions': {'args': [], 'extensions': []}, 'platform': 'ANY', 'browserName': 'chrome', 'version': ''} ```  ## Solution - For fix this bug need to use regular Python dict instead of cloning DesiredCapabilities parameters https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/chrome/options.py#L191  It's better to make implementation similar to firefox one https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/options.py#L143","closed","C-py,","skhalymon","2018-03-30T12:15:52Z","2021-09-05T08:21:45Z"
"","5129","Have GeckoDriver logs and Firefox be redirected by default to disk","## Meta - OS:  All  Selenium Version:   All Browser:   Firefox   Browser Version:   All  Currently a number of the drivers just pollute logs with Geckodriver output. This should be redirected to a file or somewhere else that people can then go have a look at.  Currently python handles this puts it in `geckodriver.log`","closed","","AutomatedTester","2017-11-28T13:38:22Z","2019-08-16T21:09:49Z"
"","5649","Improve org.​openqa.​selenium.By documentation","## Meta - OS:  --- Selenium Version:  3.7.0 Browser:  --- Browser Version:  ---  ## Expected Behavior - The documentation of `org.​openqa.​selenium.By` isn't overly long yet and could use some info about recursive behaviour, e.g. intuitively I'd expect `tagName` not to recurse, but apparently it does, does it (don't answer here, but in the code, please).  A boolean option to recursive would be nice, but that's another enhancement proposal.","closed","","krichter722","2018-03-21T01:32:55Z","2019-08-16T07:09:54Z"
"","5410","[py][chrome] raises log_type client on remote node with chrome browser","## Meta - OS:  **Windows NT 10.0.16299 x86_64** Selenium Version:  **3.5.0** _( ``pip install selenium`` https://pypi.python.org/pypi/selenium )_ Browser:  **CHROME** Browser Version:  **64.0.3282.119**  ## Expected Behavior -  * log_type client working for chrome browsers **or** deleting this log_type _(client)_ from documentation  #### Documentation used  http://selenium-python.readthedocs.io/api.html#selenium.webdriver.remote.webdriver.WebDriver.get_log  ##### Official doc same result : https://seleniumhq.github.io/selenium/docs/api/py/webdriver_remote/selenium.webdriver.remote.webdriver.html#selenium.webdriver.remote.webdriver.WebDriver.get_log  ##### Java doc : https://seleniumhq.github.io/selenium/docs/api/java/constant-values.html#org.openqa.selenium.logging.LogType  ## Actual Behavior -  #### Test  ``` python  # opened CHROME 2.33 browser on WIN10 64bits log_type = 'client' driver.get_log(log_type) # this lanes raises error ``` - *PASSED* when _log_type_ is *browser* get an array - *PASSED* when _log_type_ is *driver* get an array - *FAILED* when _log_type_ is *client* must get an array - *PASSED* when _log_type_ is *server* get an array  #### Stacktrace  ```         stacktrace = None         if 'stackTrace' in value and value['stackTrace']:             stacktrace = []             try:                 for frame in value['stackTrace']:                     line = self._value_or_default(frame, 'lineNumber', '')                     file = self._value_or_default(frame, 'fileName', '')                     if line:                         file = ""%s:%s"" % (file, line)                     meth = self._value_or_default(frame, 'methodName', '')                     if 'className' in frame:                         meth = ""%s.%s"" % (frame['className'], meth)                     msg = ""    at %s (%s)""                     msg = msg % (meth, file)                     stacktrace.append(msg)             except TypeError:                 pass         if exception_class == ErrorInResponseException:             raise exception_class(response, message)         elif exception_class == UnexpectedAlertPresentException and 'alert' in value:             raise exception_class(message, screen, stacktrace, value['alert'].get('text')) >       raise exception_class(message, screen, stacktrace) E       selenium.common.exceptions.WebDriverException: Message: unknown error: log type 'client' not found E         (Session info: chrome=64.0.3282.119) E         (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.16299 x86_64)  c:\users\cronosadmin\envs\qacode\lib\site-packages\selenium-3.5.0-py3.6.egg\selenium\webdriver\remote\errorhandler.py:194: WebDriverException ```  ## Steps to reproduce - * Open chrome browser  using *hub+node* to open on remote node * try to print to console `driver.get_log('client')` _hey! got the hole!_  - [ ] *sure about* | google chrome issue , https://sites.google.com/a/chromium.org/chromedriver/help - [ ] *sure about* | selenium grid library issue _(it's on java, i want to test python)_ - [ ] *sure about* | selenium python library issue - [x] *sure about* | all get_log type are working for the same browser session - [x] *sure about* | all get_log type are working on win/linux - [x] *sure about* | all get_log type are working on 32/64 bits - [x] *sure about* | all get_log type are working different on another browsers , is not conclusive - [x] *sure about* | my library issue , https://github.com/netzulo/qacode","closed","R-awaiting answer,","netzulo","2018-01-30T16:36:13Z","2019-08-16T15:09:34Z"
"","5726","Selenium grid performance","## Meta - OS:   Windows 2008 server  Selenium Version:  3.8.1  Browser:  Chrome  Hi,  I am trying to run selenium grid.  Currently I'm using v3.8.1 with one hub on 1 network and 20+ nodes of different networks registering to that selenium hub.  Its executing fast when hub and node are created on same machine where the application has deployed. Nodes created in other remote machines are comparatively slow.  For 100 test steps execution, the node with in the application server machine takes 3 min 30 sec but node in other rdps takes 5 min 30 secs  We have tested on network latency and tried creating Node on same network machine but still took same time as other network rdps.  More Info : Windows server 2008, Ruby gem - selenium-webdriver-2.53.4, selenium-server-standalone-3.8.1, Java 8.  Tried with these selenium grid versions - 2.48, 2.49, 2.52, 2.53 and 3.8.1  Any help on this is appreciated. Thank You.","closed","","vinutha5","2018-04-03T05:11:54Z","2019-08-16T07:09:50Z"
"","5388","Given URL is not passed on the latest version of Firefox V58 64-bit Browser","## Meta - OS:   Windows 10 Pro 64-bit Operating system  x64 based processor  Selenium Version:   3.8.1 (Using Maven Project) Browser:   Firefox 58.0 (64-bit) Geckodriver Version : 0.19.1  ## Expected Behavior - Selenium should hit/enter given URL  ## Actual Behavior - Selenium not enter the given URL in browser   ## Steps to reproduce - Using attached code and execute simple program  `System.setProperty(""webdriver.gecko.driver"", ""C:\\Users\\dhaval.atri\\Desktop\\Dhaval\\Automation_Code\\geckodriver.exe""); WebDriver driver = new FirefoxDriver(); driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS); driver.manage().window().maximize(); driver.get(""http://www.seleniumeasy.com/"");`","closed","D-firefox,","DhavalAtri","2018-01-24T09:02:22Z","2019-08-16T15:10:03Z"
"","5297","Cannot perform build without python","## Meta - OS:   Windows 10 Selenium Version:  3.8.1 Java: JDK 1.8.0_121  ## Expected Behavior - According to README.md, the only necessary requirement for building Selenium is JDK, while python is optional. So it should be possible to build selenium on the system having JDK only.  ## Actual Behavior - In fact, running the build on such system fails with ""No such file or directory - python"" error.  ## Steps to reproduce - 1. Checkout selenium source code 2. Run the build: `go selenium-java`  -> build fails with the error: ``` C:\git\selenium>go selenium-java Downloading buck build tool, it can take up to several minutes... python C:/git/selenium/buck-out/crazy-fun/be2bf932342e5d67f58c9b26f5065c745d285d0d/buck.pex kill go aborted! Command failed with status (127): [python C:/git/selenium/buck-out/crazy-fu...] C:/git/seleniumHQ/rake-tasks/buck.rb:50:in `download' C:/git/seleniumHQ/rake-tasks/buck.rb:57:in `buck_cmd' C:/git/seleniumHQ/rake-tasks/buck.rb:257:in `block in (root)' Errno::ENOENT: No such file or directory - python C:/git/seleniumHQ/rake-tasks/buck.rb:50:in `download' C:/git/seleniumHQ/rake-tasks/buck.rb:57:in `buck_cmd' C:/git/seleniumHQ/rake-tasks/buck.rb:257:in `block in (root)' Tasks: TOP => selenium-java => //java/client/src/org/openqa/selenium:selenium (See full trace by running task with --trace) ```  Possible solution could be to include the python in the list of build requirements, or make sure it's acquired during the buck download.","closed","C-docs,","anikulin","2018-01-07T01:06:14Z","2019-08-16T15:09:56Z"
"","5493","Timed out receiving message from renderer","## Meta - OS:    -  Windows 10  Selenium Version:  3.5.1 Chrome Driver Version : ChromeDriver 2.35.528161 Browser:  Google Chrome 64.0.3282.167  Steps : 1) Switch to a new window 2) Let :  BUR= Suppose https://facebook.com  Url = /class/sn/student#/Id=my&nsn=%%NNS&  public void NNSfil(String Url) { 		String n_U=Url.replaceAll(""%%NNS"",f_nns); 		driver.get(BUR+n_U); 		System.out.println(""$$$URL is""+BUR+n_U); 		delay(); 		driver.navigate().refresh(); 		if(driver.findElements(By.cssSelector("".data"")).size()>0){ 	waitTo().until(ExpectedConditions.invisibilityOf(driver.findElement(By.cssSelector("".data"")))); 		} 	}  Error recieving :   [1518589680.030][SEVERE]: Timed out receiving message from renderer: 299.998 [1518589680.031][SEVERE]: Timed out receiving message from renderer: -0.001 [1518589680.035][SEVERE]: Timed out receiving message from renderer: -0.005","closed","","akshatj777","2018-02-14T06:47:47Z","2019-08-16T14:09:36Z"
"","5749","A unexpected TypeError in driver.wait(until.elementLocated(By.id('elementid')), timeout)","## Meta - OS:                               Windows 10 Selenium Version:        4.0.0-alpha.1 Browser:                       Internet Explorer Browser Version:          IE11  ## Actual Behavior - I used seleium in IE11 to do some work， just like the example: ```  async function example() {      let button =        await driver.wait(until.elementLocated(By.id('foo')), 10000);    await button.click();  } ```` and got an unexpected break with the code： ``` let isLoggedIn = await driver.wait(until.elementLocated(By.id('bottomNav'));, 10*1000); ``` the exception info is: ```  TypeError: Wait condition must be a promise-like object, function, or a Condition object ```  I wanted to  know why, so I got some log and debug inspect , found that:      - the result of `until.elementLocated(By.id('bottomNav')`  is  a instance of `WebDriver.WebElementCondition`     - but in `driver.wait()`, the result be judged 'false'     - and then, I get the TypeError.  I can show threr screenshots code: ![code](https://user-images.githubusercontent.com/14289035/38540739-7a574bb0-3ccf-11e8-904e-099b29a4c7a5.png) console: ![console](https://user-images.githubusercontent.com/14289035/38540812-becf3596-3ccf-11e8-81a8-a34139d40985.png) use `node  --inspect-brk xxx.js`  to  inspect ![error_in_driver_wait](https://user-images.githubusercontent.com/14289035/38540828-c83cdd18-3ccf-11e8-8f9d-fa714ade2ac3.png)","closed","C-nodejs,","kxc1573","2018-04-10T07:00:39Z","2021-09-05T08:08:47Z"
"","5082","IEDriver Connection refused on set_page_load_timeout","## Meta - OS:   Windows Server 2012 R2 Selenium Version:   Grid Hub and Node both 3.7.1 Browser:   Internet Explorer 11 Browser Version:   11.0.9600.18763 (32-bit) IEDriver Version: 3.7.0 x32 Python version 3.5.2 Python Selenium bindings Version 3.7.0 ## Expected Behavior - Setting page load timeout correctly and continue test ## Actual Behavior - On test side: ``` Traceback (most recent call last):   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 827, in set_page_load_timeout     'pageLoad': int(float(time_to_wait) * 1000)})   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 309, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: java.net.ConnectException: Connection refused: connect Stacktrace:     at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:245)     at java.util.concurrent.Executors$RunnableAdapter.call (None:-1)     at java.util.concurrent.FutureTask.run (None:-1)     at java.util.concurrent.ThreadPoolExecutor.runWorker (None:-1)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (None:-1)     at java.lang.Thread.run (None:-1)  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""test.py"", line 349, in test_selenium_ie     self.test_scenario(driver, ""INTERNETEXPLORER"")   File ""test.py"", line 38, in test_scenario     driver.set_page_load_timeout(35)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 831, in set_page_load_timeout     'type': 'page load'})   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 309, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: java.net.ConnectException: Connection refused: connect Stacktrace:     at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:245)     at java.util.concurrent.Executors$RunnableAdapter.call (None:-1)     at java.util.concurrent.FutureTask.run (None:-1)     at java.util.concurrent.ThreadPoolExecutor.runWorker (None:-1)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (None:-1)     at java.lang.Thread.run (None:-1) ``` On Node side: ``` 2017-11-20 13:44:26.236:INFO:osjshC.ROOT:qtp631659383-12: org.openqa.selenium.re mote.server.WebDriverServlet-4550bb58: Initialising WebDriverServlet 13:44:26.306 INFO - Found handler: org.openqa.selenium.remote.server.commandhand ler.BeginSession@452521e2 13:44:26.321 INFO - /session: Executing POST on /session (handler: BeginSession)  13:44:26.482 INFO - Capabilities are: Capabilities {browserName: internet explor er, platform: WINDOWS, version: } 13:44:26.490 INFO - Capabilities {browserName: internet explorer, platform: WIND OWS, version: } matched class org.openqa.selenium.remote.server.ServicedSession$ Factory (provider: org.openqa.selenium.ie.InternetExplorerDriverService) 13:44:26.530 DEBUG - Waiting for [http://localhost:6039/status] 13:44:26.565 DEBUG - Polling http://localhost:6039/status Started InternetExplorerDriver server (32-bit) 3.7.0.0 Listening on port 6039 Only local connections are allowed 13:44:27.073 DEBUG - sun.net.www.MessageHeader@5990dc685 pairs: {GET /status HTT P/1.1: null}{User-Agent: Java/1.8.0_101}{Host: localhost:6039}{Accept: text/html , image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} 13:44:27.078 DEBUG - sun.net.www.MessageHeader@5757392a7 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 190}{Content-Type: application/json; charset=UTF-8}{Cach e-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Acc ept}{Accept-Ranges: bytes}{Connection: close} 13:44:27.130 DEBUG - CookieSpec selected: default 13:44:27.131 DEBUG - Auth cache not set in the context 13:44:27.132 DEBUG - Connection request: [route: {}->http://localhost:6039][tota l kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] 13:44:27.133 DEBUG - Connection leased: [id: 2][route: {}->http://localhost:6039 ][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 13:44:27.134 DEBUG - Opening connection {}->http://localhost:6039 13:44:27.136 DEBUG - Connecting to localhost/127.0.0.1:6039 13:44:27.139 DEBUG - Connection established 127.0.0.1:2028127.0.0.1:6039 13:44:27.140 DEBUG - http-outgoing-2: set socket timeout to 10800000 13:44:27.141 DEBUG - Executing request POST /session HTTP/1.1 13:44:27.142 DEBUG - Target auth state: UNCHALLENGED 13:44:27.143 DEBUG - Proxy auth state: UNCHALLENGED 13:44:27.144 DEBUG - http-outgoing-2 >> POST /session HTTP/1.1 13:44:27.145 DEBUG - http-outgoing-2 >> Content-Type: application/json; charset= utf-8 13:44:27.146 DEBUG - http-outgoing-2 >> Content-Length: 314 13:44:27.147 DEBUG - http-outgoing-2 >> Host: localhost:6039 13:44:27.148 DEBUG - http-outgoing-2 >> Connection: Keep-Alive 13:44:27.149 DEBUG - http-outgoing-2 >> User-Agent: Apache-HttpClient/4.5.3 (Jav a/1.8.0_101) 13:44:27.151 DEBUG - http-outgoing-2 >> Accept-Encoding: gzip,deflate 13:44:27.152 DEBUG - http-outgoing-2 >> ""POST /session HTTP/1.1[\r][\n]"" 13:44:27.153 DEBUG - http-outgoing-2 >> ""Content-Type: application/json; charset =utf-8[\r][\n]"" 13:44:27.154 DEBUG - http-outgoing-2 >> ""Content-Length: 314[\r][\n]"" 13:44:27.155 DEBUG - http-outgoing-2 >> ""Host: localhost:6039[\r][\n]"" 13:44:27.156 DEBUG - http-outgoing-2 >> ""Connection: Keep-Alive[\r][\n]"" 13:44:27.157 DEBUG - http-outgoing-2 >> ""User-Agent: Apache-HttpClient/4.5.3 (Ja va/1.8.0_101)[\r][\n]"" 13:44:27.158 DEBUG - http-outgoing-2 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 13:44:27.159 DEBUG - http-outgoing-2 >> ""[\r][\n]"" 13:44:27.160 DEBUG - http-outgoing-2 >> ""{[\n]"" 13:44:27.161 DEBUG - http-outgoing-2 >> ""  ""desiredCapabilities"": {""browserName"" :""internet explorer"",""platform"":""WINDOWS"",""version"":""""},[\n]"" 13:44:27.163 DEBUG - http-outgoing-2 >> ""  ""capabilities"": {[\n]"" 13:44:27.164 DEBUG - http-outgoing-2 >> ""    ""desiredCapabilities"": {""browserNam e"":""internet explorer"",""platform"":""WINDOWS"",""version"":""""},[\n]"" 13:44:27.165 DEBUG - http-outgoing-2 >> ""    ""firstMatch"": [[\n]"" 13:44:27.166 DEBUG - http-outgoing-2 >> ""      {""browserName"":""internet explorer "",""platformName"":""windows""}[\n]"" 13:44:27.167 DEBUG - http-outgoing-2 >> ""    ][\n]"" 13:44:27.168 DEBUG - http-outgoing-2 >> ""  }[\n]"" 13:44:27.169 DEBUG - http-outgoing-2 >> ""}"" 13:44:29.203 DEBUG - http-outgoing-2  ""Connection: Keep-Alive[\r][\n]"" 13:44:30.950 DEBUG - http-outgoing-1 >> ""User-Agent: Apache-HttpClient/4.5.3 (Ja va/1.8.0_101)[\r][\n]"" 13:44:30.952 DEBUG - http-outgoing-1 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 13:44:30.953 DEBUG - http-outgoing-1 >> ""[\r][\n]"" 13:44:30.958 DEBUG - http-outgoing-1  ""GET /grid/api/proxy?id=http://172.16.11 0.8:5554 HTTP/1.1[\r][\n]"" 13:44:36.057 DEBUG - http-outgoing-1 >> ""Host: selenium-hub-test.amis.domain.ru[\ r][\n]"" 13:44:36.060 DEBUG - http-outgoing-1 >> ""Connection: Keep-Alive[\r][\n]"" 13:44:36.061 DEBUG - http-outgoing-1 >> ""User-Agent: Apache-HttpClient/4.5.3 (Ja va/1.8.0_101)[\r][\n]"" 13:44:36.063 DEBUG - http-outgoing-1 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 13:44:36.064 DEBUG - http-outgoing-1 >> ""[\r][\n]"" 13:44:36.068 DEBUG - http-outgoing-1","closed","D-IE,","dev-e","2017-11-20T11:31:01Z","2019-08-16T21:09:37Z"
"","4925","C# AddAdditionalCapability call on DriverOptions not working correctly","## Meta - OS:   Windows Server 2012 Selenium Version:   3.6.0 Browser:   Internet Explorer  Browser Version:   N/A, most recent version of internet explorer driver.  This is concerning the C# libraries.    ## Expected Behavior - When setting additional capabilities via the AddAdditionalCapability method on the DriverOptions, I would expect those capabilities to be passed on to any RemoteWebDriver session.   ## Actual Behavior - The capabilities are not passed. Instead, when I view the internals of the InternetExplorerDriverOptions object, the capabilities have been added to the **additionalInternetExplorerOptions** collection instead of **additionalCapabilities**. I now have fabricated some reflection code which adds the capabilities to the right collection, after which the passing also works.  ## Steps to reproduce - Create a new InternetExplorerDriverOptions object (I'm betting this works for the other driver types as well) and add any capability using the AddAdditionalCapability method. Inspect the private properties and notice they have been added to the wrong collection.","closed","C-dotnet,","jsiegmund","2017-10-22T12:13:44Z","2019-08-15T16:09:45Z"
"","5445","3.9.0 Grid - Java - SocketTimeout after around 6 tests firing simultaneously","## Meta - OS:   Windows Server - Grid Selenium Version:   3.9.0 Browser:   Chrome  Using the grid, and firing 12 instances simultaneously at it, which loop a single test via a batch file, after around 6 or so tests kicked off (which seem to start and remain running), all the remaining tests fail immediately with a SocketTimeout, and keep looping and stacking up requests on the Grid  Exception: org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. java.net.SocketTimeoutException: Read timed out 	at java.net.SocketInputStream.socketRead0(Native Method) 	at java.net.SocketInputStream.socketRead(Unknown Source) 	at java.net.SocketInputStream.read(Unknown Source) 	at java.net.SocketInputStream.read(Unknown Source) 	at okio.Okio$2.read(Okio.java:139) 	at okio.AsyncTimeout$2.read(AsyncTimeout.java:237) 	at okio.RealBufferedSource.indexOf(RealBufferedSource.java:345) 	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:217) 	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212) 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:97) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:47) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)  Grid requests: 58 requests waiting for a slot to be free. Capabilities {browserName: chrome, goog:chromeOptions: {args: [start-maximized, disable-infobars], extensions: [], prefs: {credentials_enable_service: false}}, version: }Capabilities {browserName: chrome, goog:chromeOptions: {args: [start-maximized, disable-infobars], extensions: [], prefs: {credentials_enable_service: false}}, version: }Capabilities {browserName: chrome, goog:chromeOptions: {args: [start-maximized, disable-infobars], extensions: [], prefs: {credentials_enable_service: false}}, version: }Capabilities {browserName: chrome, goog:chromeOptions: {args: [start-maximized, disable-infobars], extensions: [], prefs: {credentials_enable_service: false}}, version: }Capabilities {browserName: chrome, goog:chromeOptions: {args: [start-maximized, disable-infobars], extensions: [], prefs: {credentials_enable_service: false}}, version: }","closed","C-grid,","thomhurst","2018-02-06T11:16:57Z","2019-08-16T12:09:57Z"
"","5662","IEDriverServer.exe crashes immediately when trying to run a test","## Meta - OS:   Windows 8.1 x64 Selenium Version:   3.11.0 / 3.9.0 Browser:   Internet Explorer 11 Browser Version:   11.0.9600.18763 IEDriverServer.exe Version: 3.9.0.0 x64  ## Expected Behavior - Driver should open and remote control Internet Explorer.  ## Actual Behavior - IEDriverServer.exe crashes immediately when running arbitrary tests.  WinDbg output: ``` Microsoft (R) Windows Debugger Version 10.0.16299.91 AMD64 Copyright (c) Microsoft Corporation. All rights reserved.  *** wait with pending attach Symbol search path is: srv* Executable search path is:  ModLoad: 00007ff7`60030000 00007ff7`60336000   \IEDriverServer.exe ModLoad: 00007ffb`2f780000 00007ffb`2f92d000   C:\Windows\SYSTEM32\ntdll.dll ModLoad: 00007ffb`2f640000 00007ffb`2f77e000   C:\Windows\system32\KERNEL32.DLL ModLoad: 00007ffb`2cad0000 00007ffb`2cbe5000   C:\Windows\system32\KERNELBASE.dll ModLoad: 00007ffb`2a790000 00007ffb`2a79a000   C:\Windows\SYSTEM32\VERSION.dll ModLoad: 00007ffb`2f590000 00007ffb`2f63a000   C:\Windows\system32\msvcrt.dll ModLoad: 00007ffa`edc70000 00007ffa`edf35000   C:\Users\\AppData\Local\Temp\IEDFD39.tmp ModLoad: 00007ffb`2ea00000 00007ffb`2eb40000   C:\Windows\system32\RPCRT4.dll ModLoad: 00007ffb`2e9f0000 00007ffb`2e9f7000   C:\Windows\system32\PSAPI.DLL ModLoad: 00007ffb`28380000 00007ffb`283ea000   C:\Windows\SYSTEM32\OLEACC.dll ModLoad: 00007ffb`24a00000 00007ffb`24d21000   C:\Windows\SYSTEM32\WININET.dll ModLoad: 00007ffb`250f0000 00007ffb`25275000   C:\Windows\SYSTEM32\urlmon.dll ModLoad: 00007ffb`2f0d0000 00007ffb`2f247000   C:\Windows\system32\USER32.dll ModLoad: 00007ffb`2ef80000 00007ffb`2f0cb000   C:\Windows\system32\GDI32.dll ModLoad: 00007ffb`2e760000 00007ffb`2e80a000   C:\Windows\system32\ADVAPI32.dll ModLoad: 00007ffb`2ebc0000 00007ffb`2ed54000   C:\Windows\system32\ole32.dll ModLoad: 00007ffb`2e690000 00007ffb`2e756000   C:\Windows\system32\OLEAUT32.dll ModLoad: 00007ffb`2f470000 00007ffb`2f4c4000   C:\Windows\system32\SHLWAPI.dll ModLoad: 00007ffb`286c0000 00007ffb`28871000   C:\Windows\WinSxS\amd64_microsoft.windows.gdiplus_6595b64144ccf1df_1.1.9600.18696_none_9333287b4748e6ab\gdiplus.dll ModLoad: 00007ffb`2e630000 00007ffb`2e68a000   C:\Windows\system32\WS2_32.dll ModLoad: 00007ffb`2cdd0000 00007ffb`2cdfe000   C:\Windows\system32\SspiCli.dll ModLoad: 00007ffb`2f250000 00007ffb`2f462000   C:\Windows\system32\combase.dll ModLoad: 00007ffb`24e20000 00007ffb`250ea000   C:\Windows\SYSTEM32\iertutil.dll ModLoad: 00007ffb`2bec0000 00007ffb`2bee1000   C:\Windows\SYSTEM32\USERENV.dll ModLoad: 00007ffb`2f530000 00007ffb`2f589000   C:\Windows\SYSTEM32\sechost.dll ModLoad: 00007ffb`2f4d0000 00007ffb`2f4d9000   C:\Windows\system32\NSI.dll ModLoad: 00007ffb`2c8a0000 00007ffb`2c8b5000   C:\Windows\SYSTEM32\profapi.dll ModLoad: 00007ffb`2f4e0000 00007ffb`2f516000   C:\Windows\system32\IMM32.DLL ModLoad: 00007ffb`2ee20000 00007ffb`2ef72000   C:\Windows\system32\MSCTF.dll ModLoad: 00007ffb`2c130000 00007ffb`2c189000   C:\Windows\system32\mswsock.dll ModLoad: 00007ffb`2b700000 00007ffb`2b70b000   C:\Windows\SYSTEM32\kernel.appcore.dll ModLoad: 00007ffb`2c7e0000 00007ffb`2c7eb000   C:\Windows\SYSTEM32\CRYPTBASE.dll ModLoad: 00007ffb`2c770000 00007ffb`2c7d3000   C:\Windows\SYSTEM32\bcryptPrimitives.dll ModLoad: 00007ffb`2b530000 00007ffb`2b659000   C:\Windows\system32\uxtheme.dll ModLoad: 00007ffb`25f40000 00007ffb`261f4000   C:\Program Files (x86)\Stardock\Start8\Start8_64.dll ModLoad: 00007ffb`26df0000 00007ffb`26f6f000   C:\Windows\SYSTEM32\PROPSYS.dll ModLoad: 00007ffb`2aed0000 00007ffb`2aef1000   C:\Windows\system32\dwmapi.dll ModLoad: 00007ffb`2a970000 00007ffb`2abeb000   C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.9600.18006_none_623f33d3ecbe86e8\comctl32.dll ModLoad: 00007ffb`1eb30000 00007ffb`1eb3f000   C:\Windows\SYSTEM32\atlthunk.dll (42e4.2260): Security check failure or stack buffer overrun - code c0000409 (!!! second chance !!!) *** WARNING: Unable to verify checksum for \IEDriverServer.exe *** ERROR: Module load completed but symbols could not be loaded for \IEDriverServer.exe IEDriverServer+0x186f8: 00007ff7`600486f8 cd29            int     29h ```  Call stack: ![image](https://user-images.githubusercontent.com/13161711/37756630-7ef8c592-2daa-11e8-8a92-725d25263bf2.png)  Java stacktrace: ``` Started InternetExplorerDriver server (64-bit) 3.9.0.0 Listening on port 48376 Only local connections are allowed  org.openqa.selenium.WebDriverException: java.net.SocketTimeoutException: Read timed out Build info: version: '3.9.0', revision: '698b3178f0', time: '2018-02-05T14:56:06.3Z' System info: host: '', ip: '', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4' Driver info: driver.version: InternetExplorerDriver  	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:223) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:215) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:192) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:164) 	at SeleniumTest.setup(SeleniumTest.java:21) ```   ## Steps to reproduce - Just run this JUnit test: ```java import org.junit.After; import org.junit.Before; import org.junit.Test; import org.openqa.selenium.WebDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.ie.InternetExplorerOptions;  import java.util.concurrent.TimeUnit;  public class SeleniumTest {      private WebDriver driver;      @Before     public void setup() {         System.setProperty(""webdriver.ie.driver"", ""/IEDriverServer.exe"");         driver = new InternetExplorerDriver(new InternetExplorerOptions());         driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);     }      @After     public void teardown() {         driver.close();     }      @Test     public void test() {         // test goes here     }  } ```","closed","","cnsgithub","2018-03-22T06:53:54Z","2019-08-16T09:09:41Z"
"","5407","Continue WebDriver test execution, when element is not visible/clickable","## Meta - OS:   Windows 8.1 Selenium Version:   WebDriver 3.8.1  I have a Selenium WebDriver based testsuite. XPATH on site are changing sometimes, so I would like to use this to identify which XPATH has to be refreshed. So in case element isn't visible or not clickable, it should write to log currently executed class and method name with an error message. So test should be continued in case of failure.  ## Expected Behavior - Testsuite execution should be continued in case of non visible/non clickable elements. Errors should be logged to console or in file.  ## Actual Behavior - Execution fails on every missing/not visible elements.","closed","","plaidshirtakos","2018-01-30T09:28:59Z","2019-08-16T15:09:58Z"
"","4900","C# Error saving the screenshot file selenium 3.6.0","## Meta - OS:   Windows 8.1 Selenium Version:   3.6.0 Browser:   Google Chrome  Browser Version:   61.0.3163.100 (Official Build) (64-bit)  ## Expected Behavior -  ## Actual Behavior - System.Runtime.InteropServices.ExternalException : A generic error occurred in GDI+. Результат Трассировка стека:	 at System.Drawing.Image.Save(String filename, ImageCodecInfo encoder, EncoderParameters encoderParams)    at System.Drawing.Image.Save(String filename, ImageFormat format)    at OpenQA.Selenium.Screenshot.SaveAsFile(String fileName, ScreenshotImageFormat format) ## Steps to reproduce - Screenshot ss = ((ITakesScreenshot)driver).GetScreenshot(); ss.SaveAsFile(""c:\\test.png"", ScreenshotImageFormat.Png);","closed","C-dotnet,","Nicronic","2017-10-18T15:54:18Z","2019-08-17T02:09:49Z"
"","5651","""Maximum call stack size exceeded"" when trying to return objects with reference loop using ExecuteJavaScript","## Meta - OS:   Windows 8.1 Selenium Version:   3.11.0.0 Browser:   Chrome, Firefox  ## Steps to reproduce - (In C#) `driver.ExecuteJavaScript(""var x={};var y={a:x};x.b=y;return x;"");`  ## Expected Behavior - Results is a Dictionary (x) with an element 'b' pointing to another dictionary (y) which contains an element 'a' which points back to x.  ## Actual Behavior - An InvalidOperationException: ""Maximum call stack size exceeded"" is thrown.  In Firefox the method freezes until a Timeout occurs.  I believe that the problem is not directly in the Selenium binding implementation, and I guess the JSON Wire protocol isn't design to support it either. But I think that the standard should at least specify a common exception to this situation, and I suggest to consider enhancing the protocol to be able to support it.","closed","","arnonax","2018-03-21T07:46:05Z","2019-08-16T09:09:50Z"
"","5664","IEDriverServer.exe crashes when connection is refused","## Meta - OS:   Windows 8.1 Selenium Version:   3.11.0 Browser:   Internet Explorer 11.0.9600.18763 IEDriverServer.exe Version: 3.11.1  ## Expected Behavior - If connection to target server is refused, test should fail without crashing the driver. The browser window should be closed.  ## Actual Behavior - IEDriverServer.exe crashes and the browser window stays open.  WinDbg output: ``` Microsoft (R) Windows Debugger Version 10.0.16299.91 AMD64 Copyright (c) Microsoft Corporation. All rights reserved.  *** wait with pending attach Symbol search path is: srv* Executable search path is:  ModLoad: 00007ff7`eca90000 00007ff7`ecd9e000   \IEDriverServer.exe ModLoad: 00007ffb`2f780000 00007ffb`2f92d000   C:\Windows\SYSTEM32\ntdll.dll ModLoad: 00007ffb`2f640000 00007ffb`2f77e000   C:\Windows\system32\KERNEL32.DLL ModLoad: 00007ffb`2cad0000 00007ffb`2cbe5000   C:\Windows\system32\KERNELBASE.dll ModLoad: 00007ffb`2a790000 00007ffb`2a79a000   C:\Windows\SYSTEM32\VERSION.dll ModLoad: 00007ffb`2f590000 00007ffb`2f63a000   C:\Windows\system32\msvcrt.dll ModLoad: 00007ffa`eb2b0000 00007ffa`eb57d000   C:\Users\\AppData\Local\Temp\IEDF228.tmp ModLoad: 00007ffb`2ea00000 00007ffb`2eb40000   C:\Windows\system32\RPCRT4.dll ModLoad: 00007ffb`2e9f0000 00007ffb`2e9f7000   C:\Windows\system32\PSAPI.DLL ModLoad: 00007ffb`28380000 00007ffb`283ea000   C:\Windows\SYSTEM32\OLEACC.dll ModLoad: 00007ffb`24a00000 00007ffb`24d21000   C:\Windows\SYSTEM32\WININET.dll ModLoad: 00007ffb`250f0000 00007ffb`25275000   C:\Windows\SYSTEM32\urlmon.dll ModLoad: 00007ffb`2f0d0000 00007ffb`2f247000   C:\Windows\system32\USER32.dll ModLoad: 00007ffb`2ef80000 00007ffb`2f0cb000   C:\Windows\system32\GDI32.dll ModLoad: 00007ffb`2e760000 00007ffb`2e80a000   C:\Windows\system32\ADVAPI32.dll ModLoad: 00007ffb`2ebc0000 00007ffb`2ed54000   C:\Windows\system32\ole32.dll ModLoad: 00007ffb`2e690000 00007ffb`2e756000   C:\Windows\system32\OLEAUT32.dll ModLoad: 00007ffb`2f470000 00007ffb`2f4c4000   C:\Windows\system32\SHLWAPI.dll ModLoad: 00007ffb`286c0000 00007ffb`28871000   C:\Windows\WinSxS\amd64_microsoft.windows.gdiplus_6595b64144ccf1df_1.1.9600.18696_none_9333287b4748e6ab\gdiplus.dll ModLoad: 00007ffb`2e630000 00007ffb`2e68a000   C:\Windows\system32\WS2_32.dll ModLoad: 00007ffb`2cdd0000 00007ffb`2cdfe000   C:\Windows\system32\SspiCli.dll ModLoad: 00007ffb`2f250000 00007ffb`2f462000   C:\Windows\system32\combase.dll ModLoad: 00007ffb`24e20000 00007ffb`250ea000   C:\Windows\SYSTEM32\iertutil.dll ModLoad: 00007ffb`2bec0000 00007ffb`2bee1000   C:\Windows\SYSTEM32\USERENV.dll ModLoad: 00007ffb`2f530000 00007ffb`2f589000   C:\Windows\SYSTEM32\sechost.dll ModLoad: 00007ffb`2f4d0000 00007ffb`2f4d9000   C:\Windows\system32\NSI.dll ModLoad: 00007ffb`2c8a0000 00007ffb`2c8b5000   C:\Windows\SYSTEM32\profapi.dll ModLoad: 00007ffb`2f4e0000 00007ffb`2f516000   C:\Windows\system32\IMM32.DLL ModLoad: 00007ffb`2ee20000 00007ffb`2ef72000   C:\Windows\system32\MSCTF.dll ModLoad: 00007ffb`2c130000 00007ffb`2c189000   C:\Windows\system32\mswsock.dll ModLoad: 00007ffb`2b700000 00007ffb`2b70b000   C:\Windows\SYSTEM32\kernel.appcore.dll ModLoad: 00007ffb`2c7e0000 00007ffb`2c7eb000   C:\Windows\SYSTEM32\CRYPTBASE.dll ModLoad: 00007ffb`2c770000 00007ffb`2c7d3000   C:\Windows\SYSTEM32\bcryptPrimitives.dll ModLoad: 00007ffb`2b530000 00007ffb`2b659000   C:\Windows\system32\uxtheme.dll ModLoad: 00007ffb`25f40000 00007ffb`261f4000   C:\Program Files (x86)\Stardock\Start8\Start8_64.dll ModLoad: 00007ffb`26df0000 00007ffb`26f6f000   C:\Windows\SYSTEM32\PROPSYS.dll ModLoad: 00007ffb`2aed0000 00007ffb`2aef1000   C:\Windows\system32\dwmapi.dll ModLoad: 00007ffb`2a970000 00007ffb`2abeb000   C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.9600.18006_none_623f33d3ecbe86e8\comctl32.dll ModLoad: 00007ffb`1eb30000 00007ffb`1eb3f000   C:\Windows\SYSTEM32\atlthunk.dll ModLoad: 00007ffb`2b0d0000 00007ffb`2b182000   C:\Windows\SYSTEM32\shcore.dll ModLoad: 00007ffb`2ce60000 00007ffb`2e389000   C:\Windows\system32\SHELL32.dll ModLoad: 00007ffb`2b190000 00007ffb`2b21e000   C:\Windows\system32\apphelp.dll ModLoad: 00007ffb`2c190000 00007ffb`2c1b0000   C:\Windows\SYSTEM32\CRYPTSP.dll ModLoad: 00007ffb`2bdb0000 00007ffb`2bde6000   C:\Windows\system32\rsaenh.dll ModLoad: 00007ffb`2c450000 00007ffb`2c476000   C:\Windows\SYSTEM32\bcrypt.dll ModLoad: 00007ffb`2ed60000 00007ffb`2ee16000   C:\Windows\SYSTEM32\clbcatq.dll ModLoad: 00007ffb`2c7f0000 00007ffb`2c889000   C:\Windows\SYSTEM32\sxs.dll ModLoad: 00007ffa`e4260000 00007ffa`e5af4000   C:\Windows\System32\mshtml.dll ModLoad: 00007ffa`f4f50000 00007ffa`f500a000   C:\Program Files\Internet Explorer\ieproxy.dll ModLoad: 00007ffb`0d420000 00007ffb`0d6e4000   C:\Windows\System32\actxprxy.dll ModLoad: 00007ffb`273f0000 00007ffb`273fc000   C:\Windows\SYSTEM32\Secur32.dll ModLoad: 00007ffb`28d80000 00007ffb`28d8c000   C:\Windows\System32\dispex.dll (1c8c.4b84): Security check failure or stack buffer overrun - code c0000409 (!!! second chance !!!) *** WARNING: Unable to verify checksum for \IEDriverServer.exe *** ERROR: Module load completed but symbols could not be loaded for \IEDriverServer.exe IEDriverServer+0x186fc: 00007ff7`ecaa86fc cd29            int     29h ```  IEDriverServer call stack: ![image](https://user-images.githubusercontent.com/13161711/37769142-54a218f4-2dd0-11e8-9df8-0f3e2ed43af0.png)  IEDriverServer trace log: https://gist.github.com/cnsgithub/7c9fcf9ebddde81e78ccf4ef9ef7f314  Java call stack: ```java Started InternetExplorerDriver server (64-bit) 3.11.1.0 Listening on port 17832 Log level is set to TRACE Log file is set to \IEDriverServer.log Only local connections are allowed Mar 22, 2018 12:50:02 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C  org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:17832 Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z' System info: host: '', ip: '', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4' Driver info: driver.version: RemoteWebDriver  	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:365) 	at org.openqa.selenium.By$ById.findElement(By.java:218) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311) 	at SeleniumTest.testLoginValid(SeleniumTest.java:36) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:564) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:17832 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:242) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:160) 	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257) 	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135) 	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:101) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 30 more Caused by: java.net.ConnectException: Connection refused: connect 	at java.base/java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.base/java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:400) 	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:243) 	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:225) 	at java.base/java.net.PlainSocketImpl.connect(PlainSocketImpl.java:148) 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:402) 	at java.base/java.net.Socket.connect(Socket.java:591) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240) 	... 50 more ```  ## Steps to reproduce - Prerequisite: Ensure there is no process listening on port 12345 at localhost. Just execute this JUnit test: ```java import org.junit.After; import org.junit.Before; import org.junit.Test; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.ie.InternetExplorerOptions;  import java.util.concurrent.TimeUnit;  public class SeleniumTest {      private WebDriver driver;      @Before     public void setup() {         System.setProperty(""webdriver.ie.driver"", ""/IEDriverServer.exe"");         System.setProperty(""webdriver.ie.driver.loglevel"", ""TRACE"");         System.setProperty(""webdriver.ie.driver.logfile"", ""/IEDriverServer.log"");         driver = new InternetExplorerDriver(new InternetExplorerOptions());         driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);     }      @After     public void teardown() {         driver.close();     }      @Test     public void testLoginValid() {         driver.get(""http://localhost:12345""); // no process must be listening on port 12345         driver.findElement(By.id(""foo"")); // if you comment this out, there won't be a crash     }  } ```","closed","","cnsgithub","2018-03-22T12:02:35Z","2019-08-16T09:09:37Z"
"","4931","Unable to click hyperlink on Linux machine using phantomJs, getting noSuchElement exception. But we are able to run the job on windows machine.","## Meta - OS:   Windows 7.0 Selenium  Version:    Browser:   PhantomJS  Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior - JS or WebDrive Click should click on hyperlink  ## Actual Behavior -  getting noSuchElement exception  ## Steps to reproduce - clicking on hyperlink on any linux machine using phantomJS","closed","","Ravi-Prasad","2017-10-23T16:33:55Z","2019-08-17T06:09:43Z"
"","4905","Setting implicit wait causes IEDriverServer 3.6.0.0 to crash","## Meta - OS:   Windows 7 x64 Selenium Version:   3.6.0 Browser:   Internet Explorer  Python: 3.6.1 (64-bit)  Browser Version:   11.0.9600.18697 (32-bit or 64-bit)  ## Expected Behavior - I should be able to set the implicit wait without a crash  ## Actual Behavior - As soon as I call webdriver.implicitly_wait, I get an error message ""Command line server for the IE driver has stopped working""  Problem signature:   Problem Event Name:	APPCRASH   Application Name:	IEDriverServer32_3600.exe   Application Version:	3.6.0.0   Application Timestamp:	59c567f7   Fault Module Name:	IEDriverServer32_3600.exe   Fault Module Version:	3.6.0.0   Fault Module Timestamp:	59c567f7   Exception Code:	40000015   Exception Offset:	000158d1   OS Version:	6.1.7601.2.1.0.256.48   Locale ID:	1033   Additional Information 1:	b69b   Additional Information 2:	b69b522641cca62102b1b8971c85daba   Additional Information 3:	6ecc   Additional Information 4:	6ecc49e2304d946bff2361b5b17ee636  NOTE: I've seen several other issues logged with this same type of crash, but none of them include code to reproduce it. Most have been closed as not reproducible, but there is at least one recent one still open. Since I can't tell if it's failing for the same reason, I entered a new issue. If this is a duplicate, I can merge my information into another issue as a comment.  ## Steps to reproduce - Run the following code, changing the value for the server variable to the location of the IEDriverServer executable on your system. The line that triggers it is my_webdriver.implicitly_wait(60).   Using the 64-bit version of the driver still reproduces the problem with the same Exception Code. Using version 3.0.0.0 (32 or 64 bit) does not reproduce the problem.   ``` from selenium import webdriver  server = ""c:\\temp\\iedriver\\IEDriverServer32_3600.exe"" my_webdriver = webdriver.Ie(executable_path=server) my_webdriver.implicitly_wait(60) my_webdriver.close() ```","closed","D-IE,","troyhoffman","2017-10-18T23:09:01Z","2019-08-17T04:09:35Z"
"","5431","`[py] Revert change to debug logging upon request return' fixed a blocker bug","## Meta - OS:   Windows 7 x64  Selenium Version:   3.8.1  Browser:   Firefox  Browser Version:   58.0.1 (64-бит)  https://github.com/SeleniumHQ/selenium/commit/40a7d186d8f72eba2e31223d4b9113c697226a4b accidentally fixed a blocker bug, so it should be released asap.  ## Expected Behavior -  ## Actual Behavior - Unhandled exception:  ```      File ""C:/Users/Ivan/Documents/searchscrape/main.py"", line 171, in yandex_set_town     o_wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, sel_btn)))   File ""C:\Python27\lib\site-packages\selenium\webdriver\support\wait.py"", line 71, in until     value = method(self._driver)   File ""C:\Python27\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 283, in __call__     element = visibility_of_element_located(self.locator)(driver)   File ""C:\Python27\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 127, in __call__     return _element_if_visible(_find_element(driver, self.locator))   File ""C:\Python27\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 397, in _find_element     return driver.find_element(*by)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 955, in find_element     'value': value})['value']   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 310, in execute     response = self.command_executor.execute(driver_command, params)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 466, in execute     return self._request(command_info[0], url, body=data)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 567, in _request     LOGGER.debug(u""Finished Request {}"".format(data)) UnicodeDecodeError: 'ascii' codec can't decode byte 0xd0 in position 90: ordinal not in range(128) ```  ## Steps to reproduce - See the code line in the traceback. The selector is a `unicode` with national characters.","closed","","native-api","2018-02-03T01:18:52Z","2019-08-16T15:09:36Z"
"","5757","Selenium webdriver gecko can not connect to the service","## Meta - OS:   Windows 7 Professional x64 Selenium Version:   3.11.0, PyCharm 2017.3.2 Browser:   Firefox 46 and 57.0  Traceback (most recent call last):   File ""C:/Users/Abdi/PycharmProjects/poc/test.py"", line 55, in      webdriverShizz()   File ""C:/Users/Abdi/PycharmProjects/poc/test.py"", line 45, in webdriverShizz     driver = webdriver.Firefox(executable_path=""C:\geckodriver.exe"")   File ""C:\Users\Abdi\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", line 152, in __init__     self.service.start()   File ""C:\Users\Abdi\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\common\service.py"", line 104, in start     raise WebDriverException(""Can not connect to the Service %s"" % self.path) selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service C:\geckodriver.exe  geckodriver.exe version v0.20.1; 1523403656286	geckodriver	INFO	geckodriver 0.20.1 1523403656313	geckodriver	INFO	Listening on 127.0.0.1:4444  geckodriver makes no log file.  Issue: firefox never opens up. ""Can not connect to the Service"".","closed","","StackerDEV","2018-04-10T23:43:22Z","2019-08-16T06:09:44Z"
"","5207","chrome was closed unexpectedly","## Meta - OS:   Windows 7 Professional  Selenium Version:   3.5.3  Browser:   chrome V62 chromedriver v2.33  ## Expected Behavior - chrome will not closed unexpectedly  ## Actual Behavior - chrome will be closed unexpectedly after running many cases.  Could you give me some clause to investigate, I can't find any error why the chrome was closed unexpectedly.","closed","","Amber2008","2017-12-12T09:15:31Z","2019-08-16T21:09:40Z"
"","5801","Unable to run scripts on  IE 11 and RemoteWebDriver using Selenium-standalone-server.3.9.1","## Meta - OS:   Windows 7 Enterprise Selenium Version:   3.9.1  Selenium standalone server version :  3.9.1 Browser:    Internet Explorer 11   Browser Version:   11.0.9600.18952  ## Expected Behavior - User should be able to run selenium scripts on IE 11 browser using selenium grid with Selenium standalone server version :  3.9.1 .  ## Actual Behavior - User gets java.lang.AssertionError: Exception creating driver: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones. Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'WAV0226', ip: '', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_162' Driver info: driver.version: unknown remote stacktrace:  Command duration or timeout: 670 milliseconds  stacktrace :[Ljava.lang.StackTraceElement;@8a60bc  ## Steps to reproduce - 1. Set IE Protected Mode to the same value (enabled or disabled) for all zones. 2.  Followed below steps to set up Registry as mentioned in IE Driver documentation: For IE 11 only, you will need to set a registry entry on the target computer so that the driver can maintain a connection to the instance of Internet Explorer it creates. For 32-bit Windows installations, the key you must examine in the registry editor is HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BFCACHE. For 64-bit Windows installations, the key is HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BFCACHE. Please note that the FEATURE_BFCACHE subkey may or may not be present, and should be created if it is not present. Important: Inside this key, create a DWORD value named iexplore.exe with the value of 0.  3. Started hub and node. Hub and node are successfully started as displayed below :+1:  HUB CONSOLE src\test\resources>java -jar selenium-server-standalone-3.9.1.ja r -role hub 13:37:15.748 INFO - Selenium build info: version: '3.9.1', revision: '63f7b50' 13:37:15.768 INFO - Launching Selenium Grid hub on port 4444 2018-04-18 13:37:22.030:INFO::main: Logging initialized @11244ms to org.seleniumhq.jetty9.util.log.StdErrLog 2018-04-18 13:37:22.231:INFO:osjs.Server:main: jetty-9.4.7.v20170914, build timestamp: 2017-11-21T16:27:37-05:00, git hash: 8 2b8fb23f757335bb3329d540ce37a2a2615f0a8 2018-04-18 13:37:22.349:INFO:osjs.session:main: DefaultSessionIdManager workerName=node0 2018-04-18 13:37:22.349:INFO:osjs.session:main: No SessionScavenger set, using defaults 2018-04-18 13:37:22.419:INFO:osjs.session:main: Scavenging every 600000ms 2018-04-18 13:37:22.479:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@1b7e5df{/,null,AVAILABLE} 2018-04-18 13:37:22.809:INFO:osjs.AbstractConnector:main: Started ServerConnector@6e276e{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 2018-04-18 13:37:22.819:INFO:osjs.Server:main: Started @12027ms 13:37:22.819 INFO - Selenium Grid hub is up and running 13:37:22.819 INFO - Nodes should register to  13:37:22.819 INFO - Clients should connect to  13:38:31.592 INFO - Registered a node   NODE CONSOLE: >java -Dwebdriver.chrome.driver=""chromedriver. exe"" -Dwebdriver.ie.driver=""iedriver.exe"" -jar selenium-server-standalone-3.9.1.jar -role node -hub """" 13:38:29.741 INFO - Selenium build info: version: '3.9.1', revision: '63f7b50' 13:38:29.743 INFO - Launching a Selenium Grid node on port 5555 2018-04-18 13:38:30.428:INFO::main: Logging initialized @1835ms to org.seleniumhq.jetty9.util.log.StdErrLog 2018-04-18 13:38:30.708:INFO:osjs.Server:main: jetty-9.4.7.v20170914, build timestamp: 2017-11-21T16:27:37-05:00, git hash: 8 2b8fb23f757335bb3329d540ce37a2a2615f0a8 2018-04-18 13:38:30.738:WARN:osjs.SecurityHandler:main: ServletContext@o.s.j.s.ServletContextHandler@20b53a{/,null,STARTING} has uncovered http methods for path: / 2018-04-18 13:38:30.748:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@20b53a{/,null,AVAILABLE} 2018-04-18 13:38:30.778:INFO:osjs.AbstractConnector:main: Started ServerConnector@18d2680{HTTP/1.1,[http/1.1]}{0.0.0.0:5555} 2018-04-18 13:38:30.778:INFO:osjs.Server:main: Started @2181ms 13:38:30.778 INFO - Selenium Server is up and running on port 5555 13:38:30.778 INFO - Selenium Grid node is up and ready to register to the hub 13:38:30.958 INFO - Starting auto registration thread. Will try to register every 5000 ms. 13:38:30.958 INFO - Registering the node to the hub:  13:38:31.632 INFO - Updating the node configuration from the hub 13:38:31.662 INFO - The node is registered to the hub and ready to use 2018-04-18 14:39:44.707:INFO:osjshC.ROOT:qtp26882836-16: org.openqa.selenium.remote.server.WebDriverServlet-93084c: Initialis ing WebDriverServlet 14:39:44.977 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@a9552 14:39:44.987 INFO - /session: Executing POST on /session (handler: BeginSession) 14:39:45.596 INFO - Capabilities are: Capabilities {browserName: internet explorer, ensureCleanSession: true, ignoreProtected ModeSettings: true, ignoreZoomSetting: true, platform: WINDOWS, version: } 14:39:45.606 INFO - Capabilities {browserName: internet explorer, ensureCleanSession: true, ignoreProtectedModeSettings: true , ignoreZoomSetting: true, platform: WINDOWS, version: } matched class org.openqa.selenium.remote.server.ServicedSession$Fact ory (provider: org.openqa.selenium.ie.InternetExplorerDriverService) Started InternetExplorerDriver server (32-bit) 3.10.0.0 Listening on port 3589 Only local connections are allowed 14:39:50.755 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@1cfe4b 14:39:50.755 INFO - /session: Executing POST on /session (handler: BeginSession) 14:39:50.755 INFO - Capabilities are: Capabilities {browserName: internet explorer, ensureCleanSession: true, ignoreProtected ModeSettings: true, ignoreZoomSetting: true, platform: WINDOWS, version: } 14:39:50.755 INFO - Capabilities {browserName: internet explorer, ensureCleanSession: true, ignoreProtectedModeSettings: true , ignoreZoomSetting: true, platform: WINDOWS, version: } matched class org.openqa.selenium.remote.server.ServicedSession$Fact ory (provider: org.openqa.selenium.ie.InternetExplorerDriverService) Started InternetExplorerDriver server (32-bit) 3.10.0.0 Listening on port 6790 Only local connections are allowed 14:40:20.733 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@c6f00d 14:40:20.733 INFO - /session: Executing POST on /session (handler: BeginSession) 14:40:20.743 INFO - Capabilities are: Capabilities {browserName: internet explorer, ensureCleanSession: true, ignoreProtected ModeSettings: true, ignoreZoomSetting: true, platform: WINDOWS, version: } 14:40:20.753 INFO - Capabilities {browserName: internet explorer, ensureCleanSession: true, ignoreProtectedModeSettings: true , ignoreZoomSetting: true, platform: WINDOWS, version: } matched class org.openqa.selenium.remote.server.ServicedSession$Fact ory (provider: org.openqa.selenium.ie.InternetExplorerDriverService)  ------------------------------------------- In eclipse console , I get below error : java.lang.AssertionError: Exception creating driver: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones. Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'WAV0226', ip: '', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_162' Driver info: driver.version: unknown remote stacktrace:  Command duration or timeout: 670 milliseconds  stacktrace :[Ljava.lang.StackTraceElement;@8a60bc  This despite IE being set up correctly with all protected mode zones. IE browser is not even opened.   I get above error irrespective of script. I have tried instantiating webdriver using capabilities and options. Same issue.   The error message is also highly misleading as IE does have required protected mode setting. Any help to resolve this is highly appreciated.","closed","D-IE,","formynet","2018-04-18T20:29:34Z","2021-09-05T08:10:39Z"
"","5525","Ignore IE Protected Mode desired capability setting is not effective with selenium jar 3.8+","## Meta - OS:   Windows 7 (hub, node), OS 10.11.6 on Mac (agent) Selenium Version:   3.9.1 Browser:  IE 11  Browser Version:   IE 11.0.9600  ## Expected Behavior - IEDriver to execute tests against IE  ## Actual Behavior - Exception thrown when creating driver: ``` SessionNotCreatedError: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones. ``` ## Steps to reproduce - 1. Using Node JS with selenium-webdriver `4.0.0-alpha.1` or `3.6.0` 2. Setup a hub and node on Windows 7 machine with selenium jar 3.9.1 3. Run tests against new selenium grid using IE11  Expected: Tests to run Actual: Exception throwing above  Other things of note: 1. I've tried IEDriver 3.8 and 3.9 2. All of this works correctly with selenium jar 3.6  3. I AM setting the following capabilities ``` 	capabilities.set('ignoreProtectedModeSettings', true); 	capabilities.set('ie.ensureCleanSession', true); 	capabilities.set('enableElementCacheCleanup', true); 	capabilities.set('ignoreZoomSetting', true); ```","closed","C-nodejs,","tomatobrown","2018-02-21T21:48:22Z","2019-08-15T10:09:56Z"
"","4909","Racing condition between Selenium Server and ChromeDriver","## Meta - OS:   Windows 7  Pro x32 SP1 Virtual Machine (running on vmware ESXi 6.0.0) Selenium Version:   [selenium-java 3.4.0], [selenium-server 3.6.0], [ChromeDriver 2.33]  (and a few versions before this one too, I updated the server and the browser a few times during the past months) Browser:   Chrome v61 32bit  ## Main issue - ChromeDriver won't delete it's scoped_dir_ folders from Windows's Temporary files.  ## Expected Behavior - If the browser gets closed remotely by calling `driver.quit();`, either ChromeDriver itself or Selenium Server should remove the temporary files (or at least selenium-server should not hold the files).  ## Actual Behavior - [It was supposed to be fixed a few times already.](https://stackoverflow.com/questions/43289035/chromedriver-not-deleting-scoped-dir-in-temp-folder-after-test-is-complete), but I am still struggling with this on a Windows 7 virtual machine. The directories just keep piling up (each around 5MB) and after a day or two it slows down the system. I saw this issue mentioned with Firefox's driver too.  As much as I can see, sometimes when a browser closes a scoped_dir folder gets deleted, but most of the time it won't. I tried to use a ps1 script to manually delete the files ([source](https://paste.ubuntu.com/25766373/), mentioned [here](https://sqa.stackexchange.com/questions/26675/chromedriver-not-deleting-scoped-dir-in-temp-folder-after-test-is-complete/27070)), but It just cannot delete them until I shutdown `selenium-server`. For me, It looks like Chrome and selenium-server keep each other from deleting the files.  Please tell me, what information should I share to help this issue resolved.  Until then: - I am using Java 1.8 to connect to the server - I start the selenium server by simply calling `java -jar selenium-server.jar` in command line - My test cases require lot's of browser starting and stopping, but I close them every time with a `driver.quit()` in a `try-catch-finally` structure. - My software runs in a multi-threaded environment, meaning multiple threads will request browsers at the same time - I tried using `driver.close()` before calling `driver.quit()`, but it just crashed with an already closed driver exception.  ## Steps to reproduce - Keep starting and closing browsers, when the selenium-server runs on Windows 7 machine and look for the directories in `C:\Users\\AppData\Local\Temp`","closed","R-awaiting answer,","SzabKel","2017-10-19T05:58:41Z","2019-08-17T06:09:35Z"
"","5186","[3.8.1 - Grid] - javax.management.InstanceAlreadyExistsException when re-registering a node","## Meta - OS:   Windows 7  Selenium Version:   3.8.1 Browser:   NA Browser Version:   NA  ## Expected Behavior - When a node goes down and then up again, it should print relevant information in log. For example:  When node registers for the first time: `10:22:21.591 INFO - Registered a node http://xx.xx.xx.xx:5555`  Then if the node goes down: `13:27:19.249 INFO - Marking the node http://xx.xx.xx.xx:5555 as down: cannot reach the node for 2 tries`  And when the node starts up again: ``` 13:27:29.213 INFO - Registered a node http://xx.xx.xx.xx:5555 13:27:29.213 WARN - Cleaning up stale test sessions on the unregistered node http://xx.xx.xx.xx:5555 ```  ## Actual Behavior - At the moment when a node goes down and comes up again, there is the following exception printed out in hub log:  ``` javax.management.InstanceAlreadyExistsException: org.seleniumhq.grid:type=RemoteProxy,node=""http://10.25.67.96:5556""         at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437)         at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898)         at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966)         at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)         at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)         at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)         at org.openqa.selenium.remote.server.jmx.JMXHelper.register(JMXHelper.java:31)         at org.openqa.grid.selenium.proxy.DefaultRemoteProxy.(DefaultRemoteProxy.java:74)         at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)         at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)         at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)         at java.lang.reflect.Constructor.newInstance(Constructor.java:422)         at org.openqa.grid.internal.BaseRemoteProxy.getNewInstance(BaseRemoteProxy.java:366)         at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:104)         at org.openqa.grid.web.servlet.RegistrationServlet.doPost(RegistrationServlet.java:71)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:841)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:561)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:334)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:251)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:104)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597)         at java.lang.Thread.run(Thread.java:745) ```  ## Steps to reproduce -  1. Start Selenium Hub 3.8.1 2. Start Selenium Node 3.8.1 3. Make sure the node is successfully bound to the hub (see the hub.error.log) 4. Stop Selenium node 5. Wait until node marked is down by Selenium server (see the hub.error.log) 6. Start the node again 7. Find the above mentioned exception printed out in hub log.","closed","C-grid,","EugeneS30","2017-12-07T05:41:53Z","2019-08-16T06:09:53Z"
"","5585","Error running Selenium sample file","## Meta - OS:   Windows 7 Selenium Version:   Selenium 2 WebDriver API (through Python) Browser:   Chrome   Browser Version:    64.0.3282.186 (Official Build) (64-bit)   I installed Selenium yesterday alongside Chromedriver and am trying to test its basic functionality. I created a hello.py python file with the sample code on the Selenium site (see end of post).  When I ran the file using python hello.py from the command line while in the enclosing folder, I got the error message in the  attached file. ![selenium error](https://user-images.githubusercontent.com/20567444/37172373-969c06f4-22de-11e8-8f5c-9826fd1058d5.PNG)   Code run from hello.py:  ``` from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Chrome() driver.get(""http://www.python.org"") assert ""Python"" in driver.title elem = driver.find_element_by_name(""q"") elem.clear() elem.send_keys(""pycon"") elem.send_keys(Keys.RETURN) assert ""No results found."" not in driver.page_source driver.close() ```","closed","R-awaiting answer,","mikeknerr","2018-03-08T19:40:52Z","2019-08-16T11:09:35Z"
"","5603","InternetGetCookieEx2 could not be located in the dynamic link library WININET.DLL","## Meta - OS:   Windows 7 Selenium Version:   IEDriverServer win 32 version 3.11 Selenium python bindings 3.11 Browser:   Internet Explorer 10  Browser Version:   Internet Explorer 10  ## Expected Behavior - Selenium starts up IE 10.  ## Actual Behavior - Error message pops up with text: the procedure entry point InternetGetCookieEx2 could not be located in the dynamic link library WININET.DLL  ## Steps to reproduce - ``` from selenium import webdriver webdriver.Ie() ```  ## Notes: * Not happening on IE 11 windows 10/8/7 * Not happening with webdriver version 3.10 * already tried SFC/SCANNOW","closed","","PhilippSelenium","2018-03-13T11:16:43Z","2019-08-16T10:09:46Z"
"","5732","ChromeDriver throwing -> call function result missing 'value'","## Meta - OS:   Windows 7 Selenium Version:   ChromeDriver 2.37 Browser:   Chrome  Driver throws the error below every time the sendkey() method is called.  ""call function result missing 'value' "" the rest on the exception message is details about the chrome driver version.   Browser Version:   Latest Chrome Update 65  ## Expected Behavior - Send keys to the element as expected.  ## Actual Behavior - Throws an error upon attempting to do this.  ## Steps to reproduce - Run a test scenario where the chrome driver is being used to send a string to a textbox element. Preferable run this is a loop that that does the same for like 100 times. Because I have a hunch that this might be caused by large load. I use the the driver to regression testing.","closed","","Thabane","2018-04-05T14:01:54Z","2019-08-16T02:09:58Z"
"","5537","How to handle psedu elements eg ::before in selenium","## Meta - OS:   WIndows 7 Selenium Version:   3.7.1 Browser:   Chrome Browser Version:   64.0.3282.186 (Official Build) (64-bit)  ## Expected Behavior - In the screenshot above i want to click on radio button 50% and above. Locating this radio button is highlighting pseudo-element ::before. Please help how can i locate this element and select it.  ![myntra](https://user-images.githubusercontent.com/23254432/36644121-965d1c0c-1a7b-11e8-8f8c-5553fe3f8aa6.jpg)","closed","","lovish-jain","2018-02-25T17:08:23Z","2019-08-16T12:09:37Z"
"","4971","Not supported exceptions when use findelements() on shadow-root - affects By.name, By.tagName, By.xpath","## Meta - OS:   Windows 7 Selenium Version:   3.6.0 Browser:   Chrome, but not relevant in fact Browser Version:   not relevant  ## Expected Behavior - When used: `By.name(""list"") ` than the element will be found with the 'name' attribute, not with 'tagName'. And of course will be found and possible to interract without errors. That affect both attributes - name and tagName should be possible to use on these WebElements.  For xpath - I expect that xpath will be correct processed.  ## Actual Behavior - for name attribute (1): org.openqa.selenium.WebDriverException: unknown error: **a.getElementsByTagName** is not a function  for tagName attribute (2): org.openqa.selenium.WebDriverException: unknown error: b.getElementsByTagName is not a function  for Xpath (3): org.openqa.selenium.InvalidSelectorException: invalid selector: Unable to locate an element with the xpath expression .//shop-list because of the following error: NotSupportedError: Failed to execute 'evaluate' on 'Document': The node provided is '#document-fragment', which is not a valid context node type.  ## Steps to reproduce - Site: https://shop.polymer-project.org/ This site is with Polymer written, so for every component there comes shadow root (Shadow DOM) - that's why I need to use expandRootElement method.  ```  public WebElement expandRootElement(WebElement element) {         WebElement ele = (WebElement) ((JavascriptExecutor) getDriver())                 .executeScript(""return arguments[0].shadowRoot"",element);         return ele; } ```  ``` public WebElement getShadowRoot() {         WebElement root = getDriver().waitForElement(By.tagName(""shop-app""));         return expandRootElement(root); } ``` ``` getShadowRoot().findElement(By.partialLinkText(""Men's Outerwear"")).click(); // it's OK, Selenium clicks that  WebElement shopList = getShadowRoot().findElement(By.name(""list"")); // here comes exception (1) WebElement shopList = getShadowRoot().findElement(By.tagName(""shop-list"")); // here comes exception (2) WebElement shopList = getShadowRoot().findElement(By.xpath("".//shop-list"")); // here exception for xpath (3) ```","closed","I-needs investigation,","slawkow","2017-10-27T13:35:55Z","2021-09-05T08:08:39Z"
"","4828","Need to handle HttpAuth popup through Selenium Webdriver on Firefox","## Meta - OS:   Windows 7 Selenium Version:   3.6 Browser:   Firefox Latest  Can anyone help me here I need to handle httpAuth through Selenium Webdriver.    ![10-9-2017 6-59-07 pm](https://user-images.githubusercontent.com/3796742/31341847-49d5026a-ad24-11e7-96ba-e966b814d2a9.png)","closed","","Fatimi","2017-10-09T14:01:51Z","2019-08-17T08:09:47Z"
"","4827","Chrome driver reloaded on Clicking specific element on webpage","## Meta - OS:   Windows 7 Selenium Version:   3.6 Browser:   Chrome   Currently problem I m facing is when I click on specific element in chrome browser the Webpage gets reloaded and makes my script to get failed  package pmo_automation;  import java.io.IOException; import java.util.concurrent.TimeUnit;  import org.openqa.selenium.Alert; import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.TimeoutException; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.security.Credentials; import org.openqa.selenium.security.UserAndPassword; import org.openqa.selenium.support.ui.ExpectedCondition; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait;  import com.gargoylesoftware.htmlunit.javascript.host.Location; import com.gargoylesoftware.htmlunit.javascript.host.Window;  public class loginPage  { 	 	 	public static void main(String[] args) throws IOException, InterruptedException  { 			 		 		System.setProperty(""webdriver.chrome.driver"", ""C:/Users/aamir.fatimi/Downloads/chromedriver_win32/chromedriver.exe""); 		WebDriver driver = new ChromeDriver(); 		driver.manage().window().maximize(); 		driver.navigate().to(""http://sohaib.ahmed:nov@1234@dbu-export-09/en/Pages/default.aspx/"");  WebElement eservices1 = driver.findElement(By.linkText(""E-SERVICES"")); 		eservices1.click(); 		 	 } }","closed","R-awaiting answer,","Fatimi","2017-10-09T13:38:25Z","2019-08-17T05:09:43Z"
"","5626","since v3.5 selenium and IEdriver on webdriverio elementIdText(elementArray[0]) returns the whole array","## Meta - OS:   Windows 7 Selenium Version:   3.5.0 Browser:   Internet Explorer 11 Browser Version:   11.0.9600.16428IS Updated Versins: RTM (KB2841134)  I have filed this issue under webdriverio, but after more debugging I found this issue is related to seleenium and IEDriver from 3.5 and on. selenium and IEDriver 3.4 worked as expected. Also chromeDriver 2.36 does not show this issue for selenium 3.5 and on up to 3.11.   All debug data is filed in this webdriverio issue: https://github.com/webdriverio/webdriverio/issues/2641  ## Expected Behavior - elementIdText(elementArray[0]) to return the text of of the first element, in this case 'All' ## Actual Behavior - 1. elementIdText(elementArray[0]) returned the elementArray; 2. the for the subsequent array elements it returned the text for the last element (offset by 1).  ## Steps to reproduce - See the webdriverio issue 2641 mention aboved.","closed","C-nodejs,","xywang68","2018-03-15T22:06:49Z","2021-09-05T08:34:52Z"
"","5721","PhantomJSDriverService interface missing in Selenium 3.11.0","## Meta - OS:   Windows 7 Selenium Version:   3.11.0 Browser:   Chrome  I was used the selenium 3.7.1. Now I just updated to selenium 3.11.0 and I got error in my PhantomJS driver section. It seems PhantomJSDriverService interface missing. What is the alternative to start PhantomJS in Selenium 3.11.0 for headless execution?  Thanks, sanojqa","closed","","sanojqa","2018-04-02T13:41:43Z","2019-08-16T07:09:51Z"
"","5744","Selenium test cases are failing with org.openqa.selenium.TimeoutException: from Jenkins","## Meta - OS:   Windows 7 Selenium Version:   2.53.0  Browser:   Google CHrome    Browser Version:   65  ## Expected Behavior - Test Suites should be executed successfully  ## Actual Behavior - It is faliling with Timedout exception for all the functions  ## Steps to reproduce - Code Sample: WebDriverWait wait = new WebDriverWait(driver, 1000); wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(ORCollection.get(""BtnMDUEligibilityClick"").toString()))); WebElement el = driver.findElement(By.xpath(ORCollection.get(""BtnMDUEligibilityClick"").toString())); ((JavascriptExecutor) driver).executeScript(""arguments[0].scrollIntoView(true);"", el); WebElementClick("" "",ORCollection.get(""BtnMDUEligibilityClick"").toString()); Thread.sleep(10000);  Error log: org.openqa.selenium.TimeoutException: Timed out after 40 seconds waiting for visibility of element located by By.xpath: //button[contains(@class,'js-submit')]  I have increased webdriver.wait value in code from 40 seconds to 1000 but still we are getting the same error as Timedout  But while executing the same code via eclipse its running fine. Please help on resolving the issue  TIA","closed","R-awaiting answer,","Manigunner","2018-04-09T10:20:14Z","2019-08-16T03:09:54Z"
"","5151","Dialog opened with showModalDialog has no window handle, cannot interact with dialog","## Meta - OS:   Windows 7  Selenium Version:   3.7.1  Browser:   Internet Explorer  Browser Version:   11.0.9600.18665, Update Versions: 11.0.42  ## Expected Behavior - After opening a modal dialog, the dialog should have its own handle string when calling InternetExplorerDriver.getWindowHandles().  ## Actual Behavior - The modal dialog is never given a handle. It does not appear possible to interact with the modal dialog in any way.  ## Steps to reproduce - I believe this is an environment configuration issue, as this issue suddenly began without our making any changes to the Selenium version, IEDriverServer, or installing any Windows updates. Unfortunately we do not have a record of changes possibly made to the environment, so I cannot say what exactly caused this to start.  The logs report the following error: > W 2017-11-29 15:34:29:886 BrowserFactory.cpp(353) -2147024809 [The parameter is incorrect.]: Unable to convert document object pointer to IHTMLDocument2 object via ObjectFromLresult  Complete logs from failing run: [ielogs-fails.txt](https://github.com/SeleniumHQ/selenium/files/1518790/ielogs-fails.txt)  Complete logs from passing run on a different machine: [ielog-success.txt](https://github.com/SeleniumHQ/selenium/files/1518792/ielog-success.txt)  index.html: ```  click  ```  modal.html `inmodal`  JUnit: ``` 	@Test 	public void testShowModalDialog() throws Throwable { 		System.setProperty(""webdriver.ie.driver"", ""C:/path/to/IEDriverServer.exe""); 		InternetExplorerDriver driver = null; 		try { 			InternetExplorerOptions options = new InternetExplorerOptions(); 			options.setCapability(InternetExplorerDriver.LOG_FILE, ""C:/path/to/log.txt""); 			options.setCapability(InternetExplorerDriver.LOG_LEVEL, ""TRACE""); 			driver = new InternetExplorerDriver(options); 			driver.get(""http://path/to/index.html""); 			WebElement div = driver.findElement(By.id(""click"")); 			div.click(); 			Thread.sleep(10*1000); 			for (String handle : driver.getWindowHandles()) { 				System.out.println(handle); 			} 		} finally { 			if (driver != null) { 				driver.quit(); 			} 		} 	} ```","closed","D-IE,","para-selenium-bugs","2017-11-30T17:25:05Z","2021-09-05T08:08:36Z"
"","5408","How to Handle ""Select a Certificate popup"" in chrome browser for Selenium Java","## Meta - OS:   Windows 7  Selenium Version:   2.33   Browser Version:   Chrome v63.0.3239.132     ## Steps to reproduce - Launch the application which has security certificate associated. On launching we get ""Select a Certificate popup"" . How to avoid this and how to handle this.  Tried adding the certificate to trusted source dint work   Please find the screenshot attached for the screen obtained.  ![image](https://user-images.githubusercontent.com/35960104/35566835-d6e761ee-05e8-11e8-8fd8-7b57f9859b3d.png)","closed","","vatsa9902","2018-01-30T12:40:38Z","2019-08-15T15:09:57Z"
"","5614","Cannot run IE test on a specific node in Grid.","## Meta - OS:   Windows 2012R2 Selenium Version:   webdriver 3.11.0.0 IE driver 3.9.0.0 Browser:   Internet Explorer Browser Version:   IE 11 64-bit  ## Expected Behavior - Should be able to run on a particular node when ""applicationName"" capability is specified and IE is selected as browser to run on. ## Actual Behavior - Getting the following error in my test: ``` Exception: OpenQA.Selenium.WebDriverException: Unexpected error.     at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout) ```  Getting the following error on grid hub console: ``` Caused by:  java.lang.IllegalArgumentException: Illegal key values seen in w3c capabilities: [applicationName] 	at org.openqa.selenium.remote.NewSessionPayload.lambda$validate$6(NewSessionPayload.java:209) 	at java.util.stream.ReferencePipeline$11$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$11$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$11$1.accept(Unknown Source) 	at java.util.LinkedList$LLSpliterator.forEachRemaining(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)... ```  ## Steps to reproduce - Here is a C# code: ``` DesiredCapabilities capabilities = SetInternetExplorerOptions().ToCapabilities() as DesiredCapabilities; capabilities.SetCapability(CapabilityType.BrowserName, ""internet explorer""); capabilities.SetCapability(CapabilityType.Platform, new Platform(PlatformType.Windows)); capabilities.SetCapability(""applicationName"", """");  IWebDriver _WebDriver = new RemoteWebDriver(new Uri(""""), capabilities, TimeSpan.FromSeconds(30)); ((RemoteWebDriver)_WebDriver).FileDetector = new LocalFileDetector();  return _WebDriver;  ```","closed","","quldude","2018-03-14T18:47:24Z","2019-08-16T10:09:41Z"
"","5504","When the hub is restarted, windows agents don't seem to reconnect/re-register","## Meta - OS:   Windows 2012R2 Selenium Version:   3.9.1 Browser:   IE  Browser Version:   N/A  ## Expected Behavior - Nodes should re-connect to hub/re-register when the hub comes back up.  ## Actual Behavior - We are running selenium-grid in kubernetes, when we restart the hub pod, the static windows agents show an error registering but once the hub is back up they never re-register. Instead we need to restart each of the nodes manually  ## Steps to reproduce -  1. Run the selenium grid hub 2. Connect a windows node to it and have it register 2a. Confirm the node appears in grid/console 3. Stop the hub 3a. Observe on the windows node that it has a connection issue with the hub 4. Start the hub 4a. observe in grid/console after a period of time the windows nodes never re-register  5. restart the windows node and let it register 5a. observe in the grid/console that the node is back.","closed","OS-windows,","Deklin","2018-02-16T04:08:32Z","2019-08-15T06:09:44Z"
"","5032","Actions.MoveToElement throws StaleElementException on Element that is found again after a DOM refresh","## Meta - OS:   Windows 10, v1703 build 15063.674 Selenium Version:   v3.6.0 Browser:   Chrome & Firefox  Browser Version:   v62.0.3202.75 (32-bit) & v56.0.2 (32-bit)  ## Expected Behavior - Actions.MoveToElement to not throw a StaleElementException when the element has been ""found"" again after a DOM refresh. ## Actual Behavior - I move the mouse to an element, click on some other element, then navigate back. I then ""find"" the element again and try to move the mouse to the element again where a StaleElementException is thrown. This happens on both Chrome & FF. ``` public void CNN()         {             driver.Navigate().GoToUrl(""http://www.cnn.com/"");             //Maximize the window so that the list can be gathered successfully.             driver.Manage().Window.Maximize();              //find the list             By xPath = By.XPath(""//div[@class='nav-menu-links']/a"");             IList linkCollection = driver.FindElements(xPath);              //Get the first tlink             string locator = ""//div[@class='nav-menu-links']/a[1]"";             IWebElement myLink = driver.FindElement(By.XPath(locator));              //Move mouse to the 1st link, Click each link             foreach (var item in linkCollection)             {                 //Hover over the first link                 move.MoveToElement(myLink).Build().Perform();                  //Click on the link                 item.Click();                  //Go back                 driver.Navigate().Back();                  //Find the first link again                 myLink = driver.FindElement(By.XPath(locator));             }         } ```  Exception thrown: 'OpenQA.Selenium.StaleElementReferenceException' in WebDriver.dll An exception of type 'OpenQA.Selenium.StaleElementReferenceException' occurred in WebDriver.dll but was not handled in user code The element reference of  stale: either the element is no longer attached to the DOM or the page has been refreshed","closed","","realfaisalk","2017-11-08T14:58:19Z","2019-08-17T03:09:46Z"
"","5096","Multiple commands not handled correctly","## Meta - OS:   Windows 10, OSX  Selenium Version:   3.4.0 Browser:   Chrome   If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help ==> considered this but suspecting the issue to lie with Selenium  Browser Version:   62.0  ## Expected Behavior - When running my automated tests (setup is Webdriver IO, NodeJS) I expect the tests to be able to return data for each element in a list.    ## Actual Behavior - I get an error: ``` java.net.SocketException: Connection reset by peer Error: An unknown server-side error occurred while processing the command.     at elementIdText(""0.11610570931673014-20"") - getText.js:35:50  ``` With the following in the Selenium logs: ``` 16:35:37]  COMMAND     GET      ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f/element/0.11610570931673014-15/text"" [16:35:37]  DATA                {} [16:35:37]  COMMAND     GET      ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f/element/0.11610570931673014-16/text"" [16:35:37]  DATA                {} [16:35:37]  COMMAND     GET      ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f/element/0.11610570931673014-17/text"" [16:35:37]  DATA                {} [16:35:37]  COMMAND     GET      ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f/element/0.11610570931673014-18/text"" [16:35:37]  DATA                {} [16:35:37]  COMMAND     GET      ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f/element/0.11610570931673014-19/text"" [16:35:37]  DATA                {} [16:35:37]  COMMAND     GET      ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f/element/0.11610570931673014-20/text"" [16:35:37]  DATA                {} [16:35:37]  COMMAND     GET      ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f/screenshot"" [16:35:37]  DATA                {} [16:35:37]  RESULT              ""€ 1.367"" [16:35:38]  RESULT              ""€ 478"" [16:35:38]  RESULT              ""€ 6.203"" [16:35:39]  RESULT              ""iVBORw0KGgoAAAANSUhEUgAABLAAAAP7CAIAAADEe+C5AAAgAElEQVR4nOzdf3xT1f0/8Bc05ra0aaspVBZmoZ2lVNb4hQ+ZYKtgpdJMfuQzflTFIkiZPyIqZWrcxMI2M5xx08WplMmoOAtln4idqZZBGa3yWfzATIcl1E8r5UNkhWa2DaW9McHvH0nbtE1/QSvFvJ5 ... (135478 more bytes) [16:35:39]      Saved screenshot: ERROR_chrome_2017-11-21T15-35-37.953Z.png [16:35:39]  RESULT              ""€ 1.367"" [16:35:39]  RESULT              ""€ 2.466"" [16:35:39]  COMMAND     DELETE   ""/wd/hub/session/8921cdb34a96ea7ad1a5383c3220f10f"" [16:35:39]  DATA                {}  ```  ## Steps to reproduce - Above logs show the result for a specific test case where I perform a getText command on a list of 6 items. The getText command is executed 6 times, 3 results are returned, it is decided that something went wrong and a screenshot is made and the test failed, 2 more responses are returned, and finally the session is deleted.","closed","","AnnemarieD","2017-11-21T15:48:56Z","2019-08-17T01:09:37Z"
"","5083","ChromeOptions doesn't go through when starting using RemoteWebDriver","## Meta - OS:   Windows 10, Mac  Selenium Version:   3.7.0  Browser:   Chrome  Browser Version:   62.0.3202.94 (Official Build) (64-bit)  ## Expected Behavior - Windows to start maximized using ChromeOptions argument ""--start-maximized"" or ""--kiosk""  ## Actual Behavior - Windows start with normal size  ## Steps to reproduce - ``` public void Start ()         {             ChromeOptions options = new ChromeOptions();                 options.AddArgument(""--start-maximized"");              DesiredCapabilities caps = options.ToCapabilities() as DesiredCapabilities;                 caps.SetCapability(CapabilityType.BrowserName, ""chrome"");                 caps.SetCapability(CapabilityType.Version, string.Empty);                 caps.SetCapability(CapabilityType.Platform, ""WINDOWS"");              new RemoteWebDriver(""http://localhost:5555/wd/hub"", caps);         } ```  OR  ``` public void Start ()         {             ChromeOptions options = new ChromeOptions();             options.AddArgument(""--start-maximized"");              return new RemoteWebDriver(""http://localhost:5555/wd/hub"", options.ToCapabilities());         } ```   If I start ChromeDriver with the same argument it works fine. Only when through RemoteWebDriver.","closed","C-remote,","Icaroto","2017-11-20T13:23:35Z","2020-06-24T23:41:32Z"
"","5777","Detecting errors in the browser with Selenium","## Meta - OS:   Windows 10 Pro for Workstations  Selenium Version:   3.8.1 Browser:   Firefox Quantum 59.0.2 (64-bit)  I am trying to capture errors using Java & Selenium, using this method: https://advancedweb.hu/2016/03/29/selenium-tes-logs/  Here I set up the log:  `                         			 			global.variables.logs = new LoggingPreferences(); 			 			global.variables.logs.enable(LogType.BROWSER, Level.SEVERE); 			 			DesiredCapabilities desiredCapabilities = DesiredCapabilities.firefox(); 			 			desiredCapabilities.setCapability(CapabilityType.LOGGING_PREFS, global.variables.logs); 			 			System.setProperty(""webdriver.gecko.driver"", filename); 			 			FirefoxOptions options = new FirefoxOptions() 					.merge(desiredCapabilities) 					.addPreference(""browser.tabs.remote.autostart"", false) 					.addPreference(""security.sandbox.content.level"", 5);  			driver = new FirefoxDriver(options);`  Here I try to print out any messages in those logs:  `		  		System.out.println(thisClass + "" Checking for log entries. "");  		try { 			LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER); 			 			if (logEntries != null) { 				System.out.println(thisClass + "" logEntries is not null. ""); 				for (LogEntry logEntry : logEntries) { 					// Get log message, timestamp and level. 					Common.printLine(); 					debug.print(thisClass + "" logEntry.getTimestamp : "" + logEntry.getTimestamp()); 					debug.print(thisClass + "" logEntry.getMessage : "" + logEntry.getMessage()); 					debug.print(thisClass + "" logEntry.getClass : "" + logEntry.getClass()); 					debug.print(thisClass + "" logEntry.getLevel : "" + logEntry.getLevel()); 					Common.printLine(); 				} 			}else { 				System.out.println(thisClass + "" logEntries is null. ""); 			}  		} catch (Exception e) { 			int errorCode=1523626889; 			System.out.println(thisClass + "" Could not generate device logs. ""); 			System.err.println(thisClass + "" errorCode: "" + errorCode + "" Exception: "" + e.getMessage()); 		}` When running it, I get an error:  > Exception: POST /session/5ff98e14-c578-461c-aae2-8dc7cb3ffbec/log did not match a known command Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'SSTAPLE', ip: '172.16.190.147', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 59.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 13892, moz:profile: C:\Users\SStaple\AppData\Lo..., moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: XP, platformName: XP, platformVersion: 10.0, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}} Session ID: 5ff98e14-c578-461c-aae2-8dc7cb3ffbec  If this method is no longer available, how else might we capture errors from the browser?    Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","staplesj","2018-04-13T14:21:08Z","2019-08-16T06:09:36Z"
"","5054","IE Driver Server Crashes When Trying to Get Cookies","## Meta - OS:   Windows 10 Pro (64 bit) Version 1709 Build: 16299.19  Selenium Version:   3.6.0  Browser:   Internet Explorer   Browser Version:   11.15.16299.0  ## Expected Behavior -  IE Driver Server successfully gets the cookies for the current session and a specific cookie can be retrieved.  ## Actual Behavior - While the specific line of code to get the cookies from the current browser session appears to work, upon trying to get a specific cookie from said collection, the IE Driver Server executable crashes.  Literally, it just disappears from Task Manager at this point.  ## Steps to reproduce -  I have multiple tests where I need to download files from the web app I'm testing.  Due to the nature of how these files are handled within the app, I actually have to download the files outside of the browser.  To do this, I'm using .NET WebClient and I retrieve the session cookie from the current browser instance and use that in my WebClient request.  I've been doing this for a while now and it has not been a problem on any of the three major browser I test (Chrome, Firefox, IE).    Just today on my laptop, IE started giving me problems and I tracked it down to this point in my code:  ``` var cookies = WebDriver.Manage().Cookies; var sessionId = cookies.GetCookieNamed(SESSION_COOKIE_NAME).Value; ```  The first line appears to execute fine.  Upon executing the second, the IE Driver Server executable crashes.  Here are the relevant lines from the IE Driver Server log:  ``` T 2017-11-14 15:09:05:339 server.cc(391) Entering Server::SendResponseToClient T 2017-11-14 15:09:05:339 response.cc(30) Entering Response::Deserialize T 2017-11-14 15:09:05:339 server.cc(445) Entering Server::SendHttpOk T 2017-11-14 15:09:38:283 server.cc(174) Entering Server::ProcessRequest T 2017-11-14 15:09:38:283 server.cc(183) Process request with: URI: /session/8cd373e1-4e1e-4a32-a716-257ea34a8222/cookie HTTP verb: GET body: {} T 2017-11-14 15:09:38:283 server.cc(272) Entering Server::DispatchCommand T 2017-11-14 15:09:38:283 server.cc(583) Entering Server::LookupCommand D 2017-11-14 15:09:38:283 server.cc(281) Command: GET /session/8cd373e1-4e1e-4a32-a716-257ea34a8222/cookie {} T 2017-11-14 15:09:38:283 server.cc(378) Entering Server::LookupSession T 2017-11-14 15:09:38:283 IESession.cpp(191) Entering IESession::ExecuteCommand T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand T 2017-11-14 15:09:38:283 command.cc(31) Entering Command::Deserialize D 2017-11-14 15:09:38:283 command.cc(36) Raw JSON command: { ""name"" : ""getAllCookies"", ""locator"" : { ""sessionid"" : ""8cd373e1-4e1e-4a32-a716-257ea34a8222"" }, ""parameters"" : {} } T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive T 2017-11-14 15:09:38:283 IESession.cpp(212) Beginning wait for response length to be not zero T 2017-11-14 15:09:38:283 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle T 2017-11-14 15:09:38:283 Browser.cpp(206) Entering Browser::GetContentWindowHandle D 2017-11-14 15:09:38:283 IECommandExecutor.cpp(543) No alert handle is found T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser T 2017-11-14 15:09:38:283 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser T 2017-11-14 15:09:38:283 DocumentHost.cpp(73) Entering DocumentHost::GetCurrentUrl T 2017-11-14 15:09:38:283 Browser.cpp(126) Entering Browser::GetDocument I 2017-11-14 15:09:38:283 Browser.cpp(130) No child frame focus. Focus is on top-level frame T 2017-11-14 15:09:38:291 Browser.cpp(613) Entering Browser::GetDocumentFromWindow T 2017-11-14 15:09:38:297 CookieManager.cpp(86) Entering CookieManager::GetCookies T 2017-11-14 15:09:38:298 HookProcessor.cpp(104) Entering HookProcessor::Initialize T 2017-11-14 15:09:38:298 HookProcessor.cpp(204) Entering HookProcessor::CreateReturnPipe D 2017-11-14 15:09:38:298 HookProcessor.cpp(239) Created named pipe \\.\pipe\IEDriverPipe9956 T 2017-11-14 15:09:38:298 HookProcessor.cpp(167) Entering HookProcessor::InstallWindowsHook T 2017-11-14 15:09:38:298 CookieManager.cpp(369) Entering CookieManager::SendGetCookieMessage T 2017-11-14 15:09:38:298 HookProcessor.cpp(261) Entering HookProcessor::PushData T 2017-11-14 15:09:38:301 HookProcessor.cpp(287) Entering HookProcessor::PullData D 2017-11-14 15:09:38:301 HookProcessor.cpp(293) Waiting for connection from browser via named pipe T 2017-11-14 15:09:38:301 CookieManager.cpp(398) Entering CookieManager::ThreadProc D 2017-11-14 15:09:38:301 HookProcessor.cpp(302) Connection from browser established via named pipe T 2017-11-14 15:09:38:301 CookieManager.cpp(349) Entering CookieManager::ParseCookieString T 2017-11-14 15:09:38:302 CookieManager.cpp(369) Entering CookieManager::SendGetCookieMessage T 2017-11-14 15:09:38:302 HookProcessor.cpp(261) Entering HookProcessor::PushData T 2017-11-14 15:09:38:303 HookProcessor.cpp(287) Entering HookProcessor::PullData D 2017-11-14 15:09:38:303 HookProcessor.cpp(293) Waiting for connection from browser via named pipe T 2017-11-14 15:09:38:303 CookieManager.cpp(398) Entering CookieManager::ThreadProc D 2017-11-14 15:09:38:306 HookProcessor.cpp(302) Connection from browser established via named pipe T 2017-11-14 15:09:38:306 CookieManager.cpp(349) Entering CookieManager::ParseCookieString T 2017-11-14 15:09:38:306 CookieManager.cpp(369) Entering CookieManager::SendGetCookieMessage T 2017-11-14 15:09:38:306 HookProcessor.cpp(261) Entering HookProcessor::PushData T 2017-11-14 15:09:38:307 HookProcessor.cpp(287) Entering HookProcessor::PullData D 2017-11-14 15:09:38:307 HookProcessor.cpp(293) Waiting for connection from browser via named pipe T 2017-11-14 15:09:38:307 CookieManager.cpp(398) Entering CookieManager::ThreadProc D 2017-11-14 15:09:38:307 HookProcessor.cpp(302) Connection from browser established via named pipe T 2017-11-14 15:09:38:307 CookieManager.cpp(349) Entering CookieManager::ParseCookieString T 2017-11-14 15:09:38:307 CookieManager.cpp(369) Entering CookieManager::SendGetCookieMessage T 2017-11-14 15:09:38:307 HookProcessor.cpp(261) Entering HookProcessor::PushData T 2017-11-14 15:09:38:308 HookProcessor.cpp(287) Entering HookProcessor::PullData D 2017-11-14 15:09:38:308 HookProcessor.cpp(293) Waiting for connection from browser via named pipe T 2017-11-14 15:09:38:308 CookieManager.cpp(398) Entering CookieManager::ThreadProc D 2017-11-14 15:09:38:309 HookProcessor.cpp(302) Connection from browser established via named pipe T 2017-11-14 15:09:38:309 CookieManager.cpp(258) Entering CookieManager::ReadPersistentCookieFile T 2017-11-14 15:09:38:310 CookieManager.cpp(302) Entering CookieManager::ParsePersistentCookieInfo ```  My suspicion is that this is something introduced by an update to Windows 10, possibly the Fall Creator's Update.  I updated a couple of weeks ago and I don't believe I've run these particular tests locally against IE since then.  My tests are still running fine on our grid which is running nodes on Windows Server 2016 and I haven't run any tests on IE locally that make use of this functionally in a while,","closed","D-IE,","bjharo","2017-11-14T20:33:10Z","2019-08-16T01:09:42Z"
"","5705","C# ChromeDriver throws exception when executed dynamically by reflection.","## Meta - OS:   Windows 10 Enterprise (64 bit) Selenium Version:   Selenium.WebDriver.3.11.0 Selenium.WebDriver.ChromeDriver.2.37.0 Browser:   Chrome Browser version 65.0.3325.181（Official Build）(64 bit)  .NET Framework： version 4.6.1 MSTest.TestFramework.1.2.0 MSTest.TestAdapter.1.2.0  ## Expected Behavior - Test method equiped with chrome driver should work when it is invoked by dotNet reflection.  ## Actual Behavior - It throws System.InvalidOperationException:  Exception message is as follows. disconnected: unable to connect to renderer     (Session info: chrome=65.0.3325.181)     (Driver info: chromedriver=2.31.488763   ## Steps to reproduce - Please extract attachment file in any arbitrary folder, then visual studio solution 'TrialWebTestForInspection.sln' will appear.  [TrialWebTestForInspection.zip](https://github.com/SeleniumHQ/selenium/files/1858453/TrialWebTestForInspection.zip)  The solution consists of two projects, ""TrialWebUnitTest"" and ""TrialWebUnitTestRunner"".  The first one ""TrialWebUnitTest"" is MS Unit Test, and it contains 3 test methods.  Each of them a very simple and they just launch webdriver-corresponding browser and navigate to Selenium HQ site.  The test method is like as follows. ``` [TestMethod] public void NavigateToSeleniumHQByChrome() { 	string TargetUrl = ""https://www.seleniumhq.org/projects/webdriver/""; 	this.driver = new ChromeDriver(); 	driver.Manage().Window.Size = new System.Drawing.Size(1000, 800); //  System.InvalidOperationException:   disconnected: unable to connect to renderer     (Session info: chrome=65.0.3325.181)     (Driver info: chromedriver=2.31.488763   -------- I'd like to know,  if it is a bug of current Chrome driver version, or it is a part of specification. Then I'd like to know, if there is a way to avoid this problem.  What I'm afraid of is the possibility that IWebDriver specification originally does not support correct action whent it is run by reflection.","closed","","TrailRunner-MF","2018-03-29T03:16:13Z","2019-08-16T07:10:02Z"
"","5175","Since standalone 3.8.0.jar logging to file does not work","## Meta - OS:   Windows 10 64-bit Selenium Version:   selenium-server-standalone-3.8.1.jar Browser:   Firefox Nightly Browser Version:   59.0a1 (2017-12-04) (64-Bit)  ## Expected Behavior - Print log to file  ## Actual Behavior - Does not print log to file and do not create a file  ## Steps to reproduce - Start the standalone server from CLI `java -jar selenium-server-standalone-3.8.1.jar -enablePassThrough false -log test.txt`  With java -jar selenium-server-standalone-3.7.1.jar it works.","closed","R-awaiting answer,","q-jack","2017-12-06T09:31:14Z","2019-08-16T22:09:35Z"
"","5439","Using sendKeys on IEDriverServer with requireWindowFocus option set to true leads to unpredictable results","## Meta - OS:   Windows 10 1709 Selenium Version:  3.8.0 Java, IEDriverServer.exe 3.8.0 Browser:  Internet Explorer Browser Version:  11.194.16299.0 requireWindowFocus options is set to **true**  ## Expected Behavior - Value typed into input is the same as value that were typing ## Actual Behavior - Unpredictable results of typing ## Steps to reproduce - ```     @DataProvider     public Object[][] textProvider() { 	return new Object[][] { { ""all lowercase text"" }, { ""ALL UPPERCASE TEXT"" }, { ""Mixed Text"" } };     }      @Test(dataProvider = ""textProvider"")     public void typeTypeIntoInputTest(String text) throws InterruptedException { 	WebElement element = driver.findElement(By.tagName(""input"")); 	element.click(); 	element.clear(); 	Thread.sleep(1500); 	element.sendKeys(text);  	String value = element.getAttribute(""value""); 	Assert.assertEquals(value, text); } ``` You can find the whole code of test to reproduce the issue in my repo: https://github.com/doctordrue/selenium-issues/blob/master/src/test/java/com/doctordrue/java/selenium/tests/issues/ie/send_keys/SendKeysIEDriverIssue.java IEDriverServer log attached: [IEServerlog.log](https://github.com/SeleniumHQ/selenium/files/1695343/IEServerlog.log)","closed","D-IE,","doctordrue","2018-02-05T13:41:25Z","2019-08-16T12:10:00Z"
"","5168","Driver wait until.TextIs is not working","## Meta - OS:   Windows 10 Selenium-webdriver Version:   3.6.0 Using the NodeJS implementation Browser:   Google Chrome  Browser Version:   Version 62.0.3202.94 (Official Build) (64-bit)  ## Actual Behavior - I am trying to implement this feature [here](http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/until.html#elementTextIs). Like in the code below: ``` driver.wait(until.elementTextIs(By.css('body > div.site-wrapper > div > div  > div.inner.cover > p:nth-child(3) > a.btn.btn-lg.btn-primary'),'Sign  Up'),80000) ``` But I get this error: `Uncaught TypeError: element.getText is not a function     at C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\until.js:390:20     at C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\webdriver.js:938:14     at TaskQueue.execute_ (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:3084:14)     at TaskQueue.executeNext_ (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:3067:27)     at asyncRun (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2974:25)     at C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:668:7     at      at process._tickCallback (internal/process/next_tick.js:109:7) From: Task:      at pollCondition (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2195:19)     at C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2191:7     at new ManagedPromise (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:1077:7)     at ControlFlow.promise (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2505:12)     at C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2190:22     at TaskQueue.execute_ (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:3084:14)     at TaskQueue.executeNext_ (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:3067:27)     at asyncRun (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2927:27)     at C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:668:7     at  From: Task: Waiting until element text is     at scheduleWait (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2188:20)     at ControlFlow.wait (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\promise.js:2517:12)     at thenableWebDriverProxy.wait (C:\Users\bob\Documents\testElectron\node_modules\selenium-webdriver\lib\webdriver.js:934:29)     at file:///C:/Users/bob/Documents/testElectron/browser.js:39:9`  ## Expected Behavior - The driver should wait for the Text for the button to be what I specify.  ## Steps to reproduce - ``` driver.wait(until.elementTextIs(By.css('body > div.site-wrapper > div > div  > div.inner.cover > p:nth-child(3) > a.btn.btn-lg.btn-primary'),'Sign  Up'),80000) ``` Use the function above on any element.","closed","","ib0b","2017-12-05T10:27:44Z","2019-08-16T22:10:00Z"
"","5722","Downloading a file in new window in headless ChromeDriver","## Meta - OS:   Windows 10 Selenium Version:   Selenium.WebDriver v3.11.0 Selenium.WebDriver.ChromeDriver v2.37.0 Browser:   Headless ChromeDriver  ## Expected Behavior - Attempting to download a file using a headless ChromeDriver. The website being ""driven"" opens a new window on button click, which then triggers a download of a CSV file.  ## Actual Behavior - ``` var submitBtn = _driver.GetById(""downloadSubmitBtn""); submitBtn.Click(); ``` This does open a new Window. However, that window is not in focus in the ChromeDriver. If I switch to the Window, I get an error. There is no file downloaded to the default download directory. The following user preferences are set: ``` var downloadDirectory = ""C:\\Temp""; var chromeOptions = new ChromeOptions(); chromeOptions.AddArguments(new List() { ""headless"" }); chromeOptions.AddUserProfilePreference(""download.default_directory"", downloadDirectory); chromeOptions.AddUserProfilePreference(""download.prompt_for_download"", false); chromeOptions.AddUserProfilePreference(""disable-popup-blocking"", ""true""); chromeOptions.AddUserProfilePreference(""block_third_party_cookies"", true);  return new ChromeDriver(chromeOptions); ``` Running the same code in *not* headless mode does open a new window, which does successfully down the file to the specified default directory (using same user profile preferences as above).   ## Steps to reproduce - Page is unfortunately behind authentication and cannot be linked to directly.","closed","","Dejital","2018-04-02T17:28:59Z","2019-08-14T09:10:01Z"
"","4840","Failed to start webdriver session with RemoteWebDriver","## Meta - OS:   Windows 10 Selenium Version:   Selenium 3.5.3 Browser:   Chrome 60 / Firefox 56   ## Expected Behavior - Browsers should be started and ready for testing  ## Actual Behavior - I can see the browsers are start up but it will be closed rapidly in the next second  ## Steps to reproduce - ### Source Code for FireFox  `             DesiredCapabilities capabilities = DesiredCapabilities.firefox();             System.setProperty(""webdriver.gecko.driver"", // path of geckodriver.exe)             FirefoxBinary binary = // path of the firefox.exe             FirefoxOptions options = new FirefoxOptions();             options.setBinary(binary);             options.setLogLevel(Level.ALL);             capabilities.setCapability(FirefoxOptions.FIREFOX_OPTIONS, options);             RemoteWebDriver driver = new RemoteWebDriver(url, capabilities) ` ### Log trace for Firefox C:\AutoBBM\project\grid\WebContent\WEB-INF\lib>java -Dwebdriver.gecko.driver=geckodriver.exe -jar selenium-server-standalone-3.5.3.jar -role node -nodeConfig nodeconfig.json 16:05:51.780 INFO - Selenium build info: version: '3.5.3', revision: 'a88d25fe6b' 16:05:51.790 INFO - Launching a Selenium Grid node 2017-10-10 16:05:55.752:INFO::main: Logging initialized @6630ms to org.seleniumhq.jetty9.util.log.StdErrLog 16:05:56.100 INFO - Driver class not found: com.opera.core.systems.OperaDriver 16:05:56.250 INFO - Driver provider class org.openqa.selenium.safari.SafariDriver registration is skipped:  registration capabilities Capabilities [{browserName=safari, version=, platform=MAC}] does not match the current platform WIN10 16:05:56.464 INFO - Using the passthrough mode handler 2017-10-10 16:05:56.656:INFO:osjs.Server:main: jetty-9.4.5.v20170502 2017-10-10 16:05:56.911:WARN:osjs.SecurityHandler:main: ServletContext@o.s.j.s.ServletContextHandler@32c726ee{/,null,STARTING} has uncovered http methods for path: / 2017-10-10 16:05:56.974:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@32c726ee{/,null,AVAILABLE} 2017-10-10 16:05:57.115:INFO:osjs.AbstractConnector:main: Started ServerConnector@4839623b{HTTP/1.1,[http/1.1]}{0.0.0.0:5555} 2017-10-10 16:05:57.154:INFO:osjs.Server:main: Started @8031ms 16:05:57.161 INFO - Selenium Grid node is up and ready to register to the hub 16:05:57.235 INFO - Starting auto registration thread. Will try to register every 5000 ms. 16:05:57.252 INFO - Registering the node to the hub: http://localhost:4444/grid/register 16:05:57.863 INFO - The node is registered to the hub and ready to use 2017-10-10 16:06:29.919:INFO:osjshC.ROOT:qtp1041109062-22: org.openqa.selenium.remote.server.WebDriverServlet-1838ccb8: Initialising WebDriverServlet 16:06:30.189 INFO - Binding default provider to: org.openqa.selenium.chrome.ChromeDriverService 16:06:30.210 INFO - Found handler: org.openqa.selenium.remote.server.BeginSession@507bee15 16:06:30.238 INFO - /session: Executing POST on /session (handler: BeginSession) 16:06:30.398 INFO - Capabilities are: Capabilities {acceptInsecureCerts=true, browserName=firefox, moz:firefoxOptions={args=[], log={level=trace}, binary=C:\AutoBBM\project\build-au..., prefs={}, }, } 16:06:30.444 INFO - Capabilities {acceptInsecureCerts=true, browserName=firefox, moz:firefoxOptions={args=[], log={level=trace}, binary=C:\AutoBBM\project\build-au..., prefs={}, }, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) 16:06:30.506 INFO - Capabilities {acceptInsecureCerts=true, browserName=firefox, moz:firefoxOptions={args=[], log={level=trace}, binary=C:\AutoBBM\project\build-au..., prefs={}, }, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) 16:06:30.558 INFO - Capabilities {acceptInsecureCerts=true, browserName=firefox, moz:firefoxOptions={args=[], log={level=trace}, binary=C:\AutoBBM\project\build-au..., prefs={}, }, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 1507622791017   geckodriver     INFO    geckodriver 0.18.0 1507622791080   geckodriver     INFO    Listening on 127.0.0.1:27773 1507622791551   geckodriver::marionette INFO    Starting browser C:\AutoBBM\project\build-auto\browsers\firefox\56\Mozilla Firefox\firefox.exe with args [""-marionette""] 1507622792448   addons.xpi      WARN    Error parsing extensions state: [Exception... ""Component returned failure code: 0x80520012 (NS_ERROR_FILE_NOT_FOUND) [amIAddonManagerStartup.readStartupData]""  nsresult: ""0x80520012 (NS_ERROR_FILE_NOT_FOUND)""  location: ""JS frame :: resource://gre/modules/addons/XPIProvider.jsm :: loadExtensionState :: line 1554""  data: no] Stack trace: loadExtensionState()@resource://gre/modules/addons/XPIProvider.jsm:1554 < getInstallState()@resource://gre/modules/addons/XPIProvider.jsm:1589 < checkForChanges()@resource://gre/modules/addons/XPIProvider.jsm:3109 < startup()@resource://gre/modules/addons/XPIProvider.jsm:2188 < callProvider()@resource://gre/modules/AddonManager.jsm:269 < _startProvider()@resource://gre/modules/AddonManager.jsm:739 < startup()@resource://gre/modules/AddonManager.jsm:906 < startup()@resource://gre/modules/AddonManager.jsm:3090 < observe()@jar:file:///C:/AutoBBM/project/build-auto/browsers/firefox/56/Mozilla%20Firefox/omni.ja!/components/addonManager.js:65 1507622793646   geckodriver::marionette TRACE     connection attempt 0/600 1507622793708   Marionette      DEBUG   Received observer notification ""profile-after-change"" 1507622794079   Marionette      DEBUG   Received observer notification ""command-line-startup"" 1507622794079   Marionette      INFO    Enabled via --marionette 1507622795757   geckodriver::marionette TRACE     connection attempt 1/600 1507622797864   geckodriver::marionette TRACE     connection attempt 2/600 Unable to read VR Path Registry from C:\Users\I073397\AppData\Local\openvr\openvrpaths.vrpath [Parent 5068] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 Unable to read VR Path Registry from C:\Users\I073397\AppData\Local\openvr\openvrpaths.vrpath [Child 10324] WARNING: pipe error: 109: file z:/build/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 346 1507622798893   Marionette      DEBUG   Received observer notification ""sessionstore-windows-restored"" 1507622799434   Marionette      DEBUG   Setting recommended pref app.update.auto to false 1507622799436   Marionette      DEBUG   Setting recommended pref app.update.enabled to false 1150756027267292979944736       geckodriv9e     rM:a:rmiaornieottnee    tDtEeB  UDGE    BSUeGt  tCionngn ercetceodm mteon dMeadr iporneeft tteo on olkit.cosmeticAnimations.enabled to false 1507622799441   Marionette      DEBUG   Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false l1507o6c2a2l7h9o9s4t4:2 6M1a8r2i2o 1507622799776   geckodriver::marionette TRACE    [0,1,""newSession"",7{7""6a   cgceecpktoIdnrsievceurr:e:Cmearrtiso""n:ettrtuee ,T""RbArCoEwserName"":""firefox"",""capabilities"":{""desiredCapabilities"":{""acceptInsecureCerts"":true,""browserName"":""firefox""}}}]         -> 163:[0,1,""newSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox"",""capabilities"":{""desiredCapabilities"":{""acceptInsec1507622799969        Marionette      CONFIG  Matched capabilities: {""browserName"":""firefox"",""browserVersion"":""56.0"",""platformName"":""windows_nut"",r""epClearttfso""r:mtVreures,i""obnr""o:w""s1e0r.N0a""m,e""""p:a""gfeiLroeafdoSxt""r}a}t}e]g y"":""normal"",""acceptInsecureCerts"":true,""timeouts"":{""implicit"":0,""pageLoad"":300000,""script"":30000},""rotatable"":false,""specificatio1507622800422       geckodriver::marionette TRACE    [0,2,""quit"",{""flags"":[""eForceQuit""]}] 1507622803017   geckodriver::marionette TRACE   -> 37:[0,2,""quit"",{""flags"":[""eForceQuit""]}] 1507622803021   Marionette      INFO    New connections will no longer be accepted 1507622803242   Marionette      TRACE   0  GET /shutdown 1507622803669   webdriver::server       DEBUG","closed","R-awaiting answer,","adam-zjy","2017-10-10T09:07:45Z","2019-08-17T05:09:40Z"
"","5700","Selenium python binding throwing wrong exception for stale element in IE","## Meta - OS:   Windows 10 Selenium Version:   IEDriverServer: 3.11.1 Python bindings: 3.11.0 Browser:   Internet Explorer 10/11  Browser Version:   Internet Explorer 10/11  ## Expected Behavior - StaleElementReferenceException: Message: Element is no longer valid  ## Actual Behavior - InvalidArgumentException: Message: Element is no longer valid  ## Steps to reproduce - Access a stale element in IE 10/11  ## Traceback: ```   File ""C:\Users\buibot00\venv\bb\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 351, in find_element_by_xpath     return self.find_element(by=By.XPATH, value=xpath)   File ""C:\Users\buibot00\venv\bb\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 653, in find_element     {""using"": by, ""value"": value})['value']   File ""C:\Users\buibot00\venv\bb\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 628, in _execute     return self._parent.execute(command, params)   File ""C:\Users\buibot00\venv\bb\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""C:\Users\buibot00\venv\bb\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) InvalidArgumentException: Message: Element is no longer valid ```","closed","D-IE,","PhilippSelenium","2018-03-28T09:24:01Z","2019-08-16T07:09:47Z"
"","5591","TypeError: Cannot read property 'start' of null starting up edge driver","## Meta - OS:   Windows 10 Selenium Version:   4.0.0-alpha.1 Browser:   Edge 14.14393 Browser Version:   14.14393  ## Expected Behavior - Edge starts up ok using the following code:   var edge = require('selenium-webdriver/edge');   var edgeCaps = new edge.Options();   edgeCaps.set('port','55555')   return new webdriver.Builder()   .withCapabilities(edgeCaps)   .build(); ## Actual Behavior - Get the following error on .build() ""TypeError: Cannot read property 'start' of null""  ## Steps to reproduce - Running using     node v8.9.3 and cucumber 4.0.0 using ide VSCode in debug mode.  Tracked the problem down to createSession in edge.js Changing line 200 / 201: ```   static createSession(options, service = getDefaultService()) {     let client = service.start().then(url => new http.HttpClient(url)); ```  To: ```   static createSession(options, opt_serviceExecutor) {     let service = opt_serviceExecutor || getDefaultService();     let client = service.start().then(url => new http.HttpClient(url)); ```  I have attached an example project that can be run using the above config, that should reproduce the error. [EdgeIssue.zip](https://github.com/SeleniumHQ/selenium/files/1797437/EdgeIssue.zip)","closed","C-nodejs,","lynseyp","2018-03-09T15:45:29Z","2021-09-05T08:10:40Z"
"","5547","Unable to create new service: ChromeDriverService - Driver info: driver.version: unknown (InsecureCertificate)","## Meta - OS:   Windows 10 Selenium Version:   3.9.1 Browser:   Chrome  ## Expected Behavior - get IWebDriver of already opened Chrome browser  ## Actual Behavior - Exception  ## Steps to reproduce - hub: java -jar selenium-server-standalone-3.9.1.jar -role hub -port 4445 node: java -jar selenium-server-standalone-3.9.1.jar -role node -hub http://localhost:4445/grid/register  ![image](https://user-images.githubusercontent.com/7511228/36772540-017f1982-1c56-11e8-872f-7b13977c9197.png)  ![image](https://user-images.githubusercontent.com/7511228/36772604-285b27bc-1c56-11e8-8712-e74acfd97f7e.png)  In Visual Studio I have:  IWebDriver driver = new RemoteWebDriver(new System.Uri(""http://localhost:4445/wd/hub""), new ChromeOptions());  but I get the following Exception:  Unable to create new service: ChromeDriverService Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'V121081', ip: '10.138.121.81', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_66' Driver info: driver.version: unknown (InsecureCertificate)  I have also tried with FirefoxOptions, but same result:  Unable to create new service: GeckoDriverService Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'V121081', ip: '10.138.121.81', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_66' Driver info: driver.version: unknown (InsecureCertificate)  what did I do wrong?  Thanks a lot.","closed","C-remote,","ayasha88","2018-02-28T06:09:51Z","2019-08-15T23:09:37Z"
"","5511","Selenium.Support.StrongNamed should depend on Selenium.WebDriver.StrongNamed instead of Selenium.WebDriver","## Meta - OS:   Windows 10 Selenium Version:   3.9.1   ## Expected Behavior The package Selenium.Support.StrongNamed should depend on Selenium.WebDriver.StrongNamed  ## Actual Behavior The package Selenium.Support.StrongNamed depends on Selenium.WebDriver  ## Steps to reproduce - Download strong signed packages from http://selenium-release.storage.googleapis.com/index.html?path=3.9/ and reference the Selenium.Support.StrongNamed package in net core project that is strong named. Building this project causes the build error.  `Referenced assembly 'WebDriver, Version=3.9.1.0, Culture=neutral, PublicKeyToken=null' does not have a strong name.`","closed","C-dotnet,","justkao","2018-02-19T15:27:47Z","2019-08-16T10:10:00Z"
"","5509","How to execute a script before page loaded?","## Meta - OS:   Windows 10 Selenium Version:   3.9 Browser:   Chrome  Hi , I want to execute scripts before page loaded by ChromeDriver. Could the selenium have any function like [the Page.onInitialized of PhantomJS](https://github.com/SeleniumHQ/selenium/pull/2331)?  Thanks","closed","","NuclearGear","2018-02-18T16:22:15Z","2019-08-16T13:09:55Z"
"","5628","Send_key is not inputting  string correctly.","## Meta - OS:   Windows 10 Selenium Version:   3.8.1 Browser:   Chrome   Browser Version:   ChromeDriver 2.35.528161   ## Expected Behavior - given string str = ""12121980"" the text box auto-formats input into date format Text box shall populate with ""12/12/1980""  ## Actual Behavior - Text box populate with varying results ""12/12/9108"" or ""12/12/8091"" or ""1/2/1920"" or etc. pretty random   ## Steps to reproduce - I'm coding in Python.   ``` def test_SignUp_Funnel():     delay =10      numba = ''.join(random.choice(string.octdigits + string.digits) for _ in range(5))           firstName = ""autoQA"" + numba     lastName  = ''.join(random.choice(string.ascii_letters ) for _ in range(5))     signUpEmail = firstName + ""@test.com""     signupPassword =""12345678""         birthday = ""12/12/1980""          driver = webdriver.Chrome()     driver.maximize_window()     driver.get(""https://website.com/"")             SignUp = driver.find_element_by_partial_link_text(""Sign Up Now"")     SignUp.click()          try:           fName = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.NAME, 'firstName')))         fName.send_keys(firstName)                    lName = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.NAME, 'lastName')))         lName.send_keys(lastName)                    emailField = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.NAME, 'email')))         emailField.send_keys(signUpEmail)                    passField = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.NAME, 'password')))         passField.send_keys(signupPassword)                    submitButton = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.XPATH, '//*[@id=""customer-create""]/div/div/div/button')))         submitButton.click()          except TimeoutException:         print(""sign up failure part 1 - basic info"");      try:           ssnPartial = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.ID, 'ssn-partial')))         ssnPartial.send_keys(ssn4)                             birth = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.ID, 'birth-date')))         birth.send_keys(birthday)     ###failure input of string into text box is always incorrect and result of input is not consistent.               submitButton = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.XPATH, '//*[@id=""identity-update""]/div/div/div/button')))         submitButton.click()              except TimeoutException:         print(""sign up failure part 2 - identity"");       driver.quit()","closed","","pqtrang","2018-03-15T23:46:32Z","2019-08-16T10:09:38Z"
"","5316","Get [WinError 6] The handle is invalid in Windows 10","## Meta - OS:   Windows 10 Selenium Version:   3.8.0 Browser:   PhantomJS Browser Version:   2.1  ## Expected Behavior - I wrote a pyqt4=4.11.4 application and use pyinstaller=3.3 to make a windows executable. The application use selenium and PhantomJS to browse website and do stuff. It worked perfectly in windows 7. ## Actual Behavior - `Traceback (most recent call last):   File ""test.py"", line 37, in function   File ""site-packages\selenium\webdriver\phantomjs\webdriver.py"", line 52, in __init__   File ""site-packages\selenium\webdriver\common\service.py"", line 74, in start   File ""subprocess.py"", line 640, in __init__   File ""subprocess.py"", line 850, in _get_handles OSError: [WinError 6] The handle is invalid`  ## Steps to reproduce - ``` import sys from PyQt4 import QtGui import os from selenium import webdriver  class Example(QtGui.QWidget):     def __init__(self):         super(Example, self).__init__()         self.initUI()              def initUI(self):         btn = QtGui.QPushButton('Get html', self)         btn.clicked.connect(self.function)         self.edit = QtGui.QPlainTextEdit()                  layout = QtGui.QVBoxLayout()         layout.addWidget(btn)         layout.addWidget(self.edit)         self.setLayout(layout)                  self.setGeometry(300, 300, 300, 500)          self.show()              def function(self):         url = 'https://www.google.com'         executable_path = os.getcwd() + '\\phantomjs.exe'         browser = webdriver.PhantomJS(executable_path=executable_path)         browser.get(url)         html = browser.page_source         browser.quit()         self.edit.setPlainText(html)         return def Start():     global window     window = Example()     window.show()  if __name__ == '__main__':     sys.stderr=open('err.log','w')     app=QtGui.QApplication.instance()     if not app:        app = QtGui.QApplication(sys.argv)             Start()     sys.exit(app.exec_()) ```   I actually found a workaround based on https://stackoverflow.com/questions/40108816/python-running-as-windows-service-oserror-winerror-6-the-handle-is-invalid. In Line 72 of service.py, at the end add stdin, `self.process = subprocess.Popen(cmd, env=self.env,                                             close_fds=platform.system() != 'Windows',                                             stdout=self.log_file, stderr=self.log_file, stdin=self.log_file)` since I thought the log file won't mess the package. I guess there should be more appropriate way to add stdin. After this, it works find in windows 10.","closed","C-py,","hazardary","2018-01-10T07:03:32Z","2019-08-16T18:09:39Z"
"","5056","unable to create RemoteWebDriver - firefox","## Meta - OS:   Windows 10 Selenium Version:   3.7.0 Browser:   Firefox  -->  Browser Version:   56/57  ## Expected Behavior - RemoteWebDriver creates  ## Actual Behavior - Firefox starts but there is nothing in URL field and hanging up ~ 45 seconds and fails.  ## Steps to reproduce - Im using selenium grid and following code to create driver and run mu tests.    		capabilities = DesiredCapabilities.firefox();  		capabilities.setCapability(""marionette"", false);  		RemoteWebDriver driver = new RemoteWebDriver(new URL(remoteUrl), capabilities);    where _remoteUrl_ is ""http://172.16.12.10:4444/wd/hub"" and capabilities getting: _Capabilities {acceptInsecureCerts: true, browserName: firefox, marionette: false, platform: WIN10, version: ANY}_  my tests are failing on the line RemoteWebDriver driver = new.. after 45 seconds with following error:  ``` org.openqa.selenium.WebDriverException: Timed out waiting 45 seconds for Firefox to start. Build info: version: '3.7.0', revision: '2321c73', time: '2017-11-02T22:12:12.411Z' System info: host: 'HD-SELENIUM', ip: '172.16.12.210', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_74' Driver info: driver.version: unknown Command duration or timeout: 48.15 seconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) 	at net.emisia.puttee.test.DriverFactory.createRemoteWebDriver(DriverFactory.java:505) 	at net.emisia.puttee.test.DriverFactory.createRemoteDriver(DriverFactory.java:452) 	at net.emisia.puttee.test.DriverFactory.createDriver(DriverFactory.java:101) 	at net.emisia.puttee.test.AbstractUITest.loadDriver(AbstractUITest.java:229) 	at net.emisia.puttee.test.AbstractUITest$1.starting(AbstractUITest.java:337) 	at org.junit.rules.TestWatcher.startingQuietly(TestWatcher.java:108) 	at org.junit.rules.TestWatcher.access$000(TestWatcher.java:46) 	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:53) 	at org.junit.rules.RunRules.evaluate(RunRules.java:20) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) ```","closed","","mstankovic86","2017-11-15T08:32:50Z","2019-08-17T01:09:36Z"
"","5044","ImplicitWait c# does not wait for element based on specified TimeSpan","## Meta - OS:   Windows 10 Selenium Version:   3.7.0 Browser:   Chrome  Browser Version:   62.0  ## Expected Behavior - _driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(5); This will wait for up to 5 seconds for an element to appear before throwing a NoSuchElementException. ## Actual Behavior - It doesn't wait at all, automatically throws NoSuchElementException.  ## Steps to reproduce -  ```     [TestClass]     [TestCategory(""Implicit waits"")]     public class ImplicitWait     {         private IWebDriver _driver;         private const string URI = ""https://the-internet.herokuapp.com/dynamic_loading/1"";         [TestInitialize]         public void Setup()         {              var outPutDirectory = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);              _driver =  new ChromeDriver(outPutDirectory);         }         [TestCleanup]         public void Teardown()         {             _driver.Close();             _driver.Quit();         }          private void TryFind()         {             //go to a url that contains a dynamically loading page element             _driver.Navigate().GoToUrl(URI);             //click the start button             _driver.FindElement(By.TagName(""button"")).Click();             //find the element that has the text Hello World             var text = _driver.FindElement(By.XPath("".//*[contains(text(),'Hello World!')]""));             //click on the text             text.Click();         }          [TestMethod]         public void DynamicallyLoadingElementsTestFailure_FixedImplicitly()         {             _driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(5);             TryFind();         }     } } ```","closed","C-dotnet,","nadvolod","2017-11-11T15:19:49Z","2019-08-16T21:09:42Z"
"","4888","Text property of IWebElement returns 2 different values in Chrome and Firefox","## Meta - OS:   Windows 10 Selenium Version:   3.6.0 Browser:   Firefox, Chrome  Browser Version:   ChromeDriver 2.33 and GeckoDriver 0.19  ## Expected Behavior - Text property should returns the same values ## Actual Behavior - Text property returns different values ## Steps to reproduce - I have following HTML code  ```  Type --   ```  When I get Text property for label element ```WebDriverManager.Driver.FindElement(By.CssSelector(""#Type_label"")).Text;  ``` I get following Chrome: ""--"" Firefox: ""Type\r\n--""   Why different drivers returns different outputs by the same code?","closed","R-awaiting answer,","algot","2017-10-17T11:23:51Z","2019-08-17T03:09:35Z"
"","4832","Python method ActionChains.pause implemented incorrectly","## Meta - OS:   Windows 10 Selenium Version:   3.6.0 Browser:   Chrome  Browser Version:   61.0.3163.100 (Official Build) (64-bit)  ## Expected Behavior - ActionChains.pause to work as described in documentation.  ## Actual Behavior - Traceback.  ## Steps to reproduce - The following code:  ``` from selenium import webdriver from selenium.webdriver import ActionChains from selenium.webdriver.common.keys import Keys  driver = webdriver.Chrome() driver.get(""http://www.google.com"") elem = driver.find_element_by_name(""q"") actions = ActionChains(driver) actions.key_down(Keys.CONTROL, elem) actions.pause(1) actions.key_up(Keys.CONTROL, elem) actions.perform() driver.close() ```  generates the following error:  > Traceback (most recent call last): >   File ""C:/Users/hugod/PycharmProjects/action_chain_pause/main"", line 108, in  >     actions.perform() >   File ""C:\Users\hugod\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\common\action_chains.py"", line 83, in perform >     action() >   File ""C:\Users\hugod\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\common\action_chains.py"", line 323, in  >     time.sleep(seconds) >   File ""C:\Users\hugod\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 306, in execute >     response = self.command_executor.execute(driver_command, params) >   File ""C:\Users\hugod\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 459, in execute >     command_info = self._commands[command] > KeyError: None >  > Process finished with exit code 1  I found issue #4795 while looking for bug reports. The resulting traceback is slightly different though and I wasn't sure if it has the same root cause or is the same issue altogether. For me, replacing this code (in action_chains.py):      def pause(self, seconds):         if self._driver.w3c:             self.w3c_actions.pointer_action.pause(self, seconds)             self.w3c_actions.key_action.pause(self, seconds)         else:             self._actions.append(lambda: self._driver.execute(                 time.sleep(seconds)             ))         return self  with this:      def pause(self, seconds):         if self._driver.w3c:             self.w3c_actions.pointer_action.pause(self, seconds)             self.w3c_actions.key_action.pause(self, seconds)         else:             self._actions.append(lambda:                  time.sleep(seconds)             )         return self  fixed the issue. No traceback and the behaviour looks as desired (a pause between actions in the action chain execution).  Apologies if this is a duplicate.","closed","","hugodcpires","2017-10-09T18:00:12Z","2019-08-17T08:09:53Z"
"","4958","Undisposed ChromeDriverService and browser process on exception in RemoteWebDriver constructor","## Meta - OS:   Windows 10 Selenium Version:   3.6.0  Browser:   Chrome  Browser Version:   irrelevant  ## Expected Behavior - [This](https://github.com/SeleniumHQ/selenium/blob/fa067c7/dotnet/src/webdriver/Chrome/ChromeDriver.cs#L119) and [this](https://github.com/SeleniumHQ/selenium/blob/fa067c7/dotnet/src/webdriver/Chrome/ChromeDriver.cs#L77) constructor create the `IDisposable` `ChromeDriverService`, so, if any exception happens later on in the constructor, it should be disposed. (I have only checked Chrome, but if this is an issue with other browser drivers too it would be worth to fix them all at once)  ## Actual Behavior - Any problem during the start of the session (in our case, intermittent occurrence of [this ChromeDriver problem](https://github.com/SeleniumHQ/selenium/issues/4897)) causes the browser process to be orphaned and reserve resources such as port and memory.","closed","D-chrome,","slawomir-brzezinski-at-interxion","2017-10-25T16:55:09Z","2021-11-12T00:06:54Z"
"","4997","Object reference not set to an instance of an object.    at OpenQA.Selenium.Interactions.Actions.Perform()","## Meta - OS:   Windows 10 Selenium Version:   3.6 Browser:   Chrome  Browser Version:   Version 62.0.3202.75 (Official Build) (64-bit)  ## Expected Behavior - When performing an Action i'd expect it to work  ## Actual Behavior - Throws an error:System.NullReferenceException : Object reference not set to an instance of an object.    at OpenQA.Selenium.Interactions.Actions.Perform() when .Perform is called   ## Steps to reproduce - Using C# bindings create a simple test              var actions = new Actions(browser);             actions.MoveToElement(element).Build();             actions.Perform();  ## Notes -  I can get this to work with 3.6 at all.","closed","C-dotnet,","Festivejelly","2017-11-02T11:11:11Z","2019-08-16T23:10:03Z"
"","5237","Double Click with IEDriver 3.8.0","## Meta - OS:   Windows 10 Selenium Version:   3.5.3 Browser:   Internet Explorer - IEDriver 3.8.0  Hi, I'm running an automated script and I want to perform a doubleClick with selenium but with the new driver the action is not possible. It works with IEDriver 3.3.0. Can anyone help?   Browser Version:   11.125  ## Actual Behavior -  org.openqa.selenium.UnsupportedCommandException: mouseMoveTo Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:54:15.039Z' System info: host: 'NELT753', ip: '10.155.129.53', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_141' Driver info: driver.version: unknown Command duration or timeout: 162 milliseconds Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'xxxx', ip: 'xxxx', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.7.0_79' Session ID: da5a82f4-b18f-49d9-b3ae-f20d2d46a5d6 Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{timeouts={pageLoad=300000, implicit=0, script=30000}, platform=ANY, browserVersion=11, platformName=windows, browserName=internet explorer, proxy={}, se:ieOptions={ignoreProtectedModeSettings=true, elementScrollBehavior=0, ignoreZoomSetting=true, enablePersistentHover=false, requireWindowFocus=false, ie.ensureCleanSession=false, initialBrowserUrl=http://localhost:33165/, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.fileUploadDialogTimeout=3000, ie.browserCommandLineSwitches=}, setWindowRect=true, unhandledPromptBehavior=dismiss, pageLoadStrategy=normal, acceptInsecureCerts=false}]  ## Steps to reproduce -  try{      WebElement element = driver.findElement(By.xpath(""xapth""));      Actions action = new Actions(driver);      action.doubleClick(element).perform(); }catch(Exception e) {      LOGGER.error(e.getMessage(), e); }","closed","","t-dias","2017-12-20T15:34:09Z","2019-08-16T19:10:00Z"
"","4980","Unable to add cookie","## Meta - OS:   Windows 10 Selenium Version:   3.5.3 Browser:   Chrome  Browser Version:   62.0.3202.75 (Official Build) (64-bit)  ## Expected Behavior - Manually add cookie after starting webdriver.  ## Actual Behavior - No cookie is being added to the browser.  There is no error or stacktrace info.  ## Steps to reproduce - 1) Start a webdriver instance WebDriver chrome = new ChromeDriver();  2) Create the cookie Cookie apiCookie = new Cookie.Builder(""my_cookie"", ""my_value""))             .domain(""mydomain"")             .isHttpOnly(false)             .isSecure(true)             .path(""/"")             .build();  3) Add the cookie chrome.manage().addCookie(apiCookie);  When running this code after chrome version 62 the cookie is no longer added.  It also appears that when running the default function the cookie is added.  It is only when you add the options that this appears to fail (i.e. domain, isHttpOnly, etc).","closed","R-awaiting answer,","jwerkau","2017-10-30T16:51:07Z","2019-08-17T04:09:54Z"
"","4877","WebDriverError: java.net.BindException: Address already in use: connect","## Meta - OS:   Windows 10 Selenium Version:   3.5.0 Browser:   Google Chrome 61  IT WOULD BE GREAT IF THE EXCEPTION HAD AT LEAST THE PORT NUMBER WHICH IT ATTEMPTS TO BIND TO. THIS WOULD ELIMINATE THE GUESSWORK. THE 'ADDRESS ALREADY IN USE' WITHOUT DETAILS 'WHICH ADDRESS' IS BY ITSELF A TERRIBLE TERRIBLE EXAMPLE OF AN ERROR MESSAGE  ---      WebDriverError: java.net.BindException: Address already in use: connect       at WebDriverError (node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:27:5)       at Object.checkLegacyResponse (node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:639:15)       at parseHttpResponse (node_modules\protractor\node_modules\selenium-webdriver\http\index.js:538:13)       at client_.send.then.response (node_modules\protractor\node_modules\selenium-webdriver\http\index.js:472:11)       at ManagedPromise.invokeCallback_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:1379:14)       at TaskQueue.execute_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2913:14)       at TaskQueue.executeNext_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2896:21)       at asyncRun (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2820:25)       at node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:639:7       at process._tickCallback (internal/process/next_tick.js:109:7)   From: Task: WebDriver.findElements(By(css selector, [data-automation=""signin-button""]))       at WebDriver.schedule (node_modules\protractor\node_modules\selenium-webdriver\lib\webdriver.js:377:17)       at WebDriver.findElements (node_modules\protractor\node_modules\selenium-webdriver\lib\webdriver.js:926:22)       at node_modules\protractor\built\element.js:173:44       at ManagedPromise.invokeCallback_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:1379:14)       at TaskQueue.execute_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2913:14)       at TaskQueue.executeNext_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2896:21)       at asyncRun (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2775:27)       at node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:639:7       at process._tickCallback (internal/process/next_tick.js:109:7)Error       at ElementArrayFinder.applyAction_ (node_modules\protractor\built\element.js:461:27)       at ElementArrayFinder._this.(anonymous function) [as click] (node_modules\protractor\built\element.js:103:30)       at ElementFinder.(anonymous function) [as click] (node_modules\protractor\built\element.js:829:22)       at SignInPage.signIn (C:/code/lanternpay/aces.apps/Aces.Apps/Aces.Apps.UI.Tests/specs/providers-app/page-objects/signin.page.js:11:22)       at Context. (C:/code/lanternpay/aces.apps/Aces.Apps/Aces.Apps.UI.Tests/specs/providers-app/step-definitions/sign-in.steps.js:23:20)       at node_modules\protractor\node_modules\selenium-webdriver\testing\index.js:144:19       at new ManagedPromise (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:1082:7)       at controlFlowExecute (node_modules\protractor\node_modules\selenium-webdriver\testing\index.js:129:14)       at TaskQueue.execute_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2913:14)       at TaskQueue.executeNext_ (node_modules\protractor\node_modules\selenium-webdriver\lib\promise.js:2896:21)","closed","","dmitrynovik","2017-10-15T23:08:57Z","2021-09-05T08:35:55Z"
"","5803","Getting [1524111659.663][SEVERE]: Timed out receiving message from renderer: 300.000 error while running multiple test and laptop is in ideal conditions","## Meta - OS:   Windows 10 Selenium Version:   3.11.0 Browser:   Chrome   Browser Version:   65.0.3325.181 (Official Build)   ## Expected Behavior -  Working properly even thoughts laptop is in ideal conditions  ## Actual Behavior -  Some times selenium hang the browser and scripts stop working for 30 minutes to 2 hour.  ## Steps to reproduce - It happens some times. Not proper steps to reproduce.","closed","","denishm-ezdi","2018-04-19T04:51:08Z","2019-08-15T14:09:52Z"
"","5645","Cannot Bypass Addresses When Using Proxy","## Meta - OS:   Windows 10 Selenium Version:   3.11.0 Browser:   Chrome  Browser Version:   Version 65.0.3325.162  ## Expected Behavior - Can bypass addresses when using proxy  ## Actual Behavior - Receives `InvalidOperationException` unknown error: cannot parse capability: proxyfrom unknown error: 'noProxy' must be a string  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4...    ## Steps to reproduce - Using Selenium.Webdriver Nuget https://www.nuget.org/packages/Selenium.WebDriver/, the code below will throws exception  ```csharp OpenQA.Selenium OpenQA.Selenium.Chrome  void Main() { 	string ADVERT_PROXY_URL = ""someproxy:9111"";	 	var options = new ChromeOptions();	  	var optionsProxy = new Proxy { HttpProxy = ADVERT_PROXY_URL }; 	optionsProxy.AddBypassAddresses(""*.mydev.ds"");	 	options.Proxy = optionsProxy; 	 	var driver = new ChromeDriver(options); // Throws exception here } ```","closed","","robbytarigan","2018-03-20T10:23:04Z","2019-08-16T03:09:37Z"
"","5648","Cannot launch Standalone programmatically","## Meta - OS:   Windows 10 Selenium Version:   3.11 (cloned repository from last week) Browser:   None  Hi, I am trying to launch a Selenium Server Standalone instance programmatically. This is the code I am using:  ```          StandaloneConfiguration configuration = new StandaloneConfiguration();                 configuration.port = 5000;         configuration.debug = false;                 server = new SeleniumServer(configuration);                          log.info(""Launching Server on port "" + configuration.port);         if (server.boot())             log.info(""Server Launched OK"");         else             log.info(""Server could not be launched :("");  ```  I get an exception launched by Jetty log system that I can't get rid of:  ``` Testcase: testBrowser(LaunchSeleniumGridTest):	Caused an ERROR org.slf4j.helpers.MessageFormatter.arrayFormat(Ljava/lang/String;[Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple; java.lang.NoSuchMethodError: org.slf4j.helpers.MessageFormatter.arrayFormat(Ljava/lang/String;[Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple; 	at org.seleniumhq.jetty9.util.log.JettyAwareLogger.log(JettyAwareLogger.java:619) 	at org.seleniumhq.jetty9.util.log.JettyAwareLogger.info(JettyAwareLogger.java:314) 	at org.seleniumhq.jetty9.util.log.Slf4jLog.info(Slf4jLog.java:74) 	at org.seleniumhq.jetty9.util.log.Log.initialized(Log.java:192) 	at org.seleniumhq.jetty9.util.log.Log.getLogger(Log.java:310) 	at org.seleniumhq.jetty9.util.log.Log.getLogger(Log.java:300) 	at org.seleniumhq.jetty9.util.component.AbstractLifeCycle.(AbstractLifeCycle.java:35) 	at org.openqa.selenium.remote.server.SeleniumServer.boot(SeleniumServer.java:129) 	at LaunchSeleniumGridTest.testBrowser(LaunchSeleniumGridTest.java:86) ```   I am compiling the source code and it works if I go to a console and launch it by the standard **java -jar selenium.jar -port 5000**    In fact, I can even launch it from code if I use this code:  ```         String [] args = {""-port"", ""5000""};         GridLauncherV3 launcher = new GridLauncherV3(args);         launcher.launch();  ```   Not sure what's going on but I need to be able to launch and stop standalone instances within a program.  By the way, I am using **Java 1.8.0_131** on **Windows 10**  Thanks!","closed","","josmunpav","2018-03-20T18:49:35Z","2019-08-14T09:09:45Z"
"","5740","selenium 3.11 - JAVA (Multi-threading),Multiple browsers launch attempted Exceptions Observed","## Meta - OS:   Windows 10 Selenium Version:   3.11  Browser:    Internet Explorer,  Firefox, Opera, Chrome   Browser Version:     ## Expected Behavior - The program should launch all the browsers, open websites and perform operations intended. ## Actual Behavior - The program behaves inconsistently during opening of browsers, sometimes throwing errors and failing to launch browsers. Error log can be found below (for one sample run): Apr 09, 2018 12:09:21 AM org.openqa.selenium.remote.DesiredCapabilities chrome INFO: Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()` Test for the browser IE failed for website youtube Exceptionorg.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: InternetExplorerDriver Test for the browser chrome failed for website google Exceptionorg.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: InternetExplorerDriver Test for the browser Internet Explorer failed for website google Test for the browser Opera failed for website google Exception observedorg.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: googleOperaDriver Exceptionorg.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: ChromeDriver Test for the browser Firefox failed for website google Exceptionorg.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:23410 Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z' System info: host: 'ADMIN-PC', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: FirefoxDriver   ## Steps to reproduce -  Launch separate thread for each browser operations as shown below:  Thread googleOpera = new Thread (new googleOperaDriver(),""GoogleOperaThread""); 		googleOpera.start(); 		Thread googleFirefox = new Thread (new googleFirefox(),""GoogleFirefoxThread""); 		googleFirefox.start(); 		Thread googleIE = new Thread (new googleInternetExplorer(),""GoogleIEThread""); 		googleIE.start(); 		Thread googleChrome = new Thread (new googleChrome(),""GoogleChromeThread""); 		googleChrome.start(); 		Thread youtubeIE= new Thread(new youtubeIE(),""YoutubeThread""); 		youtubeIE.start();","closed","R-awaiting answer,","SudeeptMohan","2018-04-08T18:52:37Z","2019-08-16T06:09:37Z"
"","5557","Click does nothing for a dynamic element within a frame","## Meta - OS:   Windows 10 Selenium Version:   3.0.1, RobotFramework 3.0, Python 2.7 Browser:   Internet Explorer Browser Version:   11.248.16299.0  ## Expected Behavior - Should be able to click on a dynamically enabled element within a frame. ## Actual Behavior - The click action shows as successful in the logs, but nothing actually happens.  ## Steps to reproduce - Below are screen shots  App/Frame undr test ![2018-03-01_0837](https://user-images.githubusercontent.com/20686626/36868111-308ac324-1d4c-11e8-8f09-ea6bba3a1703.png)  DOM ![2018-03-01_0832](https://user-images.githubusercontent.com/20686626/36868098-1d3acc38-1d4c-11e8-8746-b8eecc1a5281.png)  RobotFramework Log ![2018-03-01_1212](https://user-images.githubusercontent.com/20686626/36868151-52074bbc-1d4c-11e8-89ac-b3f430f0a682.png)  Code snippet ![2018-03-01_1236](https://user-images.githubusercontent.com/20686626/36868558-8d86ded6-1d4d-11e8-8112-28d01623a248.png)","closed","R-awaiting answer,","srigney","2018-03-01T20:43:01Z","2019-08-16T10:09:43Z"
"","4915","chooseOkOnNextConfirmation can not handle confirm dialog on onload stage","## Meta - OS:   Windows 10 Selenium Version:   2.53.1, IDE 2.9.1 Browser:   Firefox Browser Version:   31.0esr  ## Expected Behavior - On loaded page should be displayed True ## Actual Behavior - On loaded page displayed False ## Steps to reproduce - - unzip [page.zip](https://github.com/SeleniumHQ/selenium/files/1400924/page.zip) - IDE: chooseOkOnNextConfirmation - IDE: open page.html - Check a text on the page","closed","C-ide,","jonnyaih","2017-10-20T06:33:36Z","2019-08-17T06:09:56Z"
"","5494","Selenium version 2.53 can't locate element randomly","## Meta - OS:   Windows 10 Selenium Version:   2.53.0 Browser:   Chrome  We're using Slenium to do testing on SFDC site, we got issue element could not be found randomly. Is there any know issue or any solution to fix on this case?  Thanks","closed","","imnnquy","2018-02-14T09:07:46Z","2019-08-16T14:09:35Z"
"","5536","EventFiringWebDriver not working with Page Factory","## Meta - OS:   Windows 10 Selenium Version:   2.53 - 3.3 - 3.91 Browser:   Chrome Browser When trying to use the EventFiringWebDriver in c# using the pagefactory pattern and try and use the selenium Actions it errors with.   System.Reflection.TargetException : Object does not match target type.    at System.Reflection.RuntimeMethodInfo.CheckConsistency(Object target)    at System.Reflection.RuntimeMethodInfo.InvokeArgumentsCheck(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)    at OpenQA.Selenium.Support.PageObjects.WebDriverObjectProxy.InvokeMethod(IMethodCallMessage msg, Object representedValue)    at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)    at OpenQA.Selenium.ILocatable.get_Coordinates()    at OpenQA.Selenium.Interactions.MoveMouseAction.Perform()    at OpenQA.Selenium.Interactions.CompositeAction.Perform()    at TestSelenium.EventFireTest.EventFireError()  But when working with FindElements it works perfectly well, also have an issue using Execute Java Script not working in Page Factory.  See a very small test that has one working and one failing test.   Browser Version:   Version 63.0.3239.132  ## Expected Behavior -  Would expect the EventFireingWebDriver to not error and log to the console the control was found by Id as lst-ib  ## Actual Behavior -  Errors with Object does not match target type. as above  ## Steps to reproduce -  Attached small test that errors.  using System; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Interactions; using OpenQA.Selenium.Support.Events; using OpenQA.Selenium.Support.PageObjects;  namespace TestSelenium {     [TestFixture]     public class EventFireTest     {         [FindsBy(How = How.Id, Using = ""lst-ib"")] public IWebElement GoogleSearchBox;          private IWebDriver Driver { get; set; }         private EventFiringWebDriver firingDriver { get; set; }          [SetUp]         public void Setup()         {             Driver = new ChromeDriver();             firingDriver = new EventFiringWebDriver(Driver);             firingDriver.FindElementCompleted += LogEventFiringWebDriverOnFindElementCompleted;             firingDriver.Navigate().GoToUrl(new Uri(""http://google.co.uk""));         }          [Test]         public void EventFireError()         {             PageFactory.InitElements(firingDriver, this);                       // PageFactory Not Working              Actions act = new Actions(firingDriver);             act.MoveToElement(GoogleSearchBox).Build().Perform();         }          [Test]         public void EventFireWorking()         {             var GoogleSearchBox = firingDriver.FindElement(By.Id(""lst-ib""));    // FindElement Working                          Actions act = new Actions(firingDriver);             act.MoveToElement(GoogleSearchBox).Build().Perform();         }          [TearDown]         public void TearDown()         {             firingDriver?.Quit();         }          private void LogEventFiringWebDriverOnFindElementCompleted(object sender, FindElementEventArgs e)         {             Console.WriteLine(e.FindMethod);         }     } }","closed","C-dotnet,","garry-edmonds","2018-02-24T21:52:27Z","2019-08-16T08:09:34Z"
"","5573","Chromedriver 2.36 + Chrome 65 + Web driver 3.10.0 --disable-infobar stopped working","## Meta - OS:   Windows 10 Selenium Version:   2.36 Browser:   Chrome 65   ## Expected Behavior - Info bar with the following :"" Chrome is being controlled by automated machine"" should not appear !  ## Actual Behavior - Info bar appear!   ## Steps to reproduce - Chromedriver 2.36 + Chrome 65 + Web driver 3.10.0","closed","","vvmmvv","2018-03-07T09:13:39Z","2019-08-16T06:09:52Z"
"","5239","chromedriver working fine under cmd, powershell but crashes under ansicon (either cmd or powershell)","## Meta - OS:   Windows 10 Selenium Version:   2.34.522940 Browser:   Chrome Browser Version:   63.0.3239.84 (Official Build) (64-bit)  ## Expected Behavior - chromedriver runs as normal  ## Actual Behavior - ""chromedriver.exe has stopped working"" dialog no logs, nothing!  ## Steps to reproduce - from powershell/cmd.exe >ansicon >chromedriver  Can be reproduced using ""ansicon powershell"" instead","closed","","AtricoSoftware","2017-12-20T16:59:55Z","2019-08-16T20:09:37Z"
"","5501","Find element by does not properly scope x paths when applied to an element","## Meta - OS:   Windows 10 Selenium Version:        Browser:   Chrome  Browser Version:    Docker grid chrome node  ## Expected Behavior - when finding elements inside of an existing element using xpaths then the xpaths should not escape that element.  ## Actual Behavior - an or operator will escape depending on where it is placed  ## Steps to reproduce -  ```     ```  var div = Driver.FindElement(By.XPath(@""//div[@class='target']""); var icons = div.FindElements(By.XPath( ""//*[contains(@class,'a')] | //*[contains(@class,'b')]""));  var iconsworks = div.FindElements(By.XPath( ""//*[contains(@class,'a') | contains(@class,'b')]""));","closed","R-awaiting answer,","BasHamer","2018-02-15T18:50:04Z","2019-08-16T13:09:59Z"
"","5045","Unable to reference SelectElement class in C#","## Meta - OS:   Windows 10 Selenium Version:  3.7 Browser:   Firefox  Browser Version:   56.02 (64-bit)  ## Expected Behavior -  Writing a simple interaction with a website in C#, I'm intending to locate a Select element and then get all of it's possible values.  ``` using System; using System.Collections; using System.Collections.Generic; using OpenQA.Selenium; using OpenQA.Selenium.Firefox; using OpenQA.Selenium.Support.UI;  class GetData {     static void Main(string[] args)     {         using (IWebDriver driver = new FirefoxDriver())         {             //Notice navigation is slightly different than the Java version             //This is because 'get' is a keyword in C#             driver.Navigate().GoToUrl(""https://site-name.com/url"");             IWebElement element01 =driver.FindElement(By.XPath(""//*[@id='element-id']/select""));             SelectElement selectList = new SelectElement(element01);             IList options = selectList.Options;         }     } } ```  ## Actual Behavior -  I am unable to pull in SelectElement class into the namespace. I have issued ""using OpenQA.Selenium.Support.UI;"" but it doesn't work. I have used Visual Studio 2017 and vs Code to the same result. I have tried all supported frameworks .Net and .Net Core to the same result. Tried 3.6 to no avail. I have used JetBrains to disassemble webdriver.dll and I do see SelectElement class. So the program doesn't compile. For that matter I'm unable to reference any classes in OpenQA.Selenium.Support.UI  Please help to figure out how to pull this class into the namespace. Thank you in advance!  ## Steps to reproduce -  Use code above, install 3.7 version using NuGet and you will be able to get to this result.","closed","","thyclouds","2017-11-11T18:37:19Z","2019-08-17T03:09:39Z"
"","5223","Not able to create WebDriver due to NoSuchMethodError from org.openqa.selenium.net.UrlChecker.(UrlChecker.java:62)","## Meta - OS:   Windows 10  Selenium Version:   selenium-java-3.8.1  Browser:   Chrome, Firefox, Edge   Browser Version:   ChromeDriver (2.34), Firefox (gecko 0.19.1), Edge (release 16299)   ## Expected Behavior -  Able to create a default ChromeDriver.  ## Actual Behavior - Compile error NoSuchMethodError from org.openqa.selenium.net.UrlChecker.(UrlChecker.java:62) when attempting to create a default ChromeDriver.  I have attempted to create other Drivers such as Firefox(GeckoDriver) and Edge and I receive the same result on Edge and a similar results of Firefox  Java JDK version I am using is: jdk1.8.0_151  Stack Trace: ``` Exception in thread ""main"" java.lang.NoSuchMethodError: com.google.common.util.concurrent.SimpleTimeLimiter.create(Ljava/util/concurrent/ExecutorService;)Lcom/google/common/util/concurrent/SimpleTimeLimiter; 	at org.openqa.selenium.net.UrlChecker.(UrlChecker.java:62) 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:187) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:178) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123) 	at browser_mob_proxy_test.Selenium8_1Test.main(Selenium8_1Test.java:13) ```  ## Steps to reproduce - ``` public static void main(String[] args)  	{ 		// Set location of chrome webdriver 		System.setProperty(""webdriver.chrome.driver"", ""Webdrivers/chromedriver.exe""); 		 		ChromeDriver driver = new ChromeDriver(); 		 		driver.manage().window().maximize(); 		 		driver.get(""https://www.google.com/""); 		 		try 		{ 			Thread.sleep(3000); 		} 		catch(Exception e) 		{ 			e.printStackTrace(); 		} 		 		driver.close(); 		 		return; 	} ```","closed","","johnchris93","2017-12-15T02:09:59Z","2019-08-16T03:09:46Z"
"","5017","Serveral requests waiting for a slot to be free, despite available sessions","## Meta - OS:   Windows 10  Selenium Version:   3.5.3  Browser:   Chrome  Browser Version:   61  ## Expected Behavior - Can find the nodes to run the cases if there exists available sessions  ## Actual Behavior - Can't find the nodes to run the cases.  ## Steps to reproduce - 1. Run a set of cases , there are about 200 cases in my test. 2. When running about the 50 cases, press the Ctrl+C to quit the test. 3. Repeat the step 1 and step 2 for about 5 times. 4. Rerun the step 1, I found even there are some available node, but the cases can't find a node to run.","closed","","Amber2008","2017-11-06T09:15:55Z","2019-08-15T15:09:40Z"
"","5802","Error forwarding the new session Empty pool of VM for setup Capabilities when upgrading from selenium-server v3.9.1 to v3.10.0","## Meta - OS:   Windows 10  Selenium Version:   3.10.0, 3.11.0  Browser:   Chrome  Browser Version:   Version 66.0.3359.117  ## Expected Behavior - Chrome launches and executes the test run without unexpected exceptions, like in version 3.9.1.  ## Actual Behavior - Receiving the following exception when trying to launch a chrome browser during an automation test run:  ``` Caused by: org.openqa.grid.common.exception.GridException: Error forwarding the new session Empty pool of VM for setup Capabilities {browserName: chrome, javascriptEnabled: true, platformName: windows, version: } 	at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:118) 	at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:86) 	at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:70) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:860) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:530) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:347) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:256) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:102) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626) 	at java.lang.Thread.run(Thread.java:748) ```  ## Steps to reproduce - Not sure how to specifically reproduce this issue here, since our test framework has a lot of inter-connected parts. What would be great to know is if there were some specific changes in v3.10.0 over 3.9.1 that could cause this problem.  Also, what specifically causes this exception?  Thanks!","closed","R-awaiting answer,","goodbomb","2018-04-18T22:31:16Z","2019-08-14T12:09:45Z"
"","5512","Implicit wait doesn't work for Firefox browser using Python-Selenium bindings above 3.4.0","## Meta - OS:   Windows (10), OSX (Sierra, High Sierra, El Capitan) Selenium Version:   ""3.5.2"", ""3.5.3"", ""3.6.0"", ""3.7.0"", ""3.7.1"", ""3.8.0"", ""3.8.1"". Anything above 3.4.0 Browser:   Firefox (GeckoDrivers tried: 0.15.0, 0.16.0, 0.18.0, 0.19.0, 0.19.1) Browser Version:   FF: 56.0, 57.0, 58.0 ## Expected Behavior - Implicit wait should work ## Actual Behavior - Implicit wait command fails with error: **implicit_wait did not match a known command** **StackTrace:** selenium.common.exceptions.WebDriverException: Message: POST /session//timeouts/implicit_wait did not match a known command Build info: version: '3.7.0', revision: '2321c73', time: '2017-11-02T22:12:12.411Z' System info: host: '', ip: '', os.name: 'windows', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_151' ## Steps to reproduce - 1. Run any basic sample script like opening google page using python selenium bindings. 2. User implicit wait command (**driver.implicitly_wait(4)** (Python Selenium bindings used 3.8.1 locally and set up grid above 3.4.0) 3. The command fails with error: **implicit_wait did not match a known command** Stacktrace: selenium.common.exceptions.WebDriverException: Message: POST /session//timeouts/implicit_wait did not match a known command Build info: version: '3.7.0', revision: '2321c73', time: '2017-11-02T22:12:12.411Z' System info: host: '', ip: '', os.name: 'windows', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_151'","closed","","Kannamaraj","2018-02-19T19:45:19Z","2019-08-15T23:09:47Z"
"","5128","Cannot disable the Jsonviewer on gecko","## Meta - OS:   Windows Selenium Version:   3.6 Browser:   Firefox  Browser Version:   56+ (64 bit)  ## Expected Behavior - Show raw JSON ## Actual Behavior - JsonView option is enabled by default ## Steps to reproduce - Hi I have tried to disable the gecko Json viewer add-on because I didn't like it and prefer the raw Json string. What I have tried is the following: ```javascript     var driver = new webdriver.Builder()       .forBrowser('firefox')       .setFirefoxOptions(           new firefox.Profile().setPreference('devtools.jsonview.enabled', false))       .build() ``` After a long search in the issues I couldn't find a help, also from the documentation there isn't too much classifications on this.","closed","","JefferyHus","2017-11-28T03:09:13Z","2019-08-17T00:09:57Z"
"","5716","Selenium does not detect element even when the element is present on the page","## Meta - OS:   Window 7/Windows 10  Selenium Version:   2.47  - 3.8   Browser:   Google Chrome/Firefox   Browser Version: gc : latest ff 53  - ff 58  ## Expected Behavior - Selenium Should detect the element in all the cases if it is present  ## Actual Behavior - Selenium does not detect the element randomly (It can be seen on screenshot)  ## Steps to reproduce - My Wait statement fails when searching for the presence of element on page  I am using Selenium with Robotframework. What  I observe that many time my  ""Waits"" fails stating the reason that element is not present on the page. But screenshot captured shows element is there. Same code works ok If I run it again. This is observed especially when we run the code on slower environment or old VM. I tried increasing implicit wait to 3seconds.   Some notes - HTML page remains consistent. No extra iFrame is added/removed - We tried increasing explicit timeout till 180 seconds and implicit timeout to 3s - I am using link= and xpath to locate the elements. Behavior is observed for all types of locators  - There are no duplicate match of locators and they are always visible - I tried the different combinations of Selenium, Browser/ Versions, and Driver since last 6 months but this is still there   Some help of tip will be a great help","closed","R-awaiting answer,","vinaybond","2018-04-02T03:58:52Z","2019-08-16T03:09:52Z"
"","5430","Parameter - SessionScavenger - Default: 600000ms","## Meta - OS:   Win8 Selenium Version:   3.8.1 Browser:   Chrome  ## Expected Behavior - I want to change this value.  ## Actual Behavior - I can not change the value  ## Steps to reproduce -  C:\test>java -jar selenium-server-standalone-3.8.1.jar -role hub 17:23:15.297 INFO - Selenium build info: version: '3.8.1', revision: '6e95a6684b ' 17:23:15.312 INFO - Launching Selenium Grid hub 2018-02-02 17:23:16.672:INFO::main: Logging initialized @2232ms to org.seleniumhq.jetty9.util.log.StdErrLog 17:23:16.703 INFO - Will listen on 4444 2018-02-02 17:23:16.875:INFO:osjs.Server:main: jetty-9.4.7.v20170914 2018-02-02 17:23:16.937:INFO:osjs.session:main: DefaultSessionIdManager workerName=node0 2018-02-02 17:23:16.937:INFO:osjs.session:main: **No SessionScavenger set, using defaults** 2018-02-02 17:23:16.953:INFO:osjs.session:main: **Scavenging every 600000ms** 2018-02-02 17:23:16.984:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@45a4b042{/,null,AVAILABLE} 2018-02-02 17:23:17.031:INFO:osjs.AbstractConnector:main: Started ServerConnector@3de955fe{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 2018-02-02 17:23:17.031:INFO:osjs.Server:main: Started @2589ms 17:23:17.031 INFO - Nodes should register to http://10.155.18.51:4444/grid/register/ 17:23:17.031 INFO - Selenium Grid hub is up and running","closed","I-enhancement,","bonamim","2018-02-02T20:24:12Z","2019-08-15T11:09:58Z"
"","5260","Cannot start custom remote instance of browser.","## Meta - OS:   Win7x64 Selenium Version:   3.7.1 - 3.8.1 Browser:   FF, Ch  I tried create new custom remote instance on any browser, but always get exception in this stage: From RemoteWebDriver.java ``` protected Response execute(String driverCommand, Map parameters) { ... response = this.executor.execute(command); ... } ```  My code: ``` ......................... GeckoDriverService service_ff = new GeckoDriverService.Builder() 				.usingDriverExecutable(new File(path_to_driver.exe)) 				.usingAnyFreePort() 				.build(); 		service_ff.start();  		WebDriver driver = new CustomRemoteWebDriver(service_ff.getUrl(), DesiredCapabilities.firefox()); .......................... public static class CustomRemoteWebDriver extends RemoteWebDriver { 		public static String sessionIdPath = ""c:\\automation\\sessionid"";  		public CustomRemoteWebDriver(URL remoteAddress, Capabilities desiredCapabilities) { 			super(remoteAddress, desiredCapabilities); 		}  		@SuppressWarnings(""Duplicates"") 		@Override 		protected void startSession(Capabilities desiredCapabilities) { 			String sid = getPreviousSessionIdFromSomeStorage(); 			if (sid != null) { 				setSessionId(sid); 				try { 					getCurrentUrl(); 				} catch (WebDriverException e) { 					// session is not valid 					e.printStackTrace(); 					sid = null; 				} 			}  			if (sid == null) { 				super.startSession(desiredCapabilities); 				saveSessionIdToSomeStorage(getSessionId().toString()); 			} 		}  		private void saveSessionIdToSomeStorage(String sessionId) { 			try { 				FileUtils.writeStringToFile(new File(sessionIdPath), sessionId, Charset.defaultCharset()); 			} catch (IOException e) { 				e.printStackTrace(); 			} 		}  		private String getPreviousSessionIdFromSomeStorage() { 			String sessionId; 			try { 				List sidText = FileUtils.readLines(new File(sessionIdPath), Charset.defaultCharset()); 				sessionId = sidText.get(0); 			} catch (Exception e) { 				return null; 			} 			return sessionId; 		} 	} ```  Exception: ``` Connected to the target VM, address: '127.0.0.1:18126', transport: 'socket' 1514269556990	geckodriver	INFO	geckodriver 0.19.1 1514269557006	geckodriver	INFO	Listening on 127.0.0.1:22747 org.openqa.selenium.WebDriverException: No command or response codec has been defined. Unable to proceed Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:01:39.354Z' System info: host: 'KARASEVDS', ip: '192.168.1.29', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_11' Driver info: driver.version: PrototypeServer_WD$CustomRemoteWebDriver 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:154) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:657) 	at org.openqa.selenium.remote.RemoteWebDriver.getCurrentUrl(RemoteWebDriver.java:334) 	at ResearchDevelopment.PrototypeServer_WD$CustomRemoteWebDriver.startSession(PrototypeServer_WD.java:56) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) 	at ResearchDevelopment.PrototypeServer_WD$CustomRemoteWebDriver.(PrototypeServer_WD.java:46) 	at ResearchDevelopment.PrototypeServer_WD.main(PrototypeServer_WD.java:34) Exception in thread ""main"" java.lang.NoSuchMethodError: com.google.gson.GsonBuilder.setLenient()Lcom/google/gson/GsonBuilder; 	at org.openqa.selenium.json.Json.(Json.java:47) 	at org.openqa.selenium.logging.profiler.HttpProfilerLogEntry.constructMessage(HttpProfilerLogEntry.java:37) 	at org.openqa.selenium.logging.profiler.HttpProfilerLogEntry.(HttpProfilerLogEntry.java:29) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:141) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at ResearchDevelopment.PrototypeServer_WD$CustomRemoteWebDriver.startSession(PrototypeServer_WD.java:65) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) 	at ResearchDevelopment.PrototypeServer_WD$CustomRemoteWebDriver.(PrototypeServer_WD.java:46) 	at ResearchDevelopment.PrototypeServer_WD.main(PrototypeServer_WD.java:34) Disconnected from the target VM, address: '127.0.0.1:18126', transport: 'socket' ```  Exception not dependence at type of browser. However this code already was worked two month ago. I cannot understand, what was changed. I wrote this issue, because now i have advanced ""Instance Engine"" for my automated-test-platform, that by on this simple prototype. And today i get same problem in it. After that i decide a checking simple prototype...  Any suggestion will be are welcome!","closed","","S-Kerrigan","2017-12-26T06:41:54Z","2019-08-16T19:09:47Z"
"","5763","How to set homepage with chrome , my set not work","## Meta - OS:   win7 Selenium Version:   3.11.1 Browser:   chrome   Browser Version:   65  Hi, i need to set homepage ,follow code not work, It stil open defalut homepage(google.com).   i post on stackoverflow,but no one reply.   ` ChromeOptions option = new ChromeOptions();   option.AddArgument(""--custom-launcher-page=about:blank"");   option.AddArgument(""--homepage=about:blank"");   iw = new ChromeDriver(option);`","closed","","duoduoxi","2018-04-11T14:27:46Z","2019-08-16T06:09:43Z"
"","5278","With selenium-webdriver 3.8.0 and IE driver 3.8, IE 11 gives issue","## Meta - OS:   Win10 64 bit Selenium Version:   3.8.0 Browser:   Internet Explorer Browser Version:   11.125.16299.0   Expected Behavior - When browser is opened by using below given steps, it should properly redirect to first google.com and then yahoo.com.  @browser.goto('www.google.com') > redirect to www.google.com @browser  > instance details @browser.goto('www.yahoo.com') > redirect to www.yahoo.com   Actual Behavior - @browser.goto('www.google.com')  > redirects to google.com correctly. @browser   > gives Watir::Exception::NoMatchingWindowFoundException: browser window was closed message  Steps to reproduce - For 32 bit ruby, open IRB console and open browser using following commands. require 'watir' client         = Selenium::WebDriver::Remote::Http::Default.new client.open_timeout = 500   caps           = Selenium::WebDriver::Remote::Capabilities.internet_explorer(     :initialBrowserUrl              => 'about:blank',     :enablePersistentHover          => false,     :ignoreProtectedModeSettings    => true,     'ie.ensureCleanSession'         => true,     :unexpectedAlertBehaviour => 'ignore',     :introduce_flakiness_by_ignoring_security_domains => true ) @browser       = Watir::Browser.new :ie, :http_client => client, :desired_capabilities => caps @browser.goto('www.google.com')  @browser @browser.goto('www.yahoo.com')","closed","C-rb,","reemanaik","2018-01-02T15:00:52Z","2019-08-16T11:09:58Z"
"","5201","can not wait element write by  driver.manage().timeouts().implicitlyWait(i, TimeUnit.SECONDS);","## Meta - OS:   win10 Selenium Version:   3.5.1 Browser:  firefox   Browser Version:   firefox ZH-cn 55.0 JAVA Code 👍  <  driver.manage().timeouts().implicitlyWait(30 , TimeUnit.SECONDS);> ## Expected Behavior - auto keep looking element to present between 30 second    ## Actual Behavior - run fail inmediately when run scripit to find a  loading element without wait in 30 secnd.  ## Steps to reproduce -   My code:    FirefoxOptions options = new FirefoxOptions();  ProfilesIni allProfiles = new ProfilesIni();         FirefoxProfile profile = allProfiles.getProfile(""default"");                 options.setProfile(profile );   driver = new FirefoxDriver(options);  driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);//this seems no work at all,when could not find element,driver have fail immediately   30 TimeUnit.SECONDS  change to 3000 TimeUnit.SECONDS, this problem is OK.   confuse by this !","closed","R-awaiting answer,","Oly-Don","2017-12-11T10:05:45Z","2019-08-16T17:09:41Z"
"","5443","IE webdriver throws noProxy is type string instead of array   Exception when noProxy setting specified","## Meta - OS:   Win10 Selenium Version:   2.7 Browser:     Browser Version:   11  ## Expected Behavior - IE to honor the No_proxy setting set by user I set http proxy as below ```                 ``` when i create proxy with below code ``` Proxy prox = new Proxy(); prox.setProxyType(ProxyType.MANUAL); prox.setHttpProxy(testParameter.getHttp_proxy()); prox.setSslProxy(testParameter.getHttps_proxy()); prox.setNoProxy(testParameter.getHttp_noproxy()); ```  Expected behavior is Selenium grid should be able to create IE session when noproxy setting string is specified. Same works fine with crome webbrowser.  ## Actual Behavior -  I get below exception when use IE browser ``` org.openqa.selenium.InvalidArgumentException: All firstMatch elements failed validation Invalid capabilities in firstMatch element 0: proxy setting noProxy is type string instead of array Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'INLN50949132A', ip: '10.138.169.153', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: driver.version: unknown remote stacktrace:  Command duration or timeout: 1.49 seconds ```  ## Steps to reproduce - Refer attached maven project.. Update liner 27 to 30 in ..\testNGSelenium\src\test\java\com\javacodegeeks\testng\selenium\TestNGSeleniumSimpleSearchExample.java  to use right grid and proxy/no_proxy setting run mvn clean install You can refer the log file too for the callstack  [testNGSelenium.zip](https://github.com/SeleniumHQ/selenium/files/1697937/testNGSelenium.zip) [log.zip](https://github.com/SeleniumHQ/selenium/files/1697976/log.zip)","closed","C-java,","shankarkc","2018-02-06T06:27:16Z","2019-08-16T02:09:44Z"
"","5458","Timeout and BrowserNotReachable when searching for not available element","## Meta - OS:   Win Server 2008 Selenium Version:   3.9.0 Browser:   Chrome  Using the latest releases of Chrome(64), chromedriver(2.35) and selenium 3.9.0 i have 100% socket read timeout(bottom) and browsernotreachable(top) exception when searching for a not existing element. Let's say driver.findElement(By.xpath(""//*[@id='notExisting']"")).  org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '3.9.0', revision: '698b3178f0', time: '2018-02-05T14:26:55.441Z' System info: host: '....', ip: '10.......7', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0' Driver info: driver.version: RemoteWebDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.35.528161 (5b82f2d2aae0ca..., userDataDir: C:\Users\...\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 64.0.3282.140, webStorageEnabled: true, webdriver.remote.sessionid: 7bd9360fbb98a40b0ba94bc47e2...} Session ID: 7bd9360fbb98a40b0ba94bc47e22ec6f 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473) 	at org.openqa.selenium.By$ByXPath.findElement(By.java:361) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363) 	at ....ui.UITestStep.available(UITestStep.java:148) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:483) 	at ............ownStack Caused by: java.net.SocketTimeoutException: timeout 	at okio.Okio$4.newTimeoutException(Okio.java:230) 	at okio.AsyncTimeout.exit(AsyncTimeout.java:285) 	at okio.AsyncTimeout$2.read(AsyncTimeout.java:241) 	at okio.RealBufferedSource.indexOf(RealBufferedSource.java:345) 	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:217) 	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212) 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:97) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:47) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:157) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	... 19 more Caused by: java.net.SocketTimeoutException: Read timed out 	at java.net.SocketInputStream.socketRead0(Native Method) 	at java.net.SocketInputStream.read(SocketInputStream.java:150) 	at java.net.SocketInputStream.read(SocketInputStream.java:121) 	at okio.Okio$2.read(Okio.java:139) 	at okio.AsyncTimeout$2.read(AsyncTimeout.java:237) 	... 42 more","closed","R-awaiting answer,","HenningL","2018-02-07T16:11:26Z","2019-08-16T14:09:48Z"
"","4969","FF 56.0 32 bit Browser not launching with selenium 3.6.0 and gecko 0.19.0","## Meta - OS:   Win 7 32 bit Selenium Version:   3.6.0 Browser:   FF  Browser Version:   56.0 32bit ## Expected Behavior - 		System.setProperty(""webdriver.gecko.driver"", ""D:\\Drivers\\geckodriver.exe""); 		DesiredCapabilities capabilities = DesiredCapabilities.firefox(); 		capabilities.setCapability(""marionette"", true);          		WebDriver driver = new FirefoxDriver();                  //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception          driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);         driver.manage().window().maximize();          //Launch the Online Store Website          driver.get(""http://www.store.demoqa.com""); Expecting to launch browser and navigate to URL but its not doing instead giving below exceptions  ## Actual Behavior - 1509086962086	geckodriver	INFO	geckodriver 0.19.0 (f0b5f3476d8b05a3bacebb06056ff933e26a17fa 2017-09-16) 1509086962130	geckodriver	INFO	Listening on 127.0.0.1:8468 Exception in thread ""main"" org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8468 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'ARAGON-PC', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_151' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:217) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:140) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:98) 	at practice.java.algorithms.SeleniumTest.main(SeleniumTest.java:20) Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8468 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:159) 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:359) 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:381) 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237) 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185) 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89) 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:111) 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:138) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:86) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:337) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 6 more Caused by: java.net.ConnectException: Connection refused: connect 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75) 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142) 	... 21 more","closed","D-firefox,","dbegineer","2017-10-27T06:48:40Z","2019-08-15T23:09:41Z"
"","5212","Safari 11, Selenium Version 3.4.0, SelectByIndex not working","## Meta - OS:   virtual machine (sauce using webdriverIO) OS x 10.12 Selenium Version:   3.4.0 Browser:   Safari 11  Browser Version:   11.0  ## Expected Behavior - ``` OrderDetailsPage....   arrivalWindow: {     get: function() {       return browser.element(""select.js-preferred"");     }   }, ... ``` ``` ... OrderDetailsPage.arrivalWindow.selectByIndex(1); ... ```  this is working correctly on Safari 10, using  Selenium version: 2.53.1 ## Actual Behavior - does not select the element by index, skips over this action.  ## Steps to reproduce - Try to use selectByIndex with selenium 3.4.0 version on Safari 11.","closed","","lisaPthomas","2017-12-12T22:19:12Z","2019-08-16T21:09:35Z"
"","5598","Selenium::WebDriver::Error::UnknownError","## Meta - OS:   Ubuntu Server 16.04 (64-bit) Selenium Version:    Browser:   Firefox   Browser Version:   Mozilla Firefox 58.0.2  Ruby 2.5.0  ## Expected Behavior - Just run the selenium-webdriver  ## Actual Behavior - stack backtrace:: address not available (Selenium::WebDriver::Error::UnknownError)  ## Steps to reproduce - `require 'selenium-webdriver' require 'rspec' require 'headless'  puts ""headless..."" headless = Headless.new headless.start  puts ""selenium..."" driver = Selenium::WebDriver.for :firefox` When i run this code, the error is occur, address not available (Selenium::WebDriver::Error::UnknownError). What's problem?","closed","","NanKisu","2018-03-12T10:53:17Z","2019-08-16T10:09:56Z"
"","5385","Option ""-enablePassThrough false"" does not apply","## Meta - OS:   Ubuntu Linux 16.04 Selenium Version:   3.8.1 Browser:   Firefox (docker image selenium/node-firefox-debug)  ## Expected Behavior - Option ""enablePassThrough"" is set appropriately ## Actual Behavior - Option ""enablePassThrough"" is set to default (true) ## Steps to reproduce - launch java -Xms500m -Xmx500m -jar /opt/selenium/selenium-server-standalone.jar -role node -hub http://localhost:4444/grid/register -nodeConfig /opt/selenium/config.json **-enablePassThrough false**  LOG from selenium HUB: `11:13:30.392 DEBUG - getting the following registration request  : {""class"":""org.openqa.grid.common.RegistrationRequest"",""name"":null,""description"":null,""configuration"":{""remoteHost"":""http://10.64.209.10:5555"",""hubHost"":""localhost"",""hubPort"":4444,""id"":""http://10.64.209.10:5555"",""capabilities"":[{""applicationName"":"""",""browserName"":""firefox"",""maxInstances"":1,""moz:firefoxOptions"":{""log"":{""level"":""info""}},""platform"":""LINUX"",""se:CONFIG_UUID"":""0359fb34-6c18-47c6-bf17-c61fe05cd835"",""seleniumProtocol"":""WebDriver"",""version"":""57.0.2""}],""downPollingLimit"":2,""hub"":""http://selenium-hub:4444/grid/register"",""nodePolling"":5000,""nodeStatusCheckTimeout"":5000,""proxy"":""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",""register"":true,""registerCycle"":5000,""unregisterIfStillDownAfter"":60000,""cleanUpCycle"":null,""custom"":{},""host"":""10.64.209.10"",""maxSession"":1,""servlets"":[],""withoutServlets"":[],""browserTimeout"":240,""debug"":false,""jettyMaxThreads"":null,""log"":null,""port"":5555,""role"":""node"",""timeout"":15,""enablePassThrough"":true}}`  From selenium HUB console: ``` browserTimeout: 240 debug: false help: false jettyMaxThreads: -1 port: 5555 role: node timeout: 15 enablePassThrough: true cleanUpCycle: 5000 host: 10.64.209.10 maxSession: 1 capabilities: Capabilities {applicationName: , browserName: firefox, maxInstances: 1, moz:firefoxOptions: {log: {level: info}}, platform: LINUX, se:CONFIG_UUID: 0359fb34-6c18-47c6-bf17-c61..., seleniumProtocol: WebDriver, version: 57.0.2} downPollingLimit: 2 hub: http://localhost:4444/grid/register id: http://10.64.209.10:5555 hubHost: selenium-hub hubPort: 4444 nodePolling: 5000 nodeStatusCheckTimeout: 5000 proxy: org.openqa.grid.selenium.proxy.DefaultRemoteProxy register: true registerCycle: 5000 remoteHost: http://10.64.209.10:5555 unregisterIfStillDownAfter: 60000 ```  Works if add the option to JSON config. But even in this case changes are not shown in hub console.  Launching HUB with $SE_OPTS=""-enablePassThrough false"": from LOG: ``` starting selenium hub with configuration: {   ""host"": null,   ""port"": 4444,   ""role"": ""hub"",   ""maxSession"": 5,   ""newSessionWaitTimeout"": -1,   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""throwOnCapabilityNotPresent"": true,   ""jettyMaxThreads"": -1,   ""cleanUpCycle"": 5000,   ""browserTimeout"": 240,   ""timeout"": 15,   ""debug"": true } appending selenium options: -enablePassThrough false 11:27:38.517 INFO - Selenium build info: version: '3.8.1', revision: '6e95a6684b' 11:27:38.517 INFO - Launching Selenium Grid hub ```  From HUB console: ``` Config for the hub : browserTimeout : 240 debug : true help : false jettyMaxThreads : -1 port : 4444 role : hub timeout : 15 enablePassThrough : false cleanUpCycle : 5000 host : 10.64.214.30 maxSession : 5 hubConfig : /opt/selenium/config.json capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher newSessionWaitTimeout : -1 throwOnCapabilityNotPresent : true registry : org.openqa.grid.internal.DefaultGridRegistry Config details : hub launched with : -browserTimeout 240 -debug true -help false -jettyMaxThreads -1 -port 4444 -role hub -timeout 15 -enablePassThrough false -cleanUpCycle 5000 -host 10.64.214.30 -maxSession 5 -hubConfig /opt/selenium/config.json -capabilityMatcher org.openqa.grid.internal.utils.DefaultCapabilityMatcher -newSessionWaitTimeout -1 -throwOnCapabilityNotPresent true -registry org.openqa.grid.internal.DefaultGridRegistry the final configuration comes from : the default : browserTimeout : 0 debug : false help : false port : 4444 role : hub timeout : 1800 enablePassThrough : true cleanUpCycle : 5000 capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher newSessionWaitTimeout : -1 throwOnCapabilityNotPresent : true registry : org.openqa.grid.internal.DefaultGridRegistry  updated with params : browserTimeout : 240 debug : false help : false jettyMaxThreads : -1 port : 4444 role : hub timeout : 15 enablePassThrough : true cleanUpCycle : 5000 maxSession : 5 capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher newSessionWaitTimeout : -1 throwOnCapabilityNotPresent : true registry : org.openqa.grid.internal.DefaultGridRegistry ```","closed","","dev-e","2018-01-23T11:31:22Z","2019-08-16T16:09:40Z"
"","4983","driver.switch_to.active_element returns dictionary With Firefox but returns WebElement in Chrome","## Meta - OS:   Ubuntu 17.10   Selenium Version:   Selenium 3.6.0 (Python 2)  Browser:   Firefox and Chrome  Browser Version:   Firefox:    56.0 (64-bit) Chrome:  62.0.3202.62 (Official Build) (64-bit)  ## Expected Behavior - The `driver.switch_to.active_element` should work similar manner with Firefox and Chrome. I did expect the attribute to refer a `WebElement`  ## Actual Behavior - The Chrome returns `WebElement` but Firefox returns a dictionary which looks like this:  ``` {u'value': } ```  ## Steps to reproduce - ``` from selenium import webdriver  gc = webdriver.Chrome() gc.get('https://www.google.fi') gc_active_element = gc.switch_to.active_element  ff = webdriver.Firefox() ff.get('https://www.google.fi') ff_active_element = ff.switch_to.active_element  print isinstance(gc_active_element, webdriver.remote.webelement.WebElement) print isinstance(ff_active_element, dict)  gc.quit() ff.close() ```","closed","C-py,","aaltat","2017-10-30T21:22:53Z","2019-08-17T01:10:01Z"
"","5601","With Firefox move_to_element raises an exception.","## Meta - OS:   Ubuntu 17.10 Selenium Version:   3.10.0 Browser:   Firefox 58.0.2 and geckodriver 0.19.1  ## Expected Behavior - When doing `ActionChains(driver).move_to_element(element).perform()` the element should be scrolled in view and exception should not be raised.   ## Actual Behavior - Element is not scrolled in view because this exception is raised: ``` Traceback (most recent call last):   File ""test.py"", line 16, in      ActionChains(driver).move_to_element(element).perform()   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/common/action_chains.py"", line 80, in perform     self.w3c_actions.perform()   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/common/actions/action_builder.py"", line 76, in perform     self.driver.execute(Command.W3C_ACTIONS, enc)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: (183.5, 5330.85009765625) is out of bounds of viewport width (1280) and height (779)  ```  ## Steps to reproduce - See details in here: https://gist.github.com/aaltat/a7f71e960d1bc3c6f90bfebb216162f0","closed","C-py,","aaltat","2018-03-12T20:04:21Z","2019-08-16T04:09:46Z"
"","4976","Get status code (200/400 etc) for chrome headless [Ruby]","## Meta - OS:   Ubuntu 17.10 Browser:   Chrome  There is no ability to get status code for selenium chrome. ( Ruby ) Is it possible or planned?","closed","","rusikf","2017-10-30T09:16:53Z","2017-10-30T13:23:20Z"
"","5678","Instance ChroneDriver Error: ConnectFailure","## Meta - OS:   Ubuntu 16.04.4 Linux 4.10.0 Selenium Version:   3.9.0 Browser:   Chrome  Browser Version:   65.0.3325.181 ChromeDriver version 2.35  ## Steps to reproduce - After instanciating a chrome Driver as in the screenshot1 we get a list of error written ""Error: ConnectFailure (Connection refused)"" Screenshot2  ## Screenshot1 ![image](https://user-images.githubusercontent.com/33542007/37905970-4185bfc2-311e-11e8-9272-5f99a8735828.png)  ## Screenshot2 ![image](https://user-images.githubusercontent.com/33542007/37906043-82a65cbe-311e-11e8-869c-08cd47144deb.png)   PS : for the first instance of chromedriver we don't get this error in console but for all the rest of instanciation we ll get it.  Help as soon as possible.","closed","R-awaiting answer,","Subhacse17","2018-03-26T12:25:43Z","2019-08-16T03:09:50Z"
"","5781","chromedriver prevent unexpected alert open: {Alert text : }","## Meta - OS:   Ubuntu 16.04.3 LTS Selenium Version:   downloaded at yesterday (idk the version) Browser:   Webdriver / google chrome  Browser Version:   Google Chrome 65.0.3325.181 (64-bit)  Driver :  Python Selenium  ## Expected Behavior -  Prevent unexpected alert open: {Alert text : }  ## Actual Behavior -  ``` Traceback (most recent call last):   File ""app.py"", line 171, in      main()   File ""app.py"", line 109, in main     clipper = driver.find_elements_by_css_selector(""div.btn"")   File ""/home/blaster/.local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 605, in find_elements_by_css_selector     return self.find_elements(by=By.CSS_SELECTOR, value=css_selector)   File ""/home/blaster/.local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 983, in find_elements     'value': value})['value'] or []   File ""/home/blaster/.local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""/home/blaster/.local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 241, in check_response     raise exception_class(message, screen, stacktrace, alert_text) selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None Message: unexpected alert open: {Alert text : }   (Session info: headless chrome=65.0.3325.181)   (Driver info: chromedriver=2.35.528139 (47ead77cb35ab2a9a23218b282151362a66cd662),platform=Linux 4.4.0-116-generic x86_64) ```  ## I have tried to use (but it doesn't work)  `driver.execute_script(""window.alert = function() {};"")`  ## Steps to reproduce - i can't tell you where i'm doing automation, but this alert appear when i want leave a page,  ## Additional Info this question available [in Stackoverflow](https://stackoverflow.com/q/49848571/9137919) too","closed","","codenoid","2018-04-16T01:57:15Z","2019-08-16T05:09:58Z"
"","5114","Ability to take full page screenshot","## Meta - OS:   Ubuntu 16.04 LTS Selenium Version:   3.7.0 (Python) Browser:   Firefox  This is a follow-up to bug #1141. Since the ability to take full page screen-shot hasn't been implemented yet, this bug deserves to have a second look. As the [last comment](https://github.com/seleniumhq/selenium/issues/1141#issuecomment-282997959) on the thread says, even if the spec doesn't allow the screen-shot beyond a viewpoint, why can't we have another method like `save_full_screenshot()` for taking the full screen-shot?  Browser Version:     ## Expected Behavior - `save_screenshot()` should capture a full page screen-shot. Or alternatively, if the spec doesn't allow that, then additional method such as `save_full_screenshot()` be introduced that can be used.  ## Actual Behavior - `save_screenshot()` doesn't capture a full page screen-shot.  ## Steps to reproduce -      browser = webdriver.Firefox()     url = ""https://www.google.com""     browser.get(url)     browser.save_screenshot(sfname ) #this is where it fails","closed","","prahladyeri","2017-11-24T17:51:03Z","2019-08-17T00:10:02Z"
"","5141","MoveToElement() function doesn't move the element (and there is no error message either)","## Meta - OS:   Ubuntu 16.04  Selenium Version:    3.7.1  Browser:    Chrome  Browser Version:   62.0.3202.94 (64-bit)  ## Expected Behavior Original element is moved to target element and released at that specific position.  ## Actual Behavior  Original element is moved, target element is found, but the original element is not moved and released to that specific position.  ## Steps to reproduce 	WebDriver driver = new ChromeDriver();  		driver.navigate().to(""http://react-dnd.github.io/react-dnd/examples-dustbin-multiple-targets.html""); 		 		WebElement dragBox = driver.findElement(By.xpath(""//div[@data-reactid='105']""));	 		 		Actions action = new Actions(driver);  		 		action 		   	.clickAndHold(dragBox).moveByOffset(5,5) 		    .build() 		    .perform();  		WebDriverWait wait = new WebDriverWait(driver, 10); 		WebElement element = wait.until( 		    ExpectedConditions.presenceOfElementLocated(By.xpath(""//div[contains(@style,'background-color: darkkhaki')]"")) 		);  		 		WebElement dropBox = driver.findElement(By.xpath(""//div[@data-reactid='96']"")); 		 		action 			.moveToElement(dropBox,5,5) 			.release() 		    .perform();","closed","D-chrome,","HPetra","2017-11-29T17:20:14Z","2019-08-16T16:09:39Z"
"","5819","API for # of free/busy nodes ?","## Meta - OS:   Ubuntu 16.04 Selenium Version:   v.2.53.0 Browser: xx  ---  I'm trying to setup monitoring for our selenium grid to see how many nodes are busy/free (and eventually set-up scaling for them). Already found few pages describing API methods, but none of them show such a method, to see how many nodes are free/busy/available. Am I missing anything?  So far I was able to come-up with this: `curl -sX GET http:///grid/console | grep -c ""class='busy'""` - which tells me how many nodes are busy atm (means also I need to know how many nodes we have at time of the request)  My question is: is there any API-enpoint which will tell me that info (busy/free/capacity) - we will upgrade to Selenium 3 very soon => would appreciate Selenium 3 only solution too.   thanks!","closed","","Twista","2018-04-23T20:22:10Z","2019-08-16T04:09:41Z"
"","5462","selenium 3.8.1 + ChromeDriver 2.35.528139 opening new tab with ( Crtl + t ) doesn't work","## Meta - OS:   Ubuntu 16.04 Selenium Version:   3.8.1 Browser:   Chromedriver 2.35.528139  ## Expected Behavior -  1. User should be able to open new empty tab on chromedriver  ## Actual Behavior -  1.  New tab is not opened  ## Steps to reproduce - 1.  code to reproduce issue  ``` driver.get(""http://www.google.com"");  		driver.findElement(By.tagName(""body"")).sendKeys(Keys.CONTROL + ""t""); 		Set allWindowsId = driver.getWindowHandles(); 		for (String windowId : allWindowsId) { 			if (driver.switchTo().window(windowId).getTitle().contains(""New Tab"")) { 				driver.switchTo().window(windowId); 				break; 			} 		}  		driver.navigate().to(""http://www.yahoo.com/"");  ```  Please clarify if this is selenium or chromedriver issue","closed","","vikramvi","2018-02-08T11:36:07Z","2019-08-16T12:09:40Z"
"","5652","Go-astilectron app test automation issue","## Meta - OS:   Ubuntu 16.04 Selenium Version:   3.11.0 Browser:   chromium go-astilectron app  I'm trying to automate testing of the go-astilectron app which uses chromium. I've created a project to reproduce the issue: https://github.com/igor-rubis/go_astilectron_issue My code opens the application but it seems to me that it can't attach to the chromium itself and it returns an exception `WebDriverException: chrome not reachable` Full stacktrace is: ``` Starting ChromeDriver 2.37.543610 (afd36256570660b5a2f0e4dbd1b040f3dcfe9cb5) on port 9515 Only local connections are allowed.  // some logs from the application  [1521462368,960][DEBUG]: DevTools request: http://localhost:12363/json/version [1521462368,961][DEBUG]: DevTools request failed  // DevTools request keeps failing for some time  [1521462428,875][DEBUG]: DevTools request: http://localhost:12363/json/version [1521462428,876][DEBUG]: DevTools request failed [1521462428,911][INFO]: RESPONSE InitSession chrome not reachable [1521462428,911][DEBUG]: Log type 'driver' lost 0 entries on destruction [1521462428,911][DEBUG]: Log type 'browser' lost 0 entries on destruction Exception in thread ""main"" org.openqa.selenium.WebDriverException: chrome not reachable   (Driver info: chromedriver=2.37.543610 (afd36256570660b5a2f0e4dbd1b040f3dcfe9cb5),platform=Linux 4.13.0-37-generic x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 60.10 seconds Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'MLPC4', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.13.0-37-generic', java.version: '1.8.0_161' Driver info: driver.version: RemoteWebDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:132) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:145) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83) 	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105) 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60) 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235) 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:255) 	at com.irubis.MainClass.main(MainClass.groovy:22) ```","closed","","igor-rubis","2018-03-21T09:56:31Z","2019-08-16T09:09:44Z"
"","4896","unknown error: failed to wait for extension background page to load","## Meta - OS:   Ubuntu 14.04, kernel 3.19.0  Selenium Version:    3.6.0  Browser:   Chromium Browser, Chrome Driver 2.31 and 2.33 (both are tested for this issue)   Browser Version:    60.0.3112.78   ## Expected Behavior - Create and return WebDriver normally.  ## Actual Behavior -  Throw an exception as bellow:  ``` selenium.common.exceptions.WebDriverException: Message: unknown error: failed to wait for extension background page to load: chrome-extension://dnpjjfhimhgghciignhbkdgllkplgkii/_generated_background_page.html  from unknown error: page could not be found: chrome-extension://dnpjjfhimhgghciignhbkdgllkplgkii/_generated_background_page.html   (Driver info: chromedriver=2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8),platform=Linux 3.19.0-32-generic x86_64) ```  ## Steps to reproduce -   ```Python               chrome_options = webdriver.ChromeOptions()               chrome_options.add_extension(self.get_chrome_proxy_extension(proxy=self.proxy))               chrome_options.add_argument('user-agent={0}'.format(user_agent))               chrome_options.add_argument('headless')               return webdriver.Chrome(chrome_options = chrome_options) ````  As above, when I load an extension via ChromeOptions and add the ""headless"" argument, the ChromeDriver will give me an exception.  But if I just add the argument  ""headless"" into ChromeDriver, everything is OK.  And also just loading an extension via ChromeOptions is OK.  >   this issue is a little like #3508 , but this is not caused by method ""getSize()"" or ""maximize()"".","closed","","cheerayhuang","2017-10-18T08:26:55Z","2019-08-14T08:09:43Z"
"","5541","""tinymce.activeEditor is undefined"" after upgrading","## Meta - OS:   Ubuntu 14.04 Selenium Version:   3.9.0 Browser:   Firefox  Browser Version:   FF58.0b9 ## Expected Behavior - TinyMCE4 javascript should run and execute (eg. inserting content to tinymce body).  ## Actual Behavior - It looks as though tinymce is not being initialised.  ```  Selenium::WebDriver::Error::JavascriptError: Exception TypeError: tinymce.activeEditor is undefined   Stack Trace:   stack backtrace:      0:           0x4f388c - backtrace::backtrace::trace::h736111741fa0878e      1:           0x4f38c2 - backtrace::capture::Backtrace::new::h63b8a5c0787510c9      2:           0x442d88 - webdriver::error::WebDriverError::new::hea6d4dbf778b2b24      3:           0x44cecc - geckodriver::marionette::MarionetteSession::response::h98d048d51a7ee2ba      4:           0x42c729 - ::run::hba9181b5aacf8f04      5:           0x402c59 - std::sys_common::backtrace::__rust_begin_short_backtrace::h19de262639927233      6:           0x40c065 - std::panicking::try::do_call::h6c1659fc4d01af51      7:           0x5e38ec - panic_unwind::__rust_maybe_catch_panic                           at /checkout/src/libpanic_unwind/lib.rs:98      8:           0x420d32 - ::call_box::h953e5f59694972c5      9:           0x5dc00b - alloc::boxed::{{impl}}::call_once                           at /checkout/src/liballoc/boxed.rs:661                            - std::sys_common::thread::start_thread                           at /checkout/src/libstd/sys_common/thread.rs:21                            - std::sys::imp::thread::{{impl}}::new::thread_start                           at /checkout/src/libstd/sys/unix/thread.rs:84   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/response.rb:69:in `assert_ok'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/common.rb:81:in `new'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/common.rb:81:in `create_response'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/default.rb:104:in `request'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/bridge.rb:164:in `execute'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/w3c/bridge.rb:535:in `execute'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/remote/w3c/bridge.rb:292:in `execute_script'   /usr/local/lib/ruby/gems/2.3.0/gems/selenium-webdriver-3.9.0/lib/selenium/webdriver/common/driver.rb:211:in `execute_script'   /usr/local/lib/ruby/gems/2.3.0/gems/watir-6.10.3/lib/watir/browser.rb:265:in `execute_script'```  ## Steps to reproduce - I'm running a dockerised version of Ubuntu 14.04, running FF58.0b9 using geckodriver 0.19.0 and watir 6.10.3 and selenium 3.9.0. Reverting my upgrade to use older versions works fine.   Any guidance would be much appreciated.","closed","C-rb,","matthewbyrne","2018-02-26T10:52:36Z","2019-08-16T10:09:54Z"
"","5488","Error: Could not find or load main class ..selenium-server-standalone-3.7.1.jar","## Meta - OS:   Ubuntu 14 Selenium Version:   selenium-server-standalone-3.7.1.jar Browser:    Firefox    Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior - server should start  ## Actual Behavior - error is coming  ## Steps to reproduce - ``` sudo java ./selenium-server-standalone-3.7.1.jar  [sudo] password for adminx:  Error: Could not find or load main class ..selenium-server-standalone-3.7.1.jar  sudo java -jar selenium-server-standalone-3.7.1.jar  Exception in thread ""main"" java.lang.UnsupportedClassVersionError: org/openqa/grid/selenium/GridLauncherV3 : Unsupported major.minor version 52.0 	at java.lang.ClassLoader.defineClass1(Native Method) 	at java.lang.ClassLoader.defineClass(ClassLoader.java:803) 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442) 	at java.net.URLClassLoader.access$100(URLClassLoader.java:64) 	at java.net.URLClassLoader$1.run(URLClassLoader.java:354) 	at java.net.URLClassLoader$1.run(URLClassLoader.java:348) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.net.URLClassLoader.findClass(URLClassLoader.java:347) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:425) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:358) 	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:482) ```","closed","","flik","2018-02-13T03:32:03Z","2019-09-12T02:09:35Z"
"","5248","selenium-webdriver in Rails 5.2 system tests: ""unable to connect to chromedriver 127.0.0.1:9515""","## Meta - OS:   Ubuntu Selenium-webdriver Version:   3.8.0 Browser:   Chrome Browser Version:   58  ## Expected Behavior - Being able to run tests  ## Actual Behavior - ``` Selenium::WebDriver::Error::WebDriverError: unable to connect to chromedriver 127.0.0.1:9515     selenium-webdriver (3.8.0) lib/selenium/webdriver/common/service.rb:142:in `connect_until_stable'     selenium-webdriver (3.8.0) lib/selenium/webdriver/common/service.rb:72:in `block in start'     selenium-webdriver (3.8.0) lib/selenium/webdriver/common/socket_lock.rb:39:in `locked'     selenium-webdriver (3.8.0) lib/selenium/webdriver/common/service.rb:69:in `start'     selenium-webdriver (3.8.0) lib/selenium/webdriver/chrome/driver.rb:41:in `initialize'     selenium-webdriver (3.8.0) lib/selenium/webdriver/common/driver.rb:44:in `new'     selenium-webdriver (3.8.0) lib/selenium/webdriver/common/driver.rb:44:in `for'     selenium-webdriver (3.8.0) lib/selenium/webdriver.rb:84:in `for'     capybara (2.16.1) lib/capybara/selenium/driver.rb:23:in `browser'     actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:52:in `block in register_selenium'     actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:51:in `tap'     actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:51:in `register_selenium'     actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:27:in `block in register' ```  ## Steps to reproduce  A completely fresh vanilla Rails app with a simple generated system test.  Not sure what I need to do. Chromedriver is installed and can be ran:  ``` $ which chromedriver /home/oleg/.rbenv/shims/chromedriver  $ chromedriver -v ChromeDriver 2.34.522913 (36222509aa6e819815938cbf2709b4849735537c) ```  Any clues what I might be missing here? Thanks.","closed","D-chrome,","GBH","2017-12-22T21:32:11Z","2019-08-15T03:09:45Z"
"","5692","Unable to parse URL: http://localhost:?????/session","## Meta - OS:   Selenium Version:   Browser:   Internet Explorer  Browser Version:  45.0.2453.0  Issue observed:  Started InternetExplorerDriver server (64-bit) 3.9.0.0 Listening on port 13528 Only local connections are allowed Exception in thread ""main"" org.openqa.selenium.WebDriverException: java.io.IOException: Unable to parse URL: http://localhost:?????/session Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z' System info: host: 'RAJESH-SNEHA', ip: '192.168.0.105', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161' Driver info: driver.version: InternetExplorerDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:223) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:215) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:152) 	at Gmail.Login.main(Login.java:21) Caused by: java.io.IOException: Unable to parse URL: http://localhost:?????/session 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:67) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 6 more","closed","","Tejas0435","2018-03-27T18:10:21Z","2019-08-15T09:09:56Z"
"","5608","Support -capabilities flag with role standalone","## Meta - OS:   Selenium Version:   3.11.0 Browser:     Browser Version:     ## Expected Behavior - Support -capabilities flag with role standalone ## Actual Behavior - The flag is not supported. It's supported only in the node role ## Steps to reproduce -","closed","I-enhancement,","ygmarchi","2018-03-14T09:17:23Z","2019-08-15T18:09:52Z"
"","5461","UnreachableBrowserException when running in Grid, depending on targetted host","## Meta - OS:   Red Hat Enterprise Linux 7.4 Selenium Version:   3.8.1 (Grid), 3.6.0 test program Browser:   Firefox and Chrome  Browser Version:   FireFox Mozilla Firefox 57.0.1  (64-bit)  ## Expected Behavior - The test which reads the title of the targetted host should complete successfully, regardless of targetted host. The same test runs fine for several hosts, some fail. All of them are https and when I curl the target from the Pod (I am on OpenShift) all of them can be reached without any problems.  ## Actual Behavior - After a delay of 30s the test fails with this exception thrown:  ``` org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'foo', ip: '192.168.x.y', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_92' Driver info: driver.version: RemoteWebDriver Capabilities [{moz:profile=/tmp/rust_mozprofile.cSwF2S4YA8I7, rotatable=false, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, moz:headless=false, platform=LINUX, moz:accessibilityChecks=false, acceptInsecureCerts=true, browserVersion=57.0.1, platformVersion=3.10.0-693.17.1.el7.x86_64, moz:processID=1649, browserName=firefox, javascriptEnabled=true, platformName=LINUX, moz:webdriverClick=false}] Session ID: d7e4e1ea-239b-4412-8089-2dd376001597 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:310) 	at seleniumtestnomaven.TestBrowser.test(TestBrowser.java:135) 	at seleniumtestnomaven.TestBrowser.main(TestBrowser.java:40) Caused by: com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 22 path $ 	at com.google.gson.JsonParser.parse(JsonParser.java:65) 	at com.google.gson.JsonParser.parse(JsonParser.java:45) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:87) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	... 3 more Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 22 path $ 	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1559) 	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1401) 	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:542) 	at com.google.gson.stream.JsonReader.peek(JsonReader.java:425) 	at com.google.gson.JsonParser.parse(JsonParser.java:60) 	... 8 more ```  Output of hub: ``` 09:15:07.450 INFO - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, name: Testing Selenium-2 Remote W..., version: } 09:15:07.450 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, se:CONFIG_UUID=2057a76f-2ed0-40da-a7a3-c453ce3cbfba, browserName=firefox, maxInstances=1, version=57.0.1, applicationName=, platform=LINUX} 09:16:46.973 WARN - The client is gone for session ext. key d7e4e1ea-239b-4412-8089-2dd376001597, terminating  ```  Output of pod running Firefox (I excluded Chrome for the sake of brevity):  ``` 09:15:07.456 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@1c7618a1 09:15:07.457 INFO - /session: Executing POST on /session (handler: BeginSession) 09:15:07.463 INFO - Capabilities are: Capabilities {acceptInsecureCerts: true, browserName: firefox, name: ... version: } 09:15:07.463 INFO - Capabilities {acceptInsecureCerts: true, browserName: firefox, name: Testing Selenium-2 Remote W..., version: } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) 1518081307468   geckodriver     INFO    geckodriver 0.19.1 1518081307474   geckodriver     INFO    Listening on 127.0.0.1:20239 1518081307648   mozrunner::runner       INFO    Running command: ""/usr/bin/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.cSwF2S4YA8I7"" 1518081308161   Marionette      INFO    Enabled via --marionette 1518081309733   Marionette      INFO    Listening on port 42301 1518081309817   Marionette      WARN    TLS certificate errors will be ignored for this session 1518081309915   Marionette      DEBUG   Register listener.js for window 2147483649 09:15:09.992 INFO - Detected dialect: W3C 09:15:10.091 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@2b6fabb9 09:15:10.092 INFO - Handler thread for session d7e4e1ea-239b-4412-8089-2dd376001597 (firefox): Executing POST on /session/d7e4e1ea-239b-4412-8089-2dd376001597/url (handler: ServicedSession) 09:15:10.093 INFO - To upstream: {""url"":""https://wwwundisclosed""} 1518081310097   Marionette      DEBUG   Received DOM event ""beforeunload"" for ""about:blank"" 1518081315225   Marionette      DEBUG   Received DOM event ""pagehide"" for ""about:blank"" 1518081315226   Marionette      DEBUG   Received DOM event ""unload"" for ""about:blank"" 1518081315681   Marionette      DEBUG   Received DOM event ""DOMContentLoaded"" for ""https://wwwundisclosed"" 1518081349475   addons.productaddons    WARN    Failed downloading XML, status: 0, reason: timeout 1518081406965   Marionette      DEBUG   Received DOM event ""pageshow"" for ""https://wwwundisclosed"" 09:16:46.969 INFO - To downstream: {""value"": {}} 1518081439951   addons.productaddons    WARN    Failed downloading via XHR, status: 0, reason: error  ``` ## Steps to reproduce - The code I run boils down to this, no fancy stuff in it:  ``` WebDriver driver = new RemoteWebDriver(new URL(Config.hub), capabilities ); capabilities.setCapability(""name"", ""nothing special""); driver.get(Config.target);  //","closed","R-awaiting answer,","mar1ged","2018-02-08T10:18:39Z","2021-09-05T10:20:27Z"
"","5423","unable to use selenium with RPi 0 W","## Meta - OS:   Raspbian Browser: Firefox    ## Expected Behavior - The program should run ## Actual Behavior - It's not running. It is giving me the following error (python 3.5):  Traceback (most recent call last):   File ""/home/pi/Desktop/TNoodle/get_scramble.py"", line 5, in      driver = webdriver.Firefox()   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 148, in __init__     self.service.start()   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/common/service.py"", line 76, in start     stdin=PIPE)   File ""/usr/lib/python3.5/subprocess.py"", line 676, in __init__     restore_signals, start_new_session)   File ""/usr/lib/python3.5/subprocess.py"", line 1282, in _execute_child     raise child_exception_type(errno_num, err_msg) OSError: [Errno 8] Exec format error","closed","","cubetastic33","2018-02-01T13:39:45Z","2019-08-16T15:09:47Z"
"","5682","Browserstack new firefox W3C driver fails on is_displayed() due browser comparison in is_dispalyed() method","## Meta - OS:   OSX Sierra Selenium Version:   3.11.0 Browser:   Firefox  Browser Version:   64.0  ## Expected Behavior - Expected Conditions Visibility of Element should work with the new w3c driver.  ## Actual Behavior - Fails due to: `     def is_displayed(self):          """"""Whether the element is visible to a user.""""""         if self._w3c :             raw = pkgutil.get_data(__package__, 'isDisplayed.js')         # Only go into this conditional for browsers that don't use the atom themselves         if self._w3c and self.parent.capabilities['browserName'] == 'safari':` KeyError: 'browserName' when calling is_displayed(). It looks like it can solved by changing this to self.parent.capabilities['capabilities']['browserName']  ## Steps to reproduce - Using the new w3c driver, call is_displayed() on an element.   I threw a comment here: https://github.com/SeleniumHQ/selenium/commit/ab1abaad86e9644fc4e91c4c83e7a1d5347cf4c7","closed","","jkasser","2018-03-26T16:44:23Z","2019-08-16T08:09:57Z"
"","5240","On High Sierra the preferred geckodriver is not always selected","## Meta - OS:   OSX High Sierra Selenium Version:   I've installed the 3.4.4, 3.6.0, and 3.8.0 rubygem for selenium-webdriver Browser:   Firefox  Browser Version:   56.0.2 and 57.0.1  ## Expected Behavior -  If multiple geckodriver installations are found at the @executable path prefer the one that is just named geckodriver  ## Actual Behavior -  In the selenium source code the @executable name has a star appended to it (""geckodriver*""). The order of what is selected by selenium changed from Sierra to High Sierra (maybe because of changes in file system behaviors?). In my case tests that passed on Sierra started failing on High Sierra.  ## Steps to reproduce -  On my system I have a geckodriver link in /usr/local/bin to my homebrew cellar version of 0.19.1. If you also place an older geckodriver in /usr/local/bin named geckodriver.sav selenium will prefer to use it instead.  In my case geckodriver.sav may have been version 0.14.0. I started seeing test failures with Capybara fill_in command where it complained that it expected a string and got a Undefined object instead. An IllegalArgumentException I think. This was a known bug fixed in 0.16.1 or similar.  None of these bugs were apparent until after upgrading to High Sierra.","closed","OS-mac,","bdezonia","2017-12-20T23:49:34Z","2019-08-16T19:09:40Z"
"","5560","WebElementCondition not instanceof Condition","## Meta - OS:   OSX 10.13.3  Selenium Version:   selenium-webdriver@4.0.0-alpha.1  Browser:   Chrome  Browser Version:   Version 64.0.3282.186 (Official Build) (64-bit)  ## Expected Behavior - `driver.wait()` should accept a WebElementCondition, i.e. `driver.wait(until.elementLocated(By.css(selector)))`  ## Actual Behavior - the above example throws the error `TypeError: Wait condition must be a promise-like object, function, or a Condition object`  ## Steps to reproduce - `driver.wait(until.elementLocated(By.css(selector)))`   This is some serious JavaScript weirdness: `Object.getPrototypeOf(condition) ===  WebElementCondition {}` yet `condition instanceof WebElementCondition === false` weird, right?  I was able to get the case to pass by adding `condition.constructor.name === 'WebElementCondition'` to `if (condition instanceof Condition)` in the WebDriver's wait function.","closed","C-nodejs,","forrest-rival","2018-03-02T03:52:49Z","2022-06-13T00:13:34Z"
"","5479","implicitly_wait not work!","## Meta - OS:   osx Selenium Version:   3.9.0 Browser:   chrome Browser Version:   63.0.3239.132 ## Expected Behavior - `driver.get()` return  when time out! ## Actual Behavior - `driver.get()` block when time out ## Steps to reproduce - ``` from scrapy import signals from scrapy.http import HtmlResponse from selenium import webdriver from selenium.webdriver.support.wait import WebDriverWait  options = webdriver.ChromeOptions() options.add_argument(             'user-agent=""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36""')  options.add_argument('lang=zh_CN.UTF-8') driver = webdriver.Chrome(chrome_options=options) driver.implicitly_wait(10) driver.get('http://jandan.net/ooxx/') ## other code  ```","closed","","falltodis","2018-02-11T02:10:35Z","2019-08-16T14:09:43Z"
"","4904","Failed: java.io.FileNotFoundException exception on running protractor test on safari","## Meta - OS:   OS X Sierra Selenium Version:   selenium standalone: 3.6.0 Browser:   Safari 10  ## Expected Behavior - There should be no error on this  ## Actual Behavior - I get an error like the following when running my protractor test on safari. It only happens with safari but the problems seems to be from selenium if I look at the stack trace.  [safari #51] Failed: java.io.FileNotFoundException: http://localhost:29917/session/658663C8-1A53-44CE-804E-F6A17E4675AB/element/node-CA121C93-F696-41AA-903C-270872F8F920/displayed [safari #51] Stack: [safari #51] WebDriverError: java.io.FileNotFoundException: http://localhost:29917/session/658663C8-1A53-44CE-804E-F6A17E4675AB/element/node-CA121C93-F696-41AA-903C-270872F8F920/displayed [safari #51] at WebDriverError (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/error.js:27:5) [safari #51] at Object.checkLegacyResponse (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/error.js:505:15) [safari #51] at parseHttpResponse (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:509:13) [safari #51] at doSend.then.response (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:440:13) [safari #51] at process.tickCallback (internal/process/next_tick.js:109:7) [safari #51] From: Task: WebElement.isDisplayed() [safari #51] at WebDriver.schedule (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver.js:816:17) [safari #51] at WebElement.schedule (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver.js:1921:25) [safari #51] at WebElement.isDisplayed (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver.js:2270:17) [safari #51] at actionFn (/usr/local/lib/node_modules/protractor/lib/element.ts:94:34) [safari #51] at Array.map (native) [safari #51] at actionResults.getWebElements.then (/usr/local/lib/node_modules/protractor/lib/element.ts:484:67) [safari #51] at ManagedPromise.invokeCallback_ (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:1366:14) [safari #51] at TaskQueue.execute_ (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:2970:14) [safari #51] at TaskQueue.executeNext_ (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:2953:27) [safari #51] at asyncRun (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:2813:27)Error [safari #51] at ElementArrayFinder.applyAction_ (/usr/local/lib/node_modules/protractor/lib/element.ts:482:23) [safari #51] at ElementArrayFinder.(anonymous function) [as isDisplayed] (/usr/local/lib/node_modules/protractor/lib/element.ts:96:21) [safari #51] at ElementFinder.(anonymous function) [as isDisplayed] (/usr/local/lib/node_modules/protractor/lib/element.ts:873:14) ....  ## Steps to reproduce -  This is the problematic piece of code giving me that problem. It seems to happen every time there is a promise.then operation. My protractor test script is written in typescript   banner.button1.isDisplayed().then(function(result) {           if ( result ) {             banner.button1.click();           }       });    Is there a way to workaround this or resolve this problem?","closed","R-awaiting answer,","no5419595","2017-10-18T21:36:35Z","2019-08-17T03:09:34Z"
"","5577","Capybara session becomes unresponsive after empty response","## Meta - OS:   OS X 10.13.3  Selenium Version:   Ruby 2.3.3p222 Selenium Webdriver 3.10.0  ChromeDriver 2.33.506106  Browser:   Chrome 65  Browser Version:   65.0.3325.146 (Official Build) (64-bit)  ## Expected Behavior - Chrome Driver is responsive after receiving an empty response. Previously, it was possible to assert the contents of the browser when an empty response was received, such as `expect(page).to have_content('ERR_EMPTY_RESPONSE')`  ## Actual Behavior - Chrome Driver becomes unresponsive after receiving an empty response  ## Steps to reproduce - ```ruby Capybara.default_driver = :selenium_chrome # => :selenium_chrome  session = Capybara.current_session # => #  session.visit 'https://www.github.com' # => nil  session.visit 'http://notfound.google.com' Net::ReadTimeout: Net::ReadTimeout from /Users/jcarlson/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/protocol.rb:158:in `rbuf_fill'  session.visit 'https://www.google.com' Net::ReadTimeout: Net::ReadTimeout from /Users/jcarlson/.rbenv/versions/2.3.3/lib/ruby/2.3.0/net/protocol.rb:158:in `rbuf_fill' ```  This issue appears to have cropped up after Chrome self-updated to v65. In order to get it working again, I have tried upgrading `selenium-webdriver` and `capybara` gems as well as the `chromedriver` installed via Homebrew.  At this point, I am unable to confirm whether this is a problem with `chromedriver`, `selenium-webdriver`, or Chrome itself.","closed","","jcarlson","2018-03-07T20:45:34Z","2019-08-16T11:09:46Z"
"","5766","https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver needs update for Mac OS default location","## Meta - OS:   OS Selenium Version:   latest Browser:   Chrome driver  In this help page it says default location as `/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome`  Expected :    `/usr/local/bin`","closed","R-awaiting answer,","vikramvi","2018-04-12T05:16:00Z","2019-08-16T06:09:39Z"
"","5690","Wiki Page needs updating","## Meta - OS:   N/A Selenium Version:   N/A Browser:   N/A   On the page: https://github.com/SeleniumHQ/selenium/wiki/Logging links labeled ""capabilities page"" lead to https://github.com/SeleniumHQ/selenium/DesiredCapabilities when they should lead to https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities. I cannot find how to suggest wiki edits, otherwise I'd submit a PR myself.  ## Expected Behavior - When I click ""capabilities page"" , I should be taken to https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities  ## Actual Behavior - I am actually taken to https://github.com/SeleniumHQ/selenium/DesiredCapabilities, a 404 page.  ## Steps to reproduce - Visit https://github.com/SeleniumHQ/selenium/wiki/Logging and click on any link labeled ""capabilities page"".","closed","","jguffey","2018-03-27T17:10:06Z","2019-08-16T08:09:49Z"
"","4901","Command line server for the IE driver has stopped working (upgrading to 3.6 from 3.4)","## Meta - OS:   Microsoft Windows 10 Pro 10.0.15063 build 15063 Selenium Version:   robotframework (3.0.2) robotframework-ftplibrary (1.4) robotframework-requests (0.4.7) robotframework-selenium2library (1.8.0) robotframework-seleniumlibrary (3.0.0b1) robotframework-SikuliLibrary (0.1.5) Browser:   Ie11 Browser Version:    ![image](https://user-images.githubusercontent.com/2149815/31729062-3f65d03c-b42e-11e7-9634-9c8bf66be216.png)   ## Expected Behavior - Browser should be opened ## Actual Behavior - Browser crash opening ## Steps to reproduce -  Execute this Test ```  *** Settings *** Library           	     SeleniumLibrary     15    15  *** Test Cases *** CrashTest 	Open Browser			https://www.google.com				ie   ```  i used the last version of 32 bit driver (http://www.seleniumhq.org/download/) . ![image](https://user-images.githubusercontent.com/2149815/31729418-400913d6-b42f-11e7-85bf-70307485226d.png)  if i use the 3.4 version, it works ![image](https://user-images.githubusercontent.com/2149815/31729446-54fe0f94-b42f-11e7-900d-5e39a2cce816.png)  how i can give some log? thanks.","closed","D-IE,","andreabisello","2017-10-18T16:08:32Z","2018-05-11T14:16:49Z"
"","5213","'SELENIUM_SERVER_JAR'","## Meta - OS:   MacOS High Sierra.Version 10.13  Browser:   Safar ## Expected Behavior - 1. Open browser 2. Login with given credentials ## Actual Behavior - Getting the error:  Traceback (most recent call last):   File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/selenium/webdriver/safari/webdriver.py"", line 51, in __init__     executable_path = os.environ[""SELENIUM_SERVER_JAR""]   File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/os.py"", line 669, in __getitem__     raise KeyError(key) from None KeyError: 'SELENIUM_SERVER_JAR'  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""MyFirstSeleniumScript.py"", line 3, in      driver = webdriver.Safari()   File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/selenium/webdriver/safari/webdriver.py"", line 54, in __init__     'SELENIUM_SERVER_JAR'"") Exception: No executable path given, please add one to Environment Variable                 'SELENIUM_SERVER_JAR'  ##Steps to reproduce -   ``` from selenium import webdriver driver = webdriver.Safari() driver.get(""https://www.facebook.com/"") driver.maximize_window() driver.get_screenshot_as_file(""/Users/kamolochka/PycharmProjects/selenium/Screenshots/Facebook.png"") driver.find_element_by_id('email').send_keys('test@mail.com') driver.find_element_by_name(""pass"").send_keys(""demo"") driver.find_element_by_id(""loginbutton"").click() driver.get_screenshot_as_file(""/Users/kamolochka/PycharmProjects/selenium/Screenshots/Facebook1.png"") driver.quit() ```   The same test run before without error.","closed","","kamola","2017-12-13T10:34:25Z","2019-08-16T20:09:59Z"
"","5109","selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service /usr/bin/safaridriver","## Meta - OS:   MacOS High Sierra 10.13.1 ![image](https://user-images.githubusercontent.com/1264761/33176592-8ef2d2b0-d02d-11e7-95b7-10681c65c3ef.png)  Selenium Version:   ``` ❯ pip freeze | grep selenium selenium==3.7.0 ``` Browser:   Safari  Browser Version:   11.0.1 ![image](https://user-images.githubusercontent.com/1264761/33176649-c7fbf992-d02d-11e7-9380-02c5723c4bc9.png)  ## Code  `safari.py`: ```python from selenium import webdriver  driver = webdriver.Safari('/usr/bin/safaridriver') driver.get('https://gableroux.com') ```  ## Expected Behavior  Selenium should connect to the `safaridriver` service  ## Actual Behavior  ``` python safari.py Traceback (most recent call last):   File ""safari.py"", line 3, in      driver = webdriver.Safari('/usr/bin/safaridriver')   File ""/usr/local/opt/pyenv/versions/selenium-example/lib/python3.4/site-packages/selenium/webdriver/safari/webdriver.py"", line 47, in __init__     self.service.start()   File ""/usr/local/opt/pyenv/versions/selenium-example/lib/python3.4/site-packages/selenium/webdriver/common/service.py"", line 102, in start     raise WebDriverException(""Can not connect to the Service %s"" % self.path) selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service /usr/bin/safaridriver ```  ## Steps to reproduce  ```bash # install pyenv brew install pyenv pyenv-virtualenv # install python 3.4.2 pyenv install 3.4.2 # create a virtualenv with that version pyenv virtualenv 3.4.2 selenium-example pyenv activate selenium-example # install selenium requirement pip install selenium==3.7.0 # Then execute the very simple script python safari.py ```  ```bash which safaridriver # /usr/bin/safaridriver ```  ```bash safaridriver --help # Usage: safaridriver [options] # 	-h, --help                Prints out this usage information. # 	-p, --port                Port number the driver should use. If the server # 	                          is already running, the port cannot be changed. # 	                          If port 0 is specified, a default port will be used. # 	--enable                  Applies configuration changes so that subsequent WebDriver # 	                          sessions will run without further authentication. safaridriver -p 0 safaridriver --enable ``` I entered root password when prompted.  I opened `Safari.app` and enabled *Allow remote automation*   It is now checked in the menu: ![image](https://user-images.githubusercontent.com/1264761/33177562-0bff763e-d031-11e7-8b6c-580a9812a874.png)   I've read related documentation: https://webkit.org/blog/6900/webdriver-support-in-safari-10/  > Ensure that the `Develop menu` is available. It can be turned on by opening Safari preferences (`Safari > Preferences` in the menu bar), going to the Advanced tab, and ensuring that the Show Develop menu in menu bar checkbox is checked.  ✅   > Enable Remote Automation in the Develop menu. This is toggled via `Develop > Allow Remote Automation` in the menu bar.  ✅   > Authorize `safaridriver` to launch the `webdriverd` service which hosts the local web server. To permit this, run `/usr/bin/safaridriver` once manually and complete the authentication prompt.  ✅   I did not find any other specific documentation for using `safaridriver` and `selenium`, am-I missing something? If everything looks right, I will fill a bug at https://bugreport.apple.com/ :v:","closed","","GabLeRoux","2017-11-23T14:32:15Z","2019-08-15T04:09:45Z"
"","5555","WebDriver.switchTo().window(String) does not switch to main document in Firefox 57 but it does in Chrome 62 and Firefox 45.","## Meta - OS:   macOS High Sierra (10.13.3) Selenium Version:   3.9.1 Browser:   Firefox  Browser Version:   57 (64-bit)  ## Expected Behavior -  1. I switch to a frame using WebDriver.switchTo().frame() 2. I switch to a different window using WebDriver.switchTo().window(String) 3. I switch back to the original window using WebDriver.switchTo().window(String) 4. In Chrome 62 (64-bit) and FF45, I am not inside the frame I switched to in step 1. In Firefox 57, I expect to behave the same as Chrome 62 (64-bit) and FF45.  ## Actual Behavior -  4. In Firefox 57, I AM inside the frame I switched to in step 1. I am seeing different behavior than in Chrome 62 (64-bit) and FF45.  ## Steps to reproduce -  See Expected Behavior above.","closed","","bochulindra","2018-03-01T18:05:12Z","2019-08-16T11:09:59Z"
"","5080","Handle chrome notification in real-time","## Meta - OS:   macOS high sierra Selenium Version:  3.4.0  Browser:   Chrome  -->  Browser Version:   Version 61.0.3163.100 (Official Build) (64-bit)  ## Expected Behavior - Handling Chrome notification in real-time  ## Actual Behavior - Can't do the the above, only to disable notifications.  ## Steps to reproduce - I want to be able to test if a notification has arrived. I'm sending a message from a different device and gets a notification in the Monitor (Web), I want to test the UI to make sure the notification appeared but I couldn't find any way doing it with Selenium..  Any help will be appreciated. thanks !","closed","","NateZ7","2017-11-20T07:24:12Z","2019-08-17T01:10:00Z"
"","5236","Upload file on Safari browser","## Meta - OS:   MacOS 10.12 Selenium Version:   2.47.1, IntelliJ Browser:   Safari 11.0  Hi Guys,  I am running automated script present in Git and running through Bamboo on Saucelabs. The requirement is to upload the orders file to the cart page.  ==>input name=""myfile"" type=""file"" class="""" I am trying to upload using below code  #######Code########### String FullfileName = System.getProperty(""user.dir"") + fileName; WebElement element = driver().findElement(By.name(""myfile""));  LocalFileDetector detector = new LocalFileDetector();             File localFile = detector.getLocalFile(FullfileName);             if (uploadFileField instanceof RemoteWebElement) {                 ((RemoteWebElement) uploadFileField).setFileDetector(detector);             } element.sendKeys(localFile.getAbsolutePath()); #######Code########### 1.The above code working fine in Chrome. But its not working on safari browser. 2. The file path in bamboo is :/media/ephemeral0/build-dir/REG-IMBUCRC3-RRTF/src/Data/orders.csv]  I am not able to upload file using above code. Can anyone help me how to upload file in safari browser using sacelabs.  Thanks in advance","closed","","rshravi","2017-12-20T13:23:09Z","2019-08-15T19:09:56Z"
"","5706","Facing ""Connection refused (Connection refused)"" Error while launching SafariDriver with selenium-java","## Meta - OS:   MAC-OS Selenium Version:   3.9.1 Browser:   SafariDriver  ## Expected Behavior -  ## Actual Behavior -  Password:Password:Password:Exception in thread ""main"" org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:4856 Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:11:12.151Z' System info: host: 'soundhar.local', ip: '192.168.3.57', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.1', java.version: '1.8.0_131' Driver info: driver.version: SafariDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:78) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:60) 	at com.gmail.test.Accesssafa.main(Accesssafa.java:16) Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:4856 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158) 	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256) 	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134) 	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 6 more Caused by: java.net.ConnectException: Connection refused (Connection refused) 	at java.net.PlainSocketImpl.socketConnect(Native Method) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:125) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238) 	... 28 more","closed","R-awaiting answer,","ssoundhar","2018-03-29T14:04:22Z","2019-08-16T07:09:36Z"
"","5529","Unable to run Selenium / WebDriver scripts for Chrome, IOS Simulator while connected with LAN (For MAC System), It is working in WIFI & in Windows","## Meta - OS:   MAC- 10.11.6? OSX?  Selenium Version:  2.53.1 Browser:   Chrome. V60 Chrome Driver: 2.32  I have tried with Chrome - V64 and ChromeDriver: 2.35 and Selenium 3.8    Chrome Browser Version:    60.0 (64-bit)  ## Expected Behavior - Chrome should launch and execute the command (driver.get(URL))  ## Actual Behavior - Chrome don't launch when i connect my MAC with LAN, however it works fine while connected with WIFI and in Windows machine also  ## Steps to reproduce - WebDriver driver; String exePath = ""Path to Chromedriver""; System.setProperty(""webdriver.chrome.driver"", exePath); driver = new ChromeDriver(); driver.get(URL);    Error message: Starting ChromeDriver 2.32.498537 (cb2f855cbc7b82e20387eaf9a43f6b99b6105061) on port 6945 Only local connections are allowed. Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: session not created exception from disconnected: unable to connect to renderer   (Session info: chrome=60.0.3112.113)   (Driver info: chromedriver=2.32.498537 (cb2f855cbc7b82e20387eaf9a43f6b99b6105061),platform=Mac OS X 10.11.6 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 1.36 seconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: '01hw382197', ip: '172.25.155.171', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '9.0.4' Driver info: org.openqa.selenium.chrome.ChromeDriver 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:170) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:159) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:116) 	at dataAndConfig.Sample.main(Sample.java:31)","closed","","siddtiwari","2018-02-22T19:37:52Z","2019-08-16T13:09:34Z"
"","5743","In Safari - Driver does not support setting HTML5 geolocation information. Use the HasLocationContext property to test for the driver capability","## Meta - OS:   Mac High Sierra Selenium Version:  3.11.0 Browser:   Safari 11.0.3  Here i'm automating the Mac safari browser from windows machine using remotewebdriver. When i try to navigate some urls driver shows error message **""Driver does not support setting HTML5 geolocation information. Use the HasLocationContext property to test for the driver capability"".**  I can understand i need to add some capability to overcome this but i don't know what is that capability. **capabilities.SetCapability(""locationContextEnabled"", true);**      I tired to use ,  DesiredCapabilities capabilities = new DesiredCapabilities();                     capabilities = DesiredCapabilities.Safari();                     capabilities.SetCapability(""locationContextEnabled"", true);                                        RemoteWebDriver rwd = new RemoteWebDriver(new Uri(""http://"" + MacIPAddress + "":"" + MacPort + ""/wd/hub""), capabilities, TimeSpan.FromSeconds(180));                     mkConstants.webDriver = rwd;                     rwd.Navigate().GoToUrl(""https://****.*****.ca/Login/Login.aspx"");                       And i try to enable/disable the location options in Apple--> preferences->security&privacy-->privacy tab.  But it doesn't help me,  How can i fix this, please suggest me ????????  ## Expected Behavior - It should navigate expected page. ## Actual Behavior - Showing error - ""Driver does not support setting HTML5 geolocation information. Use the HasLocationContext property to test for the driver capability"". ## Steps to reproduce -  DesiredCapabilities capabilities = new DesiredCapabilities();                     capabilities = DesiredCapabilities.Safari();                     capabilities.SetCapability(""locationContextEnabled"", true);                                        RemoteWebDriver rwd = new RemoteWebDriver(new Uri(""http://"" + MacIPAddress + "":"" + MacPort + ""/wd/hub""), capabilities, TimeSpan.FromSeconds(180));                     webDriver = rwd;                     rwd.Navigate().GoToUrl(""https://****.*****.ca/Login/Login.aspx"");                      Thanks in advance!","closed","R-awaiting answer,","Elangopalakrishnan","2018-04-09T10:18:18Z","2019-08-14T18:09:37Z"
"","5602","java.lang.NoSuchMethodError: org.openqa.selenium.support.ui.FluentWait.until(Lcom/google/common/base/Function;)Ljava/lang/Object with selenium 3.9.0 and guava 21","## Meta - OS:   MAC Selenium Version:   3.9.0 Browser:   iosdriver Native app  Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","srivishal","2018-03-13T08:38:22Z","2019-08-16T10:09:34Z"
"","5672","Empty page on firefox when running JMeter WebDriver Sampler","## Meta - OS:   Mac Selenium Version:   2.52.0 Browser:   Firefox   Browser Version:   59.0.1  ## Expected Behavior - My WebDriver Sampler on JMeter looks like this: WDS.sampleResult.sampleStart() WDS.browser.get('http://google.com') WDS.sampleResult.sampleEnd()  After running the Thread I can see that a new firefox browser is opened but the page is empty.  ## Actual Behavior - After running the Thread I can see that a new firefox browser is opened but the page is empty.  And I see this error on the logs:  Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: on {972ce4c6-7e08-4474-a285-3208198ce6fd} in app-global  I have not used port 7055.  ## Steps to reproduce -","closed","","hello1357","2018-03-23T19:51:05Z","2019-08-15T11:09:35Z"
"","5354","File upload in Selenium standalone fails with JSON parse error","## Meta - OS:   Linux aim-server.crtdev.local 4.13.12-1-ARCH #1 SMP PREEMPT Wed Nov 8 11:54:06 CET 2017 x86_64 GNU/Linux Selenium Version:   Selenium build info: version: '3.8.1', revision: '6e95a6684b' Browser:   chromium 62.0.3202.94-1  (64 bit)  Browser Version:   ChromeDriver 2.32 (64 bit)   ## Expected Behavior - A large file is uploaded  ## Actual Behavior - error in output ``` PHP Fatal error:  Uncaught PHPWebDriver_UnhandledWebDriverError: Failed parsing JSON source: JsonReader at line 1 column 52768645 path $.file to Json in /home/aim/public_html/xcart_4_6_x/tests/selenium_tests/php-webdriver/PHPWebDriver/WebDriverBase.php:50 Stack trace: #0 /home/aim/public_html/xcart_4_6_x/tests/selenium_tests/php-webdriver/PHPWebDriver/WebDriverBase.php(216): PHPWebDriver_WebDriverBase::throwException(13, 'Failed parsing ...', Array) #1 /home/aim/public_html/xcart_4_6_x/tests/selenium_tests/php-webdriver/PHPWebDriver/WebDriverBase.php(261): PHPWebDriver_WebDriverBase->curl('POST', '/file', Array, Array) #2 /home/aim/public_html/xcart_4_6_x/tests/selenium_tests/php-webdriver/PHPWebDriver/WebDriverElement.php(73): PHPWebDriver_WebDriverBase->__call('file', Array) #3 /home/aim/public_html/xcart_4_6_x/tests/selenium_tests/upload_patches_toFA.php(613): PHPWebDriver_WebDriverElement->sendKeys('/home/aim/tmp/u...') #4 {main}   thrown in /home/aim/public_html/xcart_4_6_x/tests/selenium_tests/php-webdriver/PHPWebDriver/WebDriverBase.php on line 50 ```  verbose error from CURL ``` * Hostname localhost was found in DNS cache *   Trying 127.0.0.1... * TCP_NODELAY set * Connected to localhost (127.0.0.1) port 4444 (#0) > POST /wd/hub/session/549e21ce02ce6a31df225d68ab4e546e/file HTTP/1.1^M Host: localhost:4444^M Content-Type: application/json;charset=UTF-8^M Accept: application/json^M Content-Length: 92412893^M ^M * We are completely uploaded and fine < HTTP/1.1 500 Server Error^M < Content-Type: application/json;charset=utf-8^M < Content-Length: 4376^M < Server: Jetty(9.4.7.v20170914)^M < ^M * Connection #0 to host localhost left intact ```  result from CURL ``` stdClass Object (     [value] => stdClass Object         (             [stacktrace] => com.google.gson.JsonParseException: Failed parsing JSON source: JsonReader at line 1 column 52768645 path $.file to Json 	at com.google.gson.JsonParser.parse(JsonParser.java:88) 	at com.google.gson.JsonParser.parse(JsonParser.java:59) 	at com.google.gson.JsonParser.parse(JsonParser.java:45) 	at org.openqa.selenium.json.JsonToBeanConverter.convert(JsonToBeanConverter.java:203) 	at org.openqa.selenium.json.JsonToBeanConverter.convert(JsonToBeanConverter.java:57) 	at org.openqa.selenium.json.Json.toType(Json.java:78) 	at org.openqa.selenium.remote.server.commandhandler.UploadFile.execute(UploadFile.java:47) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:240) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.OutOfMemoryError: Java heap space 	at java.util.Arrays.copyOf(Arrays.java:3332) 	at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) 	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:596) 	at java.lang.StringBuilder.append(StringBuilder.java:190) 	at com.google.gson.stream.JsonReader.nextQuotedValue(JsonReader.java:1013) 	at com.google.gson.stream.JsonReader.nextString(JsonReader.java:815) 	at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:701) 	at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:722) 	at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:697) 	at com.google.gson.internal.Streams.parse(Streams.java:48) 	at com.google.gson.JsonParser.parse(JsonParser.java:84) 	at com.google.gson.JsonParser.parse(JsonParser.java:59) 	at com.google.gson.JsonParser.parse(JsonParser.java:45) 	at org.openqa.selenium.json.JsonToBeanConverter.convert(JsonToBeanConverter.java:203) 	at org.openqa.selenium.json.JsonToBeanConverter.convert(JsonToBeanConverter.java:57) 	at org.openqa.selenium.json.Json.toType(Json.java:78) 	at org.openqa.selenium.remote.server.commandhandler.UploadFile.execute(UploadFile.java:47) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:240) 	at org.openqa.selenium.remote.server.WebDriverServlet$$Lambda$83/1178793517.run(Unknown Source) 	... 5 more              [stackTrace] => Array                 (                     [0] => stdClass Object                         (                             [fileName] => JsonParser.java                             [methodName] => parse                             [className] => com.google.gson.JsonParser                             [lineNumber] => 88                         )                      [1] => stdClass Object                         (                             [fileName] => JsonParser.java                             [methodName] => parse                             [className] => com.google.gson.JsonParser                             [lineNumber] => 59                         )                      [2] => stdClass Object                         (                             [fileName] => JsonParser.java                             [methodName] => parse                             [className] => com.google.gson.JsonParser                             [lineNumber] => 45                         )                      [3] => stdClass Object                         (                             [fileName] => JsonToBeanConverter.java                             [methodName] => convert                             [className] => org.openqa.selenium.json.JsonToBeanConverter                             [lineNumber] => 203                         )                      [4] => stdClass Object                         (                             [fileName] => JsonToBeanConverter.java                             [methodName] => convert                             [className] => org.openqa.selenium.json.JsonToBeanConverter                             [lineNumber] => 57                         )                      [5] => stdClass Object                         (                             [fileName] => Json.java                             [methodName] => toType                             [className] => org.openqa.selenium.json.Json                             [lineNumber] => 78                         )                      [6] => stdClass Object                         (                             [fileName] => UploadFile.java                             [methodName] => execute                             [className] => org.openqa.selenium.remote.server.commandhandler.UploadFile                             [lineNumber] => 47                         )                      [7] => stdClass Object                         (                             [fileName] => WebDriverServlet.java                             [methodName] => lambda$handle$0                             [className] => org.openqa.selenium.remote.server.WebDriverServlet                             [lineNumber] => 240                         )                      [8] => stdClass Object                         (                             [fileName] => Executors.java                             [methodName] => call                             [className] => java.util.concurrent.Executors$RunnableAdapter                             [lineNumber] => 511                         )                      [9] => stdClass Object                         (                             [fileName] => FutureTask.java                             [methodName] => run                             [className] => java.util.concurrent.FutureTask                             [lineNumber] => 266                         )                      [10] => stdClass Object                         (                             [fileName] => ThreadPoolExecutor.java                             [methodName] => runWorker                             [className] => java.util.concurrent.ThreadPoolExecutor                             [lineNumber] => 1149                         )                      [11] => stdClass Object                         (                             [fileName] => ThreadPoolExecutor.java                             [methodName] => run                             [className] => java.util.concurrent.ThreadPoolExecutor$Worker                             [lineNumber] => 624                         )                      [12] => stdClass Object                         (                             [fileName] => Thread.java                             [methodName] => run                             [className] => java.lang.Thread                             [lineNumber] => 748                         )                  )              [message] => Failed parsing JSON source: JsonReader at line 1 column 52768645 path $.file to Json             [error] => unknown error         )      [status] => 13 )  ```  output from selenium  ``` 08:48:36.721 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@5de30824 08:48:36.722 INFO - Handler thread for session 549e21ce02ce6a31df225d68ab4e546e (chrome): Executing POST on /session/549e21ce02ce6a31df225d68ab4e546e/element (handler: ServicedSession) 08:48:36.724 INFO - To upstream: {""using"":""id"",""value"":""remotefile_1""} 08:48:36.753 INFO - To downstream: {""sessionId"":""549e21ce02ce6a31df225d68ab4e546e"",""status"":0,""value"":{""ELEMENT"":""0.4092952270388037-1""}} 08:48:39.804 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.UploadFile@4a0961cd 08:48:39.804 INFO - /session/549e21ce02ce6a31df225d68ab4e546e/file: Executing POST on /session/549e21ce02ce6a31df225d68ab4e546e/file (handler: UploadFile) 18/01/2018 09:05:07 idle keyboard:   turning X autorepeat back on. ```  ## Steps to reproduce - 1)Start Xvfb :99 -screen 0 1280x1024x24 -ac & 2)Start export DISPLAY=:99 && java -jar -Dwebdriver.chrome.driver=""/usr/bin/chromedriver"" /usr/share/selenium-server/selenium-server-standalone.jar & 3)Upload a file larger than 70Mb via a php-driver 4)The php-driver uses PHPWebDriver_WebDriverBase->curl('POST', '/file', Array, Array) command","closed","","ildar-aim","2018-01-18T05:22:33Z","2019-08-16T16:09:42Z"
"","5052","Docker, GeckoDriver: Lag at soundcard establish","## Meta - OS:   Linux 4.4.0-97-generic #120-Ubuntu SMP Tue Sep 19 17:28:18 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux Selenium Version:   Selenium via Citrus Framework 2.7.2 Docker: Docker version 1.12.6, build 78d1802 Browser:   Firefox  Hi I have a problem with soundcard in Docker. Firefox trying to connet sound and my tests stopped to 90 seconds on this:  ``` 1510651569977	mozrunner::runner	INFO	Running command: ""/usr/lib/firefox/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.9MjxVGdzWCzT""  (firefox:456): GLib-GObject-CRITICAL **: g_object_ref: assertion 'object->ref_count > 0' failed  (firefox:456): GLib-GObject-CRITICAL **: g_object_unref: assertion 'object->ref_count > 0' failed  (firefox:456): GLib-GObject-CRITICAL **: g_object_ref: assertion 'object->ref_count > 0' failed  (firefox:456): GLib-GObject-CRITICAL **: g_object_unref: assertion 'object->ref_count > 0' failed  (firefox:456): GLib-GObject-CRITICAL **: g_object_ref: assertion 'object->ref_count > 0' failed  (firefox:456): GLib-GObject-CRITICAL **: g_object_unref: assertion 'object->ref_count > 0' failed ALSA lib confmisc.c:768:(parse_card) cannot find card '0' ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_card_driver returned error: No such file or directory ALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory ALSA lib confmisc.c:1251:(snd_func_refer) error evaluating name ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory ALSA lib conf.c:4727:(snd_config_expand) Evaluate error: No such file or directory ALSA lib pcm.c:2239:(snd_pcm_open_noupdate) Unknown PCM default  (firefox:456): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message ```  How I can disable sound card establish? I don't want run container as privileged.   Thanks","closed","","purrplingcat","2017-11-14T09:32:28Z","2019-08-17T02:09:59Z"
"","5399","Driver randomly becomes unresponsive with Chrome v64","## Meta - OS:   Linux - Ubuntu 14.04 Selenium Version:   3.8.1 Browser:   Chrome Browser Version:   64.0.3282.119 (64-bit) Chromedriver Version: 2.35  ## Expected Behavior - WebDriver should be consistently responsive  ## Actual Behavior - WebDriver methods occasionally hang, causing the test runner to seize up.  ## Steps to reproduce - When calling methods belonging to the Selenium.WebDriver class, the driver randomly becomes unresponsive. I have a fairly simple test that does the following:  ``` driver.get(SOME_PAGE); driver.manage().addCookie(new Cookie(""auth"", SESSION_ID); driver.manage().logs(); ```  I run the test 240 times using CircleCI, and it fails once or twice, at any of those 3 methods. The error is always the same:  >  > [1517000354.693][SEVERE]: Timed out receiving message from renderer: 15.000  > [1517000354.695][SEVERE]: Timed out receiving message from renderer: -0.003  This started as soon as Chrome v.64 was released, so it's possible that it is just a Chrome bug, but I haven't seen anyone complain about it except for those using Selenium.","closed","","brandonschabell","2018-01-26T21:32:46Z","2019-08-15T14:09:49Z"
"","5391","selenium.common.exceptions.WebDriverException: Message: connection refused","## Meta - OS:   Linux (Debian)  Selenium Version:   3.8.1  Browser:   Firefox  Browser Version:   52.5.0  GeckoDriver Version: 0.19.1  ## Expected Behavior - Going to www.google.com with out getting connection refused  ## Actual Behavior - Justin opens the firefox blank page, it doesn't goes to the link page.  ## Steps to reproduce -  from selenium import webdriver driver = webdriver.Firefox() driver.get(""www.google.com"")     ( By the way, I am using Python ) I am sorry if this is a duplicate of an issue, I just can't fix it with my knowledge. In StackOverflow and in other communities,  I couldn't find the answer for me. What happens is when I use the code above (In the steps to reproduce) it opens a blank firefox page, then just stays like that, then gives me the error:  ""selenium.common.exceptions.WebDriverException: Message: connection refused"" with all other things.  In my geckodriver.log, it says:  1516818959130	geckodriver	INFO	geckodriver 0.19.0 1516818959177	geckodriver	INFO	Listening on 127.0.0.1:57047 1516818960498	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-profile"" ""/tmp/rust_mozprofile.Z9N4ep0K37xR"" 1516818963771	Marionette	ERROR	Error on starting server: [Exception... ""Component returned failure code: 0x804b0036 (NS_ERROR_SOCKET_ADDRESS_IN_USE) [nsIServerSocket.initSpecialConnection]""  nsresult: ""0x804b0036 (NS_ERROR_SOCKET_ADDRESS_IN_USE)""  location: ""JS frame :: chrome://marionette/content/server.js :: MarionetteServer.prototype.start :: line 95""  data: no] [Exception... ""Component returned failure code: 0x804b0036 (NS_ERROR_SOCKET_ADDRESS_IN_USE) [nsIServerSocket.initSpecialConnection]""  nsresult: ""0x804b0036 (NS_ERROR_SOCKET_ADDRESS_IN_USE)""  location: ""JS frame :: chrome://marionette/content/server.js :: MarionetteServer.prototype.start :: line 95""  data: no] MarionetteServer.prototype.start@chrome://marionette/content/server.js:95:19 MarionetteComponent.prototype.init@resource://gre/components/marionette.js:217:5 MarionetteComponent.prototype.handle@resource://gre/components/marionette.js:112:5   Can this be fixed? Is it just a bug, or a version problem?","closed","","complexpotato","2018-01-24T18:39:30Z","2019-08-16T16:09:47Z"
"","5359","driver.Manage().Window.Maximize() function for linux ChromeDriver not working","## Meta - OS:   Linux Selenium Version:   3.8.0 Browser:   Chrome driver.Manage().Window.Maximize() function for linux ChromeDriver not working.   stacktrace :  System.InvalidOperationException: unknown error: failed to change window state to maximized, current state is normal   (Session info: chrome=63.0.3239.132)   (Driver info: chromedriver=2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881),platform=Linux 3.19.0-43-generic x86_64)   at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError (OpenQA.Selenium.Remote.Response errorResponse) [0x000de] in :0    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute (System.String driverCommandToExecute, System.Collections.Generic.Dictionary`2[TKey,TValue] parameters) [0x0003d] in :0    at OpenQA.Selenium.Remote.RemoteWebDriver.InternalExecute (System.String driverCommandToExecute, System.Collections.Generic.Dictionary`2[TKey,TValue] parameters) [0x00000] in :0    at OpenQA.Selenium.Remote.RemoteWindow.Maximize () [0x00025] in :0    at TxWebTests.Config.Configuration.StartBrowser (System.Int32 i) [0x0001d] in :0","closed","","Subhacse17","2018-01-18T11:17:59Z","2019-08-16T16:09:41Z"
"","5003","quit() does not quit remote browser instance","## Meta - OS:   Linux Selenium Version:   3.6.0 Browser:   Chrome  I use Docker selenium/chrome-standalone in version 3.6.0  ## Expected Behavior To quit browser, clean up memory, stop process.  ## Actual Behavior Tons of Chrome + Java threads remain hanging in the system after my task finishes. i5 CPU is on 95% on all cores and memory on 8gigs.  ## Steps to reproduce -  I hava a loop and in each loop step I start new driver instance (remote one), go to URL, do what I want and then i call `close()` and `quit()`. I also wait for 5 secs (just to be sure the browsers gets quit and memory and threads are maintained. Then new loop step starts over.  I do that because whenI try to start up one browser window and process all my URLs in that instance Selenium quits on like 10th URL - memory error/unexpected crash.  This is how I start the browser: ```python opts = Options() opts.add_argument(""user-agent={}"".format(my_user_agent)) self.browser = webdriver.Remote(command_executor=""http://selenium:4444/wd/hub"", desired_capabilities=opts.to_capabilities()) self.browser.get(.....) ```  This is how I try to quit the instance: ```python self.browser.close()  # Was added as advice found on stack overflow. self.browser.quit() sleep(5) ```  Guys what I'm doing wrong in terms of quiting the browser/driver instance? Or tell me, how to ""dig into"" system (don't forget I use Remote driver) and kill the threads manually?  Thanks a lot.","closed","","im-n1","2017-11-03T07:50:14Z","2019-08-17T04:09:41Z"
"","4883","Proxy resolution using PAC file is not working as expected in 3.6 selenium grid.","## Meta - OS:   Linux  Selenium Version:   3.6  Browser:   chrome    Browser Version:   61.0.3163.100 (64 bit)  ## Expected Behavior - When used with PAC file proxy we should be able to open the URL  ## Actual Behavior - Page opening timesout  ## Steps to reproduce - webdriver code used as shown below ``` Proxy proxy = new Proxy(); proxy.setProxyAutoconfigUrl(""http://HEREGOESMYPROXYNAME:8083/accelerated_pac_base.pac""); caps.setCapability(CapabilityType.PROXY, proxy); ```  If I set the same proxy in my browser it opens the page fine without any issue. But when I use it selenium grid, selenium grid page timesout. This is internal site. So I think if proxy autoconfiguration is not handled properly it might be resulting using proxy and timingout. I dont suspect the PAC file because if i set the same autoconfiguration URL in IE/Chrome it works fine and opens the URL. Please let me know what other information you need to debug further. I will provide the details. **I have observed this issue after upgrading to 3.6.0** If I rollback to older grid version 3.0.1 I dont notice this issue. Here are the screenshots ![proxyissue-notworkingonseleniumgrid](https://user-images.githubusercontent.com/4651863/31645600-9b10e1d4-b31a-11e7-82ac-12fed84984c4.jpg) ![proxyissue-workingonrealbrowser](https://user-images.githubusercontent.com/4651863/31645601-9b478df6-b31a-11e7-983a-b9576b391491.jpg)  If you have any suggestions to workaround this i really appreciate it. Please let me know if you need any information. I will update the defect with required information. One more thing I have observed is same URL opens in some other sessions fine. I have a test with setup and teardown. Same URL opens in setup and fails in teardown. Its kind of intermittent.  Thanks Shankar KC","closed","R-awaiting answer,","shankarkc","2017-10-17T03:43:06Z","2019-08-17T06:10:00Z"
"","5077","Which version of selenium standalone is latest?","## Meta - OS:   Linnux Selenium Version:   2.53 Browser:   All  Browser Version:   Any  ## Expected Behavior - In selenium latest release of git tab shows Latest release as 3.5.3 But http://www.seleniumhq.org/download/ shows latest release as 3.7.1 Its not clear for the users if we need to move up to 3.7.1 OR stick to 3.5.3.... Is 3.7.1 is unstable and because of that 3.5.3 marked as latest release? Some days back 3.6.X was in releases tab. But now its gone from releases tab. I am not sure why? If we decide to pull something from releases can you pls add some note why its removed? So that we can adjust our-self to it. ## Actual Behavior - versions above 3.5.3 missing in reases tab ## Steps to reproduce - goto releases [link](https://github.com/SeleniumHQ/selenium/releases)","closed","","shankarkc","2017-11-20T03:34:29Z","2019-08-17T01:09:58Z"
"","5047","Cannot set Firefox log level in 3.7.1","## Meta - OS:   Fedora Linux XFCE 24 Selenium Version:   3.7.1 Browser:   Firefox  Browser Version:   56.0.2  Firefox Driver version: 0.19.1  ## Expected Behavior - When I set log level to info ```                 // firefox                 FirefoxDriverManager.getInstance().version(0.19.1).setup(); // download executables if need and set System.properties                 // https://developer.mozilla.org/en-US/Firefox/Headless_mode                 FirefoxOptions firefoxOptions = new FirefoxOptions();                 firefoxOptions.setLogLevel(FirefoxDriverLogLevel.INFO);                 driver = new FirefoxDriver(firefoxOptions); ``` I expect that log level was set to info.  ## Actual Behavior - Anyway log level don't sets. console ``` 1510508640285	Marionette	DEBUG	Canceled page load listener because no navigation has been detected ``` (https://travis-ci.org/nkonev/blog/builds/301013382#L4774)  ## Steps to reproduce - See code above.  I catched this bug when I updated from selenium 3.7.0 to 3.7.1. Log sets correct in selenium 3.7.0 (https://travis-ci.org/nkonev/blog/builds/301005993#L4201)","closed","","nkonev","2017-11-12T17:57:59Z","2019-08-17T03:09:37Z"
"","5575","Selenium grid v3.10.0 doesn't start at docker container","## Meta - OS:   Docker container Selenium Version:   3.10.0  Grid  ## Expected Behavior - Correct start of selenium grid in docker container With selenium 3.9.1 all works correctly  ## Actual Behavior - Container doesn't start  > Exception in thread ""main"" java.lang.NullPointerException > 	at org.openqa.grid.internal.cli.GridHubCliOptions.lambda$defaults$0(GridHubCliOptions.java:52) > 	at com.beust.jcommander.JCommander.initializeDefaultValue(JCommander.java:662) > 	at com.beust.jcommander.JCommander.initializeDefaultValues(JCommander.java:356) > 	at com.beust.jcommander.JCommander.parse(JCommander.java:339) > 	at com.beust.jcommander.JCommander.parse(JCommander.java:319) > 	at org.openqa.grid.internal.cli.GridHubCliOptions.parse(GridHubCliOptions.java:42) >   ## Steps to reproduce - [link to GitHub repository](https://github.com/VitarLaeda/selenium-grid-dockerized) or  config :  ``` #!/bin/bash  echo "" {   \""host\"": null,   \""port\"": 4444,   \""prioritizer\"": null,   \""capabilityMatcher\"": \""org.openqa.grid.internal.utils.DefaultCapabilityMatcher\"",   \""throwOnCapabilityNotPresent\"": true,   \""newSessionWaitTimeout\"": $GRID_NEW_SESSION_WAIT_TIMEOUT,   \""jettyMaxThreads\"": $GRID_JETTY_MAX_THREADS,   \""nodePolling\"": $GRID_NODE_POLLING,   \""cleanUpCycle\"": $GRID_CLEAN_UP_CYCLE,   \""timeout\"": $GRID_TIMEOUT,   \""browserTimeout\"": $GRID_BROWSER_TIMEOUT,   \""maxSession\"": $GRID_MAX_SESSION,   \""unregisterIfStillDownAfter\"": $GRID_UNREGISTER_IF_STILL_DOWN_AFTER }""  ``` Dockerfile :  ``` FROM netflixoss/java:8  #------------------------------------------------ # Customize sources for apt-get #------------------------------------------------  RUN  mkdir -p /opt/selenium \     && wget --no-verbose http://selenium-release.storage.googleapis.com/3.10/selenium-server-standalone-3.10.0.jar \     -O /opt/selenium/selenium-server-standalone.jar  RUN useradd seluser --shell /bin/bash --create-home \   && usermod -a -G sudo seluser \   && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \   && echo 'seluser:secret' | chpasswd  #------------------------ # Selenium Configuration #------------------------  EXPOSE 4444 EXPOSE 5555  ENV GRID_NEW_SESSION_WAIT_TIMEOUT 0 ENV GRID_JETTY_MAX_THREADS -1 ENV GRID_NODE_POLLING  5000 ENV GRID_CLEAN_UP_CYCLE 5000 ENV GRID_TIMEOUT 30000 ENV GRID_BROWSER_TIMEOUT 60000 ENV GRID_MAX_SESSION 5 ENV GRID_UNREGISTER_IF_STILL_DOWN_AFTER 30000  COPY generate_config /opt/selenium/generate_config COPY entry_point.sh /opt/bin/entry_point.sh RUN chmod a+rx /opt/bin/entry_point.sh RUN chmod a+rx /opt/selenium/generate_config  RUN chown -R seluser /opt/selenium  USER seluser  CMD [""/opt/bin/entry_point.sh""]  ``` entry_point.sh :  ``` #!/bin/bash  ROOT=/opt/selenium CONF=$ROOT/config.json  . $ROOT/generate_config >$CONF echo ""starting selenium hub with configuration:"" cat $CONF  if [ ! -z ""$SE_OPTS"" ]; then   echo ""appending selenium options: ${SE_OPTS}"" fi  function shutdown {     echo ""shutting down hub..""     kill -s SIGTERM $NODE_PID     wait $NODE_PID     echo ""shutdown complete"" }  java ${JAVA_OPTS} -jar /opt/selenium/selenium-server-standalone.jar \   -role hub \   -hubConfig $CONF \   ${SE_OPTS} & NODE_PID=$!  trap shutdown SIGTERM SIGINT wait $NODE_PID  ```","closed","","VitarLaeda","2018-03-07T15:38:32Z","2019-08-16T11:09:36Z"
"","4970","Chrome DesiredCapabilities C#","## Meta - OS:   Development : Windows 10 OS Browser : Not relevant (same issue with Win10, Ubuntu 17.04)  Selenium Version:   Selenium 3.6.0, C#  Browser:   Chrome  Browser Version:   Not relevant (tried with Chrome 48, Chrome 62)  ## Expected Behavior - I'm using Selenium Grid to pick a browser with C#. I have an issue when i try this code :   ``` var options = new ChromeOptions(); options.AddArgument(""headless""); options.AddArgument(""disable-gpu""); options.AddAdditionalCapability(CapabilityType.Platform, ""LINUX""); options.AddAdditionalCapability(CapabilityType.Version, ""62.0.3202.62""); var blabla = new RemoteWebDriver(new Uri(new Uri(Environment.GetEnvironmentVariable(""SeleniumHubUrl"") ?? ""http://seleniux:4444""), ""wd/hub""), options); ```  The structure of my options object seems to be correctly constructed.  The error I get is :  > System.InvalidOperationException : unknown error: cannot parse capability: goog:chromeOptions > from unknown error: unrecognized chrome option: platform >   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)  To have a good behaviour, I must write some ugly code : ``` var options = new ChromeOptions(); options.AddArgument(""headless""); options.AddArgument(""disable-gpu""); DesiredCapabilities cap = new DesiredCapabilities(); cap = options.ToCapabilities() as DesiredCapabilities;				 cap.SetCapability(CapabilityType.Platform, PlatformType.Linux.ToString().ToUpper()); cap.SetCapability(CapabilityType.Version, ""62.0.3202.62""); var blabla = new RemoteWebDriver(new Uri(new Uri(Environment.GetEnvironmentVariable(""SeleniumHubUrl"") ?? ""http://seleniux:4444""), ""wd/hub""), cap); ```  Here, the structure of the cap variable look like the structure of the previous but the part goog:chromeOptions is really odd... But this version works...  Am I missing something with the first code I tried to write ?  ## Actual Behavior - Clean code doesn't work, but ugly yes  ## Steps to reproduce -","closed","C-dotnet,","InkUisitor","2017-10-27T09:55:02Z","2019-08-17T05:09:45Z"
"","4920","Could not find ephemeral port to use","## Meta - OS:   Debian GNU/Linux 8.6 (jessie) Selenium Version:   3.6 and others  ## Expected Behavior -   Use PhantomJSDriver  ## Actual Behavior -  Executing loginException in thread ""main"" java.lang.UnsupportedOperationException: Could not find ephemeral port to use  Is the issue I've run into and can't fix it last hours. The problem was already described once in https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/3868  ``` cat /proc/sys/net/ipv4/ip_local_port_range 1024	65535 ```  No idea, what's wrong. LAST_PORT int is being set as 1024 instead 65535. In the meanwhile same script runs smoothly on CentOS Linux release 7.3.1611 and Ubuntu 16.04.","closed","","Tomasz-Silpion","2017-10-20T22:58:50Z","2019-08-17T06:09:48Z"
"","5221","With Javascript, logging in console does not work in 3.8.1, but it worked in 3.6","## Meta - OS:   Debian 9  Selenium Version:   selenium-3.8.1 (not in npm but built from repo). I need this newer version for using firefox actions API. b588bf52930fd4c51bbc9f9283dd0a92372b9383 added firefox support for w3c actions and I need it.  Browser:   Chrome and Firefox  chromium: Version 62.0.3202.89 (Developer Build) built on Debian buster/sid, running on Debian 9.2 (64-bit) firefox: 57 ## Expected Behavior - warnings are visible: [2017-12-14T08:40:59Z] [WARNING] [promise.ControlFlow] Detected scheduling of an unchained task.  ## Actual Behavior - empty console output  ## Steps to reproduce - **This is the commit that first introduced the issue. c063bb8d48e5c0afb2fc790c7894119a7bfa6627 ""[js] Stop using the promise manager in the main WebDriver class."" The commit just before does not have the issue.**  I copy pasted the logging example without modification (except for using chrome or firefox). https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs  When using 3.6 from npm, the logging works. When using the version 3.8.1, built manually after clone, it stops working. ```javascript import { Builder, By, logging, until } from 'selenium-webdriver';  describe(""try"", function() {     it(""try"", function() {         logging.installConsoleHandler();         logging.getLogger('promise.ControlFlow').setLevel(logging.Level.ALL);          let driver = new Builder()             .forBrowser('chrome')             .build();          driver.get('http://www.google.com/ncr');         driver.findElement(By.name('q')).sendKeys('webdriver');         driver.findElement(By.name('btnK')).click();         driver.wait(until.titleIs('webdriver - Google Search'), 1000);         driver.quit();     }) }) ```","closed","C-nodejs,","MagicPoulp","2017-12-14T08:42:44Z","2019-08-16T20:09:54Z"
"","5566","Element attributes class and id are concatenated by ruby element.attribute(:class)","## Meta - OS:   Darwin Kernel Version 16.7.0 x86_64  Selenium Version:   chromedriver 2.36, selenium-webdriver 3.10.0  Browser:   Chrome  Browser Version:   64.0.3282.186 (64-bit)  ## Expected Behavior - element.attribute(:class) should return the class string of the target element.  ## Actual Behavior - When inspecting google.com, the returned class string is a concatenation of the class and id strings.  I am new to this, so this might be the expected behavior, but I can't find anything to confirm this.  ## Steps to reproduce -   require 'selenium-webdriver'  driver = Selenium::WebDriver.for :chrome driver.get 'http://www.google.com'  ARGV.each do |t|   elements = driver.find_elements(tag_name: t)   puts ""#{t}: #{elements.size}""   elements.size.times do |i|     element = elements[i]     n = element.attribute(:name)     c = element.attribute(:class)     t = element.attribute(:type)     v = element.attribute(:value)     puts ""[#{i}]: name=#{n} class=#{c} type=#{t} value=#{v}""   end end  driver.quit  jcavallaro-mbp:ch01 jcavallaro$ ruby findtags.rb input input: 9 [0]: name=source class= type=hidden value=hp [1]: name=ei class= type=hidden value=V4SdWu3CO4K9Ud_yqZgJ [2]: name=q class=gsfi lst-d-f type=text value=      *Note that the class and id together here* [3]: name= class=gsfi type=text value= [4]: name= class=gsfi type=text value= [5]: name=btnK class= type=submit value=Google Search [6]: name=btnI class= type=submit value=I'm Feeling Lucky [7]: name=oq class= type=hidden value= [8]: name=gs_l class= type=hidden value=","closed","","jeffery-cavallaro","2018-03-05T18:13:47Z","2019-08-16T11:09:52Z"
"","5313","BrowserTimeout not working properly on grid in 2.5+","## Meta - OS:   CentOS 7 Selenium Version:   2.5+ Browser:   Chrome    Browser Version:   Chrome 63, chromedriver 2.34  ## Expected Behavior - If a client connected to a grid fails to call driver.close(), the grid should free the slot and kill chromedriver and any running browsers when browserTimeout is reached   ## Actual Behavior - Grid frees up the slot, but chromedriver and running browsers remain. If lots of tests fail to clean up after themselves, the grid eventually runs out of memory and crashes.  ## Steps to reproduce - On CentOS 7 I start the grid like:  java -Xmx2048m -Xms2048m -jar selenium-server-standalone-3.4.0.jar -role hub -maxSession 20 -timeout 180 -browserTimeout 200  I start the chrome node like:  java -Xmx2048m -Xms2048m -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver -jar /home/selenium/selenium-server-standalone-3.4.0.jar -role node -hub http://10.10.0.50:4444/grid/register -browser browserName=chrome,version=63.0.3,binary=/bin/google-chrome,maxInstances=9,platform=LINUX -maxSession 9  I have tried setting -enablePassThrough false, but the effect remains the same.  (Note with 3.4.0 in the example above, the browsers get killed as expected. Same command lines with newer versions, including 3.8.1, they fail.)","closed","C-grid,","mattblaha","2018-01-09T20:43:26Z","2019-08-15T11:10:00Z"
"","5087","((RemoteWebDriver) driver).getCapabilities().getPlatform().toString() returns ANY for iPhone/iPad","## Meta - OS:   Any iPhone / iPad Selenium Version:   2.53.1 Browser:   Safari on iPhone / iPad Browser Version:   Latest  ## Expected Behavior - ((RemoteWebDriver) driver).getCapabilities().getPlatform().toString() shall give either iPhone/iPad  ## Actual Behavior - ((RemoteWebDriver) driver).getCapabilities().getPlatform().toString() is giving value as ANY  ## Steps to reproduce - Please execute any selenium script on iPhone/iPad and use the property ((RemoteWebDriver) driver).getCapabilities().getPlatform().toString() for iPhone/iPad specific actions and then you will see that value of platform is not returned properly.","closed","","ghost","2017-11-20T20:27:46Z","2019-08-17T01:09:54Z"
"","5336","org.openqa.selenium.remote.service.DriverService - withLog should support log rotation","## Meta - OS:   any Selenium Version:   all Browser:   any Browser Version:   any  ## Expected Behavior - Example:  When you create a driver service and specify a log file: ``` new GeckoDriverService.Builder()           .usingDriverExecutable(new File(geckoDriverBinaryPath))           .withLogFile(geckoLogFile)           .build(); ```  This log file should allow a log rotation to manage many GB of log content.  ## Actual Behavior  The log file specified grows pretty quickly and gets many GB large. Causes issues.  ## Steps to reproduce - Run a really long running test with this log file set. Notice log file grows massive.","closed","I-enhancement,","nddipiazza","2018-01-12T15:01:24Z","2019-08-14T11:09:52Z"
"","5502","Selenium Node doesn't pass IE specific options to IE Driver","## Meta - OS:   Any Selenium Version:   3.8.1+ Browser:   Internet Explorer  The issue was introduced with the commit 9f5c1e89e0ca41511124032bc4ec67d556fd42aa. Maybe it should removed only se:CONFIG_UUID but not all options that starts with se: (e.g. se:ieOptions).  ## Steps to reproduce - 1. Start Selenium Hub and Node. The node is configured to run tests in IE. 2. Open any UI tool that allows to send REST requests (e.g. Postman). 3. Send a request to create a new session: ![image](https://user-images.githubusercontent.com/6681200/36282028-bdf69042-126d-11e8-98b4-4bd6a069de5e.png) You can see that the session was created with different options.  When you send the same request directly to IE Driver, the session is created with requested options: ![image](https://user-images.githubusercontent.com/6681200/36282066-de558e56-126d-11e8-8940-b1c379c8d318.png)  ## Expected Behavior - The options that are specific to Internet Explorer are propagated to IE Driver.  ## Actual Behavior - The session is started with default options.","closed","C-grid,","abasau","2018-02-15T21:37:06Z","2019-08-16T11:10:00Z"
"","5760","As a side-effect of CLI refactoring, Grid server configs no longer retain config file paths","## Meta - OS:   all      Selenium Version:   3.11.0      Browser:   all      Browser Version:   N/A    ## Expected Behavior - If a Grid server configuration object  is populated via JSON config file, the path of the config file should be retailed in the configuration object. ## Actual Behavior - The field in the configuration object that should contain the config file path is 'null'. ## Steps to reproduce - GridHubConfiguration hubConfig = GridHubConfiguration.loadFromJSON(getHubConfigPath()); System.out.println(hubConfig.hubConfig); // expect: C:\Users\sbabcoc\hubConfig.json // actual: null","closed","","sbabcoc","2018-04-11T03:13:37Z","2019-08-16T06:09:42Z"
"","4867","Expectation don't handle multiple fitting elements with different display state","## Meta - OS:   all Selenium Version:   latest Browser:   all  Call: ExpectedConditions.visibilityOfElementLocated(getSelector()))  ## Expected Behavior - Element which fits the expectation is found ## Actual Behavior - Only the first selector-found element is considered to fulfill visibility while there is a list of selector-found elements where one of them fulfill. ## Steps to reproduce -  Having a site where two(or more) elements are present found by xpath while the first is hidden and the second is visible, the expectation of the visibility of the element found is never fulfilled.  elementIfVisible(findElement(locator, driver));  while findElement(locator, driver) only returns the first which doesn't fulfill visibility.  Expected is, that the element which fulfill all criteria is found/considered.","closed","C-java,","HenningL","2017-10-13T22:00:39Z","2019-08-16T23:09:58Z"
"","5810","ExecuteScript and Actions don't deal with WrappedElements appropriately (from EventFiringWebDriver)","## Meta - OS:   All Selenium Version:   3.11.2 Browser:   All (using EventFiringWebDriver) (used Chrome)  Browser Version:   Any (used 66.0.3359.117 (64-bit))  ## Expected Behavior - Successfully perform actions or scripts using EventFiringWebDriver on WrappedElements.  ## Actual Behavior - Error message: System.ArgumentException : Argument is of an illegal typeOpenQA.Selenium.Support.Events.EventFiringWebDriver+EventFiringWebElement Parameter name: arg Stack trace:  at OpenQA.Selenium.Remote.RemoteWebDriver.ConvertObjectToJavaScriptObject(Object arg) at OpenQA.Selenium.Remote.RemoteWebDriver.ConvertArgumentsToJavaScriptObjects(Object[] args) at OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteScriptCommand(String script, String commandName, Object[] args) at OpenQA.Selenium.Support.Events.EventFiringWebDriver.ExecuteScript(String script, Object[] args)  Error message: System.Reflection.TargetException : Object does not match target type. Stack trace:  at System.Reflection.RuntimeMethodInfo.CheckConsistency(Object target) at System.Reflection.RuntimeMethodInfo.InvokeArgumentsCheck(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) at OpenQA.Selenium.Support.PageObjects.WebDriverObjectProxy.InvokeMethod(IMethodCallMessage msg, Object representedValue) at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type) at OpenQA.Selenium.ILocatable.get_Coordinates() at OpenQA.Selenium.Interactions.MoveMouseAction.Perform() at OpenQA.Selenium.Interactions.CompositeAction.Perform()  ## Steps to reproduce - In both cases driver was EventFiringWebDriver and targetElement was [FindsBy(How = How.ClassName, Using = ""some_class"")]  public static void RunSomeScript(this IWebDriver driver, IWebElement targetElement) {     IJavaScriptExecutor js = (IJavaScriptExecutor)driver;     js.ExecuteScript(""arguments[0].scrollIntoView(true);"", targetElement); }  public void DoSomeAction(this IWebDriver driver, IWebElement targetElement) {     Actions action = new Actions(driver);     action.MoveToElement(targetElement).Perform(); }","closed","C-dotnet,","cwood-panopto","2018-04-19T23:40:07Z","2019-08-16T05:09:37Z"
"","4842","Chrome Clicking element in iframe that has ""padding: 1rem .8rem 0 1.4rem!important;"" fails","## Meta - OS:   All  Selenium Version:   3.6.0  Browser:   Chrome  Browser Version:   61.0.3163.79   Chrome driver: 2.33.506120  ## Expected Behavior - Element gauth-widget-frame should be clicked after we switch to frame   ## Actual Behavior - Elemen is not clicked when `padding: 1rem .8rem 0 1.4rem!important;` is in the iframe style  ## Steps to reproduce - Run TestMeFail.java  Demo HTML:  https://github.com/bebef1987/demo-project/blob/sel_padding/padding.html  From  https://github.com/bebef1987/demo-project/tree/sel_padding","closed","","bebef1987","2017-10-10T12:03:39Z","2019-08-17T08:09:42Z"
"","5784","404 errors with ie11driverserver","## Meta - OS:   - Windows 7 Jenkins  Selenium Version:   - 3.11.0   Browser:   - Internet Explorer  Browser Version:   - 11.0.9600   ieDrvierServer Version - 3.11 32-bit  I am having trouble navigating to webpages using the ieWebdriverServer and Jenkins. When I run it locally from my machine or locally from the Jenkins machine, everything works as expected. However when I use a Jenkins job to start the Jenkins machine, every webpage 404's.  I though it might have something to do with ""Protected Mode"" but I set the options to ignore protected mode and I am still receiving the error.   ## Here is how I am initializing the webdriver:  ```              InternetExplorerOptions options1 = new InternetExplorerOptions();              options1.introduceFlakinessByIgnoringSecurityDomains();               InternetExplorerDriverService.Builder ies = new InternetExplorerDriverService.Builder();              ies.usingAnyFreePort().withLogLevel(InternetExplorerDriverLogLevel.TRACE);              InternetExplorerDriverService service = ies.build();              driver = new InternetExplorerDriver(service, options1); ```  ## Here is the Stacktrace  ``` Gradle suite > Gradle test > org.ghc.tests.pages.KPAUIAccountPreferencesTests STANDARD_ERROR     I 2018-04-16 14:17:54:347 c:\projects\webdriver\cpp\webdriver-server\server.cc(86) Starting WebDriver server on port: '42671' on host: ''     T 2018-04-16 14:17:54:348 c:\projects\webdriver\cpp\webdriver-server\server.cc(705) Entering Server::PopulateCommandRepository     T 2018-04-16 14:17:54:348 c:\projects\webdriver\cpp\iedriver\ieserver.cpp(32) Entering IEServer::IEServer     I 2018-04-16 14:17:54:348 c:\projects\webdriver\cpp\iedriver\ieserver.cpp(33) Driver version: 3.11.1.0 (32-bit)     T 2018-04-16 14:17:54:348 c:\projects\webdriver\cpp\webdriver-server\server.cc(178) Entering Server::Start     Started InternetExplorerDriver server (32-bit)     3.11.1.0     Listening on port 42671     Log level is set to TRACE     Only local connections are allowed     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /status HTTP verb: GET     body: {}     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand     D 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: GET /status {}     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\iedriver\ieserver.cpp(51) Entering IEServer::GetStatus     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\response.cc(72) Entering Response::SetSuccessResponse     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\response.cc(78) Entering Response::SetResponse     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\response.cc(51) Entering Response::Serialize     D 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(409) Response: {""value"":{""build"":{""version"":""3.11.1.0 (32-bit)""},""message"":""Ready to create session"",""os"":{""arch"":""x64"",""name"":""windows"",""version"":""6.1.7601.18015 (win7sp1_gdr.121129-1432)""},""ready"":true}}      T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(462) Entering Server::SendResponseToClient     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize     T 2018-04-16 14:17:54:547 c:\projects\webdriver\cpp\webdriver-server\server.cc(516) Entering Server::SendHttpOk     T 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\webdriver-server\server.cc(296) Entering Server::ReadRequestBody     T 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /session HTTP verb: POST     body: {       ""desiredCapabilities"": {""browserName"":""internet explorer"",""ensureCleanSession"":true,""ignoreProtectedModeSettings"":true,""platform"":""WINDOWS"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true},""version"":""""},       ""capabilities"": {         ""desiredCapabilities"": {""browserName"":""internet explorer"",""ensureCleanSession"":true,""ignoreProtectedModeSettings"":true,""platform"":""WINDOWS"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true},""version"":""""},         ""firstMatch"": [           {""browserName"":""internet explorer"",""platformName"":""windows"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true}}         ]       }     }     T 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand     T 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand     D 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: POST /session {       ""desiredCapabilities"": {""browserName"":""internet explorer"",""ensureCleanSession"":true,""ignoreProtectedModeSettings"":true,""platform"":""WINDOWS"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true},""version"":""""},       ""capabilities"": {         ""desiredCapabilities"": {""browserName"":""internet explorer"",""ensureCleanSession"":true,""ignoreProtectedModeSettings"":true,""platform"":""WINDOWS"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true},""version"":""""},         ""firstMatch"": [           {""browserName"":""internet explorer"",""platformName"":""windows"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true}}         ]       }     }     T 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\iedriver\ieserver.cpp(42) Entering IEServer::InitializeSession     T 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\iedriver\iesession.cpp(38) Entering IESession::Initialize     D 2018-04-16 14:17:54:835 c:\projects\webdriver\cpp\iedriver\iesession.cpp(53) Mutex acquired for session initalization     T 2018-04-16 14:17:54:840 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(514) Entering IECommandExecutor::ThreadProc     T 2018-04-16 14:17:54:840 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(50) Entering IECommandExecutor::OnCreate     T 2018-04-16 14:17:54:841 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(901) Entering IECommandExecutor::PopulateElementFinderMethods     T 2018-04-16 14:17:54:841 c:\projects\webdriver\cpp\iedriver\inputmanager.cpp(49) Entering InputManager::InputManager     T 2018-04-16 14:17:54:841 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(999) Entering BrowserFactory::GetExecutableLocation     T 2018-04-16 14:17:54:841 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(1040) Entering BrowserFactory::GetIEVersion     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlerrepository.cpp(108) Entering CommandHandlerRepository::PopulateCommandHandlers     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iesession.cpp(99) Created thread for command executor returns HWND: '006A01C6'     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iesession.cpp(103) Session id is retrived from command executor window: '4e0e669a-d171-4b29-b278-628856107868'     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iesession.cpp(109) Releasing session initialization mutex     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iesession.cpp(191) Entering IESession::ExecuteCommand     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(124) Entering IECommandExecutor::OnSetCommand     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""newSession"", ""locator"" : { }, ""parameters"" : {       ""desiredCapabilities"": {""browserName"":""internet explorer"",""ensureCleanSession"":true,""ignoreProtectedModeSettings"":true,""platform"":""WINDOWS"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true},""version"":""""},       ""capabilities"": {         ""desiredCapabilities"": {""browserName"":""internet explorer"",""ensureCleanSession"":true,""ignoreProtectedModeSettings"":true,""platform"":""WINDOWS"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true},""version"":""""},         ""firstMatch"": [           {""browserName"":""internet explorer"",""platformName"":""windows"",""se:ieOptions"":{""ignoreProtectedModeSettings"":true}}         ]       }     } }     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(135) Entering IECommandExecutor::OnExecCommand     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(586) Entering IECommandExecutor::DispatchCommand     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(46) Found W3C capabilities structure     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(209) Entering NewSessionCommandHandler::ValidateArguments     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(225) Validating alwaysMatch capability set     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(597) Entering NewSessionCommandHandler::ValidateCapabilities     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(598) Validating capabilities object     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(246) Validating firstMatch capability set with index 0     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(597) Entering NewSessionCommandHandler::ValidateCapabilities     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(598) Validating capabilities object     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(633) Found browserName capability. Validating value type is string.     D 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(662) Found platformName capability. Validating value type is string.     D 2018-04-16 14:17:54:846 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(889) Found se:ieOptions capability. Validating value type is object.     T 2018-04-16 14:17:54:846 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(573) Entering NewSessionCommandHandler::MergeCapabilities     T 2018-04-16 14:17:54:846 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(295) Entering NewSessionCommandHandler::ProcessCapabilities     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(515) Entering NewSessionCommandHandler::MatchCapabilities     D 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(300) Processing matched capability set with index 0     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability unhandledPromptBehavior     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability pageLoadStrategy     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(169) Entering NewSessionCommandHandler::GetPageLoadStrategyValue     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability timeouts     W 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(107) Invalid capability setting: timeouts is type null instead of object. Default value will be used: null      T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(346) Entering NewSessionCommandHandler::SetTimeoutSettings     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(360) Entering NewSessionCommandHandler::SetBrowserFactorySettings     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability ignoreProtectedModeSettings     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability ignoreZoomSetting     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability browserAttachTimeout     T 2018-04-16 14:17:54:847 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability initialBrowserUrl     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability ie.forceCreateProcessApi     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability ie.forceShellWindowsApi     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability ie.browserCommandLineSwitches     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability ie.ensureCleanSession     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(114) Entering BrowserFactory::Initialize     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(439) Entering NewSessionCommandHandler::SetInputSettings     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability nativeEvents     T 2018-04-16 14:17:54:848 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability elementScrollBehavior     T 2018-04-16 14:17:54:855 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability requireWindowFocus     T 2018-04-16 14:17:54:855 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability ie.fileUploadDialogTimeout     T 2018-04-16 14:17:54:855 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(103) Entering NewSessionCommandHandler::GetCapability for capability enablePersistentHover     T 2018-04-16 14:17:54:855 c:\projects\webdriver\cpp\iedriver\inputmanager.cpp(74) Entering InputManager::Initialize     T 2018-04-16 14:17:54:855 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(470) Entering NewSessionCommandHandler::CreateReturnedCapabilities     T 2018-04-16 14:17:54:856 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(779) Entering IECommandExecutor::CreateNewBrowser     T 2018-04-16 14:17:54:856 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(143) Entering BrowserFactory::LaunchBrowserProcess     D 2018-04-16 14:17:54:856 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(147) Ignoring Protected Mode Settings: 1     D 2018-04-16 14:17:54:856 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(153) Has Valid Protected Mode Settings: 0     T 2018-04-16 14:17:54:856 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(227) Entering BrowserFactory::IsIELaunchURLAvailable     T 2018-04-16 14:17:54:842 c:\projects\webdriver\cpp\iedriver\iesession.cpp(212) Beginning wait for response length to be not zero     T 2018-04-16 14:17:54:864 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(131) Entering BrowserFactory::ClearCache     T 2018-04-16 14:17:54:864 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(248) Entering BrowserFactory::LaunchBrowserUsingIELaunchURL     D 2018-04-16 14:17:54:864 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(249) Starting IE using the IELaunchURL API     D 2018-04-16 14:17:55:192 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(203) IE launched successfully with process ID 5276     D 2018-04-16 14:17:55:192 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(209) Process with ID 5276 is executing iexplore.exe     T 2018-04-16 14:17:55:192 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(366) Entering BrowserFactory::AttachToBrowser     D 2018-04-16 14:17:55:192 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(376) Using Active Accessibility to find IWebBrowser2 interface     T 2018-04-16 14:17:55:192 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(415) Entering BrowserFactory::AttachToBrowserUsingActiveAccessibility     T 2018-04-16 14:17:55:611 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:55:612 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: / HTTP verb: GET     body: {}     T 2018-04-16 14:17:55:612 c:\projects\webdriver\cpp\webdriver-server\server.cc(516) Entering Server::SendHttpOk     T 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /favicon.ico HTTP verb: GET     body: {}     T 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand     T 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand     D 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: GET /favicon.ico {}     D 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\server.cc(409) Response: { ""error"" : ""unknown method"", ""message"" : ""Command not found: GET /favicon.ico"" }     T 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\server.cc(462) Entering Server::SendResponseToClient     T 2018-04-16 14:17:55:685 c:\projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize     T 2018-04-16 14:17:55:686 c:\projects\webdriver\cpp\webdriver-server\server.cc(516) Entering Server::SendHttpOk     D 2018-04-16 14:17:55:707 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(435) Found window handle 02570172 for window with class 'Internet Explorer_Server' belonging to process with id 5276     T 2018-04-16 14:17:55:707 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(330) Entering BrowserFactory::GetDocumentFromWindowHandle     D 2018-04-16 14:17:55:785 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(397) Ignoring zoom setting: 0     T 2018-04-16 14:17:55:785 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(575) Entering BrowserFactory::GetBrowserZoomLevel     T 2018-04-16 14:17:55:797 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(615) Entering BrowserFactory::GetZoomLevel     D 2018-04-16 14:17:55:825 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(695) Browser zoom level is 100%     I 2018-04-16 14:17:55:826 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(802) Persistent hovering set to: 1     T 2018-04-16 14:17:55:826 c:\projects\webdriver\cpp\iedriver\proxymanager.cpp(97) ProxyManager::SetProxySettings     D 2018-04-16 14:17:55:826 c:\projects\webdriver\cpp\iedriver\proxymanager.cpp(113) Using existing system proxy settings.     T 2018-04-16 14:17:55:827 c:\projects\webdriver\cpp\iedriver\documenthost.cpp(33) Entering DocumentHost::DocumentHost     T 2018-04-16 14:17:55:827 c:\projects\webdriver\cpp\iedriver\cookiemanager.cpp(49) Entering CookieManager::Initialize     T 2018-04-16 14:17:55:827 c:\projects\webdriver\cpp\iedriver\browser.cpp(33) Entering Browser::Browser     T 2018-04-16 14:17:55:827 c:\projects\webdriver\cpp\iedriver\browser.cpp(292) Entering Browser::AttachEvents     T 2018-04-16 14:17:55:845 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(769) Entering IECommandExecutor::AddManagedBrowser     T 2018-04-16 14:17:55:845 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(773) Setting current browser id to ba6ec2c7-9ebb-488e-98d9-37dc4a73a2dc     T 2018-04-16 14:17:55:845 c:\projects\webdriver\cpp\webdriver-server\response.cc(72) Entering Response::SetSuccessResponse     T 2018-04-16 14:17:55:845 c:\projects\webdriver\cpp\webdriver-server\response.cc(78) Entering Response::SetResponse     T 2018-04-16 14:17:55:845 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:845 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:845 c:\projects\webdriver\cpp\webdriver-server\response.cc(51) Entering Response::Serialize     T 2018-04-16 14:17:55:854 c:\projects\webdriver\cpp\iedriver\iesession.cpp(221) Found non-zero response length     T 2018-04-16 14:17:55:854 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(158) Entering IECommandExecutor::OnGetResponse     T 2018-04-16 14:17:55:854 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(287) Entering IECommandExecutor::OnIsSessionValid     T 2018-04-16 14:17:55:854 c:\projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize     D 2018-04-16 14:17:55:854 c:\projects\webdriver\cpp\webdriver-server\server.cc(409) Response: {""value"":{""capabilities"":{""acceptInsecureCerts"":false,""browserName"":""internet explorer"",""browserVersion"":""11"",""pageLoadStrategy"":""normal"",""platformName"":""windows"",""proxy"":{},""se:ieOptions"":{""browserAttachTimeout"":0,""elementScrollBehavior"":0,""enablePersistentHover"":true,""ie.browserCommandLineSwitches"":"""",""ie.ensureCleanSession"":false,""ie.fileUploadDialogTimeout"":3000,""ie.forceCreateProcessApi"":false,""ignoreProtectedModeSettings"":true,""ignoreZoomSetting"":false,""initialBrowserUrl"":""http://localhost:42671/"",""nativeEvents"":true,""requireWindowFocus"":false},""setWindowRect"":true,""timeouts"":{""implicit"":0,""pageLoad"":300000,""script"":30000}},""sessionId"":""4e0e669a-d171-4b29-b278-628856107868""}}      T 2018-04-16 14:17:55:854 c:\projects\webdriver\cpp\webdriver-server\server.cc(462) Entering Server::SendResponseToClient     T 2018-04-16 14:17:55:854 c:\projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize     T 2018-04-16 14:17:55:855 c:\projects\webdriver\cpp\webdriver-server\server.cc(516) Entering Server::SendHttpOk     Apr 16, 2018 2:17:55 PM org.openqa.selenium.remote.ProtocolHandshake createSession     INFO: Detected dialect: W3C     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\server.cc(296) Entering Server::ReadRequestBody     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /session/4e0e669a-d171-4b29-b278-628856107868/timeouts HTTP verb: POST     body: {""implicit"":5000}     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand     D 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: POST /session/4e0e669a-d171-4b29-b278-628856107868/timeouts {""implicit"":5000}     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\server.cc(449) Entering Server::LookupSession     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iesession.cpp(191) Entering IESession::ExecuteCommand     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(124) Entering IECommandExecutor::OnSetCommand     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize     D 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""setTimeouts"", ""locator"" : { ""sessionid"" : ""4e0e669a-d171-4b29-b278-628856107868"" }, ""parameters"" : {""implicit"":5000} }     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(135) Entering IECommandExecutor::OnExecCommand     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(586) Entering IECommandExecutor::DispatchCommand     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(671) Entering IECommandExecutor::IsAlertActive     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:55:934 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(685) No alert handle is found     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\webdriver-server\response.cc(51) Entering Response::Serialize     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\iedriver\iesession.cpp(212) Beginning wait for response length to be not zero     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\iedriver\iesession.cpp(221) Found non-zero response length     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(158) Entering IECommandExecutor::OnGetResponse     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(287) Entering IECommandExecutor::OnIsSessionValid     D 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(409) Response: {""value"":null}      T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(462) Entering Server::SendResponseToClient     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize     T 2018-04-16 14:17:55:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(516) Entering Server::SendHttpOk     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\webdriver-server\server.cc(296) Entering Server::ReadRequestBody     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /session/4e0e669a-d171-4b29-b278-628856107868/window/maximize HTTP verb: POST     body: {}     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand     D 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: POST /session/4e0e669a-d171-4b29-b278-628856107868/window/maximize {}     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\webdriver-server\server.cc(449) Entering Server::LookupSession     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\iedriver\iesession.cpp(191) Entering IESession::ExecuteCommand     T 2018-04-16 14:17:55:941 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(124) Entering IECommandExecutor::OnSetCommand     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize     D 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""maximizeWindow"", ""locator"" : { ""sessionid"" : ""4e0e669a-d171-4b29-b278-628856107868"" }, ""parameters"" : {} }     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(135) Entering IECommandExecutor::OnExecCommand     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(586) Entering IECommandExecutor::DispatchCommand     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(671) Entering IECommandExecutor::IsAlertActive     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(685) No alert handle is found     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\browser.cpp(415) Entering Browser::GetTopLevelWindowHandle     T 2018-04-16 14:17:55:942 c:\projects\webdriver\cpp\iedriver\iesession.cpp(212) Beginning wait for response length to be not zero     T 2018-04-16 14:17:55:968 c:\projects\webdriver\cpp\webdriver-server\response.cc(72) Entering Response::SetSuccessResponse     T 2018-04-16 14:17:55:968 c:\projects\webdriver\cpp\webdriver-server\response.cc(78) Entering Response::SetResponse     T 2018-04-16 14:17:55:968 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:968 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:968 c:\projects\webdriver\cpp\webdriver-server\response.cc(51) Entering Response::Serialize     T 2018-04-16 14:17:55:974 c:\projects\webdriver\cpp\iedriver\iesession.cpp(221) Found non-zero response length     T 2018-04-16 14:17:55:974 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(158) Entering IECommandExecutor::OnGetResponse     T 2018-04-16 14:17:55:974 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(287) Entering IECommandExecutor::OnIsSessionValid     D 2018-04-16 14:17:55:974 c:\projects\webdriver\cpp\webdriver-server\server.cc(409) Response: {""value"":{""height"":784,""width"":1040,""x"":-8,""y"":-8}}      T 2018-04-16 14:17:55:974 c:\projects\webdriver\cpp\webdriver-server\server.cc(462) Entering Server::SendResponseToClient     T 2018-04-16 14:17:55:974 c:\projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize     T 2018-04-16 14:17:55:974 c:\projects\webdriver\cpp\webdriver-server\server.cc(516) Entering Server::SendHttpOk     T 2018-04-16 14:17:55:986 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:55:987 c:\projects\webdriver\cpp\webdriver-server\server.cc(296) Entering Server::ReadRequestBody     T 2018-04-16 14:17:55:987 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /session/4e0e669a-d171-4b29-b278-628856107868/url HTTP verb: POST     body: {""url"":""https://wa-qa.kap.org/html/public/index-new?dei=true""}     T 2018-04-16 14:17:55:987 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand     T 2018-04-16 14:17:55:987 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand     D 2018-04-16 14:17:55:987 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: POST /session/4e0e669a-d171-4b29-b278-628856107868/url {""url"":""https://wa-qa.kap.org/html/public/index-new?dei=true""}     T 2018-04-16 14:17:55:987 c:\projects\webdriver\cpp\webdriver-server\server.cc(449) Entering Server::LookupSession     T 2018-04-16 14:17:55:987 c:\projects\webdriver\cpp\iedriver\iesession.cpp(191) Entering IESession::ExecuteCommand     T 2018-04-16 14:17:55:988 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(124) Entering IECommandExecutor::OnSetCommand     T 2018-04-16 14:17:55:988 c:\projects\webdriver\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize     D 2018-04-16 14:17:55:988 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""get"", ""locator"" : { ""sessionid"" : ""4e0e669a-d171-4b29-b278-628856107868"" }, ""parameters"" : {""url"":""https://wa-qa.kap.org/html/public/index-new?dei=true""} }     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(135) Entering IECommandExecutor::OnExecCommand     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\iesession.cpp(212) Beginning wait for response length to be not zero     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(586) Entering IECommandExecutor::DispatchCommand     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(671) Entering IECommandExecutor::IsAlertActive     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:55:989 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(685) No alert handle is found     T 2018-04-16 14:17:55:991 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:55:991 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:55:991 c:\projects\webdriver\cpp\iedriver\browser.cpp(317) Entring Browser::NavigateToUrl     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\documenthost.cpp(143) Entering DocumentHost::SetFocusedFrameByElement     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\webdriver-server\response.cc(72) Entering Response::SetSuccessResponse     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\webdriver-server\response.cc(78) Entering Response::SetResponse     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\webdriver-server\response.cc(51) Entering Response::Serialize     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:027 c:\projects\webdriver\cpp\iedriver\browser.cpp(483) Browser ReadyState is not at least '4'; it was 1     T 2018-04-16 14:17:56:051 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:080 c:\projects\webdriver\cpp\iedriver\browser.cpp(50) Entering Browser::BeforeNavigate2     T 2018-04-16 14:17:56:103 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:103 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:103 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:103 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:103 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:103 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:103 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:105 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:108 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:172 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:172 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:172 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:172 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:172 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:172 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:172 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:182 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:183 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:237 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:237 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:237 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:237 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:237 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:237 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:237 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:253 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:253 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:303 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:307 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:368 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:368 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:369 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:369 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:369 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:369 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:369 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:386 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:386 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:450 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:450 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:450 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:450 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:450 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:450 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:450 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:457 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:457 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:508 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:508 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:508 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:508 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:508 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:508 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:508 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:509 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:519 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:570 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:570 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:570 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:570 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:570 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:570 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:570 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:602 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:604 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:639 c:\projects\webdriver\cpp\iedriver\browser.cpp(50) Entering Browser::BeforeNavigate2     T 2018-04-16 14:17:56:658 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:658 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:658 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:658 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:658 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:658 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:658 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:682 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:688 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:739 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:739 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:739 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:739 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:739 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:739 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:739 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:746 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:749 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:799 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:799 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:799 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:799 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:799 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:799 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:799 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:806 c:\projects\webdriver\cpp\iedriver\browser.cpp(463) Browser busy property is true.     T 2018-04-16 14:17:56:808 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(498) Entering IECommandExecutor::WaitThreadProc     T 2018-04-16 14:17:56:812 c:\projects\webdriver\cpp\iedriver\browser.cpp(96) Entering Browser::DocumentComplete     T 2018-04-16 14:17:56:860 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(174) Entering IECommandExecutor::OnWait     T 2018-04-16 14:17:56:860 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:860 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:860 c:\projects\webdriver\cpp\iedriver\browser.cpp(437) Entering Browser::Wait     D 2018-04-16 14:17:56:860 c:\projects\webdriver\cpp\iedriver\browser.cpp(447) Navigate Events Completed.     T 2018-04-16 14:17:56:860 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:860 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:864 c:\projects\webdriver\cpp\iedriver\browser.cpp(507) Waiting for document to complete...     T 2018-04-16 14:17:56:864 c:\projects\webdriver\cpp\iedriver\browser.cpp(521) Entering Browser::IsDocumentNavigating     D 2018-04-16 14:17:56:872 c:\projects\webdriver\cpp\iedriver\browser.cpp(512) Not in navigating state     T 2018-04-16 14:17:56:876 c:\projects\webdriver\cpp\iedriver\iesession.cpp(221) Found non-zero response length     T 2018-04-16 14:17:56:876 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(158) Entering IECommandExecutor::OnGetResponse     T 2018-04-16 14:17:56:876 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(287) Entering IECommandExecutor::OnIsSessionValid     D 2018-04-16 14:17:56:876 c:\projects\webdriver\cpp\webdriver-server\server.cc(409) Response: {""value"":null}      T 2018-04-16 14:17:56:876 c:\projects\webdriver\cpp\webdriver-server\server.cc(462) Entering Server::SendResponseToClient     T 2018-04-16 14:17:56:876 c:\projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize     T 2018-04-16 14:17:56:876 c:\projects\webdriver\cpp\webdriver-server\server.cc(516) Entering Server::SendHttpOk  Gradle suite > Gradle test > org.ghc.tests.pages.KPAUIAccountPreferencesTests STANDARD_OUT     --------------------------------------------     || Test:			validateKPMemberServicesLinkClick     || Class:			org.ghc.tests.pages.KPAUIAccountPreferencesTests     || Desc:			Verify KAP Member Services link opens the KP Member Services Page     || ENV:				QA     || Browser:			ie     --------------------------------------------     ExpectedTitle:			KAP Title  Gradle suite > Gradle test > org.ghc.tests.pages.KPAUIAccountPreferencesTests STANDARD_ERROR     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /session/4e0e669a-d171-4b29-b278-628856107868/title HTTP verb: GET     body: {}     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand     D 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: GET /session/4e0e669a-d171-4b29-b278-628856107868/title {}     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\server.cc(449) Entering Server::LookupSession     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iesession.cpp(191) Entering IESession::ExecuteCommand     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(124) Entering IECommandExecutor::OnSetCommand     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize     D 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""getTitle"", ""locator"" : { ""sessionid"" : ""4e0e669a-d171-4b29-b278-628856107868"" }, ""parameters"" : {} }     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(135) Entering IECommandExecutor::OnExecCommand     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(586) Entering IECommandExecutor::DispatchCommand     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(671) Entering IECommandExecutor::IsAlertActive     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\browser.cpp(699) Entering Browser::GetActiveDialogWindowHandle     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\browser.cpp(205) Entering Browser::GetContentWindowHandle     D 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(685) No alert handle is found     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\browser.cpp(161) Entering Browser::GetTitle     T 2018-04-16 14:17:56:935 c:\projects\webdriver\cpp\iedriver\iesession.cpp(212) Beginning wait for response length to be not zero     T 2018-04-16 14:17:56:950 c:\projects\webdriver\cpp\webdriver-server\response.cc(72) Entering Response::SetSuccessResponse     T 2018-04-16 14:17:56:950 c:\projects\webdriver\cpp\webdriver-server\response.cc(78) Entering Response::SetResponse     T 2018-04-16 14:17:56:950 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(725) Entering IECommandExecutor::GetCurrentBrowser     T 2018-04-16 14:17:56:950 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(731) Entering IECommandExecutor::GetManagedBrowser     T 2018-04-16 14:17:56:950 c:\projects\webdriver\cpp\webdriver-server\response.cc(51) Entering Response::Serialize  Gradle suite > Gradle test > org.ghc.tests.pages.KPAUIAccountPreferencesTests STANDARD_OUT     DriverTitle:			404 Not Found ```  And like I said, I can run it locally on the Jenkins machine just fine - it's when I use Jenkins to start the job that I am receiving the error.  Thanks for any and all help, -Z","closed","I-stale,","Nefariis","2018-04-16T21:42:00Z","2021-12-06T00:07:06Z"
"","5592","Unable to create new session.","## Meta - OS:    Windows 8.1 Selenium Version:    selenium-server-standalone-3.9.1.jar Browser:   Firefox  Browser Version:   49.0.1  ## Expected Behavior - It should create session  ## Actual Behavior - Unable to create new session.  ## Steps to reproduce - $ java -jar selenium-server-standalone-3.9.1.jar  http://127.0.0.1:4444/wd/hub/static/resource/hub.html  try to create firefox session.","closed","R-awaiting answer,","flik","2018-03-10T02:52:50Z","2019-08-15T19:09:57Z"
"","5139","Selenium Grid on Selenium-server-standalone-3.5.3 SendKeys command enters double charachters in IE","## Meta - OS:    Windows 10 64Bit  Selenium Version:   3.5.3 **Browser:**   Internet Explorer - 11  Browser Version:   11.1106.10586.0  ## Expected Behavior - Selenium via grid should populate the provided value   ## Actual Behavior -  the value is produced duplicatly for example if the given value is face it will be actually 'ffaaccee'  ## Steps to reproduce - Launch selenium grid . hub and node navigate to a url (https://www.google.com ) identify the search field  enter the value selenium in the search field using SendKeys() method","closed","","bored002","2017-11-29T12:29:55Z","2019-08-17T00:09:46Z"
"","5742","Command Line problem on running java -jar command for selenium 3.11","## Meta - OS:    Windows 10 Selenium Version:   3.11  ## Expected Behavior - command should run successfully  ## Actual Behavior - C:\Users\admin\Desktop\selenium-java-3.11.0>java -jar client-combined-3.11.0.jar no main manifest attribute, in client-combined-3.11.0.jar  ## Steps to reproduce - 1.Download latest version of selenium client from official website. 2.unzip the downloaded folder and try running the command java -jar client-combined-3.11.0.jar","closed","C-java,","SudeeptMohan","2018-04-09T09:05:25Z","2019-08-16T05:10:01Z"
"","5533","NPE with Selenium 3.9.1 in local execution (instanciate Hub by java code )","## Meta - OS:    Windows  Selenium Version: 3.9.1 Browser:   Chrome V   I used this code with many version of Seleniu 3.0.X   ExecutionManager.hub = new Hub(GridHubConfiguration.loadFromJSON(HUB_CONFIG_JSON));  And from the update with the version 3.9.1, I have a NPE without any stack trace or message ! when loading the hubconfig.json in the GridHubConfiguration   Browser Version:   64.XX  ## Expected Behavior - Grid is launched locally ## Actual Behavior - NPE ## Steps to reproduce - just execute the folowing code :  ExecutionManager.hub = new Hub(GridHubConfiguration.loadFromJSON(HUB_CONFIG_JSON));  Note : remotelly all works fine.  Thks FOR HELP.","closed","R-awaiting answer,","Moez-BenAissa","2018-02-23T11:32:45Z","2019-08-16T11:09:53Z"
"","4887","'Unable to create a new session because of no configuration' with Safari and Chrome","## Meta - OS:    macOS Sierra Version 10.12.3  Selenium Version:    3.6.0 Standalone Browser:   Chrome & Safari   Browser Version:   Chrome: 61.0.3163.100 64 bit, Safari: Version 10.0.3 (12602.4.8)   ## Expected Behavior -  Test session can be started on Chrome and Safari with Selenium 3.6.0  ## Actual Behavior -  Upon trying to start any test, Selenium throws an exception when profile chrome or safari is chosen (Firefox starts, but has other unrelated issues)  ┌─ @BeforeScenario # DesktopContext::hookBeforeScenario()       │       ╳  Could not open connection: Unable to create a new session because of no configuration.       ╳  Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z'       ╳  System info: host: '...', ip: '...', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.3', java.version: '1.8.0_121'       ╳  Driver info: driver.version: unknown (Behat\Mink\Exception\DriverException)  ## Steps to reproduce -  This is the configuration in behat.yml:  safari:   extensions:     Behat\MinkExtension:       base_url:  'http://'       default_session: selenium2       browser_name: 'safari'       selenium2:         capabilities: {""deviceType"":""ANY"", ""browser"":""safari"", ""browserName"":""safari"", ""deviceOrientation"":""ANY"", ""ignoreZoomSetting"":false, ""platform"":""MAC""}  chrome:   extensions:     Behat\MinkExtension:       base_url: 'http://'       default_session: selenium2       browser_name: 'chrome'       selenium2:         capabilities: {""deviceType"":""ANY"", ""marionette"":false, ""browserVersion"":""61"", ""browser"":""chrome"", ""name"":""Behat feature suite"", ""browserName"":""chrome"", ""deviceOrientation"":""ANY"", ""ignoreZoomSetting"":false, ""version"":""61"", ""platform"":""MAC""}","closed","","vomaya","2017-10-17T09:35:41Z","2019-08-17T07:09:42Z"
"","5558","select2 menus do not work in firefox-driver","## Meta - OS:    any Selenium Version:    any after 3.3.1, tested up to 3.8.1 Browser:    Firefox Browser Version:    any after 52, tested up to 58  ## Expected Behavior -  select2 (see https://select2.org/dropdown) menus should work in Firefox, same as other browsers  ## Actual Behavior -  select2 do not work correctly  ## Steps to reproduce - I have used the following (Java) code running through BrowserStack to test on various browsers.  ``` driver.get(""https://select2.org/dropdown"");  List selectElements = driver.findElements(By.tagName(""select"")); Assert.assertEquals(1, selectElements.size());  Select select = new Select(selectElements.get(0)); select.selectByValue(""NV""); ```  If the RemoteDriver is latest Firefox using latest Selenium version, I get: ``` org.openqa.selenium.WebDriverException: Element  could not be scrolled into view Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'mac-207-254-53-65.browserstack.com', ip: 'fe80:0:0:0:75:bdb3:579e:f092%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '1.8.0_51' Driver info: driver.version: unknown Command duration or timeout: 0 milliseconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83) 	at org.openqa.selenium.support.ui.Select.setSelected(Select.java:324) 	at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:201) 	at ... Caused by: org.openqa.selenium.WebDriverException: Element  could not be scrolled into view Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'mac-207-254-53-65.browserstack.com', ip: 'fe80:0:0:0:75:bdb3:579e:f092%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '1.8.0_51' Driver info: driver.version: unknown Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z' System info: host: 'SCG00845', ip: 'fe80:0:0:0:14:b5bd:eeda:a89a%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_144' Driver info: driver.version: unknown ```  This code works fine with other drivers - tested with Chrome, Edge, and IE. But more importantly: **this code works with Selenium version 3.3.1 + (last supported) Firefox 52**.  A workaround can be based on [this SO answer](https://stackoverflow.com/a/17757761/3124333).","closed","","SiKing","2018-03-01T21:09:22Z","2019-08-15T23:09:51Z"
"","5701","Server terminated early with status 0","## Meta - OS:     Windows 10 Selenium Version:        selenium standalone versions available: 3.11.0 [last]      chromedriver versions available: 2.35, 2.37 [last] Browser:    Chrome Browser Version:     Version 65.0.3325.181  ## Expected Behavior - [15:57:54][Step 5/6] [chrome #01-16] [15:57:18] I/local - Starting selenium standalone server... [15:57:54][Step 5/6] [chrome #01-16] [15:57:21] I/local - Selenium standalone server started at http://169.254.182.34:10936/wd/hub  ## Actual Behavior - [15:58:01][Step 5/6] [chrome #01-26] [15:57:59] I/local - Starting selenium standalone server... [15:58:01][Step 5/6] [chrome #01-26] [15:58:01] I/runnerCli - Server terminated early with status 0 [15:58:01][Step 5/6] [15:58:01] E/launcher - Runner process exited unexpectedly with error code: 1 ## Steps to reproduce - When i execute jasmine tests in parallel - sometimes is see that server failed to start.   Thanks for any help/workaround. Is any way exists try to restart failed server?","closed","R-awaiting answer,","amedvedjev","2018-03-28T14:41:49Z","2019-08-16T07:09:37Z"
"","5661","Session was terminated due to BROWSER_TIMEOUT exception occur while taking screenshot","## Meta - OS:     MAC & Windows 10 & Linux Selenium Version:      3.8.1 Browser:      Google Chrome  Browser Version:        63.0.3239.108 (64-bit) Expected Behavior -      Successfully taking screenshot  ## Actual Behavior -     the session was terminated due to BROWSER_TIMEOUT exception occur. ## Steps to reproduce -      Run a test with more than 10 browsers parallelly.  HubConfig.json ```  {   ""host"": ,   ""port"": 3333,   ""newSessionWaitTimeout"": -1,   ""servlets"" : [],   ""prioritizer"": null,   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""throwOnCapabilityNotPresent"": true,   ""nodePolling"": 5000,   ""cleanUpCycle"": 5000,   ""timeout"": 30000,   ""browserTimeout"": 180,   ""maxSession"": 40,   ""jettyMaxThreads"":-1 } ``` NodeConfig.json ``` { ""capabilities"":       [         {           ""browserName"": ""*firefox"",           ""maxInstances"": 20,           ""seleniumProtocol"": ""Selenium""         },         {           ""browserName"": ""*googlechrome"",           ""maxInstances"": 15,           ""seleniumProtocol"": ""Selenium""         },         {           ""browserName"": ""*iexplore"",           ""maxInstances"": 1,           ""seleniumProtocol"": ""Selenium""         },         {           ""browserName"": ""firefox"",           ""maxInstances"": 20,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""chrome"",           ""maxInstances"": 15,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""internet explorer"",           ""maxInstances"": 1,           ""seleniumProtocol"": ""WebDriver""         }       ],   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""maxSession"": 20,   ""port"": 4444,   ""register"": true,   ""registerCycle"": 50000,   ""hub"": ""hubhost:3333"",   ""nodeStatusCheckTimeout"": 50000,   ""nodePolling"": 50000,   ""role"": ""node"",   ""unregisterIfStillDownAfter"": 600000,   ""downPollingLimit"": 2,   ""debug"": false,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"":{}  }","closed","D-chrome,","Manikandan-18","2018-03-22T05:58:08Z","2019-08-14T07:09:48Z"
"","5302","either the element is no longer attached to the DOM, it is not in the current frame context, or the document has been refreshed","## Meta - OS:    Selenium Version:  Win10  Browser:","closed","","zouzhenglu","2018-01-08T09:40:13Z","2019-08-16T18:09:47Z"
"","4967","error","## Meta - OS:    Selenium Version:  IDE.2.9.1  Browser:  Firefox   Browser Version:     ## Expected Behavior -  ## Actual Behavior -  There was an unexpected error. Msg: TypeError: window.editor.suiteTreeView is undefined Url: chrome://selenium-ide/content/selenium-ide.xul, line: 1, column: 1 oncommand@chrome://selenium-ide/content/selenium-ide.xul:1:1  ## Steps to reproduce -","closed","","huamgg","2017-10-27T04:14:21Z","2019-08-17T05:09:47Z"
"","5000","In Selenium 3.5 in IE11,10 and in Edge browsers xpath functions are not working fine.","## Meta - OS:    Selenium Version:  3.5  Browser:  Internet Explorer   Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -   Issue: In Internet Explorer web elements find using contains,text, preceding-sibling, following-sibling are not working which are working fine in Firefox,Chrome and safari browsers. Please help on this.","closed","","Aditya1209","2017-11-02T12:32:21Z","2019-08-17T04:09:34Z"
"","5675","removed capabillity/option enbaleFullPageScreenshot","## Meta - OS:    Selenium Version:  3.11  Browser:  IE11   Browser Version:     ## Expected Behavior - existence of desierd capabillities/options after the browser is opned ## Actual Behavior - only default one appear ## Steps to reproduce -","closed","","yanivyu1","2018-03-25T14:04:39Z","2019-08-16T08:10:03Z"
"","5172","Selenium IDE: Error loading test case: no command found.","## Meta - OS:    Selenium Version:   Selenium IDE 2.9.1.1 Browser:   Firefox 48.0.2  I am a new user of Selenium, and I am trying out my first automation using Selenium IDE. I have recorded a test case & it ran OK. Then I saved the file. When I re-open it & try to run it, I get the error message: Error loading test case: no command found. I have checked other issues mentioning this problem, but none of them contain an actual answer.  Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","staplesj","2017-12-05T16:56:53Z","2019-08-16T22:09:47Z"
"","5498","Sendkeys not working with selenium box","## Meta - OS:    Selenium Version:     org.seleniumhq.selenium           selenium-java           2.53.1           	    org.seleniumhq.selenium 	    selenium-server 	    2.53.1                      log4j         log4j         1.2.14           Browser:     Browser Version:     ## Expected Behavior - new tab should get open and sendkeys should type in the text box.  ## Actual Behavior - It is not opening a new tab but rather opening url in same tab and also, send keys are not working on selenium box but javascript executor is working  ## Steps to reproduce - DesiredCapabilities capabilities = new DesiredCapabilities(); 		capabilities.setPlatform(Platform.LINUX); 		capabilities.setBrowserName(""firefox""); 		capabilities.setCapability(""auth"", ""xxxxx""); // auth token 																// required to 																// access 																// SeleniumBox 		LogHandler.info(""print1""); 		capabilities.setCapability(""video"", true); 		capabilities.setJavascriptEnabled(true); 		LogHandler.info(""set capabilities for video true""); 		// Initialize driver to use Selenium Box URL 		driver = new RemoteWebDriver(new URL(""https://seleniumbox.xxx.com/wd/hub""), capabilities);  		LogHandler.info(""print2"");  		 		 		wait = new WebDriverWait(driver, 180);  		 		LogHandler.info(""print3"");  		 		driver.get(""my url""); 		Thread.sleep(10000); 		commonutil.getscreenshot(driver, ""testseleniumbox""); 		  		// Key in the username and password on the login window  		commonutil.findWebElementbyId(driver, ""id"") 				.sendKeys(commonutil.getPropertyvalue(username"", ""config"")); 		Thread.sleep(1000); 		commonutil.findWebElementbyId(driver, ""id"").click(); // new 		Thread.sleep(1000); 		commonutil.findWebElementbyId(driver, ""lInput.id"").sendKeys(constant.Password);  		// Click on the login button after entering the login credentials 		commonutil.findWebElementbyId(driver, ""loginbtn.id"").click(); 		Thread.sleep(15000);  		  		driver.manage().window().maximize(); 		Thread.sleep(3000); 		// new 		JavascriptExecutor js = (JavascriptExecutor) driver; 		  	 		  		Actions act = new Actions(driver); 		 		 act.keyDown(Keys.CONTROL).sendKeys(""t"").keyUp(Keys.CONTROL).build().perform();  //getting error in this line as unsupported command exception  //((JavascriptExecutor)driver).executeScript(""window.open();"");  tried this also to launch a new tab but no luck  ((JavascriptExecutor) driver).executeScript(""arguments[0].setAttribute('value', '"" + uname + ""')"", 				driver.findElement(By.id(""xxx"")));  //this is working  driver.findElement (By.id("""")).sendKeys(""xxx""); //this is not working","closed","","deepidua","2018-02-15T09:36:19Z","2019-08-16T13:10:03Z"
"","5317","Selenium Keys value are wrong in Ubuntu","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior - sendkeys(Keys.Divide);  a ""/"" was send  ## Actual Behavior - sendkeys(Keys.Divide); a ""sun"" was send  ## Steps to reproduce - driver.findElement(By.xpath(""somethind"")).sendkeys(Keys.Divide); A wrong charactor was show in the text field.","closed","R-awaiting answer,","LonaMa","2018-01-10T07:25:05Z","2019-08-16T12:09:52Z"
"","4892","IEDriverServer Issue when working with Multiple Windows","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior - Able to check the title of the 2nd window  ## Actual Behavior - Two observations: 1. putting a Thread.sleep(5000) after clicking the link for the 2nd window shows only 1 window handle 2. with no Thread.sleep, it is able to store two window handles, but when switching to it, Exception of ""No Window Found"" is encountered  ## Steps to reproduce -","closed","","blueray333","2017-10-17T20:52:49Z","2019-08-17T07:09:47Z"
"","5282","WebElements getting Stale","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior - With previous version of Selenium, I used to pick up several hundreds of Button WebElements, place them on a list and click one at a time from the list, pick up the data that I needed, click ""Back"" and pick up the next button from the list. Now, with the latest version, I am unable to do any more and I am forced to query again all those buttons. The DOM is still active all the time. I am using ChromeDriver on Windows 10 Pro and my program is C#   THanks, Ahaorn Aharon.Tam@gmail.com  [18:41]  I wonder if it is a bug that was introduced or there is another way to maintain all these button active? ## Steps to reproduce -","closed","","at1087","2018-01-02T23:49:05Z","2019-08-16T18:09:50Z"
"","5473","Unable to find RobotRetriever class in selenium-server-3.9.1.jar","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce - We used selenium-server-2.53.jar for developing our framework where we used RobotRetriever class We have upgraded to 3.9.1 which is latest, but unable to find RobotRetriever class, not sure how to proceed further. Please suggest","closed","","kkareemk","2018-02-09T18:31:19Z","2019-08-16T12:10:02Z"
"","4835","getting this error when trying to nav","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -  ![image](https://user-images.githubusercontent.com/12549463/31356594-93f82d58-ad0c-11e7-8321-3c500c1a4b01.png) ![image](https://user-images.githubusercontent.com/12549463/31356602-9b850672-ad0c-11e7-8c75-ca474acded5c.png)","closed","","hcolonna","2017-10-09T20:12:28Z","2019-08-17T08:09:51Z"
"","5787","phantom","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","silasmarques","2018-04-17T12:41:00Z","2019-08-16T05:09:55Z"
"","5776","Could not generate device logs.","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","staplesj","2018-04-13T14:19:47Z","2019-08-16T06:09:38Z"
"","5770","illegalStateException","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","hercules79","2018-04-12T12:18:14Z","2019-08-16T06:09:41Z"
"","5729","platform sensor reader win","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ppsgppsi","2018-04-04T07:14:23Z","2019-08-16T07:09:38Z"
"","5717","org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session.","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","nputhiyaveedu-mn","2018-04-02T05:29:44Z","2019-08-16T07:09:55Z"
"","5704","set preference","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ivyxwang","2018-03-28T18:40:44Z","2019-08-16T08:09:46Z"
"","5694","id","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","shady333","2018-03-27T20:48:06Z","2019-08-16T08:09:50Z"
"","5689","IE hover","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","sa1omon","2018-03-27T12:59:51Z","2019-08-16T08:09:52Z"
"","5686","kk","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","leticiaamancio","2018-03-27T04:06:35Z","2019-08-16T08:09:55Z"
"","5677","alert","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","otkrivashkin","2018-03-26T12:11:06Z","2019-08-16T08:10:00Z"
"","5665","Is it possible to get the session id from the TestSession object?","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","bhuv-cogoport","2018-03-22T13:08:34Z","2019-08-16T09:09:40Z"
"","5644","Unable to find element on closed window","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Vishnumundlapudii","2018-03-20T07:00:45Z","2019-08-16T09:09:54Z"
"","5629","protarctor","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","crujzo","2018-03-16T04:24:20Z","2019-08-16T10:09:39Z"
"","5607","mac","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","dzmcl","2018-03-14T06:54:40Z","2019-08-16T10:09:45Z"
"","5606","The node may end up with wrong timeouts","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","IvyZhaoZhao","2018-03-14T05:16:53Z","2019-08-16T10:09:49Z"
"","5590","json proxy","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","aidanisok","2018-03-09T15:28:32Z","2019-08-16T11:09:41Z"
"","5580","http://code.google.com/p/selenium/wiki/ChromeDriver","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","akshat21","2018-03-08T06:27:42Z","2019-08-16T11:09:45Z"
"","5553","Forwarding_to_node","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","macharla","2018-03-01T13:52:13Z","2019-08-16T11:10:01Z"
"","5548","setNetworkConnection","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","turgay5353","2018-02-28T08:38:02Z","2019-08-16T12:09:38Z"
"","5524","svg","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","jshermanlss","2018-02-21T21:16:38Z","2019-08-16T13:09:41Z"
"","5522","animat","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","petres-a","2018-02-21T15:06:36Z","2019-08-16T13:09:44Z"
"","5514","123","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","AlexeyKravtsov95","2018-02-20T10:51:50Z","2019-08-16T13:09:52Z"
"","5497","selenium issues","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","maheIOS","2018-02-15T06:35:36Z","2019-08-16T13:10:06Z"
"","5495","client_gone","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","bcoffee76","2018-02-14T16:33:08Z","2019-08-16T13:10:07Z"
"","5436","capability","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Sinegubovskii","2018-02-05T03:08:40Z","2019-08-16T14:10:03Z"
"","5422","HTML5","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","vitassecuriti","2018-02-01T11:48:18Z","2019-08-16T15:09:48Z"
"","5380","Não estou conseguindo baixar o arquivo correto","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","mateustudeia","2018-01-22T11:50:40Z","2019-08-16T16:09:53Z"
"","5361","javascript","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ganeshk905","2018-01-18T11:56:29Z","2019-08-16T17:09:45Z"
"","5325","loggingPrefs","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","run-noob","2018-01-11T09:48:13Z","2019-08-16T18:09:34Z"
"","5323","linux","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","shaikmuzakkir","2018-01-11T04:44:04Z","2019-08-16T18:09:38Z"
"","5276","ok","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","alok097","2018-01-02T09:48:45Z","2019-08-16T19:09:35Z"
"","5273","--","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","gruby4444","2017-12-30T03:05:25Z","2019-08-16T19:09:36Z"
"","5259","raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","RanjithRatnala","2017-12-26T02:22:58Z","2019-08-16T19:09:48Z"
"","5253","add","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","everychat","2017-12-23T13:08:16Z","2019-08-16T19:09:51Z"
"","5220","geolocation","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","maremmano","2017-12-13T20:51:25Z","2019-08-16T20:10:00Z"
"","5206","opacity=0","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","questups","2017-12-11T20:13:25Z","2019-08-16T21:09:44Z"
"","5196","sele","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","alexzbs","2017-12-10T15:37:06Z","2019-08-16T21:09:53Z"
"","5182","Null","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","spopkov","2017-12-06T16:48:08Z","2019-08-16T22:09:41Z"
"","5178","test","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","jekajolob","2017-12-06T10:42:20Z","2019-08-16T22:09:45Z"
"","5161","hi","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","nashena","2017-12-04T05:24:59Z","2019-08-16T23:09:39Z"
"","5147","proxy","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","smiroshnikov","2017-11-30T09:28:28Z","2019-08-17T00:09:49Z"
"","5133","find chrome","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","nrasakatla","2017-11-28T16:24:26Z","2019-08-17T00:09:53Z"
"","5132","firefox","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ghost","2017-11-28T16:15:40Z","2019-08-17T00:09:54Z"
"","5113","Record button Not Starting the Recording into FF54","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","sanjay231","2017-11-24T10:58:39Z","2019-08-17T00:10:01Z"
"","5111","mark","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","shock-zhou","2017-11-24T05:54:20Z","2019-08-17T01:09:35Z"
"","5107","Taking page source","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","doganmavuzer","2017-11-23T09:05:10Z","2019-08-17T01:09:38Z"
"","5095","profile.default_content_settings.popups","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","kanemu","2017-11-21T13:49:53Z","2019-08-17T01:09:48Z"
"","5094","hi","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","buni-buni","2017-11-21T12:56:40Z","2019-08-17T01:09:49Z"
"","5036","select button issue","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","janki3195","2017-11-09T05:53:44Z","2019-08-17T03:09:42Z"
"","5029","chrome driver","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","odcnre","2017-11-08T10:43:13Z","2019-08-17T03:09:58Z"
"","5016","org.openqa.selenium.NoSuchWindowException: Unable to get browser (WARNING: The server did not provide any stacktrace information)","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","shakirkagzi","2017-11-05T23:24:54Z","2019-08-17T04:09:40Z"
"","5010","eifjccgigejbcjcddictitinuvjjulinrlvfjijdkufb","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","amagdy","2017-11-03T20:13:00Z","2019-08-17T04:09:48Z"
"","5005","latest browser its not work selenium ide","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","JayminNarola","2017-11-03T10:27:56Z","2019-08-17T04:09:50Z"
"","4989","selenium record buton don't work","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ilsur","2017-11-01T13:51:48Z","2019-08-17T04:09:57Z"
"","4987","fff","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","superonesfazai","2017-11-01T02:41:49Z","2019-08-17T04:10:00Z"
"","4955","OpenQA.Selenium.WebDriverException: By.PartialLinkText","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ddecristo","2017-10-25T13:42:41Z","2019-08-17T05:10:01Z"
"","4954","http://code.google.com/p/selenium/wiki/InternetExplorerDriver","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ddecristo","2017-10-25T13:41:55Z","2019-08-17T05:10:00Z"
"","4939","proxy","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","pkorecki","2017-10-24T12:32:01Z","2019-08-17T06:09:38Z"
"","4922","[error] Could not connect to Selenium Server. Have you started the Selenium Server yet? what i'm imissing in my IDE?","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Andersste","2017-10-21T20:09:28Z","2019-08-17T06:09:50Z"
"","4913","apk","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","webbestmaster","2017-10-19T19:31:05Z","2019-08-17T06:09:58Z"
"","4908","right","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","pactera-testing-Hua","2017-10-19T01:36:06Z","2019-08-17T07:09:34Z"
"","4902","swtichto","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","MikeMacDougall","2017-10-18T16:49:31Z","2019-08-17T07:09:35Z"
"","4846","https://sites.google.com/a/chromium.org/chromedriver/home","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","RamboSofter","2017-10-11T08:34:30Z","2019-08-17T08:09:36Z"
"","4838","cds","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Mdobaidulla","2017-10-10T07:20:38Z","2019-08-17T08:09:49Z"
"","4811","Recording button now working","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","rai-nauman","2017-10-05T13:01:34Z","2019-08-17T09:09:34Z"
"","5698","IEDriver unable to identify new Window Handler in IE11","## Meta - OS:    Selenium Version:    Browser:","closed","","RohitSinha123","2018-03-28T08:42:37Z","2019-08-16T08:09:48Z"
"","5062","cannot access org.openqa.selenium.MutableCapabilities","## Meta - OS:    Selenium Version:    Browser:","closed","","hackereye","2017-11-16T08:53:47Z","2019-08-17T02:09:52Z"
"","4977","Selenium IDE issues","## Meta - OS:    Selenium Version:    Browser:","closed","","sakshichauhan07","2017-10-30T10:02:43Z","2019-08-17T04:10:03Z"
"","4947","Issue with npm webdriver-manager start","## Meta - OS:    Selenium Version:    Browser:","closed","","GayatriInfy","2017-10-25T07:04:17Z","2019-08-17T05:10:03Z"
"","5279","Merging of `*Option` classes doesn't work as it did for DesiredCapabilities","## Meta - OS: Windows 7 Selenium Version: 3.6.0 - 3.8.1 Browser: Internet Explorer,  Firefox and Chrome Browser Version: any  ## Expected Behavior - Browser specific parameters in descendants of `MutableCapabilities` work after merging them.  ## Actual Behavior - Browser specific parameters are ignored because they are lost after using `merge`.  ## Steps to reproduce - **Short example:** ``` ChromeOptions options1 = new ChromeOptions(); ChromeOptions options2 = new ChromeOptions(); options2.addArguments(""--start-maximized""); options1.merge(options2); WebDriver driver = new ChromeDriver(options1); // Chrome doesn't start maximized ```  **Long example:** I use a ""SeleniumConfig"" class to store all WebDriver related configuration, including its `Capabilities`. There are two types of the SeleniumConfig objects - the global that applies to all test classes and locals that only apply to one test class. So I need to merge global and local Capabilities when initializing a new test class.  A simplified version of my code looks like this: ``` // Class that contains all configuration for a WebDriver class SeleniumConfig { 	private String browser = BrowserType.FIREFOX; 	// ... other parameters 	private DesiredCapabilities capabilities = new DesiredCapabilities(); 	 	public SeleniumConfig() {} 	public SeleniumConfig(SeleniumConfig configToCopy) { 		this.browser = configToCopy.getBrowser(); 		this.capabilities = new DesiredCapabilities(configToCopy.getCapabilities()); 	} 	public String getBrowser() { 		return browser; 	} 	public void setBrowser(String browser) { 		this.browser = browser; 	} 	public DesiredCapabilities getCapabilities() { 		return capabilities; 	} 	public void addCapability(String key, Object value) { 		this.capabilities.setCapability(key, value); 	} }  // A singleton that holds configuration for all test classes class GlobalSettings { 	private static final GlobalSettings instance = new GlobalSettings(); 	private SeleniumConfig global = new SeleniumConfig();  	private GlobalSettings() { // Read global configuration from some source 		// For example start Chrome maximized 		global.setBrowser(BrowserType.CHROME); 		ChromeOptions options = new ChromeOptions(); 		options.addArguments(""--start-maximized""); 		global.addCapability(ChromeOptions.CAPABILITY, options); 	} 	public static SeleniumConfig getGlobalSettings() { 		return instance.global; 	} }  // An example of a test class public class SeleniumTest1 { 	WebDriver driver; 	private SeleniumConfig local;  	@BeforeClass 	public void setUp() { 		local = new SeleniumConfig(GlobalSettings.getGlobalSettings()); // Copy global settings 		// Customize local (unique to this test class) configuration here if needed 		if (local.getBrowser().equals(BrowserType.FIREFOX)) driver = new FirefoxDriver(local.getCapabilities()); 		else if (local.getBrowser().equals(BrowserType.CHROME)) driver = new ChromeDriver(local.getCapabilities()); 		else if (local.getBrowser().equals(BrowserType.IE)) driver = new InternetExplorerDriver(local.getCapabilities()); 	} 	 	@AfterClass 	public void tearDown() { 		driver.quit(); 	} 	 	@Test 	public void testSomething() { 		driver.get(""http://example.com""); 	} } ```  It worked fine before version 3.6.0 and still works even in the latest version, but since 3.6.0 I get ""The constructor *Driver(Capabilities) is deprecated"" warnings, so I tried to rewrite this code:  ``` // Class that contains all configuration for a WebDriver class SeleniumConfig { 	private String browser = BrowserType.FIREFOX; 	// ... other parameters 	private Map browserSpecificCapabilities = new HashMap(); 	 	public SeleniumConfig() { 		browserSpecificCapabilities.put(BrowserType.FIREFOX, new FirefoxOptions()); 		browserSpecificCapabilities.put(BrowserType.CHROME, new ChromeOptions()); 		browserSpecificCapabilities.put(BrowserType.IE, new InternetExplorerOptions()); 	} 	public SeleniumConfig(SeleniumConfig configToCopy) { 		this(); 		this.browser = configToCopy.getBrowser(); 		for (Entry entry : configToCopy.getCapabilitiesMap().entrySet()) { 			browserSpecificCapabilities.get(entry.getKey()).merge(entry.getValue()); 		} 	} 	public String getBrowser() { 		return browser; 	} 	public void setBrowser(String browser) { 		this.browser = browser; 	} 	public Map getCapabilitiesMap() { 		return browserSpecificCapabilities; 	} 	public FirefoxOptions getFirefoxCapabilities() { 		return (FirefoxOptions)browserSpecificCapabilities.get(BrowserType.FIREFOX); 	} 	public ChromeOptions getChromeCapabilities() { 		return (ChromeOptions)browserSpecificCapabilities.get(BrowserType.CHROME); 	} 	public InternetExplorerOptions getIECapabilities() { 		return (InternetExplorerOptions)browserSpecificCapabilities.get(BrowserType.IE); 	} }  // A singleton that holds configuration for all test classes class GlobalSettings { 	private static final GlobalSettings instance = new GlobalSettings(); 	private SeleniumConfig global = new SeleniumConfig();  	private GlobalSettings() { // Read global configuration from some source 		// For example start Chrome maximized 		global.setBrowser(BrowserType.CHROME); 		ChromeOptions options = global.getChromeCapabilities(); 		options.addArguments(""--start-maximized""); 	} 	public static SeleniumConfig getGlobalSettings() { 		return instance.global; 	} }  // An example of a test class public class SeleniumTest2 { 	WebDriver driver; 	private SeleniumConfig local;  	@BeforeClass 	public void setUp() { 		local = new SeleniumConfig(GlobalSettings.getGlobalSettings()); // Copy global settings 		// Customize local (unique to this test class) configuration here if needed 		if (local.getBrowser().equals(BrowserType.FIREFOX)) driver = new FirefoxDriver(local.getFirefoxCapabilities()); 		else if (local.getBrowser().equals(BrowserType.CHROME)) driver = new ChromeDriver(local.getChromeCapabilities()); 		else if (local.getBrowser().equals(BrowserType.IE)) driver = new InternetExplorerDriver(local.getIECapabilities()); 	} 	 	@AfterClass 	public void tearDown() { 		driver.quit(); 	} 	 	@Test 	public void testSomething() { 		driver.get(""http://example.com""); 	} } ```  There are two problems with the new code: 1) The amount of code to do the same task increased as I need to handle capabilities for every browser separately. Is it by design or am I doing something wrong? 2) The browser specific configuration like ""--start-maximized"" no longer work due to the merge method in the `*Option` classes not working for browser specific parameters. It's not limited to Chrome options, at least Firefox and IE have the same problem.","closed","C-java,","JohnA2","2018-01-02T18:25:36Z","2021-09-05T08:15:50Z"
"","5653","Google registration redirect does not work with Selenium 3.11.0","## Meta - OS: linuxkit, MacOS  Selenium Version:  3.11.0  Browser:  Chrome  Browser Version:   65.0.3325.162 (Official Build) (64-bit)  ## Expected Behavior - User is expected to register Google Docs as an external service with an external LMS. The user is faced with the standard google login process - three screens, one each for user id, password, and authorization acceptance. The user provides the appropriate information on the first two screens, clicking next after populating the input, and then clicks Accept on the final input, at which point they are redirected back to the LMS having authorized its usage of their Google Drive.  ## Actual Behavior - The google username screen and password screen display as expected, however the third step where the google interface renders the Authorize permissions screen instead renders a white page.  ## Steps to Reproduce - ``` from selenium import webdriver import time  driver = webdriver.Chrome()  driver.get(""https://fiddle.jshell.net/davidmhatton/vebhu27g/show/light/"") time.sleep(5)   print driver.page_source assert ""redirected"" in driver.page_source  driver.quit()  ```  ## Other Notes - The third stage should render a permissions dialog,  but instead the body has a `location.redirect` js call, but it is not executed, and thus it is not found. Registering with the same username and password works when performed manually. **_Selenium versions 3.9.1 and 3.10.0 are unaffected._**","closed","D-chrome,","davidmhatton","2018-03-21T14:29:17Z","2019-08-16T07:09:44Z"
"","5565","Issue With Javascript Mouse Hover on Firefox 57","## Meta - OS : Windows 7 Browser: Firefox Browser Version: Firefox  57  Expected Behavior -   The javascript mouse hover should work on the specified element  Actual Behavior -   The mouse hover is not working, Though it doesn't throw any error the action is not performed  Description: As the Actions class is not working with the geckodriver we are going with javascript to perform mouseover on the element and observing that the execution is passing but the action is not happening.  Javascript used: var evObj = document.createEvent('MouseEvents');evObj.initMouseEvent('mouseover', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null); document.getElementById('logo').dispatchEvent(evObj);  Please Suggest how to perform mouse hover on required element in FF 57 and above versions.","closed","C-nodejs,","ppanuganti","2018-03-05T11:00:33Z","2019-08-16T11:09:49Z"
"","5305","Download site zip file is broken","## Meta - Browser:  Chrome Browser Version:  63.0.3239.84 (Official Build) (64-bit)  ## Expected Behavior -  When I visit http://www.seleniumhq.org/download/ and download Java Client from `Selenium Client & WebDriver Language Bindings` section, downloaded selenium-java-3.8.1.zip is just 8.2MB and libs directory in the unzipped dir is broken.    ## Actual Behavior -  libs dir should contain all dependent jar files.","closed","C-infra,","NozomiIto","2018-01-08T23:11:06Z","2019-10-29T18:45:14Z"
"","5217","Error forwarding the new session java.util.zip.ZipException selenium standalone server 3.8.1","## Meta - Bindings: .Net C# OS:   Windows Server 2008 R2  Selenium Version:   Selenium.Webdriver 3.8.0 Selenium.Support 3.8.0 selenium standalone server 3.8.1 geckodriver 19.0.1   Browser:  Firefox 57.0.2   ## Expected Behavior -  Firefox profile is sent to test node and loaded  ## Actual Behavior - When remote webdriver is trying to initialize exception is thrown  Exception: `		Message	""Error forwarding the new session java.util.zip.ZipException: invalid stored block lengths\nBuild info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z'\nSystem info: host: 'CHI-SGNODE1', ip: '10.0.2.15', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'\nDriver info: driver.version: unknown""	string `  ## Steps to reproduce - ``` FirefoxOptions ffoptions = new FirefoxOptions(); var relativePath = ""../../../ffProfiles/6pwsso99.QAprofile""; ffoptions.BrowserExecutableLocation = @""C:\Program Files (x86)\Mozilla Firefox\firefox.exe""; var fullPath = Path.GetFullPath(Path.Combine(TestSuiteEnvironment.AssemblyDirectory, relativePath)); FirefoxProfile ffProfile = new FirefoxProfile(fullPath); ffoptions.Profile = ffProfile; Driver = new RemoteWebDriver(new Uri(""http://localhost:4446/wd/hub/""), ffoptions.ToCapabilities(), TimeSpan.FromMinutes(2)); ``` Exception is thrown when new RemoteWebDriver is called. If I comment out the line that sets the profile this does not throw an exception. This was working running standalone server 3.7.1 with selenium.webdriver 3.7.0   I also tested with firefox 56.0.2 (before Firefox quantum) and this was still an issue. I also downgraded the version of the standalone server on the node (but not the hub) and was getting the same exception with ""version:3.8.1"" which leads me to believe this exception originates from the hub side.","closed","C-remote,","jburns24","2017-12-13T19:07:50Z","2021-09-05T08:34:43Z"
"","5246","What if user close the browser or webdriver? how can i detect if the browser is closed?","## Meta - - OS:   >Window 10 - Selenium Version:   >	 			org.seleniumhq.selenium 			selenium-java 			2.44.0 		  - Browser:   > Chrome webDriver.  - Browser Version:   >Chrome 63.0.3239.10(64bit) -->  ## Expected Behavior - > i want check if the driver is closed by user directly, and restart the webdriver if there is no browser.  Before ""Driver webdriver = new ChromeDriver()"" codes, the webdriver is null state,  but after ""Driver webdriver = new ChromeDriver()"" code finished, even if user close the browser,  webdriver is not destroyed.   so, after user close the browser, all code related to webdriver has the error:: ""unreachable Exception"".  I want restart the webdriver, if the browser is gone by user.  but i can not detect the situation.   (1. ""driver!=null"" code is not working, because driver still exist after browser is closed by user) (2. ""if((driver.getWindowHandle().equals(""""))"" is not working, because Chrome Unrechable Exception, because browser is closed by user......  What i want to do is to check if the browser is gone, because of user,    ## Actual Behavior -  ## Codes example.  public String upBitpageOpen(Locale locale, Model model, HttpServletRequest httpServletRequest) { 		if (driver != null) { 			System.out.println(""this is already exist driver""); 			System.out.println(""this is windowHandle:""+driver.getCurrentUrl());	 			//driver.getCurrentUrl(), or driver.getWindowHandle() has the ERROR!!AFTER USER CLOSE THE BROWSER!!!  // SO I WANT CHECK IF THE BROWSER IS CLOSED BY USER                                                     driver.close(); 			driver.quit(); 	 		} else { 			System.out.println(""there is No driver""); 			driver = new ChromeDriver(); 		}  		driver.get(""https://www.upbit.com""); 		driver.manage().window().maximize(); 		String ajaxResult = ""success""; 		return ajaxResult; 	}","closed","","jjunest","2017-12-21T23:26:15Z","2019-08-16T19:10:02Z"
"","4894","Caught Exception on HTML Runner 3.6.0","## Meta - **OS:**   Windows 8.1  **Selenium Version:**   Html Runner 3.6.0  **Browser:**   Google Chrome  **Browser Version:**   61.0.3163.100 (Official Build) (64-bit)  **Driver Version:** ChromeDriver 2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f)  ## Expected Behavior - Run HTML test suite exported form Selenium IDE  ## Actual Behavior - **Caught exception** java.net.MalformedURLException: unknown protocol: d         at java.net.URL.(URL.java:600)         at java.net.URL.(URL.java:490)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.determineSuiteUrl(HTMLLauncher.java:185)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.runHTMLSuite(HTMLLauncher.java:106)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.mainInt(HTMLLauncher.java:245)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.main(HTMLLauncher.java:273)   ## Steps to reproduce - java -Xmx1G -jar /d/Selenium/selenium-html-runner-3.6.0.jar \   -htmlSuite \     ""*googlechrome"" \     ""https://www.google.com/"" \     ""/d/Selenium/testcases/test-suite.html"" \     ""/d/Selenium/testcases/test-suite-result.html""","closed","C-htmlrunner,","bearx3f","2017-10-18T02:57:59Z","2019-08-17T02:09:42Z"
"","5818","switchTo.window() method gets stuck while using with IEDriver.","## Meta - **OS:   Windows 7 Selenium Version:  3.4 and above IEDriver Version: 3.8 and above Browser:  Internet Explorer**  On ""http://www.essentialbaby.com.au/"" webpage, all elements are working using selenium and IEDriver, but when I click on ""SUBSCRIBE TO OUR NEWSLETTER"" button, it navigates to next page in a new tab. After that when I try to work on elements on this new page using switchTo() method, it gets stuck at that point and program doesn't proceed further.  **Browser Version:   IE 11**  ## Expected Behavior - Driver must switch to next window and work on its elements.  ## Actual Behavior - Driver gets stuck at ""driver.switchTo().window(windowHandle);"" and program doesn't proceed forward.  ## Steps to reproduce -  Go to site: http://www.essentialbaby.com.au/ . Click on ""SUBSCRIBE TO OUR NEWSLETTER"" button. Click on ""Sign up"" link.  Use below code to reproduce this scenario.  System.setProperty(""webdriver.ie.driver"", ""DriverLocation\\IEDriverServer.exe""); driver = new InternetExplorerDriver(); driver.get(""http://www.essentialbaby.com.au/""); driver.findElement(By.xpath(""//footer[@id='footer']/div[1]/ul/li[6]/a"")).click(); driver.switchTo().window(newWindowHandle); driver.findElement(By.xpath(""//a[contains(text(),'Sign up')]"")).click();","closed","","Ankitssts","2018-04-23T12:53:36Z","2019-08-16T04:09:54Z"
"","5673","Using a specific driver using setBinary() not working","## Meta - **OS**:  Windows 10  **Selenium Version**:  selenium-webdriver 3.6.0  **Browser**:  Firefox (geckodriver v0.20.0)  **Browser Version**:  59.0.1 (64-bit)   ## Expected Behavior  `new firefox.Options().setBinary("""")` should use a specific driver ## Actual Behavior Setting a binary path does not work. Throws this error instead. ``` D:\Web Automation Bot\node_modules\selenium-webdriver\lib\promise.js:2626         throw error;         ^  WebDriverError: Process unexpectedly closed with status 1     at Object.throwDecodedError (D:\Web Automation Bot\node_modules\selenium-webdriver\lib\error.js:514:15)     at parseHttpResponse (D:\Web Automation Bot\node_modules\selenium-webdriver\lib\http.js:519:13)     at doSend.then.response (D:\Web Automation Bot\node_modules\selenium-webdriver\lib\http.js:441:30)     at      at process._tickCallback (internal/process/next_tick.js:188:7) From: Task: WebDriver.createSession()     at Function.createSession (D:\Web Automation Bot\node_modules\selenium-webdriver\lib\webdriver.js:769:24)     at Function.createSession (D:\Web Automation Bot\node_modules\selenium-webdriver\firefox\index.js:521:41)     at createDriver (D:\Web Automation Bot\node_modules\selenium-webdriver\index.js:170:33)     at Builder.build (D:\Web Automation Bot\node_modules\selenium-webdriver\index.js:645:16)     at Object. (D:\Web Automation Bot\index.js:7:6)     at Module._compile (module.js:652:30)     at Object.Module._extensions..js (module.js:663:10)     at Module.load (module.js:565:32)     at tryModuleLoad (module.js:505:12)     at Function.Module._load (module.js:497:3) ```  ## Steps to reproduce Here is my code.  If i remove the `setFirefoxOptions()` it works perfectly as I have added it to my path.  ``` var webdriver = require('selenium-webdriver'); var firefox = require('selenium-webdriver/firefox');  var driver = new webdriver.Builder()     .forBrowser('firefox')     .setFirefoxOptions(         new firefox.Options()             .setBinary('D:\\Web Automation Bot\\drivers\\geckodriver.exe')     )     .build();  driver.get('https://google.com'); driver.sleep(1000); driver.quit(); ```  Looking for some quick help here.  Thanks 😁","closed","","DollarAkshay","2018-03-24T13:33:42Z","2019-08-16T09:09:34Z"
"","5337","`change` event not triggered for input text element","## Meta - **OS**:  macOS, Ubuntu **Selenium Version**:  Selenium Java 2.53.1 **Browser**:  Firefox 46.0  ## Expected Behavior - `change` event should be triggered.   ## Actual Behavior - `change` event does not trigger.  ## Steps to reproduce - 1. Some text input is changed (with sendKeys) 2. Blur the text input (e.g. click another element, press tab, send a blur event)  Sample test: ```Java  import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.Select; import org.openqa.selenium.support.ui.WebDriverWait;  import com.thoughtworks.selenium.webdriven.JavascriptLibrary;  public class BasicFocusTest {      public static void main(String[] args) {         FirefoxProfile profile = new FirefoxProfile();         profile.setEnableNativeEvents(true);         // whether focusmanager.testmode is enabled or not select onchange is guaranteed to succeed         // if using Selenium Select         profile.setPreference(""focusmanager.testmode"", true);          WebDriver driver = new FirefoxDriver(profile);         driver.manage().window().maximize();          driver.get(""https://jsfiddle.net/LiHaoTan/pn8ozt80/"");          driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);          driver.switchTo().frame(""result"");          WebDriverWait wait = new WebDriverWait(driver, 4);         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(""abc"")));         final WebElement textInputElement = driver.findElement(By.id(""abc""));          // click to focus element         textInputElement.click();          // always trigger change event unless text is empty         // we manually add some text, but this works with the input default attribute too         //textInputElement.sendKeys(""a"");         //textInputElement.clear();          // If the browser is in focus change event is triggered, otherwise it never triggers even if         // focusmanger.testmode is set to true         textInputElement.sendKeys(""TESTING!"" + Keys.TAB);          // no matter what other methods used to blur the input element the change event never         // executes for input text         //alternativeBlur1(driver);         //alternativeBlur2(driver, textInputElement);          // alternatively click on the other element to blur         //driver.findElement(By.id(""ice-cream"")).click();          //manualTriggerChangeEvent(driver, textInputElement);          // the guaranteed succeeding change event         //Select select = new Select(driver.findElement(By.id(""ice-cream"")));         //select.selectByVisibleText(""Chocolate"");     }      public static void manualTriggerChangeEvent(WebDriver driver, WebElement textInputElement) {         // manually trigger change event         JavascriptLibrary javascript = new JavascriptLibrary();         javascript.callEmbeddedSelenium(driver, ""triggerEvent"", textInputElement, ""change"");     }      public static void alternativeBlur2(WebDriver driver, WebElement textInputElement) {         // alternative 2 to blur element         JavascriptLibrary javascript = new JavascriptLibrary();         javascript.callEmbeddedSelenium(driver, ""triggerEvent"", textInputElement, ""blur"");     }      public static void alternativeBlur1(WebDriver driver) {         // alternative 1 to blur element         driver.switchTo().activeElement().sendKeys(Keys.TAB);     } }  ```","closed","D-firefox,","LiHaoTan","2018-01-13T04:52:48Z","2019-08-16T15:10:01Z"
"","5442","IE Browser - Unable to create new remote session","## Meta -  OS: Windows Server 2008/2012 (Virtual machine on AWS) Selenium Version:    Selenium Version: 3.0.1 Browser:   Internet Explorer 11  Browser Version:   11.0.9600.18450  ## Expected Behavior - Internet browser 11 must launch using IEDriverServer.exe and open a given URL ## Actual Behavior - Internet browser opens properly, but URL opened is different. It opens localhost URL with random port number like http://localhost:25128/  ## Steps to reproduce - Open a hub using  java -jar selenium-server-standalone-3.0.0.jar -role hub  Open a node using  java -jar selenium-server-standalone-3.0.1.jar -role node -hub http://xxx.xxx.xxx.xxx:4444/grid/register  Create a web driver and open a URL.  Log from selenium hub -------------------- 16:53:00.335 INFO - Got a request to create a new session: Capabilities [{browserName=internet explorer, platform=WINDOWS}] 16:53:00.336 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=internet explorer, maxInstances=1, platform=WINDOWS}   Error message  Fatal error: Uncaught exception 'Facebook\WebDriver\Exception\SessionNotCreatedException' with message 'Unable to create new remote session. desired capabilities = Capabilities [{browserName=internet explorer, platform=WINDOWS}], required capabilities = Capabilities [{}] Build info: version: '3.0.1', revision: '1969d75', time: '2016-10-18 09:48:19 -0700' System info: host: 'WIN-MT0KFAH3HJN', ip: '10.10.10.10', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_141' Driver info: driver.version: InternetExplorerDriver' in E:\webenvoy\vendor\facebook\webdriver\lib\Exception\WebDriverException.php:154 Stack trace: #0 E:\webenvoy\vendor\facebook\webdriver\lib\Remote\HttpCommandExecutor.php(320): Facebook\WebDriver\Exception\WebDriverException::throwException(33, 'Unable to creat...', Array) #1 E:\webenvoy\vendor\facebook\webdriver\lib\Remote\RemoteWebDriver.php(126): Facebook\WebDriver\Remote\HttpCommandExecutor->execute(Object(Facebook\WebDriver\Remote\WebDriverCommand)) #2 E:\webenvoy\ in E:\webenvoy\vendor\facebook\webdriver\lib\Exception\WebDriverException.php on line 154","closed","","gohelkiran","2018-02-05T17:01:25Z","2019-08-16T14:09:56Z"
"","5142","The selenium-server-standalone-3.8.0.jar  is corrupted?","## Meta -  Steps to reproduce: 1. Go to https://selenium-release.storage.googleapis.com/  2. Check file size in XML for the selenium-server-standalone-3.8.0.jar: ```xml  3.8/selenium-server-standalone-3.8.0.jar 1511989263546495 1 2017-11-29T21:01:03.491Z""1455d5d756bf0574d1ca3dbc458aff37"" 235  ``` Its size is 235 bytes.  3. Try to download the file and run it: ``` curl -O https://selenium-release.storage.googleapis.com/3.8/selenium-server-standalone-3.8.0.jar java -jar selenium-server-standalone-3.8.0.jar Error: Invalid or corrupt jarfile selenium-server-standalone-3.8.0.jar  du -b selenium-server-standalone-3.8.0.jar 235     selenium-server-standalone-3.8.0.jar ```","closed","","ghost","2017-11-29T21:59:18Z","2019-08-16T21:09:54Z"
"","5783","Is accepting ONLY static ports for Grid Node an expected behaviour?","## Meta -  Selenium Version:     Perhaps I have troubles understanding the idea or I missed something big but shouldn't there be an option for assigning Grid nodes ports automatically? There is no chance for handling registration dynamically unless having a governor app written.  Let's say we try to register node with port -1 to a hub...  ## Expected Behaviour (or desired one) - Hub assings one free port outta it's pool and node might get info about what port it gets. f.ex. Hub pool is (5000, 5030) and node gets first free which is 5001  ## Actual Behavior - At the moment node crashes.","closed","I-enhancement,","xplolel","2018-04-16T17:37:53Z","2019-08-16T03:09:41Z"
"","5322","unknown error: failed to wait for extension background page to load","## Meta -  OS: Windows 7 , ubuntu 14.04 Selenium Version:  3.8.1 Browser:  Chrome browser, Chrome Driver 2.34 Browser Version:  63.0.3239.132  ## Expected Behavior - trouble-free operation  ## Actual Behavior - Throw an exception as bellow: ERROR: unknown error: failed to wait for extension background page to load: chrome-extension://iifchhfnnmpdbibifmljnfjhpififfog/_generated_background_page.html from unknown error: page could not be found: chrome-extension://iifchhfnnmpdbibifmljnfjhpififfog/_generated_background_page.html   (Driver info: chromedriver=2.34.522940 (1a76f96f66e3ca7b8e57d503b4dd3bccfba87af1),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace  information) Command duration or timeout: 10.45 seconds  ## Steps to reproduce - Use CryptoPro Extension(https://chrome.google.com/webstore/detail/cryptopro-extension-for-c/iifchhfnnmpdbibifmljnfjhpififfog?hl=ru) for chrome browser and set headless mode in chrome options.  ![screen](https://user-images.githubusercontent.com/19980865/34777950-ec19b042-f62c-11e7-9328-260d0ab32b66.png)  Will work fine without headless","closed","","pskh","2018-01-10T14:40:57Z","2019-08-16T18:09:41Z"
"","5023","unable to connect to renderer ""","## Meta -  OS:  Debian Stretch  Selenium Version:   ""selenium-webdriver"": ""^3.6.0"", Browser:   Chromium 62.0.3202.75 built on Debian 9.1, running on Debian 9.1 ChromeDriver 2.32 (undefined) node.js version: v8.8.1  ## Expected Behavior -  Changing the window size would work.  ## Actual Behavior -   await driver.manage().window().setSize(1600, 1200); this call now gets the follwong error message: (node:6397) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): WebDriverError: disconnected: unable to connect to renderer   (Session info: chrome=62.0.3202.75)   (Driver info: chromedriver=2.32 (undefined),platform=Linux 4.9.20-std-1 x86_64)  Previously this call was working on other versions of chromedriver / chromium.  Funnily, I did not change anything, just yesterday without any OS update, without any software installation, this call would always crash.  ## Steps to reproduce -  ``` #!/bin/bash  if [ ""$(id -u)"" == ""0"" ]; then    echo ""This script may NOT run as Root (chromium does not work as root)""    exit 1 fi  killall Xvfb Xvfb :7 -screen 8 1024x768x8 &  echo ""Listing known displays:"" ls /tmp/.X11-unix  export DISPLAY=:7.8 node demo.js killall Xvfb ```   demo.js ``` var fs = require(""fs""),     moment = require(""moment""),     Promise = require(""bluebird""),     sleep = require(""sleep-promise"");      selenium = require ('selenium-webdriver'),     By = selenium.By,     until = selenium.until,     Select = selenium.Select,     Key = selenium.Key,     ActionSequence = selenium.ActionSequence,     Window = selenium.Window,      seleniumDriver = require (""./seleniumDriver.js"");   Promise.longStackTraces(); // nice stack traces for promises!    async function init_and_print_capabilities () {     var downloadDir = ""/tmp/demo"";     var profileDir = ""/tmp/demoProfile"";     //var browserVisible = false;     var browserVisible = true;      //var driver = seleniumDriver.getChrome(downloadDir, profileDir, browserVisible);     var driver = seleniumDriver.getChromium(downloadDir, profileDir, browserVisible);     //var driver = seleniumDriver.getSauce();     //var driver = seleniumDriver.getFirefox(downloadDir, profileDir)      console.log(""driver capabilities:"");     await driver.getCapabilities().then(console.log);      var cookies = await driver.manage().getCookies();     console.log(""cookies: "" + JSON.stringify(cookies));      await driver.manage().window().setSize(1600, 1200);       console.log(""opening new tab"");     await driver.executeScript('window.open();');      console.log(""getting window (tab) list"");     var handles = await driver.getAllWindowHandles();     console.log (""window handles: "" , handles);      console.log(""switching to google window (right side)"");     await driver.switchTo().window(handles[1]);      return driver; }   async function browser_test (driver) {     console.log(""getting www.whatismybrowser.com"");     await driver.get (""https://www.whatismybrowser.com/"");     await sleep (3000);      console.log(""taking Screenshot of whatismybrowser.com"");     await seleniumDriver.saveHtml (driver, ""/tmp/whatismybrowser.com.html"");     await seleniumDriver.takeScreenshot (driver, ""whatismybrowser.com"" ); }   async function download_test (driver) {     var downloadURL = ""https://download.samba.org/pub/rsync/rsync-patches-3.1.2.tar.gz"";     await driver.get (downloadURL); // download url (saves file..)     console.log(""File downloaded: "" + downloadURL);      await driver.get('http://static.mozilla.com/moco/en-US/pdf/mozilla_privacypolicy.pdf')     await driver.get (""http://spreadsheetpage.com/downloads/xl/worksheet%20functions.xlsx"");  }  async function tab_test (driver) {     console.log(""switching to bing window (left window)"");     await driver.switchTo().window(handles[0]);     console.log(""getting bing.."");     await driver.get (""http://www.bing.com"");      console.log(""getting title.."");     var t = await driver.getTitle();     console.log(""title: "", t);     console.log(""taking Screenshot of bing"");     //var imageBing = await driver.takeScreenshot();     //fs.writeFile('output/bing.png', imageBing, 'base64', function(err, msg) { if (err) console.log(""Error: "" + err);  });     await saveHtml (driver, ""/tmp/bing.html"");     await takeScreenshot (driver, ""bing"" );       console.log (""switching to google window"");     driver.switchTo().window(handles[1]);     console.log(""closing google handle"");     driver.close ();      console.log(""getting window list.."");     var handles = await driver.getAllWindowHandles();     console.log(""handles: "" , handles);      console.log(""switching to bing window (left window)"");     await driver.switchTo().window(handles[0]);      console.log(""getting current window handle.."");     var myhandle = await driver.getWindowHandle();     console.log(""my window handle:"" , myhandle); }  async function key_demo (driver) {     //await new ActionSequence(driver).sendKeys(Key.CONTROL + ""t"").perform();     //await new ActionSequence(driver).keyDown(Key.CONTROL).sendKeys(""t"").keyUp(Key.CONTROL).perform();     //driver.findElement(By.css(""body"")).sendKeys(Key.CONTROL + ""t"");     //var newTabInstance = driver.WindowHandles[driver.WindowHandles.Count-1].ToString();        //console.log(""sending CTRL + TAB (to switch the tab)"");     //await new ActionSequence(driver).keyDown(Key.CONTROL).sendKeys(Key.TAB).keyUp(Key.CONTROL).perform();     //driver.findElement(By.css(""body"")).sendKeys(Key.CONTROL + ""t""); }  async function find_test (driver) {     var myElement =  driver.findElement ( By.css('div') );     myElement.then (e=> console.log (e) );      driver.executeScript(function() {         return document.querySelector('div').innerHTML;     }).then(function(innerHTML) {         //check content here          console.log(innerHTML);     });      //console.log(myElement);     driver.getHTML(""body"", false).then(function(html) {         console.log(""*** INNER HTML:"");         console.log(html);     }); }   async function demo () {          var driver = await init_and_print_capabilities ();          await download_test (driver);      //await browser_test (driver);     //await tab_test (driver);        // await find_test (driver);      console.log(""sleeping 30 seconds"");     await sleep (30000);     driver.quit(); }  demo();  ```    browsers/chromium.js  ``` var fs = require(""fs""),     selenium = require('selenium-webdriver'),     By = selenium.By,     until = selenium.until,     Select = selenium.Select;   var chrome = require(""selenium-webdriver/chrome"");   function getChromium(downloadDir, profileDir, browserVisible) {      var logToFile = '/tmp/chromescraper.txt';     var binPath = ""/usr/lib/chromium/chromium""; // on debian and also on manjaro      if  (fs.existsSync (logToFile)) {         console.log(""Unlinking old file: "" + logToFile);         fs.unlinkSync(logToFile);     }      console.log(`Getting Chromium: binPath: ${binPath} downloadDir: ${downloadDir} profileDir:${profileDir}`);       // Set OPTIONS     var o = new chrome.Options();     o.setChromeBinaryPath(binPath);     o.addArguments(""--disable-extensions"");     //o.addArguments(""disable-popup-blocking"");     // https://peter.sh/experiments/chromium-command-line-switches/      if (browserVisible) {         o.addArguments(""--start-maximized"");     }     else {         o.addArguments(""window-size=1900,900"");         o.addArguments(""--headless""); // Runs Chrome in headless mode.         o.addArguments(""headless""); // 2017 10 26 fh: it appears, that ""--headless and also ""headless"" both work         o.addArguments(""--disable-gpu""); // # Temporarily needed for now.     }         if (profileDir !== undefined) {         o.addArguments(""user-data-dir="" + profileDir);     } else {         console.log(""ERR: No profileDir defined!"");     }      if(downloadDir != undefined) {         o.addArguments(""download.default_directory="" + downloadDir);         o.setUserPreferences({             ""download.default_directory"": downloadDir         });     } else {         console.log(""ERR: No DownloadDir Defined!"");     }      var service = new chrome.ServiceBuilder()         .loggingTo(logToFile)         .enableVerboseLogging()         .build();      var driver = chrome.Driver.createSession(o, service);      //driver = new selenium.Builder()     //   .withCapabilities(selenium.Capabilities.chrome())     //   .setChromeOptions(o)     //.setProxy(proxy.manual({ http: '127.0.0.1:9000'}))     //   .build();      return driver; }   module.exports.getChromium = getChromium; ```","closed","","coinflr","2017-11-07T10:58:05Z","2019-08-15T14:09:45Z"
"","5222","useful for many people: in nodejs, chrome actions do not work in 3.8 and HEAD. Before they do, we need doc saying 3.6 must be used for chrome","## Meta -  I think this is an important issue for many people. And it can be solved quickly by adding the doc I suggest below. When trying to support both firefox and chrome, different package versions must be used. And it takes time to understand.  As I show in the example code, chrome actions stopped working on HEAD and 3.8 of SeleniumHQ/selenium, for Javascript.  In your repository b588bf5 added firefox support for w3c actions and dropped support for legacy. Firefox or its driver needs the new API. And chrome and its driver currently works only with the legacy API.  --> Request please:  It would be nice and helpful for many people to document the following: "" Concerning the support for actions in firefox and chrome: -- firefox: firefox and its geckodriver recently started to require to use W3C compliant actions, using a new API. Support for the latest firefox actions is not present in selenium 3.6. It is available directly when building manually the repository SeleniumHQ/selenium (./go node:atoms) -- chrome: Support for actions in chrome is supported in 3.6 using the legacy API. The use of actions in chrome is not ready yet on the HEAD.  OS:   Debian 9 Selenium Version:   3.8 (not npm package) Browser:   Chrome and Firefox   Browser Version:   Firefox 57 chromium 62  ## Expected Behavior - The example code below with a simple action should not show an error on chrome. In firefox, it works fine.  ## Actual Behavior - "" UnknownCommandError: Unrecognized command: actions""  ## Steps to reproduce - import { Builder, By, logging, until } from 'selenium-webdriver';  ```javascript  import { Builder, By, logging, until } from 'selenium-webdriver';  describe(""example_actions_not_working_on_chrome"", function() {     it(""try"", function() {         let driver = new Builder()         .forBrowser('chrome') // with chrome, error         // .forBrowser('firefox') // with firefox, there are no error             .build();         driver.get('http://www.google.com/');         const actions = driver.actions();         actions.keyboard().sendKeys('p');         actions.perform()     }) }) ```","closed","C-nodejs,","MagicPoulp","2017-12-14T10:45:40Z","2019-08-16T20:09:52Z"
"","5053","org.openqa.selenium.SessionNotCreatedException: Unable to create new remote session. desired capabilities = Capabilities [{firefox_binary=","## Meta -  I am getting the following error   org.openqa.selenium.SessionNotCreatedException: Unable to create new remote session. desired capabilities = Capabilities [{firefox_binary=/Program Files/Mozilla Firefox/firefox.exe, moz:firefoxOptions={binary=Optional[FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe)], args=[], legacy=null, logLevel=null, prefs={}, profile=null}}], required capabilities = Capabilities [{firefox_binary=/Program Files/Mozilla Firefox/firefox.exe, moz:firefoxOptions={binary=Optional[FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe)], args=[], legacy=null, logLevel=null, prefs={}, profile=null}}]  OS : Windows 7 Proffessional 64 bit.  Firefox Version 56.0.2","closed","R-awaiting answer,","Udayarajan","2017-11-14T15:20:23Z","2019-08-17T02:09:50Z"
"","5093","Selenium 3.7.0 - Invalid capabilities in alwaysMatch: unhandledPromptBehavior is type boolean instead of string","## Meta -   Hello , I have upgraded by selenium automation framework. Details are shared below  OS: Windows 7 Selenium Version:  3.7.0 Browser:  IE 3.7.0 32 bit driver   While executing my code, I am getting exception # **Invalid capabilities in alwaysMatch: unhandledPromptBehavior is type boolean instead of string** .   Is this due to the new driver upgraded because existing IE driver 3.4.0 is not generating this error. ?","closed","R-awaiting answer,","priyaa02","2017-11-21T10:20:11Z","2019-08-17T01:09:39Z"
"","5500","Unable to use KeyDown(Keys.Command)","## Meta  OS:  OSX 10.13.3 Selenium Version:  3.9.1 Visual Studio for Mac: 7.4 Preview (7.4 build 985)  ## Expected Behavior  Exception are not thrown and the functional works.  ## Actual Behavior  Exception is occurred. ``` System.ArgumentException : key must be a modifier key (Keys.Shift, Keys.Control, or Keys.Alt) Parameter name: key ```  ## Steps to reproduce  1. Download a [sample](https://1drv.ms/u/s!AjJkvULquuvugWM7lCXWaL0SC2EX. A folder contains folder with the sample and `AppiumForMac.app`. 2. Run `AppiumForMac.app` 3. Open the sample 4. Build it and run tests   Sample contains only on test with next line: ``` new Actions(this.driver).KeyDown(Keys.Command).SendKeys(""q"").KeyUp(Keys.Command).Perform(); ```","closed","C-dotnet,","mykyta-bondarenko","2018-02-15T15:46:42Z","2019-08-16T01:09:57Z"
"","5110","Net::ReadTimeout for Chrome in Ruby Bindings","## Meta  OS:  OSX Selenium Version:  ChromeDriver 2.33.506106 Browser: Chrome  ## Expected Behavior -  It loads a browser.  ## Actual Behavior -  ``` ""Net::ReadTimeout"" [""/Users/amirsharif/Projects/knowledge/app/models/script.rb:19:in `eval'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:154:in `readuntil'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:164:in `readline'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:40:in `read_status_line'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:29:in `read_new'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1446:in `block in transport_request'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `catch'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `transport_request'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1416:in `request'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1409:in `block in request'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:877:in `start'"",  ""/Users/amirsharif/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1407:in `request'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/http/default.rb:121:in `response_for'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/http/default.rb:76:in `request'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/bridge.rb:168:in `execute'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/bridge.rb:101:in `create_session'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/remote/bridge.rb:52:in `handshake'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/chrome/driver.rb:56:in `initialize'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/common/driver.rb:44:in `new'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver/common/driver.rb:44:in `for'"",  ""/Users/amirsharif/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.7.0/lib/selenium/webdriver.rb:84:in `for'"",  ""/Users/amirsharif/Projects/knowledge/app/services/web_client.rb:9:in `initialize'"", ```  Any suggestions on how to debug?","closed","","Overload119","2017-11-23T23:15:22Z","2019-08-17T00:10:00Z"
"","5292","Capabilities' default_directory ignored in Chrome","## Meta  OS:  Linux  Selenium Version:  3.8.1  Browser:  Chrome    Browser Version:  stable 62.0.3202.94   ## Expected Behavior  Downloads go to specified directory in capabilities' chrome prefs, which worked fine in Selenium v3.7.1 with Chromedriver: 2.33.506092 ## Actual Behavior  Downloads are going to `file:///home/seluser/Downloads/`, ignoring the capabilities' directory provided ## Steps to reproduce 1. Use Selenium Version: 3.8.1  2. Use dart webdriver with following capabilities, and trigger a download in chrome  ```     Map capabilities = {       'platform': 'LINUX',       'browserName': 'chrome',       'chromeOptions': {         'args': ['window-size=1280,600', 'disable-infobars', 'enable-precise-memory-info'],         'prefs': {           'download': {'default_directory': '/shared/exports/', 'prompt_for_download': 'false'}         }       }     }   driver = await io.createDriver(desired: capabilities, uri: seleniumUri); ``` The version of Dart: Dart VM version: 1.24.2 (Thu Jun 22 15:42:21 2017) on ""linux_x64"" The operating system: linux_x64 The version of the dart webdriver package: 1.2.3 The version of chromedriver: Chromedriver: 2.33.506092","closed","D-chrome,","seangerhardt-wf","2018-01-05T18:08:10Z","2021-09-05T08:35:54Z"
"","5346","Improvement for org.openqa.selenium.interactions.Actions","## Meta Selenium Version:  3.8.1,  selenium-java  I have come across an issue with custom or wrapped WebElements I usually write on different projects in order to better describe business logic, sometimes waits, hovers etc.   While there is a pretty straightforward workaround for this issue. Out curiosity I've decided to ask community if this can improved on the framework level.  So please let me know your thoughts. Thank you!  ## Expected Behavior  CustomWebElement implements WebElement and WrapsElement so it does indicate it is wrapper. Not sure I understand the reason of having to deal with _org.openqa.selenium.interactions.internal.Locatable_ as well.    What makes me think so? dotnet implementation:  https://github.com/SeleniumHQ/selenium/blob/116381906db8c62a85d84fea57024263ef6953d9/dotnet/src/webdriver/Interactions/Actions.cs#L49  And also in selenium-java  https://github.com/SeleniumHQ/selenium/blob/116381906db8c62a85d84fea57024263ef6953d9/java/client/src/org/openqa/selenium/remote/internal/WebElementToJsonConverter.java#L50  ## Actual Behavior  ``` Exception in thread ""main"" java.lang.ClassCastException: Main$CustomWebElement cannot be cast to org.openqa.selenium.interactions.internal.Locatable 	at org.openqa.selenium.interactions.Actions.moveToElement(Actions.java:388) 	at Main.main(Main.java:28) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)  ```  ## Steps to reproduce 1. Create wrapped WebElement implementation. ``` public class CustomWebElement implements WebElement, WrapsElement {         private final WebElement realWebElement;          CustomWebElement(WebElement element) {             this.realWebElement = element;         }          public WebElement getWrappedElement() {             return realWebElement;         }          public void click() {             realWebElement.click();         }          public void submit() {             realWebElement.submit();         }          public void sendKeys(CharSequence... keysToSend) {             realWebElement.sendKeys(keysToSend);         }          public void clear() {             realWebElement.clear();         }          public String getTagName() {             return realWebElement.getTagName();         }          public String getAttribute(String name) {             return realWebElement.getAttribute(name);         }          public boolean isSelected() {             return realWebElement.isSelected();         }          public boolean isEnabled() {             return realWebElement.isEnabled();         }          public String getText() {             return realWebElement.getText();         }          public List findElements(By by) {             return realWebElement.findElements(by);         }          public WebElement findElement(By by) {             return realWebElement.findElement(by);         }          public boolean isDisplayed() {             return realWebElement.isDisplayed();         }          public Point getLocation() {             return realWebElement.getLocation();         }          public Dimension getSize() {             return realWebElement.getSize();         }          public Rectangle getRect() {             return realWebElement.getRect();         }          public String getCssValue(String propertyName) {             return realWebElement.getCssValue(propertyName);         }          public  X getScreenshotAs(OutputType target) throws WebDriverException {             return realWebElement.getScreenshotAs(target);         }     } ``` 2. Try to use Actions class with CustomWebElement ``` public static void main(String[] args) {          WebDriver driver = new ChromeDriver();         driver.get(""http://google.com"");           WebElement searchButton = driver.findElement(By.cssSelector(""input[type='submit']:nth-of-type(1)""));        // Wrap it in CustomWebElement         WebElement customSearchElement = new CustomWebElement(searchButton);          Actions actions = new Actions(driver);          // This works         actions.moveToElement(searchButton).build().perform();          // The same for CustomWebElement throws exception java.lang.ClassCastException         actions.moveToElement(customSearchElement).build().perform();     } ```  ## Possible fix So in _org.openqa.selenium.interactions.Actions_ something like: ``` public Locatable getLocatableFromElement(WebElement element) {         WebElement target = element;         while (target instanceof WrapsElement) {             target = ((WrapsElement) target).getWrappedElement();         }         return (Locatable) target;     } ```  And to refactor methods in Actions and derived classes like:  ``` public Actions moveToElement(WebElement target) {     WebElement realTarget = getLocatableFromElement(target);     if (isBuildingActions()) {       action.addAction(new MoveMouseAction(jsonMouse, realTarget));     }      return moveInTicks(target, 0, 0);   } ```  ## Workaround CustomWebElement to implement org.openqa.selenium.interactions.internal.Locatable and to delegate Coordinates getCoordinates() to underlying realWebElement.  ## Links Also found people to raise similar issues: https://github.com/SeleniumHQ/selenium/issues/5231 https://github.com/SeleniumHQ/selenium/issues/4577  Thank you. I look forward to hearing from you.","closed","I-enhancement,","raveeolee","2018-01-17T13:12:30Z","2021-09-05T08:34:56Z"
"","5772","Instantiating RemoteWebDriver fails and Selenium.WebDriver 3.10.0 + doesn't use default system proxy","## Meta OS: Windows 10 Selenium Version: Selenium.WebDriver 3.10.0 or 3.11.0 or 3.11.1 -  C#, .NET 4.6.1 Browser: RemoteWebDriver  Browser Version: na  ## Expected Behavior Attempting to instantiate a new RemoteWebDriver instance behind a corporate proxy (which is the system default proxy) should work, given that the proxy allows that traffic. This works fine with Selenium.WebDriver 3.9.1 (and previous versions)  ## Actual Behavior Attempting to instantiate a new RemoteWebDriver with 3.10.0 and above fails - it appears that the request does **not** go via the proxy as previously.  Looking at issue #4478 I've tried to implement the code as provided by Jim that will implement a BeforeRemoteHttpRequest event, but the method that hooks into that event never gets hit (my code is identical to that provided in #4478)   ## Steps to reproduce Even if you explicitly set the proxy configuration in App.Config like so, this appears to be ignored whereas 3.9.1 will use this configuration.  ```                     ```","closed","C-dotnet,","gschultz77","2018-04-12T15:06:02Z","2019-08-16T02:09:56Z"
"","5050","ProxyAutoConfigUrl for ProxyKind.ProxyAutoConfigure is not used","## Meta OS: Windows Selenium Version: 3.7.0 Browser: Any  ## Expected Behavior Browser is starting and using .pac file from ProxyAutoConfigUrl  specified via Proxy settings.  ## Actual Behavior System.InvalidOperationException: unknown error: cannot parse capability: proxy from unknown error: 'proxyAutoconfigUrl' must be a string   (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64)    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)  ## Steps to reproduce ``` var proxy = new Proxy(); proxy.Kind = ProxyKind.ProxyAutoConfigure; proxy.ProxyAutoConfigUrl = ""http://localhost:8080/proxy.pac""; //anything here  var profile = new FirefoxProfile();  var options = new FirefoxOptions {Profile = profile, Proxy = proxy}; new FirefoxDriver(service, options); ```  Looks like something is lost, because I could not find any usage of **Proxy.ProxyAutoConfigUrl** property, especially in **Proxy.ToCapability()** function. Specified functionality works fine in Selenium 3.6.","closed","C-dotnet,","Divaite-zz","2017-11-13T08:57:44Z","2019-08-16T07:09:35Z"
"","5507","add_argument for user agent cuts off at first space","## Meta OS: macOS High Sierra  Selenium Version: 3.9.0  Browser: Chrome  Browser Version: 64.0.3282.167 (Official Build) (64-bit)  ## Problem  I'm using Ruby and the Selenium WebDriver to view a webpage using headless Chrome.  I need to change the user agent for my project. On my local computer, I can easily do this via the **add_argument** method in Selenium::WebDriver::Chrome::Options:  ``` options = Selenium::WebDriver::Chrome::Options.new() options.add_argument('--headless') options.add_argument('--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36') driver = Selenium::WebDriver.for(:chrome, options: options) puts driver.execute_script('return navigator.userAgent') ```  This (correctly) returns:  > Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36  However, when I push this code to my Heroku app and run the same code*, suddenly here's what gets returned:  > Mozilla/5.0  I have spent upwards of 4 hours trying all manner of fixes. Pretty early on I realized this was probably some kind of escaping issue, so I looked up how to escape spaces and (I think) have tried absolutely everything: backslashes, double-backslashes, quotes, double-quotes, etc. None of it has worked. As far as I can tell, absolutely any user agent I pass as an option will get cut off at the first space.  Am I missing something obvious here?  Thank you!    \**The only change I make to the code running on Heroku is that I have to slightly update the first line of code above to point the Heroku app to the Chrome binary:*  ``` options = Selenium::WebDriver::Chrome::Options.new(binary: ENV['GOOGLE_CHROME_SHIM']) ```","closed","","jaypinho","2018-02-18T06:38:47Z","2019-08-16T13:09:56Z"
"","4859","Hub / Firefox node fails with Selenium 3.6.0 - WebDriverException: Message: Unable to find a matching set of capabilities","## Meta OS: Dockerized Hub / Node  ([node-firefox](https://hub.docker.com/r/selenium/node-firefox) 3.6.0, [node-chrome](https://hub.docker.com/r/selenium/node-chrome/) 3.6.0, [hub](https://hub.docker.com/r/selenium/hub/) 3.6.0) Selenium Version: 3.6.0 Browser: Firefox 56.0 Geckodriver Version: 0.19.0  ## Expected Behavior Firefox should run Selenium tests when run as a node in a hub. Chrome runs successfully.  ## Actual Behavior Firefox fails on first test with error: ``` E       WebDriverException: Message: Unable to find a matching set of capabilities E       Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' E       System info: host: 'b880454af06d', ip: '172.17.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.49-moby', java.version: '1.8.0_131' E Driver info: driver.version: unknown ```  Webdriver reports this configuration:  ``` request =  driver_class =  driver_kwargs = {'browser_profile': None, 'command_executor': 'http://hub:4444/wd/hub', 'desired_capabilities': {'browserName': 'firefox', 'platform': 'ANY', 'version': ''}} ```  ## Steps to reproduce - https://github.com/mozilla/kuma/pull/4195 is for branch [upgrade_pytest_1308322](https://github.com/mozilla/kuma/tree/upgrade_pytest_1308322), which contains [a script](https://github.com/mozilla/kuma/blob/48dbaf6a9406e94d1dd95af371fb1141be0c6d47/scripts/run_selenium_hub.sh) that runs the Dockerized hub and node. This should work on OSX / Linux with python 2.7.x (``python --version``)  ``` git clone https://github.com/mozilla/kuma.git git checkout upgrade_pytest_1308322 cd kuma virtualenv venv source venv/bin/activate pip install lxml==3.5.0 pip install -r requirements/test.txt scripts/run_selenium_hub.sh ```  This will start the selenium hub and nodes for Firefox and Chrome. It will run all or most tests successfully against Chrome, and then fail on the first Firefox test.  Here are the [logs from run_selenium_hub.sh](https://gist.github.com/jwhitlock/e7bc2f78ce6dfee10d1edeae568ebb0c), including [logs from the hub](https://gist.github.com/jwhitlock/e7bc2f78ce6dfee10d1edeae568ebb0c#file-output-20171006-txt-L315-L347) and [logs from the firefox node](https://gist.github.com/jwhitlock/e7bc2f78ce6dfee10d1edeae568ebb0c#file-output-20171006-txt-L349-L379).  Here is the [full console log](https://ci.us-west.moz.works/view/MDN/job/mdn_multibranch_pipeline/job/upgrade_pytest_1308322/23/consoleFull) from a test run on Jenkins.","closed","","jwhitlock","2017-10-12T18:10:35Z","2019-08-17T07:09:53Z"
"","5483","ChromeDriver.getCurrentUrl() results in infinite loop for XML pages.","## Meta OS:  Windows, Linux  Selenium Version: 2.52.0  Browser: Chrome   Browser Version:  64.0.3282.140 (32-bit)   ## Expected Behavior When calling webDriver.getCurrentUrl() whilst being on an XML page, it should return the address of that XML page.  ## Actual Behavior Instead of returning the URL, it infinitely loops and times out.  ## Steps to reproduce  The code at our company is a lot more than that, but I tried to boil it down to the actual issue (which is the 'getCurrentUrl' call). ```java import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  WebDriver webDriver = new ChromeDriver(); webDriver.navigate().to(""https://github.com/SeleniumHQ/selenium/blob/ceaf3da79542024becdda5953059dfbb96fb3a90/.idea/androidDexCompiler.xml""); webDriver.getCurrentUrl(); ```","closed","D-chrome,","ghost","2018-02-12T10:46:32Z","2020-06-24T23:34:57Z"
"","4956","Build fails for `go debug-server`","## Meta OS:  Windows 7 Selenium Version:  master, 5b37f7e5 Browser:  N/A Browser Version:  N/A JDK: javac 1.8.0_151  ## Expected Behavior - Running `go debug-server` from the HEAD of the master branch should build / start / start tests.  ## Actual Behavior - The build fails with the message `No system compiler found. Did you install the JRE instead of the JDK?`.  ```.bat d:\software\dev\selenium>go debug-server (in D:/software/dev/selenium) Oct 25, 2017 12:48:46 AM org.apache.http.client.protocol.ResponseProcessCookies processCookies WARNING: Invalid cookie header: ""Set-Cookie: logged_in=no; domain=.github.com; path=/; expires=Sun, 25 Oct 2037 04:49:07  -0000; secure; HttpOnly"". Invalid 'expires' attribute: Sun, 25 Oct 2037 04:49:07 -0000 python D:/software/dev/selenium/buck-out/crazy-fun/be2bf932342e5d67f58c9b26f5065c745d285d0d/buck.pex kill Not using buckd because watchman isn't installed. PARSING BUCK FILES... 4.4s (100%) CREATING ACTION GRAPH: FINISHED IN 0.3s BUILT 1/137 JOBS 0.5s //java/client/src/org/openqa/selenium:build-stamp BUILT 2/137 JOBS 0.6s //java/client/src/org/openqa/selenium:template-pom BUILT 3/137 JOBS 0.6s //third_party/java/servlet:servlet-api BUILT 4/137 JOBS 0.6s //third_party/java/gson:gson BUILT 5/137 JOBS 0.3s //third_party/java/commons-codec:commons-codec BUILT 6/137 JOBS 0.6s //third_party/java/commons-logging:commons-logging#class-abi BUILT 7/137 JOBS 0.8s //third_party/java/gson:gson#class-abi BUILT 8/137 JOBS 0.2s //third_party/java/commons:commons-exec#class-abi BUILT 9/137 JOBS 1.1s //third_party/java/httpcomponents:httpclient#class-abi BUILT 10/137 JOBS 0.4s //third_party/java/httpcomponents:httpcore BUILT 11/137 JOBS 0.4s //third_party/java/commons:commons-exec BUILT 12/137 JOBS 1.3s //third_party/java/guava:guava BUILT 13/137 JOBS 0.3s //third_party/java/commons-logging:commons-logging BUILT 14/137 JOBS 0.2s //third_party/java/commons-codec:commons-codec#class-abi BUILT 15/137 JOBS 0.3s //third_party/java/servlet:servlet-api#class-abi BUILT 16/137 JOBS 0.3s //third_party/java/httpcomponents:httpcore#class-abi BUILT 17/137 JOBS 0.1s //third_party/java/jetty:jarjar-rules BUILT 18/137 JOBS 0.2s //javascript/atoms:bot BUILT 19/137 JOBS 0.2s //javascript/atoms:errors BUILT 20/137 JOBS 0.3s //third_party/java/inject:javax.inject BUILT 21/137 JOBS 2.0s //third_party/java/guava:guava#class-abi BUILT 22/137 JOBS 0.5s //third_party/java/sisu:org.eclipse.sisu.inject BUILT 23/137 JOBS 0.2s //third_party/java/plexus:plexus-component-annotations BUILT 24/137 JOBS 0.4s //third_party/java/annotation:jsr250-api BUILT 25/137 JOBS 2.1s //third_party/java/bytebuddy:bytebuddy BUILT 26/137 JOBS 0.4s //third_party/java/plexus:plexus-utils BUILT 27/137 JOBS 0.3s //third_party/java/ant:ant-launcher BUILT 28/137 JOBS 0.2s //third_party/java/hamcrest:hamcrest-core BUILT 29/137 JOBS 0.3s //third_party/java/plexus:plexus-classworlds BUILT 30/137 JOBS 0.3s //third_party/java/asm:asm BUILT 34/137 JOBS 2.1s //third_party/java/bytebuddy:bytebuddy#class-abi BUILT 35/137 JOBS 2.6s //third_party/closure:compiler-jar BUILD FAILED: //java/client/src/org/openqa/selenium:beta failed: javac -source 8 -target 8 -sourcepath  -g -proc:none -d D:\software\dev\selenium\buck-out\bin\java\client\src \org\openqa\selenium\lib__beta__classes -classpath '' @buck-out\gen\java\client\src\org\openqa\selenium\__beta__srcs; ja r cf buck-out\gen\java\client\src\org\openqa\selenium\lib__beta__output\beta.jar  buck-out\bin\java\client\src\org\openq a\selenium\lib__beta__classes No system compiler found. Did you install the JRE instead of the JDK? BUILT 36/137 JOBS 10.1s //third_party/closure:closure DOWNLOADED 0.00 BYTES/SEC AVG, 0 ARTIFACTS, 0.00 BYTES BUILDING: FINISHED IN 20.0s (100%) 36/137 JOBS, 36 UPDATED, 25.5% CACHE MISS BUILD FAILED go aborted! Buck build failed with exit code: 1 stdout:  (See full trace by running task with --trace) ```  To confirm, `java`, `javac`, and `jar` are also on the PATH: ``` > where java C:\ProgramData\Oracle\Java\javapath\java.exe C:\Program Files (x86)\Java\jdk1.8.0_151\bin\java.exe  > where javac C:\Program Files (x86)\Java\jdk1.8.0_151\bin\javac.exe  > where jar C:\Program Files (x86)\Java\jdk1.8.0_151\bin\jar.exe ```  ## Steps to reproduce - 1. Clone the repo 1. Install Java JDK 8 per the [Requirements](https://github.com/SeleniumHQ/selenium#requirements) 1. Set `JAVA_HOME` to C:\Program Files (x86)\Java\jdk1.8.0_151 1. Add `JAVA_HOME` to the `PATH` 1. Run `go debug-server` in the terminal","closed","C-java,","seanpoulter","2017-10-25T13:47:03Z","2019-08-16T23:09:57Z"
"","5635","Unable to set ImplicitWait in IE","## Meta OS:  Windows 10 Selenium Version:  Selenium Server Standalone 3.11.0, IEDriverServer 3.9.0 (32-bit) Browser:  Internet Explorer 11  ## Expected Behavior Should be able to set ImplicitWait. This is working fine in v3.4 and earlier version of Selenium Hub and IEDriverServer.  ## Actual Behavior Following exception is thrown: ``` OpenQA.Selenium.WebDriverException: Invalid timeout type specified: ms Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z' System info: host: 'DESKTOP-S0LVI9F', ip: '10.0.2.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_144' Driver info: driver.version: unknown    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteTimeouts.ExecuteSetTimeout(String timeoutType, TimeSpan timeToWait)    at OpenQA.Selenium.Remote.RemoteTimeouts.set_ImplicitWait(TimeSpan value) ```   ## Steps to reproduce  ```cmd java -Dwebdriver.ie.driver.logfile=iedriver.log -Dwebdriver.ie.driver.loglevel=TRACE -Dwebdriver.chrome.driver=chromedriver.exe -Dwebdriver.ie.driver=IEDriverServer.exe -Dwebdriver.gecko.driver=geckodriver.exe -jar selenium-server-standalone-3.11.0.jar -port 4444 -timeout 320 -browserTimeout 320 ```  ```C# DesiredCapabilities caps = new DesiredCapabilities(); caps.SetCapability(""browserName"", ""internet explorer""); var driver = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""), caps, TimeSpan.FromMinutes(2)); driver.Manage().Window.Size = new Size(1600, 900); driver.Navigate().GoToUrl(""https://ynet.co.il""); driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMilliseconds(2000); ```","closed","R-awaiting answer,","romovs","2018-03-18T14:31:57Z","2019-08-16T09:09:58Z"
"","5428","UnknownCommandError: Unrecognized command: actions","## Meta OS:  Windows 10 Selenium Version:  4.0.0-alpha.1 Browser:  chrome   Browser Version:    64       My code snippets looks as below. ```js const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('chrome').build();   var entrytoEdit = ""Browser Stack"";   var toDoTestItems = [entrytoEdit, ""Test Value1"", ""Test Value2""];     await driver.get('http://todomvc.com/examples/react/#/');     let query = await driver.wait(until.elementLocated(By.className('new-todo')),1000)     for (const item of toDoTestItems) {         await query.sendKeys(item, Key.RETURN);     }     const deleteBtn = await driver.findElements(By.css('.filters li'));     await driver.actions().click(deleteBtn[2]).perform(); })(); ``` run ``` (node:7616) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): UnknownCommandError: Unrecognized command: actions (node:7616) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code. ``` Why is this happening?","closed","","zedwang","2018-02-02T09:43:27Z","2019-09-05T00:09:35Z"
"","5296","Regression in all versions >= 3.8.1 Non-deterministic ConnectionResetError with chrome and chromedriver","## Meta OS:  Ubuntu Trusty on travis ci Selenium Version: 3.8.1 Browser: Chromedriver 2.34.0 with Chrome  ## Expected Behavior  I can do the patch-level update from 3.8.0 to 3.8.1 without exeriencing any differences.  ## Actual Behavior  With 3.8.0 everything works fine, while 3.8.1 non-deterministically fails with `ConnectionResetError: [Errno 104] Connection reset by peer` when trying to instantiate chrome.  ## Steps to reproduce The problem occurs in my django tests, only on travis ci and even on travis ci not reliably, so I unfortunately I can't provide a minimized example. The following is the reduced test boilerplate where the failure occurs.  ```python from django.contrib.staticfiles.testing import StaticLiveServerTestCase  class ChromeDriverTestCase(StaticLiveServerTestCase):     browser = None      @classmethod     def setUpClass(cls):         cls.browser = Browser('chrome', headless=True,                               executable_path=""node_modules/.bin/chromedriver"")         super(ChromeDriverTestCase, cls).setUpClass() ```  The `chromedriver` npm package is locked to 2.34.0.  This yields the following traceback in case of an failure ([full travis ci log for reference](https://travis-ci.org/meine-stadt-transparent/meine-stadt-transparent/jobs/325906206)):  ```python Traceback (most recent call last):   File ""/home/travis/build/meine-stadt-transparent/meine-stadt-transparent/mainapp/tests/live/chromedriver_test_case.py"", line 29, in setUpClass     options=options)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/splinter/browser.py"", line 63, in Browser     return driver(*args, **kwargs)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/splinter/driver/webdriver/chrome.py"", line 35, in __init__     self.driver = Chrome(chrome_options=options, **kwargs)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py"", line 75, in __init__     desired_capabilities=desired_capabilities)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 310, in execute     response = self.command_executor.execute(driver_command, params)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 466, in execute     return self._request(command_info[0], url, body=data)   File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 490, in _request     resp = self._conn.getresponse()   File ""/opt/python/3.6.3/lib/python3.6/http/client.py"", line 1331, in getresponse     response.begin()   File ""/opt/python/3.6.3/lib/python3.6/http/client.py"", line 297, in begin     version, status, reason = self._read_status()   File ""/opt/python/3.6.3/lib/python3.6/http/client.py"", line 258, in _read_status     line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"")   File ""/opt/python/3.6.3/lib/python3.6/socket.py"", line 586, in readinto     return self._sock.recv_into(b) ConnectionResetError: [Errno 104] Connection reset by peer ```","closed","D-chrome,","konstin","2018-01-06T23:51:14Z","2018-09-19T17:50:37Z"
"","5371","Default Selenium JS Driver does not append new input but Selenium Chrome Headless does","## Meta OS:  Mac OS 10.12.6 Selenium Version:  3.60  ## Expected Behavior I have some functionality in a Rails app where hitting enter in an input appends a new input below the existing one and focus moves to the new input. The js to accomplish such a thing works perfectly fine in the browser during hand testing, and I want some feature tests for it as well.  With the following js  ``` $(function(){   $(""form.scan"").keydown(function (e) {     if (e.keyCode === 13) {       inputsDiv      = $(""#inputs"");       existingInputs = inputsDiv.children();       lastInput      = existingInputs.last();       newInput       = '';        if (lastInput.is("":focus"")) {         if (lastInput.val().length > 0) {           inputsDiv.append(newInput);           inputsDiv.children().last().focus();         }       } else {         $(document.activeElement).next().focus();       }       e.preventDefault();     }   }); }); ```  I would expect the following spec to pass  ``` it ""pressing RETURN in the last field when filled out, appends new field and moves focus to it"" do   visit ""/""    expect(page).to_not have_css(""#item_4"")    fill_in(""item_3"", with: ""123"")   find(""#item_3"").send_keys(:return)    expect(page).to have_css(""#item_4"")   expect(page.evaluate_script(""document.activeElement.id"")).to eq ""item_4"" end ```  ## Actual Behavior The test in question will not pass with the default selenium js driver, but simply switching the js driver to `:selenium_chrome_headless` makes the tests pass. Seems like there must be something wrong with the default js driver.  ## Steps to reproduce I have created a sample app to reproduce the issue here:  https://github.com/eliduke/selenium-webdriver-bug-report","closed","","eliduke","2018-01-19T21:55:09Z","2019-08-16T16:09:50Z"
"","5376","[rb] Response status 100 causes KeyError","## Meta OS:  Debian 9.3 (from a Docker container, host OS is OS X 10.11.6, Docker version 17.09.0-ce, build afdb6d4)  Selenium Version: Ruby gem selenium-webdriver 3.8.0  Browser: Headless Chrome  Browser Version: 63.0.3239.132  ## Expected Behavior  When Chrome crashes for a reason unknown to me, ChromeDriver provides such a response to selenium-webdriver:  ``` {   ""sessionId"" => ""c86c4b01f01ad357f3977b619cc01a32"",   ""status"" => 100,   ""value"" => {     ""message"" =>""chrome not reachable\n  (Session info: headless chrome=63.0.3239.132)\n  (Driver info: chromedriver=2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881),platform=Linux 4.9.49-moby x86_64)""   } } ```  I would like to see an exception that would include the message or a similar response that would indicate the browser is not responding. If that is not possible because  response status 100 is not part of the protocol (I am not certain about that), then an exception about a response violating the protocol could be thrown (including the incorrect response).  ## Actual Behavior  This status response 100 cannot be mapped to any error class. A cryptic `key not found: 100 (KeyError)` exception is thrown from selenium-webdriver:  ``` Traceback (most recent call last): 	27: from run.rb:42:in `' 	26: from run.rb:25:in `run' 	25: from run.rb:25:in `each_with_index' 	24: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/result.rb:40:in `each' 	23: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/result.rb:40:in `each' 	22: from run.rb:31:in `block in run' 	21: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/session.rb:808:in `block (2 levels) in ' 	20: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/node/finders.rb:266:in `all' 	19: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/node/base.rb:85:in `synchronize' 	18: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/node/finders.rb:267:in `block in all' 	17: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/queries/selector_query.rb:145:in `resolve_for' 	16: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/node/base.rb:81:in `synchronize' 	15: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/queries/selector_query.rb:147:in `block in resolve_for' 	14: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/node/base.rb:103:in `find_css' 	13: from /usr/local/bundle/gems/capybara-2.17.0/lib/capybara/selenium/driver.rb:84:in `find_css' 	12: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/common/search_context.rb:78:in `find_elements' 	11: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/oss/bridge.rb:557:in `find_elements_by' 	10: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/oss/bridge.rb:579:in `execute' 	 9: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/bridge.rb:164:in `execute' 	 8: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call' 	 7: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/http/default.rb:104:in `request' 	 6: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/http/common.rb:81:in `create_response' 	 5: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/http/common.rb:81:in `new' 	 4: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize' 	 3: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/response.rb:74:in `assert_ok' 	 2: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/remote/response.rb:41:in `error' 	 1: from /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/common/error.rb:32:in `for_code' /home/angelika/src/selenium-webdriver-3.8.0/lib/selenium/webdriver/common/error.rb:32:in `fetch': key not found: 100 (KeyError) ```  ## Steps to reproduce Here is a repository with a Dockerfile and a short Ruby script (using Capybara) that almost always causes Chrome to crash and reproduces this bug: https://github.com/angelikatyborska/headless-chrome-crashes. Please follow the README.","closed","C-rb,","angelikatyborska","2018-01-20T17:25:41Z","2019-08-16T15:09:38Z"
"","5782","ElementNotInteractableException - Can't click on  elements within table","## Meta OS:  Arch Linux x64 Kernel 4.15.15 Selenium Version: tested with 3.8.1/3.11.0 Browser: tested with Firefox 59.0.2/60.0b8 x64 GeckoDriver: tested with 0.18.0/0.20.1  ## Additional info  I'm using Geb (http://www.gebish.org) for my GUI tests which actually only wraps the `click()` function of selenium. A traceback shows that the exception is thrown by selenium itself, which led me to the issue section of selenium instead of Geb.  ## Workaround  Using javascript to perform the click works flawlessly as a workaround but is not very desirable as it leads to ugly code and puts all tests into a briddle state.  ## Expected Behavior  Element in table should be selected  ## Actual Behavior  Element in table will not be selected and exception `org.openqa.selenium.ElementNotInteractableException: Element  could not be scrolled into view` will be thrown. The table has no scroll bar and the `` elements are neither hidden in any way nor disabled or something similar.  ## DOM structure  ![image](https://user-images.githubusercontent.com/12516018/38811431-c02d7bf0-4189-11e8-9b23-a9867030a177.png)  ```html                                	        	             	                                       	                                                      anderes                                                                                                            2                                                                                            weiblich                                                      Geänderter Eintrag                                                      4                                                                                            männlich                                                      Herr                                                                                                                                                  weiblich                                                      Frau                                                                                                                                                  weiblich                                                      Frau                                                                                                                                                  männlich                                                      Eintrag löschen                                                                                                      ```  ## Steps to reproduce -  Create a table with similar structure as showed above and try to select an entry using the `click()` method provided by selenium.","closed","R-awaiting answer,","buekera","2018-04-16T13:23:40Z","2019-08-16T01:09:41Z"
"","5600","Chromedriver leaves forked Chrome instances hanging in background after test run (with large CPU load)","## Meta OS:   Microsoft Windows [Version 10.0.16299.248] x64 Selenium Version:   2.53.1 Browser:   Chrome 65 x64 Browser Version:   Version 65.0.3325.146 (Official Build) (64-bit) Additional rerequisites: - ChromeDriver (2.36)  - NodeJS (v8.10.0) - cucumber@1.3.3  - protractor@5.3.0   ## Expected Behavior - 2. The chromedriver.exe should stop and its Chrome instances as well.  ## Actual Behavior - 2. The chromedriver.exe stops 4-5 secs after the tests completed. Then the forked Chrome instances stay in the background as running processes with huge CPU usage.  ## Steps to reproduce - 1. Run at least 1 failing test with CucumberJS and Protractor.  note: I'm running e2e tests against an Angular 1.6 application 2. Examine the processes in Task manager.  ## Note: This issue was introduced by the latest Chrome and ChromeDriver update. No symptomps were present in previous versions.  ## Screenshot: ![Actual result](https://user-images.githubusercontent.com/17498617/37300130-8604fc2a-2625-11e8-8503-6cc57450ed6d.png)","closed","R-awaiting answer,","garrymann","2018-03-12T17:46:44Z","2019-08-15T05:09:48Z"
"","4928","Safari - Capture Page Screenshot","## Meta OS:  ![image](https://user-images.githubusercontent.com/22818613/31877302-4227a63c-b7d6-11e7-8d96-d0037faf7d62.png) Selenium Version:  3.6.0 Browser:  Safari Browser Version: 11.0.1 (13604.3.1) Safari Driver: [SafariDriver.safariextz](https://selenium-release.storage.googleapis.com/2.48/SafariDriver.safariextz) v. 2.48  ## Expected Behavior Take a screenshot of current page of browser with the command `Capture Page Screenshot`. Created file should should contain an image with all and only i can see in the page. ![responsive no crop](https://user-images.githubusercontent.com/22818613/31878078-159f013e-b7d9-11e7-8217-25b3f253c6d0.png) ## Actual Behavior Image generated by `Capture Page Screenshot` adds a border on the right side. Inspecting html page, it doesn't seem to be a dom element. ![responsive no crop](https://user-images.githubusercontent.com/22818613/31878086-1dddb854-b7d9-11e7-96c0-a2c71cf44b78.png) I had same problem with Chrome in Windows using webdriver 3.4.0, but it was solved in version 3.6.0. ## Steps to reproduce ``` Create Webdriver			Safari Go To					https://url_page/ Capture Page Screenshot			img/test.png ``` I can't insert a test case because the problem manifests only with some web sites. These are libraries i've installed: - robotframework (3.0.2) - robotframework-requests (0.4.7) - robotframework-selenium2library (3.0.0b1) - robotframework-seleniumlibrary (3.0.0b3) - robotframework-SikuliLibrary (DEV) - selenium (3.6.0)","closed","","ebortolin","2017-10-23T08:26:31Z","2019-08-16T21:09:57Z"
"","5157","Doc: ""Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()`"" is really accurate?","## Meta - OS: Any - Selenium Version:  3.8.0 - Browser: Chrome  The newest version logs: > Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()`  When using `DesiredCapabilities.chrome()`.  The documentation (https://sites.google.com/a/chromium.org/chromedriver/capabilities), on the other hand, specifies legitimate uses of `DesiredCapabilities` such as the `proxy` property (see example on that documentation page). Based on that, isn't the instruction to avoid  `DesiredCapabilities.chrome()` a bit misleading? When I got it I wanted to do something about it, but it seems nothing can really be done about it in many cases.","closed","C-docs,","acdcjunior","2017-12-01T14:13:43Z","2019-08-15T15:09:52Z"
"","5051","SendKeys using incorrect key value for UK layouts","## Meta **Selenium Version:** v3.6.0 (JS Bindings) **OS:** Windows 10 (64-bit) **Chrome:** v61.0.3163.100 (64-bit) **ChromeDriver:** v2.33 **Firefox :** v56.0.2 (64-bit) **GeckoDriver:** v0.19.0 **Internet Explorer:** v11.674.15063.0 (64-bit) **IEDriver:** v3.5.1 **Selenium Standalone Server:** v3.6.0 **Protractor:** v5.2.0 **Node:** v7.10.1  ## Expected Behavior Using `element.sendKeys('@')` should trigger the `keyDown` event with the `event.key` value of '@'.  ## Actual Behavior Using `element.sendKeys('@')` triggers the `keyDown` event with the `event.key` value of '~'.  ## Steps to reproduce  1. Windows 10, go to `Settings > Region & Language` 2. Add English (United Kingdom) and set it as the default keyboard layout 3. Perform `sendKeys('@')` on an input/text area which console logs the event 4. Inspect the `event.key` value in the browser  > It is worth mentioning that the `event.keyCode` value is correct, and if I set my keyboard layout to 'English (United States)', then the correct `event.key` value is seen. I raised this issue off the back of a ticket I raised against [angular2-mentions](https://github.com/dmacfarlane/angular2-mentions/issues/53), in which I was unable to trigger the mention behaviour with a Protractor test due to `sendKeys` triggering the keyDown event with the wrong key value.","closed","","Tom-Hudson","2017-11-13T09:06:38Z","2019-08-17T02:10:00Z"
"","5396","HTTP Authentication in Chrome WebDriver","## HTTP Authentication in Chrome OS:   Windows 10 Selenium Version:   2.47 Browser:   Chrome 64  I would like to ask if Chrome webdriver supports HTTP Authenticaion. Age ago I used Firefox web driver and there was needed to set up  some extra parameter into profile. But what about Chrome?   syntax is:     username:password@url  Thanks much for any help.","closed","","robertmoral","2018-01-26T16:20:29Z","2019-08-16T14:09:59Z"
"","5768","Broken ABI with appium-dotnet-driver with release 3.11.1","## Context -  Selenium version: 3.11.1 Appium driver version: 3.0.0.2  The commit https://github.com/SeleniumHQ/selenium/commit/b337a82699e29776119fb89d50812cfd28d8cb8a#diff-2a14338d24c37ab68b826b6102ef12eeR26 makes `ICommandExecutor` inherit from `IDisposable`. This interface is implemented in appium dotnet driver (https://github.com/appium/appium-dotnet-driver/blob/6c14399041c5a94c537048c1d098157fa7457f7e/appium-dotnet-driver/Appium/Service/AppiumCommandExecutor.cs).  Therefore, the change in selenium breaks appium-dotnet-driver build (as `Dispose` is not implemented) and breaks the runtime linking.  Since this change has been released with a patch version of selenium, it seems to be an unexpected breaking change.  Related issue: appium/appium-dotnet-driver#217  ## Expected Behavior -  Should be able to use the appium extension with selenium 3.11.1   ## Actual Behavior -  Throws a runtime linking error ``` Method 'Dispose' in type 'OpenQA.Selenium.Appium.Service.AppiumCommandExecutor' from assembly 'appium-dotnet-driver, Version=3.0.0.2, Culture=neutral, PublicKeyToken=null' does not have an implementation.   Void .ctor(System.Uri, OpenQA.Selenium.ICapabilities, System.TimeSpan)    at OpenQA.Selenium.Appium.AppiumDriver`1..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Appium.AppiumDriver`1..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Appium.Android.AndroidDriver`1..ctor(Uri remoteAddress, DesiredCapabilities desiredCapabilities)    at appiumUnitTests.testLogic.runTests(device de) in C:\Users\sjaroch\Desktop\android-test-lib\appiumAndroidUnitTests\appiumUnitTests\testLogic.cs:line 230 ```  ## Steps to reproduce - See appium/appium-dotnet-driver#217","closed","","backmask","2018-04-12T10:49:44Z","2019-08-15T07:09:44Z"
"","4986","should be setting id from element","""element"" contains the value we're interested in not ""id"" (which doesn't exist)  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","dten","2017-10-31T17:25:27Z","2017-11-15T01:02:26Z"
"","5092","Unable to launch IE 11 using Selenium IDE because of error ""[error] Could not connect to Selenium Server. Have you started the Selenium Server yet?""","![seleniumide_unablelaunchie](https://user-images.githubusercontent.com/13899274/33109171-09ed2c80-cf7b-11e7-8381-a1e9e071b122.png)   ## Meta -    OS:  Windows 10 Selenium Version: Selenium build info: version: '3.7.1', revision: '8a0099a' Browser:  Internet Explorer 11 , Firefox v 47.0 (32-bit)   ## Expected Behavior - IE should be launched using Selenium IDE  ## Actual Behavior - Unable to launch IE 11 using Selenium IDE because of error ""[error] Could not connect to Selenium Server. Have you started the Selenium Server yet?""  ## Steps to reproduce - 1. Install java: java version ""1.8.0_151"" 2. Started the selenium server from command prompt: java -Dwebdrive.ie.driver=IEDriverServer32.exe -jar selenium-server-standalone-3.7.1.jar => 15:19:29.234 INFO - Selenium Server is up and running 3. Opened selenium IDE and in Options > Options > Web Driver Tab > Checked the ""Enable WebDriver Playback"" and type ""internet explorer"" in the text box 4. Import a test case and click on play button. => Error displayed ""[error] Could not connect to Selenium Server. Have you started the Selenium Server yet?"" and IE is not launched  Notes: After doing step 4, in command prompt shows: 15:19:46.597 INFO - /session: Executing POST on /session (handler: BeginSession) 15:19:46.665 INFO - Capabilities are: Capabilities {browserName: internet explorer} 15:19:46.668 INFO - Capabilities {browserName: internet explorer} matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.ie.InternetExplorerDriverService)","closed","C-ide,","nguyenlamngoc","2017-11-21T08:08:29Z","2019-08-15T10:09:36Z"
"","4946","There was a problem while loading TestCase","![selenium_web_driver](https://user-images.githubusercontent.com/13575020/31981613-1baea5f8-b972-11e7-8508-ebd324730217.png) ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","pavan93","2017-10-25T05:19:13Z","2019-08-17T05:09:51Z"
"","5660","close this window!","![qq 20180322132546](https://user-images.githubusercontent.com/18343332/37752769-8f9c1b4a-2dd4-11e8-9fd0-d78c706bdfd9.png)  DevTools listening on ws://127.0.0.1:12090/devtools/browser/6b3f23c1-86af-48e1-b669-330170226401  ================== # I pack it as exe with it to others But I don't know how to close this window It's not friendly!!! What can I do to turn it off!","closed","","liang1024","2018-03-22T05:31:49Z","2019-08-16T09:09:45Z"
"","4992","GetScreenshot() ignoring InternetExplorerOptions.EnableFullPageScreenshot option after upgrade from 2.48.0 to 3.6.0. Screenshot no longer shows the full page.","![image](https://user-images.githubusercontent.com/12600498/32309241-6cadc878-bf47-11e7-84e2-dffb2bcbac78.png) ## Meta - OS:  Windows 10 Selenium Version:  3.6.0 standalone jar using grid, C# 3.6.0 bindings Browser Version:  Internet Explorer: 11.1770.14393.0 (32-bit)  ## Expected Behavior - Screenshot should show full page. This includes all content that the user must scroll into view to see himself. This worked perfectly in version 2.48.0. ## Actual Behavior - Screenshot only shows what is currently viewable. ## Steps to reproduce - See snippet below and attached screenshot.         using System;     using OpenQA.Selenium;     using OpenQA.Selenium.IE;     using OpenQA.Selenium.Remote;      class Sandbox     {         public static void Main(string[] args)         {             // Define options.             InternetExplorerOptions ieOptions = new InternetExplorerOptions();             ieOptions.EnableFullPageScreenshot = true;              // Convert options to DesiredCapabilities.             DesiredCapabilities caps = (DesiredCapabilities)ieOptions.ToCapabilities();              // Create the RemoteWebDriver on the Selenium grid.             IWebDriver driver = new RemoteWebDriver(new Uri(""http://HubComputerName:4444/wd/hub""), caps);                          // Maximize window.             driver.Manage().Window.Maximize();              // Go to the test page.             driver.Navigate().GoToUrl(@""https://en.wikipedia.org/wiki/Selenium_(software)"");              // Take a screenshot.             ((ITakesScreenshot)driver).GetScreenshot().SaveAsFile(@""O:\QA\image.png"", ScreenshotImageFormat.Png);              // Terminate the session.             driver.Quit();         }     }","closed","","tronolone","2017-11-02T02:28:13Z","2019-08-17T04:09:53Z"
"","5468","Removing false info of deprecation of PJS","","closed","","ghost","2018-02-08T22:27:42Z","2018-02-14T21:49:29Z"